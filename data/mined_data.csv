intent,snippet
a python class that acts like dict,"{'a': 'b', 'lumberjack': 'foo', 'foo': 'bar', 'c': 44}"
jabber bot - how to get the availability of contacts?,"if not conn.auth(jid.getNode(), password, res):
    log('unable to authorize with server.')"
convert jpg from adobergb to srgb using pil?,"return image.convert('RGB', adobe_to_xyz).convert('RGB', xyz_to_srgb)"
get total number of running greenlets in gevent?,"print(status)
if status['total'] == status['completed']:
    return
gevent.sleep(5)

def crawl(url):
    r = random.randint(0, 10)
gevent.sleep(r)
err = random.randint(0, 4)
if err == 0:
    raise Exception
greenlets = [gevent.spawn(crawl, each) for each in range(100)]
get_greenlet_status(greenlets)"
how to use jenkins environment variables in python script,"qualifier = re.sub('[-_]+', '', os.environ['BUILD_ID'])[0:12]"
how do i plot hatched bars using pandas?,"hatches = ''.join(h * len(df) for h in 'x/O.')
for bar, hatch in zip(bars, hatches):
    bar.set_hatch(hatch)
ax.legend(loc='center right', bbox_to_anchor=(1, 1), ncol=4)"
how to create a list in python with the unique values of a csv file?,"for row in DataCaptured:
    if row[0] not in Year:
        Year.append(row[0])
if row[1] not in Category:
    Category.append(row[1])
print(Category, Year)"
numpy all differing from builtin all,result = asarray(result)
is there a python library that allows to easily print ascii-art text?,print(''.join(line))
"cat, grep and cut - translated to python","with open('filename') as origin_file:
    for line in origin_file:
        line = re.findall('something', line)
if line:
    line = line[0].split('""')[1]
print(line)"
high performance mass short string search in python,"ls = 'my long string of stuff'
x = set([ls[p:y] for p in range(0, len(ls) + 1) for y in range(p + 1, len(
    ls) + 1)])
result = []"
getting next variable in a for loop,from collections import Counter
find array corresponding to minimal values along an axis in another array,"np.repeat(np.arange(x), y)"
generating digits of square root of 2,n_int = int(n)
how can i make an animation with contourf()?,import matplotlib.pyplot as plt
embed python cli in a ruby process?,"end
end"
check if list array contains element in another list,"len(set(sum(a, [])) & set(b) & set(c).is_empty()) > 0"
creating dynamically named variables in a function in python 3 / understanding exec / eval / locals in python 3,"exec('K = 89')
print(locals())"
how to access all dictionaries within a dictionary where a specific key has a particular value,cityIndex[item['city']] = [item]
thousand separator in format string with floats,"locale.setlocale(locale.LC_ALL, 'English')
""""""English_United States.1252"""""""
trying to create a pandas series within a dataframe with values based on whether or not keys are in another dataframe,"colors_df = pd.DataFrame(colors, columns=['fruit_name', 'color'])
df3.merge(colors_df, how='left').fillna('unknown')"
recursive iteration through nested json for specific key in python,"for k, v in json_input.items():
    pass"
how to multi-thread an operation within a loop in python,"threads.append(threading.Thread(target=process, args=(items, start, end)))"
how to read excel unicode characters using python,sys.stdout = codecs.getwriter('utf8')(sys.stdout)
running command with paramiko exec_command causes process to sleep before finishing,"def exec_command(self, command, bufsize=-1, timeout=None, get_pty=False):
    """"""
    Execute a command on the SSH server.  A new `.Channel` is opened and
    the requested command is executed.  The command's input and output
    streams are returned as Python ``file``-like objects representing
    stdin, stdout, and stderr.
    :param str command: the command to execute
    :param int bufsize:
        interpreted the same way as by the built-in ``file()`` function in
        Python
    :param int timeout:
        set command's channel timeout. See `Channel.settimeout`.settimeout
    :return:
        the stdin, stdout, and stderr of the executing command, as a
        3-tuple
    :raises SSHException: if the server fails to execute the command
    """""""
python numpy subtract elements that are matrices,"a[:, (None), :, :] - a[(None), :, :, :]"
fitting a line in 3d,"pts = np.add.accumulate(np.random.random((10, 3)))"
"in python, how do i check the size of a stringio object?","s = StringIO()
s.write('abc')
s.seek(0, os.SEEK_END)
print(s.tell())"
resizing a dialog with pyqt4,self.verticalLayout = QtGui.QVBoxLayout(self)
pybrain: how to print a network (nodes and weights),"if mod.paramdim > 0:
    print(('--parameters:', mod.params))
for conn in net.connections[mod]:
    print(('-connection to', conn.outmod.name))
if conn.paramdim > 0:
    print(('- parameters', conn.params))
if hasattr(net, 'recurrentConns'):
    print('Recurrent connections')
for conn in net.recurrentConns:
    print(('-', conn.inmod.name, ' to', conn.outmod.name))
if conn.paramdim > 0:
    pass"
python: convert simplejson dumped unicode datetime back to datetime object,"time
time = datetime.strptime(time, DATETIME_FORMAT)
time"
how to append multiple items in one line in python,newlist += mylist[i:i + 22]
fastest way to check if the set contains numbers in a given range in python,"for i in list:
    if i >= lower and i <= upper:
        pass"
python typeerror on regex,"""""""Use BeautifulSoup or lxml instead."""""""
how can i use a class instance variable as an argument for a method decorator in python?,"class Foo(object):
    pass"
how can one get the set of all classes with reverse relationships for a model in django?,burger.save()
how to install ssl certificate in python phantomjs?,"driver = webdriver.PhantomJS(service_args=['--ignore-ssl-errors=true',
    '--ssl-client-certificate-file=C:\tmp\\clientcert.cer',
    '--ssl-client-key-file=C:\tmp\\clientcert.key',
    '--ssl-client-key-passphrase=1111'])
driver.set_window_size(1280, 1024)
driver.get('https://localhost/test/')
driver.save_screenshot('screen.png')
driver.quit()"
django: how can you stop long queries from killing your database?,"exc_type, exc_info, tb = sys.exc_info()"
python smooth time series data,"raise ValueError(""Window is on of 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'"")"
is it possible to generate a diagram of an entire django webapp?,"'django.contrib.sessions', 'django.contrib.sites'
'django.contrib.messages', 'django.contrib.staticfiles', '...'"
how do i read out custom properties in blender with python?,"bad_obj_types = ['CAMERA', 'LAMP', 'ARMATURE']"
how to make arrow that loops in matplotlib?,plt.show()
how to get the system info with python?,"platform.uname()
platform.system()
platform.processor()"
is there a way to use phantomjs in python?,driver.quit()
using two consecutive values from a list in each iteration,"result = result[1:] + (elem,)"
jupyter: write a custom magic that modifies the contents of the cell it's in,"def lmagic(self, line):
    """"""Replace current line with new output""""""
raw_code = 'print(""Hello world!"")'"
looking for a simple opengl (3.2+) python example that uses glfw,t = currT
calling another view in pyramid,"serve(app, host='127.0.0.1', port='5000')"
python how to convert from string.template object to string,"html = Template(fp.read())
fp.close()"
actions triggered by field change in django,"class MyModel(models.Model):
    state = models.IntegerField()
previous_state = None"
request from different country ip,"request.add_header('Accept',
    'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8')
opener = urllib.request.build_opener(proxies)
urllib.request.install_opener(opener)
r = urllib.request.urlopen(request, timeout=15)
html = r.read()"
how to unit test a function that uses popen?,"with mock.patch.object(subprocess, 'Popen') as mocked_popen:
    mocked_popen.return_value.communicate.return_value = some_fake_result"
slice assignment with a string in a list,L1[0:1] = ['cake']
how do i find the iloc of a row in pandas dataframe?,(df == window_stop_row).all(axis=1)
swapping the dimensions of a numpy array,"A = np.random.random((2, 4, 3, 5))"
opencv: converting from numpy to iplimage in python,"bitmap = cv.CreateImageHeader((source.shape[1], source.shape[0]), cv.
    IPL_DEPTH_8U, 3)
cv.SetData(bitmap, source.tostring(), source.dtype.itemsize * 3 * source.
    shape[1])"
how to print between last and second-to-last lines in console?,"print('\rpart 2')
print(1)"
labeling boxplot in seaborn with median value,"sns.set_style('whitegrid')
tips = sns.load_dataset('tips')
ax = sns.boxplot(x='day', y='total_bill', data=tips)
medians = tips.groupby(['day'])['total_bill'].median().values"
case-insensitive string startswith in python,"""""""ch0 = s[0]; ch1 = s[1]; ch0 == 'h' or ch0 == 'H' and ch1 == 'e' or ch1 == 'E'"""""""
python format tabular output,"def print_table(table):
    col_width = [max(len(x) for x in col) for col in zip(*table)]
for line in table:
    print('| ' + ' | '.join('{:{}}'.format(x, col_width[i]) for i, x in
        enumerate(line)) + ' |')"
python: a complete list of modules,list(sys.modules.keys())
python/numpy - cross product of matching rows in two arrays,"a = np.random.random((20, 3))
b = np.random.random((20, 3))"
properly designing a multiprocessing.manager custom object,t.daemon = True
remove \n or \t from a given string,"s = 'abc \nefg'
s = re.sub('\\s+', '', s)"
django check for any exists for a query,"if scorm.objects.filter(Header__id=qp.id).exists():
    pass"
how to use bcrypt to encrypt passwords in django,"print('The password is valid, but the account has been disabled!')"
pandas dataframe groupby two columns and get counts,"df['COUNTER'] = 1
group_data = df.groupby(['Alphabet', 'Words'])['COUNTER'].sum()"
save a pandas.series histogram plot to file,ax = s.hist()
creating a dictionary with list of lists in python,"with open('/tmp/spam.txt') as f:
    for line in f:
        parts = line.strip().split()
d[parts[0]] += parts[1:]"
display image with a zoom = 1 with matplotlib imshow() (how to?),"fig = plt.figure(figsize=figsize, dpi=dpi)"
a list > a list of lists,"b = [list(x[1]) for x in itertools.groupby(a, '---'.__eq__) if not x[0]]"
how would i access variables from one class to another?,object2 = ClassB(object1)
ggplot multiple plots in one object,"data = pd.melt(df, id_vars=['date'])
plt = ggplot(data, aes(x='date', y='value', color='variable', group='variable')
    ) + scale_x_date(labels=date_format('%y-%m-%d'), limits=(data.date.min(
    ) - dt.timedelta(2), data.date.max() + dt.timedelta(2))) + geom_line(
    ) + facet_grid('variable', scales='free_y')
plt.show()"
how to detect if python script is being run as a background process,"def main():
    pass"
django - rebuild a query string without one of the variables,q = QueryDict('a=2&b=4&c=test')
adding an application to hosted django project,cwd = os.getcwd()
increasing efficiency of barycentric coordinate calculation in python,"b = secondCornerUW
c = thirdCornerUW
xleft = min(ax, bx, cx)
xright = max(ax, bx, cx)
ytop = min(ay, by, cy)
ybottom = max(ay, by, cy)
barytransform = np.linalg.inv([[ax, bx, cx], [ay, by, cy], [1, 1, 1]])
grid = np.mgrid[xleft:xright, ytop:ybottom].reshape(2, -1)
grid = np.vstack((grid, np.ones((1, grid.shape[1]))))
barycoords = np.dot(barytransform, grid)
barycoords = barycoords[:, (np.all(barycoords >= 0, axis=0))]"
write data to disk in python as a background process,"if __name__ == '__main__':
    pool = mp.Pool()"
pandas: sum dataframe rows for given columns,"df['e'] = df.sum(axis=1)
df"
how can i create new rows in a pandas data frame containing the words in a string of an existing row?,"df = pd.DataFrame({'strings': ['the dog', 'lazy dog', 'The fox jump'],
    'value': ['a', 'b', 'c']})
w = df.strings.str.split()
c = w.map(len)
idx = np.repeat(c.index, c.values)
words = list(itertools.chain.from_iterable(w.values))
s = pd.Series(words, index=idx)
s.name = 'words'
print(df.join(s))"
installing a pip package from within a jupyter notebook not working,"g = geocoder.google('Mountain View, CA')
g.latlng
[37.3860517, -122.0838511]"
multiprocessing ioerror: bad message length,"pool = multiprocessing.Pool(4)
pool.imap(func, images)
pool.close()"
in python how do i use list comprehensions to iterate through a list of lists?,"coord_list = [[(x[0][0], x[0][1], x[1]) for x in zip(dotted_array, s)] for
    s in list_of_signs]
coord_list"
how to do dependency injection python-way?,from subprocess import Popen
django: how to do get_or_create() in a threadsafe way?,"slug = models.SlugField(max_length=255)
name = models.CharField(max_length=255)


class Meta:
    unique_together = 'prefix', 'slug'"
use a class in the context of a different module,"if hasattr(cls, name):
    attr = getattr(cls, name)"
how to use python regex to replace using captured group?,p = re.compile('blue (?P<animal>dog|cat)')
"saving stdout from subprocess.popen to file, plus writing more stuff to the file",logfile.flush()
how to store variables/preferences in python for later use,config = ConfigParser.ConfigParser()
open file and with statement in python,Inside
converting png32 to png8 with pil while preserving transparency,"im.save('logo_py.png', transparency=0)"
print latex-formula with python,"plt.text(0.5, 0.5, '$%s$' % a)"
python - how can i use generators more succinctly?,"def __iter__(self):
    pass"
forcing to make floating point calculations,print(1 / 3)
how can i rotate this list of lists with python,"['.', '0', '0', '0', '0', '0', '0', '0', '.'],
['.', '.', '0', '0', '0', '0', '0', '.', '.'],"
simple der cert parsing in python,print('----')
"convert pandas dataframe to numpy array, preserving index","df.to_records().view([('ID', '<i8'), ('A', '<f8'), ('B', '<f8'), ('C', '<f8')])"
using python tuples as vectors,"def __init__(self, x, y):
    pass"
how to write a python module?,"import hello
hello.helloworld()"
splitting a list inside a pandas dataframe,"df_new.columns = ['date', 'ts']"
cartesian projection issue in a fits image through pyfits / astropy,header['CRVAL2'] = 0.0
ajax for updating flask template after data goes from link action or form to mongodb collection,"@app.route('/vote_up/<this_record>')
def vote_up(this_record):
    if already_voted_for(this_record):
        pass"
convert timestamp since epoch to datetime.datetime,import time
most efficient property to hash for numpy array,hashed_array = (base * array).sum()
"normalizing unicode text to filenames, etc. in python","slugify('My International Text: \xe5\xe4\xf6', delim='_')"
plone: reacting to object removal,"fctool = getToolByName(context, 'portal_form_controller')"
python max length of j-th item across sublists of a list,"for j in range(3):
    pass"
creating a dictionary from a csv file,reader = csv.reader(open('test.csv'))
unique lists from a list,"for x in a:
    b[x].append(x)
list(b.values())"
unpickling classes from python 3 in python 2,"def find_class(self, module, name):
    if module in REVERSE_MAPPING:
        module = REVERSE_MAPPING[module]
__import__(module)
mod = sys.modules[module]
klass = getattr(mod, name)
return klass

def loads(str):
    file = pickle.StringIO(str)
return Python_3_Unpickler(file).load()"
pythonic way of comparing all adjacent elements in a list,A = [(A[i + 1] + A[i]) for i in range(len(A) - 1)]
calculating power for decimals in python,y = Decimal('10') ** (x - deci_x + Decimal(str(n)) - Decimal('1'))
"is there a tool to check what names i have used from a ""wildly"" imported module?","'logical_not', 'average', 'partition', 'nbytes', 'exp', 'sum', 'dot'"
decorator changing function status from method to function,"print(ismethod)
return f(*args, **kwargs)
return detect

@decorate
def foo():
    pass


class bar(object):
    pass"
most elegant approach for writing json data to a relational database using django models?,"""""""Specialized text field that holds JSON in the database, which is represented within Python as (usually) a dictionary."""""""
unauthorized to write to mongodb,_MONGODB_USER = 'dbexample'
scipy interpolation on a numpy array,"z = np.array([[3.6, 6.5, 9.1, 11.5, 13.8], [3.9, 7.3, 10.0, 13.1, 15.9], [
    4.5, 9.2, 12.2, 14.8, 18.2]])
ny, nx = z.shape"
python convert prediction result into one hot,return [int(item == max_val) for item in my_list]
activate a python virtual environment using activate_this.py in a fabfile on windows,activate_this = '/path/to/env/bin/activate_this.py'
using array to generate random text,"0.32793, 0.38483, 0.38577, 0.39278, 0.42999, 0.45023, 0.50728, 0.56756
0.58256, 0.58391, 0.62924, 0.68509, 0.7616, 0.78481, 0.79229, 0.81161"
top k columns with values in pandas dataframe for every row,print(df)
request uac elevation from within a python script?,return False
how to add an extra column to an numpy array,"array([1.0, 0.0, 0.0, 1.0, 2.0, 3.0, 0.0, 1.0, 0.0])"
tensorflow: how to save/restore a model? (python),"tf.add_to_collection('vars', w2)"
how to get centroids from scipy's hierarchical agglomerative clustering?,"for clno in centroids:
    centroids[clno] /= float(lens[clno])"
how to stream the last few lines of a file in django?,"class TailHandler(WebSocketHandler):
    pass"
how work pre-defined descriptors in functions?,"class C(object):
    pass

def a(s):
    return 12
a = a.__get__(C)"
conditional statement in a one line lambda function in python?,"if T > 200:
    return 200 * exp(-T)"
can i restore a function whose closure contains cycles in python?,global lfunctions
how to sort only few values inside a list in python,"nums = [3, 30, 31, 32, 33, 34, 300, 256, 5, 9]
sorted(nums, key=lambda x: str(x).ljust(10, ' '), reverse=True)"
unlucky number 13,"if n == 0:
    cache[n] = 1
return cache[n]"
how to find the importance of the features for a logistic regression model?,x3 = 0.5 * np.random.randn(100)
running scrapy spiders in a celery task,from celery import task
self-join with pandas,d
iterate through class members in order of their declaration,from collections import namedtuple
django: friendlier header for stackedinline for auto generated through model?,model = MyThrough
finding anonymous enums with libclang,return conf.lib.clang_Cursor_isAnonymous(self)
configure mac os x midi programatically,"vmidi_out = rtmidi.MidiOut()
vmidi_out.open_virtual_port('My Virtual MIDI Output Port')"
skip ending rows containing string while reading a txt file with numpy to generate a numerical array,url = 'http://www.cdc.noaa.gov/Correlation/amon.us.long.data'
how to repeat pandas data frame?,"x.append([x] * 5, ignore_index=True)
x.append([x] * 5)"
python 3 and requests with a progressbar,"pbar.update(self.bytes)
pbar.finish()"
how can i retrieve the page title of a webpage using python?,br.open('http://www.google.com/')
having options in argparse with a dash,"args = parser.parse_args()
print(args)"
how can i create a type hint that my returned list contains strings?,matched += 1
"create new list by taking first item from first list, and last item from second list","c = [value for pair in zip(a, b[::-1]) for value in pair]"
how to use dynamic foreignkey in django?,title = models.CharField(max_length=100)
textmining graph sentences in python,"edges = [(i, j, dice_coefficient(x, y)) for i, x in enumerate(sentences) for
    j, y in enumerate(sentences) if i < j]"
how do i use pylons (paste) webtest with multiple checkboxes with the same name?,assert 'something' in response
python : how to pretty print html into a file,"from BeautifulSoup import BeautifulSoup as bs
root = lh.tostring(sliderRoot)
soup = bs(root)
prettyHTML = soup.prettify()"
python using beautiful soup for html processing on specific content,x = data.find('Ingredients</h3>')
is there a python function to determine which quarter of the year a date is in?,df['quarter'] = df['date'].dt.quarter
how to make a set of lists,"print([ele for ind, ele in enumerate(i) if ele not in i[:ind]])
[[1, 2, 3], [2, 4, 5]]"
large scale clustering library possibly with python bindings,"import milk
import numpy as np"
edit text file using python,"import fileinput, sys"
python regex get string between two substrings,"match = re.findall(""api\\('(.*?)'"", string)
print(match)"
efficiently replace multi-line list strings with single_line list string,"return re.sub('\\s+', ' ', m.group().strip())"
double increment loop in python,"X is 1, Y is 3"
library/tool for drawing ternary/triangle plots,ax.set_frame_on(False)
how to parse a rfc 2822 date/time into a python datetime?,"print(parsedate_tz('Fri, 15 May 2009 17:58:28 +0700'))"
in python how can i declare a dynamic array,from array import array
how to find row of 2d array in 3d numpy array,"pattern = np.ascontiguousarray([[0, 3] * 10, [3, 0] * 10])"
comparing two large lists in python,"from functools import reduce
search_data = [['list', 'of', '150k', 'words'], ['another', 'list', 'of',
    '150k', 'words'], ['yet', 'another', 'list', 'of', '150k', 'words']]
search_words = ['four', 'hundred', 'words', 'to', 'search', 'for']

def word_finder(words_to_find):
    lookfor = set(word.lower() for word in words_to_find)

def get_word_count(text):
    return Counter(word for word in (wd.lower() for wd in text) if word in
        lookfor)
return get_word_count

def get_words_in_common(counters):
    return reduce(operator.and_, (set(c) for c in counters))

def main():
    wordcount = word_finder(search_words)
counters = [wordcount(wordlst) for wordlst in search_data]
common_to_all = get_words_in_common(counters)
print(common_to_all)
if __name__ == '__main__':
    main()"
python: how to get attribute of attribute of an object with getattr?,"from functools import reduce
reduce(lambda obj, attr: getattr(obj, attr, None), ('id', 'num'), myobject)"
url safe base64 in objective-c,"xx, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14"
getting first row from sqlalchemy,print(result)
python: convert defaultdict to dict,data['good']['day'] = True
python optimize.leastsq: fitting a circle to 3d set of points,"point = [xF, yF, zF]"
pythonic way to combine for loop and if statement,"set([0, 9, 4, 6, 7])"
programmatically generate thumbnail cap for small video,"full = None
for y in range(3):
    for x in range(3):
        img = Image.open('frame%i.png' % (y * 3 + x))
w, h = img.size
if full is None:
    full = Image.new('RGB', (w * 3, h * 3))
full.paste(img, (x * w, y * h))
full.save('thumbs.png')"
python: can a subclass of float take extra arguments in its constructor?,"class Foo(float):

    def __new__(self, value, extra):
        return float.__new__(self, value)

def __init__(self, value, extra):
    float.__init__(value)
self.extra = extra
foo = Foo(1, 2)
print(str(foo))
1.0
print(str(foo.extra))
2"
numpy tofile() with very large arrays saves all zeros,"import mmap
with open('r.data') as f:
    m = mmap.mmap(f.fileno(), 0, mmap.MAP_SHARED, mmap.PROT_READ)
r = np.frombuffer(m, dtype='int64')
r = r.reshape(shape)"
table creation with csv data,"print(('|{:<{i}}' * ln + '|').format(i=mx_len, *row1))"
how can i return a text fragment from an xpath function?,res = transform(doc)
nginx with flask and memcached returns some garbled characters,rv = cache.get('request:/')
establishing highest score for a set of combinations,"itertools.combinations([1, 2, 3, 4], 2)
list(itertools.combinations([1, 2, 3, 4], 2))"
i'm trying to figure out how to use dbus with pidgin,main_loop = DBusGMainLoop()
create django admin intermediate page,from django.contrib import admin
how can i merge two dataframes with 'wildcards'?,wildcards = lookup[lookup['b'] == '*']
abort execution of a module in python,main()
pgp-signing multipart e-mails with python,print('Warning: failed to sign the message!')
convert string to json using python,"d = json.loads(j)
print(d['glossary']['title'])"
numpy: efficiently reading a large array,"a = a.reshape((n, m), order='FORTRAN')"
how to make an abstract haystack searchindex class,"class Meta:
    pass"
how are arguments passed to a function through __getattr__,person.make_statement
execute two process in parallel in python,"for job in jobs:
    p = Popen(shlex.split(job), stdout=PIPE)
t = Timer(10, lambda p=p: p.terminate())
t.start()
timers.append(t)
processes.append(p)
for t in timers:
    t.join()
stdout, stderr = processes[0].communicate()
stdout, stderr = processes[1].communicate()
print(datetime.datetime.now())"
integrating a multidimensional integral in scipy,"gamma = random.uniform(0.0, 2.0 * math.pi)"
"in flask, set a cookie and then re-direct user","response.set_cookie('session_id', s.session_id)
return response"
get locals from calling namespace in python,x.c = 1
python: how do i randomly select a value from a dictionary key?,print(val)
xml to/from a python dictionary,"dappend(new_dict, k, child[k])"
how do i serve image content-types with python basehttpserverrequesthandler do_get method?,"f = open(curdir + sep + self.path, 'rb')"
how can you make an adjacency matrix which would emulate a 2d grid,"M = matrix(n, n)
for r in range(rows):
    for c in range(cols):
        i = r * cols + c
if c > 0:
    M[i - 1, i] = M[i, i - 1] = 1
if r > 0:
    M[i - cols, i] = M[i, i - cols] = 1"
is python bad at xml?,return '/'.join(tags)
how does exec work with locals?,print(x.foo)
how to get filename from content-disposition in headers,"response = browser.open('http://example.com/your/url')
info = response.info()"
comprehension for flattening a sequence of sequences?,"seq = '012345'
swapped_pairs = zip(seq[1::2], seq[::2])
"""""""""""".join(item for pair in swapped_pairs for item in pair)"
python: is there a built in package to parse html into dom,doc = parseString(html_string)
grabbing ip addresses from a file and counting the occurences,"with open(file) as file:
    for ip in file:
        ip_data = re.findall(
            '(?:[\\d]{1,3})\\.(?:[\\d]{1,3})\\.(?:[\\d]{1,3})\\.(?:[\\d]{1,3})'
            , ip)
for i in ip_data:
    pass"
how to access the meta attributes of a superclass in python?,"class Meta:
    authentication = MyCustomAuthentication()"
flattening a list of dicts of lists of dicts (etc) of unknown depth in python (nightmarish json structure),"for i, item in enumerate(structure):
    flatten(item, '%d' % i, path + '_' + key, flattened)"
defining virtual fields in peewee,"@hybrid_property
def complicated_property(self):
    if 17 <= self.a <= 173:
        return a_complicated_math_function(self.a + self.b)
return another_complicated_math_function(self.a * self.b ** 2)

@complicated_property.expression
def complicated_property(cls):
    return case(None, (cls.a.between(17, 173), fn.math(fn.more_math(cls.a, 
        1.23))), default=fn.another_complicated_math(cls.a))"
fast string within list searching,"['scorch', 'scorching', 'dump', 'dumpster', 'dumpsters']"
how can i unshorten a url?,"h.request('HEAD', parsed.path)"
exceeding the size of lists in python,pass
writing a gimp python script,"from subprocess import check_output
cmd = '(python-flip RUN-NONINTERACTIVE ""/tmp/test.jpg"")'
output = check_output(['/usr/bin/gimp', '-i', '-b', cmd, '-b', '(gimp-quit 0)']
    )
print(output)"
"replace items in list, python","r = []
for s in l:
    t = s.split('_')
r.append('_'.join(t[:-2]) + '_%s_%s' % (m, y))"
how to add element in python to the end of list using list.insert?,a
how to handle empty values in config files with configparser?,"value = parser.get(section, option)"
drawing semi-transparent polygons in pil,"back.paste(poly, poly_offset, mask=poly)"
remove duplicate rows from a large file in python,"output = open(outfile, 'wb')"
how to compress a string in python to store it in redis?,"compressedString = zlib.compress(originalString, 9)
decompressedString = zlib.decompress(compressedString)"
'instancemethod' object has no attribute '__getitem__' with class variables,"self.WaitTime = 1.0 / (self.stepNum * self.coilNum) * speed
for pin in range(0, 4):
    pass"
delete all objects in a list,"del mylist
print(b)"
python: finding average of a nested list,"import numpy as np
a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]"
can i implement custom indentation for pretty-printing in python’s json module?,"obj = {'layer1': {'layer2': {'layer3_2': 'string', 'layer3_1': NoIndent([{
    'y': 7, 'x': 1}, {'y': 4, 'x': 0}, {'y': 3, 'x': 5}, {'y': 9, 'x': 6}])}}}
print(json.dumps(obj, indent=2, cls=NoIndentEncoder))"
how can i extract the call graph of a function from python source files?,"import traceback
traceback.print_stack()"
"iterating through a list removing items, some items are not removed","list1 = [1, 2, 3, 4, 5, 6]"
numpy max slow when applied to list of arrays,"np.random.seed(0)
N, M = 1000, 1000"
slick way to reverse the (binary) digits of a number in python?,"int(''.join(bin(x)[:1:-1]), 2)"
how to get indices of n maximum values in a numpy array?,"ind = np.argpartition(a, -4)[-4:]
ind
a[ind]"
python json decode getting wrong value,"decoder = JSONDecoder(object_hook=hook)
decoder.decode(s)"
how to catch an importerror non-recursively?,"try:
    import user
except ImportError:
    if sys.exc_info()[2].tb_next:
        pass"
pandas set format for single dataframe,"from functools import partial
df.to_string = partial(df.to_string, float_format='${:,.2f}'.format)"
django store uploaded file in s3,"AWS_S3_SECURE_URLS = False
AWS_QUERYSTRING_AUTH = False
AWS_S3_ACCESS_KEY_ID = 'KEY'
AWS_S3_SECRET_ACCESS_KEY = 'KEY'
AWS_STORAGE_BUCKET_NAME = 'name.media'"
pandas groupby apply all,"test_df = pd.DataFrame({'name': ['Jack', 'Jill', 'John', 'Jack', 'Jill'],
    'date': ['2016-08-08', '2016-08-08', '2016-08-07', '2016-08-08',
    '2016-08-08'], 'amount': [1000.0, 1500.0, 2000.0, 2000.0, 3000.0],
    'return_amount': [5000.0, 2000.0, 3000.0, 0.0, 0.0], 'return_date': [
    '2017-08-08', '2017-08-08', '2017-08-07', '', '2017-08-08']})
grouped = test_df.groupby('name')"
efficient way to count the element in a dictionary in python using a loop,mydict[index] = +1
looping through df dictionary in order to merge df's in pandas,"B = pd.DataFrame([[1, 1], [2, 2], [3, 3]], columns=['A', 'B'], index=[1, 2, 3])
C = pd.DataFrame([[1, 2], [1, 2], [1, 2]], columns=['A', 'B'], index=[1, 2, 3])
df_all = {'df1': A, 'df2': B, 'df3': C}"
apply a method to an object of another class,print(self.a)
how to strip source from distutils binary distributions?,"for file in files:
    if file.endswith('.py'):
        pass"
spnego (kerberos token generation/validation) for sso using python,"spnegoMechOid = gssapi.oids.OID.mech_from_string('1.3.6.1.5.5.2')
ctx = gssapi.InitContext(service_name, mech_type=spnegoMechOid)"
loop for each item in a list,"x = []
for i in mydict['item1']:
    pass"
in-place quicksort in python,"while j <= end:
    if array[j] <= pivot:
        array[j], array[i] = array[i], array[j]
i += 1
j += 1
array[start], array[i - 1] = array[i - 1], array[start]
return i - 1

def quicksort(array, start=0, end=None):
    if end is None:
        end = len(array) - 1
if end - start < 1:
    return
idx_pivot = random.randint(start, end)
i = sub_partition(array, start, end, idx_pivot)
quicksort(array, start, i - 1)
quicksort(array, i + 1, end)"
pandas value_counts() for loop fails as lambda,"ratio = lambda x: x.value_counts(normalize=True)
output_lambda = df.apply(lambda x: [x.value_counts().to_dict()]).apply(lambda
    x: x[0]).to_dict()"
scons setup for hierarchical source but single target,"program = env.Program('myprog', objects)"
dynamically create an enum with custom values in python?,"v = {'foo': 42, 'bar': 24}


class e(Enum):
    pass
for key, val in list(v.items()):
    pass"
convert weird python date format to readable date,time_string = '/Date(1409522400000+0200)/'
automatic detection of display availability with matplotlib,import matplotlib.pyplot as plt
how do i merge a list of dicts into a single dict?,"a = [{'a': 1}, {'b': 2}, {'c': 1}, {'d': 2}]
dict(ChainMap(*a))"
how do you create a daemon in python?,"def run(self):
    pass"
how are basic data types (strings and integers) implemented in python and perl,stmt = 'x = s[{0}] + s[{1}] + s[{2}]'
python extract pattern matches,"p = re.compile('name (.*) is valid', re.flags)
print(p.match(s).groups())"
reset color cycle in matplotlib,import matplotlib.pyplot as plt
ignore a specific test using django,import unittest
how to combine two list containing dictionary with similar keys?,"result = [{key: (d1.get(key, 0) + d2.get(key, 0)) for key in set(d1.keys()) |
    set(d2.keys())} for d1, d2 in zip(var1, var2)]
print(result)
[{'a': 4, 'b': 4}, {'h': 8, 'c': 3, 'd': 10}, {'c': 7, 'e': 8, 'd': 10}]"
configuring django,"import os
if __name__ == '__main__':
    pass"
customize x-axis in matplotlib,"plt.xticks(ticks, labels)
plt.xlabel('Hours')
plt.show()"
how can i parse a c header file with perl?,print('};\n')
"call lambdify in a loop, avoid explicitly call",f(*[newdict[k] for k in 'abc'])
how to convert a nested list into a one-dimensional list in python?,"lis = [1, [2, 2, 2], 4]"
logging to instagram using python requests,"driver = webdriver.PhantomJS()
driver.get('http://insta.friendorfollow.com')"
regex to match domain.cctld,"def is_domain(d):
    pass"
return json response from flask view,return jsonify(d)
create an instance from serializer without persisting it to db,Potato(**validated_data)
pandas multiindex assignment from another dataframe,"df.loc[(idx[:, ('a', 'b')]), :] = df_.values"
"sort lines in text file, but only use the first n characters","import operator
with open('filename', 'r') as f:
    pass"
filter a python list by predicate,[x for x in lst if x % 2 == 0]
how to convert nonetype to int or string?,answer = my_value / divisor
formatting floats in python without superfluous zeros,return d.quantize(Decimal(1)) if d == d.to_integral() else d.normalize()
cross platform solution for getting current login name in python,"for var in ['USER', 'USERNAME', 'LOGNAME']:
    if var in os.environ:
        username = os.environ[var]"
numpy: efficiently reading a large array,"a = np.arange(12).reshape(3, 4, order='F')
a.T"
python - calling a function from within itself,"def recur_factorial(n):
    """"""Function to return the factorial of a number using recursion""""""
if n == 1:
    return n
else:
    return n * recur_factorial(n - 1)"
conditional passing of arguments to methods in python,"return a, c"
interactive _standalone_ output from matplotlib,"YAR002W = apoptosis
YBL007C = ribosome"
creating a python classmethod,return cls(page=page)
python: how to import package twice?,"def __enter__(self):
    pass"
download several parts of one file concurrently with python?,print(respose.headers)
how do i attach a remote debugger to a python process?,"f = manhole_ssh.ConchFactory(p)
return f
reactor.listenTCP(2222, getManholeFactory(globals()))
reactor.run()"
constructing a python set from a numpy matrix,"def __hash__(self):
    pass"
insert line at middle of file with python?,f.close()
unwanted extra dimensions in numpy array,print(minimal_dims.shape)
speeding up parts of existing python app with pypy or shedskin,a = numpy.arange(10000000)
how to use the ie webdriver from selenium for python (failed to navigate error)?,"driver = webdriver.Remote(command_executor=
    'http://usename:key@hub.browserstack.com:80/wd/hub',
    desired_capabilities=desired_cap)"
how to visualize 95% confidence interval in matplotlib?,"data_df = np.array([5, 6, 7, 8])"
inspect lambda code from python interpreter,import linecache
insert data into mysql table from python script,"results = cursor.fetchone()
qSQL = results[0]
cursor.execute(qSQL)
qSQLresults = cursor.fetchall()
for row in qSQLresults:
    id = row[0]
city = row[1]
cursor.execute(
    """"""INSERT into FACTRESTTBL (id, city)
                  values (%s, %s)"""""",
    (id, city))
db.commit()
db.close()"
pandas slow on data frame replace,"to_filenames = from_filenames.str[1:] + from_filenames.str[0]
m = pd.Series(to_filenames.values, from_filenames.values)"
list of arguments with argparse,from docopt import docopt
displaying networkx graph with labels,G.number_of_edges()
using query string in python pyramid route configuration,"def plot_view(request):
    action = request.GET('action')
if action == 'edit':
    return render_to_response('bunseki:templates/form.pt', {}, request)"
need help calculating geographical distance,"d_long = math.fabs(start_long - end_long)
EARTH_R = 6372.8
y = math.sin(start_lat) * math.sin(end_lat) + math.cos(start_lat) * math.cos(
    end_lat) * math.cos(d_long)
x = math.sqrt((math.cos(end_lat) * math.sin(d_long)) ** 2 + (math.cos(
    start_lat) * math.sin(end_lat) - math.sin(start_lat) * math.cos(end_lat
    ) * math.cos(d_long)) ** 2)
c = math.atan(x / y)
return EARTH_R * c
f = geocalc(36.12, -86.67, 33.94, -118.4)
print(f)"
how to monkey patch django?,return self.username
new lines with python's configparser?,"cleaned = [item.strip() for item in eg.split(',')]"
"how to fix ""attempted relative import in non-package"" even with __init__.py","from os import sys, path"
django migration file in an other app?,"replaces = (TARGET_APP, __module__.rsplit('.', 1)[-1]),"
convert float to comma-separated string,"for i in range(places):
    pass"
swapping columns in a numpy array?,"temp = numpy.copy(my_array[:, (0)])"
python nested dict to csv with many columns,"with open('university_nominations.csv', 'w', newline='') as csvfile:
    writer = csv.DictWriter(csvfile, fieldnames)"
how to generate the pem serialization for the public rsa/dsa key,seq2.decode(data)
python regular expression with optional but greedy groups,"'', '{a}', 'text', '{b}', 'test'"
can't construct object from parameter in constructor called by pyyaml,"def set_values(self, colour='', friends=None):
    pass"
how to delete a symbolic link in python?,"if os.path.isdir(targetLink):
    pass"
writing multi-line strings to cells using xlwt module,"book = xlwt.Workbook()
sheet = book.add_sheet('Test')
sheet.write(0, 0, 'Hello\nWorld')
style = xlwt.XFStyle()"
creating a gradient fill in a pdf file using reportlab,c.save()
seaborn heatmap y-axis reverse order,"import seaborn as sns
sns.set()"
"how does swig wrap a map<string,string> in python?",foo(map_string_string({'a': 'b'}))
most pythonic way to find/check items in a list with o(1) complexity?,"Counter(['h', 'e', 'l', 'o', 'o', 'z'])"
map with lambda vs map with function - how to pass more than one variable to function?,return func(value)
assigning method to object at runtime in python,"def new_func(arg1, arg2):
    stuff()"
"calculate the greatest distance between any two strings in a group, using python","max_ratios = find_max_ratio(t)
average = sum(max_ratios.values()) / float(len(max_ratios))
average"
how to parse a list or string into chunks of fixed length,"split_list = [listo[i:i + n] for i in range(0, len(listo), n)]
split_list"
how to remove multiple indexes from a list at the same time?,"indexes = [2, 3, 5]"
how to easily extract id from itunes url using python,"def get_id(url):
    pass"
drawing mud map,"visit(curRoom.southNeighbor, curX, curY + 1)
visit(curRoom.westNeighbor, curX - 1, curY)"
python curve fit library that allows me to assign bounds to parameters,"pl.plot(x, np.imag(y), c='r', lw=1.0, label='im(f)')"
how to convert signed 32-bit int to unsigned 32-bit int in python?,result = numpy.uint32(numpy.int32(arr))
how can i make command line arguments visible to flask routes?,app = Flask(__name__)
how do you send an http get web request in python?,"conn.request('HEAD', '/index.html')
res = conn.getresponse()
print(res.status, res.reason)"
boost-python how to pass a c++ class instance to a python class,"""""""class Person:
"""""""
is there a command to make a pytest restart?,"assert word1 != word2
if __name__ == '__main__':
    test_maybe_recursive()"
pycharm show full diff when unittest fails for multiline string?,"def equal(expected, actual):
    msg = ""'"" + actual + ""' != '"" + expected + ""'"""
runtimeerror: maximum recursion depth exceeded in python,"if elementList[midPointOfList] > value:
    max = midPointOfList - 1
return recursiveBinaryChop(value, elementList, min, max)"
multithreaded blas in python/numpy,import numpy as np
removing all extension of a string in list,new_dict[i] = temp
how would you create a comma-delimited string from a pyodbc result row?,"cursor.execute(query_str)
with open(out_file, 'w') as f:
    pass"
how to modify a vim buffer with a python script?,"buf = vim.current.buffer
names = [x.name for x in triggers]"
importerror: no module named **** error in google app engine,"USER_NAME = 'username'
PASSWORD = 'password'

def get_connection():
    return rdbms.connect(instance=CLOUDSQL_INSTANCE, database=DATABASE_NAME,
        user=USER_NAME, password=PASSWORD, charset='utf8')"
how to speed labelencoder up recoding a categorical variable into integers,df.shape
python base64 data decode,"a = 'eW91ciB0ZXh0'
base64.b64decode(a)"
printing a variable in an embedded python interpreter,"d = PyModule_GetDict(main)
PyRun_String('a = (1, 2, 3)', Py_single_input, d, d)"
matplotlib log scale tick label number formatting,ax.set_yticks(z)
how to call a python method from a java class?,"bre.close()
p.waitFor()
System.out.println('Done.')"
check whether a path exists on a remote host using paramiko,"def rexists(sftp, path):
    """"""os.path.exists for paramiko's SCP object
    """"""
try:
    sftp.stat(path)
except IOError as e:
    pass"
how to use django-contact-form (third-party app)?,{{name}}
is there a way to convert indentation in python code to braces?,"for i in range(arg1):
    pass"
efficient projection of a bipartite graph in python (using networkx),cells = [n for n in B.nodes() if n[0] not in nodes]
order of keys in python dictionary,"od = OrderedDict((('a', 'first'), ('b', 'second')))
od
items = list(od.items())
items.reverse()
OrderedDict(items)"
how to print a sublist that contains all of the strings in another list?,"library = [['desk', 'chair', 'lamp'], ['cow', 'word', 'horse', 'word 2',
    'word 1']]"
"globally capture, ignore and send keyevents with python xlib, recognize fake input",print('event')
python joint distribution of n variables,"import numpy as np
numBins = 10
data = np.random.randn(100000, 3)"
python how to override a class member in the child and access it from parent?,"class Child(Parent):
    ID = 'Child Class'"
how do i track motion using opencv in python?,"def run(self):
    frame = cv.QueryFrame(self.capture)"
disallow django self-referential foreign key to point to self object,"class Meta:
    model = MyModel"
python statement of short 'if-else',"if t == 0:
    m = 100"
column order in pandas groupby agg function,"g = df.groupby(['people'])
g['people'].agg(OrderedDict([('C', len), ('B', len), ('A', len)]))"
how do i improve remove duplicate algorithm?,"for i in myl:
    if newl.count(i) != 2:
        pass"
how to make translucent sprites in pygame,"transsurface.set_colorkey((255, 0, 255))"
"default sub-command, or handling no sub-command with argparse","if sp_name in sys.argv[1:]:
    pass"
flask json custom error page,"def not_found(error):
    response = jsonify({'code': 404, 'message': 'No interface defined for URL'}
        )
response.status_code = 404"
how do i abort the execution of a python script?,"def main():
    done = True
if done:
    return
else:
    pass"
selenium: wait until text in webelement changes,"WebDriverWait(driver, 10).until(text_to_be_present_in_element_value((By.
    CLASS_NAME, 'searchbox'), '((?<=\\()[0-9]*)'))"
returning the first n characters of a unicode string,"unistring = (
    '\xce\x9c\xce\xb5\xcf\x84\xce\xb1\xce\xbb\xce\xbb\xce\xb9\xce\xba\xce\xb1')"
self referential many to many flask-sqlalchemy,"class Minor(db.Model):
    __tablename__ = 'minors'
id = db.Column(db.Integer, primary_key=True)"
how do i match a word in a text file using python?,"if re.search('^there$', line, re.I):
    pass"
can an object inspect the name of the variable it's been assigned to?,self.name = func.__name__
python regex: splitting on pattern match that is an empty string,"def zerowidthsplit(pattern, string):
    splits = list(m.start() for m in re.finditer(pattern, string))
starts = [0] + splits
ends = splits + [len(string)]
return [string[start:end] for start, end in zip(starts, ends)]
print(zerowidthsplit('(?<!foo)(?=bar)', 'foobarbarbazbar'))"
match start and end of file in python with regex,"pat = re.compile('^.*pattern.*$', re.M | re.DOTALL)
print(pat.findall(data))"
"sort a numpy array by another array, along a particular axis","static_indices = numpy.indices((3, 3, 3))"
how can i create a list of files in the current directory and its subdirectories with a given extension?,"for root, dirs, files in os.walk('C:\\web'):
    for file in files:
        if file.endswith('.asp'):
            pass"
print javascript exceptions in a qwebview to the console,"from PyQt4 import QtCore, QtGui, QtWebKit"
python numpy: create 2d array of values based on coordinates,"Z = np.zeros((3, 3))"
how to check if variable is string with python 2 and 3 compatibility,"def isstr(s):
    return isinstance(s, str)"
adding a background image to a plot with known corner coordinates,"y = np.random.uniform(0.0, 10.0, 15)
datafile = cbook.get_sample_data('lena.jpg')
img = imread(datafile)
plt.scatter(x, y, zorder=1)
plt.imshow(img, zorder=0, extent=[0.5, 8.0, 1.0, 7.0])
plt.show()"
how to solve recurrence relations in python,print(x[:n])
how to use python urlopen scraping after a page finish loading all searching result?,"page.connect(page, SIGNAL('loadFinished(bool)'), page_to_file)
page.mainFrame().load(QUrl(url))
sys.exit(app.exec_())"
how to change charfield choice list behaviour,"tuple(choice if choice[0] not in ['developer'] else ({'label': choice[1],
    'disabled': True}, choice[0]) for choice in ROLE_CHOICES)"
computing the correlation coefficient between two multi-dimensional arrays,"x = np.random.rand(10, 10)"
how to run scrapy from within a python script,process.start()
calculate within categories: equivalent of r's ddply in python?,"def f(group):
    pass"
map value to specific colour in seaborn heatmap,"import seaborn as sns
from matplotlib.colors import ListedColormap
data = np.random.randint(-1, 2, (10, 10))"
"expand multiple selection to all suggestions (boxes,hints) in sublime text 2","{'caption': 'Selection: Expand to Indentation', 'command':
    'expand_selection', 'args': {'to': 'indentation'}},"
find image type in python opencv,"cv2.imread('abalone.jpg', cv2.IMREAD_COLOR).dtype"
"having trouble opening serial port, or reading from serial port with pyserial",sleep(0.025)
python mysql connector - unread result found when using fetchone,import mysql.connector
how to declare 2d list in cython,my_array[x + y * m] = c
numpy : assembling multiple slices into new array,"def rolling_window(arr, window):
    """"""Very basic multi dimensional rolling window. window should be the shape of
    of the desired subarrays. Window is either a scalar or a tuple of same size
    as `arr.shape`.
    """"""
shape = np.array(arr.shape * 2)
strides = np.array(arr.strides * 2)
window = np.asarray(window)
shape[arr.ndim:] = window
shape[:arr.ndim] -= window - 1
if np.any(shape < 1):
    raise ValueError('window size is too large')
return np.lib.stride_tricks.as_strided(arr, shape=shape, strides=strides)
view = rolling_window(arr, 2)
view[0, 0]"
how to bind ctrl+/ in python tkinter?,"root.quit()
root = tk.Tk()
root.bind('<Control-slash>', quit)"
typeerror: object() takes no parameters,return list(self.__graph_dict.keys())
python 2.7- storing each row of a csv as a separate list/dictionary,"with open('toverdpython.csv', 'rb') as toverd:
    reader = csv.reader(toverd, delimiter='|', quoting=csv.QUOTE_NONE)
inputHeader = next(reader)
inputRows = [row for row in reader]
print(header)"
centering x-tick labels between tick marks in matplotlib,ax.grid(False)
how to extract a json object that was defined in a html page javascript block using python?,driver.quit()
how to run own daemon processes with django?,CELERYCTL = '$ENV_PYTHON $CELERYD_CHDIR/manage.py celeryctl'
how to add my module to travis-ci pythonpath,"from distutils.core import setup
setup(name='Distutils', version='1.0', description=
    'Python Distribution Utilities', author='Greg Ward', author_email=
    'gward@python.net', url='https://www.python.org/sigs/distutils-sig/',
    packages=['distutils', 'distutils.command'])"
pool with permanent objects for each worker without “global” keyword,"return calculator.calculate(arg)


class Organiser:

    def __init__(self):
        self.calculator = Calculator()
self.__pool = multiprocessing.Pool(processes=4)

def process(self, tasks):
    results = self.__pool.map(run_pool, [(self.calculator, data) for data in
        tasks])"
access a function variable outside the function without using `global`,return bye
sort dates in python array,"import datetime
dates = [datetime.datetime.strptime(ts, '%Y-%m-%d') for ts in timestamps]"
searching for a string in a large text file - profiling various methods in python,"def search(string, table, f):
    i = hash(string) % len(table)
entry = table[i]
while entry is not None:
    pos = entry.pos if isinstance(entry, Node) else entry
f.seek(pos)
if f.readline() == string:
    return True
entry = entry.__next__ if isinstance(entry, Node) else None
return False
SIZE = 2 ** 24
with open('data.txt', 'r') as f:
    table = build_table(f, SIZE)
print(search('Some test string\n', table, f))"
create a simple password for unittest user using password_hashers,"from django.contrib.auth.hashers import make_password
pwd = make_password('some_password')
self.user = User.objects.create(username='testuser', password=pwd)"
how to use the user_passes_test decorator in class based views?,"def dispatch(self, *args, **kwargs):
    return super(UserSettingsView, self).dispatch(*args, **kwargs)"
plug in django-allauth as endpoint in django-rest-framework,"def get(self, request, *args, **kwargs):
    pass"
i th order statistic in python,"import numpy as np
x = [2, 4, 0, 3, 1]"
change datetime to unix time stamp in python,"tz = pytz.timezone('US/Eastern')
utc_dt = tz.localize(dt, is_dst=True).astimezone(pytz.utc)
print(calendar.timegm(utc_dt.timetuple()))"
compute mean in python for a generator,return mean
django prefetch with custom queryset which uses managers method,"for pizza in pizzas:
    pass"
possible to make a roc plot from svm with precomputed kernel in scikit-learn?,mu = 1.0 / numpy.mean(chi)
is there a way to access the keyring in windows without giving a master password?,"from keyring import get_keyring, set_keyring"
a better pattern for ajax loading with pyramid?,return {'items': items}
set thousands separators in ipython without string formatting,"frm.for_type(float, thousands)"
use multi-processing/threading to break numpy array operation into chunks,a = numpy.array(a)
pyspark: grouby and then get max value of each group,"data_file = sc.parallelize([('u1', 's1', 20), ('u1', 's2', 5), ('u2',
    's3', 5), ('u2', 's2', 10)])
max_by_group = list(data_file.map(lambda x: (x[0], x)).reduceByKey(lambda x1, x2:
    max(x1, x2, key=lambda x: x[-1])).values())
max_by_group.collect()"
using pil to auto rotate picture taken with cell phone and accelorometer,"ApertureValue(4312, 1707)"
python app ouput to syslog server,"logger.addHandler(SysLogHandler('/dev/log'))
logger.addHandler(logging.FileHandler('filename.log'))"
find length of sequences of identical values in a numpy array,"xx = np.random.randint(0, 5, 1000000)"
variable alpha blending in pylab,"def mycmap(x):
    pass"
is there a random number distribution that obeys benford's law?,"probs = [30.1, 17.6, 12.5, 9.7, 7.9, 6.7, 5.8, 5.1, 4.6]"
how to configure and run celery worker on remote system,from celery import Celery
how to get referencefield data in mongoengine?,User.drop_collection()
convert snmp octet string to human readable date format,"if oct_len == 8 or oct_len == 11:
    t = struct.unpack(fmt_mapping[oct_len], oct)"
python double iteration,"with open(file2) as f2:
    pass"
how can i detect heroku's environment?,debug = True
"python, how to get all external ip addresses with multiple nics",import netifaces as ni
python summing elements of one dict if the have a similar key(tuple),sum_by_key[sum_key] = value
determining if a gif is transparent in python,"def uses_transparency(filename):
    img = Image.open(filename)
trans = img.info.get('transparency', None)"
python - how can i fetch emails via pop or imap through a proxy?,self.port = port
python html parsing that actually works,"anchorStart, anchorEnd = makeHTMLTags('a')"
how to query bigquery programmatically from python without end-user interaction?,"key = f.read()
f.close()
credentials = SignedJwtAssertionCredentials(SERVICE_ACCOUNT_EMAIL, key,
    scope='https://www.googleapis.com/auth/bigquery')
http = httplib2.Http()
http = credentials.authorize(http)
service = build('bigquery', 'v2')
datasets = service.datasets()
response = datasets.list(projectId=PROJECT_NUMBER).execute(http)
print('Dataset list:')
for dataset in response['datasets']:
    pass"
python - remove any element from a list of strings that is a substring of another element,"if not any([(s in o) for o in out]):
    out.append(s)"
"using ""from __future__ import division"" in my program, but it isn't loaded with my program","print(1 / 2)
exec(compile(open('print05.py').read(), 'print05.py', 'exec'))
print(1 / 2)"
removing the work from __init__ to aid unit testing,"def __init__(self, x):
    self.x = x"
python return lists of continuous integers from list,from itertools import groupby
"python: how to send mail with to, cc and bcc?",fromaddr = 'giles@sunnydale.k12.ca.us'
numpy 2d and 1d array to latex bmatrix,"lines = str(a).replace('[', '').replace(']', '').splitlines()"
pyqt: how to remove a widget?,"self.widget_name.deleteLater()
self.widget_name = None"
pandas dataframe groupby two columns and get counts,"df.groupby(['col5', 'col2']).size().groupby(level=1).max()"
flask redirect url with anchor,"@app.route('/myredirect')
def my_redirect():
    return redirect(url_for('hello_world', _anchor='my_anchor'))
if __name__ == '__main__':
    app.run()"
how to disable ssl3 and weak ciphers with cherrypy builtin ssl module (python 3),ctx.options |= ssl.OP_NO_SSLv2
python sort without lambda expressions,"[i for v, i in sorted((v, i) for i, v in enumerate(x))]"
pythonic way of slicing out part of a numpy array,a = np.arange(10)
python logging ensure a handler is added only once,print('added stream handler')
remove multiple elements from a list of index with python,"for i in range(len(values)):
    if i not in indices:
        list.append(values[i])"
python ignore certicate validation urllib2,ctx.check_hostname = False
how to manipulate figures while a script is running in python?,"def draw_func(i):
    pass"
how to send an email with python?,from email.mime.multipart import MIMEMultipart
invisible watermarks in images,"layer.paste(mark, (x, y))"
fetching datetime from float and vice versa in python,dateoffset = 693594
generating color ranges in python,"for rgb in HSV_tuples:
    rgb = map(lambda x: int(x * 255), colorsys.hsv_to_rgb(*rgb))
hex_out.append(''.join(map(lambda x: chr(x).encode('hex'), rgb)))
return hex_out"
interval average of 1d data,from scipy.interpolate import UnivariateSpline
"how to  unpack only some arguments from zip, not all?",values = [t[1] for t in ans]
legend only shows one label when plotting with pandas,"ax.legend(['Popularity', 'RateMedian', 'FirstPpl', 'FirstRM'])"
capturing high multi-collinearity in statsmodels,"xs = np.random.randn(100, 5)
corr = np.corrcoef(xs, rowvar=0)
w, v = np.linalg.eig(corr)
w"
order of list obtained by dictionary's keys(),od[2] = 'two'
python - lxml: enforcing a specific order for attributes,name = 'Development Signature'
how to disable django's csrf validation?,"def my_view(request):
    return HttpResponse('Hello world')"
regex for a third-person verb,"import re
r = re.compile('\\b(?=\\w*(?<![iosxz])(?<![cs]h)es\\b)\\w*')
s = (
    'it matches ""likes"", ""hates"" etc. However, it does not match ""bathes"", why doesn\'t it?'
    )
print(re.findall(r, s))"
python tracing a segmentation fault,test()
finding missing values in a numpy array,"m = ma.masked_where([True, False] * 5, arange(10))"
python selenium how to wait before clicking on link,"from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait"
how to calculate the click-through rate,"df2['key_action'] = df2.apply(lambda x: x.keyword.split('_')[1], axis=1)"
how can i get a process's stdin by a process id?,"pid = os.getpid()
with open(os.path.join('/proc', str(pid), 'fd', '1'), 'a') as stdin:
    pass"
convert pandas data frame to series,"df = pd.DataFrame([list(range(5))], columns=['a{}'.format(i) for i in range(5)]
    )
df"
numpy - group data into sum values,"sum_vals = [10, 9, 7]
a = [1, 5, 4, 2, 4, 3, 1, 2, 4]"
python tokenize sentence with optional key/val pairs,Values3
how do i run all python unit tests in a directory?,suite.addTest(unittest.defaultTestLoader.loadTestsFromName(t))
python splitting string by parentheses,strs = 'Hello (Test1 test2) (Hello1 hello2) other_stuff'
how to get all possible combinations of a list’s elements?,"list(combinations(list(range(4))))
list(combinations('abcd'))"
return the different multiplicative combinations of a list of numbers in python,"for k in range(i, len(factors2)):
    pass"
how to send celery all logs to a custom handler . in my case python-logstash handler,"logger.addHandler(handler)
return logger"
why is matrix multiplication faster with numpy than with ctypes in python?,SY(i + 2) + SX(i + 3) * SY(i + 3) + SX(i + 4) * SY(i + 4)
add another tuple to a tuple,"final_choices = ((another_choice,) + my_choices)"
finding multiple occurrences of a string within a string in python,"import re
text = 'Allowed Hello Hollow'"
how to join two generators in python?,"for item in generator3:
    pass"
building a small numpy array from individual values: fast and readable method?,"my_array[1, 1] = -1"
py2app picking up .git subdir of a package during build,"if not re.search('/\\.git/?', src):
    pass"
try - except in python for given amount of time,"def __exit__(self, *args):
    pass"
finding the indices of matching elements in list in python,print(timeit.timeit(list_comprehension))
converting this list into dictionary using python,"dct = dict((item.split('=')[0], item.split('=')[1].strip()) for item in lst)"
combine two columns of text in dataframe in pandas/python,"df = pd.DataFrame([['2014', 'q1'], ['2015', 'q3']], columns=('Year', 'Quarter')
    )
print(df)
df['Period'] = df.Year.str.cat(df.Quarter)
print(df)"
"how multiarray.correlate2(a, v, mode) is actually implemented?",import numpy as np
plotting stochastic processes in python,"for i in range(50):
    points[(i), :] = np.random.normal(loc=medians[i], scale=disps[i], size=100)
pcts = np.array([20, 35, 45, 55, 65, 80])
layers = np.empty([50, 6])
for i in range(50):
    _sorted = np.sort(points[(i), :])
layers[(i), :] = _sorted[pcts]
colors = ['blue', 'green', 'red', 'green', 'blue']
for i in range(5):
    plt.fill_between(locations, layers[:, (i)], layers[:, (i + 1)], color=
        colors[i])
plt.show()"
how to best perform multiprocessing within requests with the python tornado server?,app.listen(8888)
need to constantly monitor serial data in python,exit()
"django template system, calling a function inside a model","def __init__(self, method):
    pass"
nearest neighbor 1 dimensional data with a specified range,"order = np.argsort(B[:, (0)])"
how to enable transparency in vte.terminal,colormap = window.get_screen().get_rgb_colormap()
implementing svg arc curves in python,"def point(self, pos):
    angle = radians(self.theta + self.delta * pos)
cosr = cos(radians(self.rotation))
sinr = sin(radians(self.rotation))
x = cosr * cos(angle) * self.radius.real - sinr * sin(angle
    ) * self.radius.imag + self.center.real
y = sinr * cos(angle) * self.radius.real + cosr * sin(angle
    ) * self.radius.imag + self.center.imag
return complex(x, y)"
python - trap all signals,sys.exit()
removing control characters from a string in python,category('\u4e21')
how to get rid of punctuation using nltk tokenizer?,"['Eighty', 'seven', 'miles', 'to', 'go', 'yet', 'Onward']"
setting arbitrary color in pseudocolor plot with matplotlib,"new_map = matplotlib.colors.LinearSegmentedColormap.from_list('new_map',
    colors, N=256)"
show me some cool python list comprehensions,"data = '\n'.join(','.join(x) for x in input)"
obtaining length of list as a value in dictionary in python 2.7,"var1 = [1, 2, 3, 4]"
extracting a random sublist from a list in python,"left = randint(0, len(L) - 1)
right = randint(left + 1, len(L))"
python - how to pipe the output using popen?,"proc = Popen(['python', 'test.py'], stdout=PIPE)"
how to copy a file in python with a progress bar?,self.PauseButton.SetLabel('Resume')
how do i pass variables to all templates in django?,"def base(request):
    user = request.user"
how to remove punctuation marks from a string in python 3.x using .translate()?,"import re
fline = re.sub('[' + string.punctuation + ']', '', fline)"
do dictionaries have a key length limit?,"def make_str(length):
    return ''.join(choice(ascii_letters) for i in range(length))
test_dict = {make_str(10000000): i for i in range(5)}"
"when processing csv data, how do i ignore the first line of data?",has_header = csv.Sniffer().has_header(inf.read(1024))
"pandas to_csv first extra column remove, how to?","column_name = 'column'
data_frame = data_frame.drop(column_name, axis=1)"
reading binary data into pandas,"dt = np.dtype([('a', 'i4'), ('b', 'i4'), ('c', 'i4'), ('d', 'f4'), ('e',
    'i4'), ('f', 'i4', (256,))])
data = np.fromfile(file, dtype=dt)
df = pd.DataFrame.from_records(data)"
how to check version of python package if no __version__ variable is set,"def get_version(package):
    f = StringIO()"
how to pass arguments to a module in python 2.x interactive mode,"if __name__ == '__main__':
    main(sys.argv)"
how can i get the previous week in python?,"start_delta
start_of_week = today - start_delta"
how do i post unicode characters using httplib?,"'<?xml version=""1.0"" encoding=""UTF-8""?>\n<spellrequest textalreadyclipped=""0"" ignoredups=""1"" ignoredigits=""1"" ignoreallcaps=""0"">\n<text>%s</text>\n</spellrequest>\n'"
how to handle uploaded files in webapp2,attachments = self.request.POST.getall('attachments')
how do i handle multiple asserts within a single python unittest?,"class MyTestCase(unittest.TestCase):

    def expectEqual(self, first, second, msg=None):
        with self.subTest():
            self.assertEqual(first, second, msg)


class TestMA(MyTestCase):

    def test_ma(self):
        self.expectEqual(3, 0)
self.expectEqual(4, 0)"
how to pass arguments to functions by the click of button in pyqt?,"class ButtonBlock(QtGui.QWidget):

    def __init__(self, *args):
        super(QtGui.QWidget, self).__init__()
grid = QtGui.QGridLayout()
names = ('One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight',
    'Nine', 'Ten')
for i, name in enumerate(names):
    button = QtGui.QPushButton(name, self)
button.clicked.connect(self.make_calluser(name))
row, col = divmod(i, 5)
grid.addWidget(button, row, col)
self.setLayout(grid)

def make_calluser(self, name):

    def calluser():
        print(name)
return calluser
app = QtGui.QApplication(sys.argv)
tb = ButtonBlock()
tb.show()
app.exec_()"
dynamically setting __tablename__ for sharding in sqlalchemy?,"from sqlalchemy import MetaData, Table, Column"
best method for changing a list while iterating over it,"l = len(x) - 1
for i, v in enumerate(reversed(x)):
    if v % 2:
        pass"
how can i perform a ping or traceroute using native python?,"target = ['192.168.1.254']
result, unans = traceroute(target, maxttl=32)"
remove a substring from the end of a string,"print(url.replace('.com', ''))"
python argparse fails to parse hex formatting to int type,"type = auto_int,"
checking folder/file ntfs permissions using python,log.write('\n' + f.filepath.relative_to(base) + '\n')
break string into list of characters in python,chars = []
how to dynamically assign values to class properties in python?,"Pattern_groups = re.search(regex, self.Symbol)
for group, attr in zip(Pattern_groups.groups(), attributes):
    setattr(self, attr, group)"
in python - the operator which a set uses for test if an object is in the set,"def __hash__(self):
    pass"
using selenium with python and phantomjs to download file to filesystem,"for cookie in driver.get_cookies():
    pass"
how can i dynamically create class methods for a class in python,"def __init__(self, *args, **kwargs):
    pass"
how to extract a substring from inside a string in python?,import re
call google translate from python,"import requests

def translate_es_to_en(text):
    pass"
looking for an universal way to parse price into decimal,"return float(s)
tests = """"""1.000
1.000,20
23.14
1,234
1.23
3,12
"""""".splitlines()
for test in tests:
    pass"
how to save in *.xlsx long url in cell using pandas,"inData = 'C:/Users/martbar/Desktop/test.xlsx'
tmp = 'C:/Users/martbar/Desktop/tmp.csv'
exFile = 'C:/Users/martbar/Desktop/output.xlsx'
df = pd.read_excel(inData)
df.to_csv(tmp, index=False)
workbook = Workbook(exFile)
worksheet = workbook.add_worksheet()
with open(tmp, 'r') as f:
    reader = csv.reader(f)
for r, row in enumerate(reader):
    for c, col in enumerate(row):
        worksheet.write_string(r, c, col)
workbook.close()
os.remove(tmp)"
is there a numpy builtin to reject outliers from a list,"def reject_outliers(data, m=2.0):
    d = np.abs(data - np.median(data))
mdev = np.median(d)"
computing a binomial probability for huge numbers,p_k_log = k * np.log(p)
matplotlib second x-axis with transformed values,"ax1.set_xlabel('Frequency (GHz)')
ax2.set_xlabel('Wavelength (mm)')"
opencv via python: is there a fast way to zero pixels outside a set of rectangles?,"mask = np.zeros(img.shape, np.uint8)"
sympy lambdify with array inputs,"print(T(data[0], 0.29, 4.5))"
how to censor ip addresses in a file with python?,"for line in fileinput.input(['filename'], inplace=1, backup='.bak'):
    pass"
python saving multiple figures into one pdf file,plt.plot(list(range(10)))
capturing a single image from my webcam in java or python,img = cam.get_image()
how to square or raise to a power (elementwise) a 2d numpy array?,"np.power(x1, 3)"
python: how can i use variable from main file in module?,from func import func
"in python, do i need to use close() after i use read() on a file?",import contextlib
reducing binary patterns in python,"for i in range(len(b1)):
    if b1[:i] + b1[i + 1:] == b2[:i] + b2[i + 1:]:
        pass"
how to delete a file from the filesystem based on the returned case insensitive delta?,"caseInsensitivePath = caseInsensitivePath.lower()
basepath = assets_root
for folder in list(self.myDict.keys()):
    if caseInsensitivePath.lower().startswith(folder.lower()):
        basepath = folder"
python: change uppercase letter,"split_res = re.findall('[A-Z][^A-Z]*', 'YannickMorin')"
(python) best way to parse a file to avoid performances issues,"def __init__(self, logfile):
    self.log = open(logfile)"
how to get back name of the enum element in python?,"from enum import Enum


class Status(Enum):
    pass"
comparing two large lists in python,"one_set = set(one_list)
len(one_set & set_of_150kwords)"
disable dsusp in python,"def exec_cmd(*args):
    p = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)"
control font in tkmessagebox,r = Tk()
how can i show figures separately in matplotlib?,"plt.plot(list(range(10, 20)))
plt.draw()
plt.show()"
grouping constants in python,"class Foo(object):
    pass"
is there a python module for converting rtf to plain text?,"doc = Rtf15Reader.read(open('sample.rtf'))
print(PlaintextWriter.write(doc).getvalue())"
special considerations when performing file i/o on an nfs share via a python-based daemon?,temporary_dir = tempfile.mkdtemp(dir=base_dir)
example program of cython as python to c converter,"initdelorean()
import_delorean()"
running a function periodically in twisted protocol,self.clients.append(client)
make divider without changing size of original axis?,axColor.yaxis.set_ticks_position('left')
how to save a python interactive session?,import rlcompleter
how to add an attribute that contains a hyphen to a wtforms field,"attrs = {'data-provide': 'foo'}
form.field(**attrs)"
how to sort the letters in a string alphabetically in python,""""""""""""".join(sorted(s))"
python to parse non-standard xml file,"""""""Return the first item from sequence, seq or the default(None) value"""""""
matplotlib: grab single subplot from multiple subplots,"ax.plot(list(range(10)), color=color)"
prevent textiowrapper from closing on gc in a py2/py3 compatible way,gc.garbage
a multiline(paragraph) footer and header in reportlab,from reportlab.lib.pagesizes import letter
implement a classic martingale using python and pandas,bets = 2 ** toss2.cumsum()
fast (vectorized) way to find points in one df belonging to equally sized rectangles (given by two points) from the second df,"B = pd.DataFrame(np.array(list(product(prng, prng))) + np.array([[40, 30]]),
    columns=['Lat', 'Lng'])"
cross product of two vectors in python,import numpy as np
dynamically set local variable,lcl = locals()
restrict access to only owned content django,object_list = object_list.filter(author=bundle.request.user)
find length of sequences of identical values in a numpy array,"z = np.diff(np.append(-1, i))"
a fast way to find an all zero answer,"{1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0}
{1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0}"
multiple linear regression with python,[17074.62997704][17074.62974609][17074.62997723]
store simple user settings in python,c.write(sys.stdout)
extracting text from xml using python,root = ET.fromstring(xmlstr)
scrapy parsing json output,import json
importing a variable from one python script to another,"from script1 import c
print(c)"
python int to binary?,"def int2bin(i):
    pass"
add command line arguments with flags in python3,"parser.add_argument('-db', '--database', dest='db', default='ding_dong',
    help='Database name')"
"run many functions in parallel, and gather all results in a list","class FindIntersectionsWrapper(object):

    def __init__(self, ent, collidable):
        self.ent = ent
self.collidable = collidable"
how can i add a background thread to flask?,from flask import Flask
python variable naming/binding confusion,"def foo():
    pass"
how do i validate the format of a mac address?,"checkMAC('00-11-22-33-44-66')
checkMAC('1 2 3 4 5 6 7 8 9 a b c')
checkMAC('This is not a mac')"
trace table for python programs,"""""""Close the 'longtable' LaTeX environnement."""""""
how to know values at the same index in 2 lists in python are the same in positive or negative?,"print(same_direction([-1, 2, 3], [1, 2, 3]))"
xlwt multiple styles,"worksheet.write(0, 0, 'test value', style=style)"
django adaptors csv taking hours to import,delimiter = '^'
how can i plot maximum likelihood estimate in python,"xmax2 = sample_and_plot(10000, 'b')"
resizing an image in python,img = Image.open(FILENAME)
how to insert string to each token of a list of strings?,list_words
nltk viterbiparser fails in parsing words that are not in the pcfg rule,wsjp = response.read().decode('utf8')
combining scatter plot with surface plot,"ax.scatter(x, y, z)
ax.set_xlabel('x label')
ax.set_ylabel('y label')
ax.set_zlabel('z label')
plt.show()"
passing unicode strings from django to javascript,from django.utils import simplejson
plot gdal raster using matplotlib basemap,from mpl_toolkits.basemap import Basemap
how to save the file content in python?,matrix = [line.rstrip() for line in infile]
how do i shut down pyqt's qtapplication correctly?,"if __name__ == '__main__':
    test()"
filter values inside python generator expressions,"dct = {(1): 2, (3): 4, (5): 6}"
timestamp fields in django,from datetime import datetime
fitting exponential function through two data points with scipy curve_fit,"xf = np.linspace(0, 1, 50)"
extract the time from a uuid v1 in python,my_uuid = uuid.UUID('{12345678-1234-5678-1234-567812345678}')
chained string formatting in python,"'%s %f %s' % ('%d', 0.1, '%d %d') % (1, 2, 3)"
"python, detecting elements have been removed/added/changed positions in a list","Org = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i']"
how to remove spaces while writing in ini file- python,lines = file(config_path).readlines()
removing all non-numeric characters from string in python,"def only_numerics(seq):
    return list(filter(type(seq).isdigit, seq))"
swapping columns in a numpy array?,import numpy as np
numpy array interface with ctypes function,"lib.test.argtypes = POINTER(darray), POINTER(darray)"
removing common elements in two lists,"if i in b:
    a.remove(i)"
multiple subdomains allowed in the same blueprint,"mod.name = 'landing_pt'
app.register_blueprint(mod, subdomain='pt')"
business days in python,"import pandas as pd
from pandas.tseries.offsets import BDay
today = pd.datetime.today()"
using basic http access authentication in django testing framework,"class TestMyStuff(TestCase):

    def setUp(self):
        credentials = base64.b64encode('username:password')
self.client.defaults['HTTP_AUTHORIZATION'] = 'Basic ' + credentials"
how to see exception generated into django template variable?,"""""""
raise every variable rendering exception, TypeError included (usually hidden by django)
Syntax::
    {% debug_var obj.my_method %} instead of {{ obj.my_method }}        
"""""""
python program to check matching of simple parentheses,count -= 1
how to validate uniqueness constraint across foreign key (django),name = models.CharField(max_length=255)
python on raspberry pi user input inside infinite loop misses inputs when hit with many,print('Keyboard interrupt')
is it possible to import to the global scope from inside a function (python)?,"import re
re"
populate list with tuples,"alleles = ('A', 'A'), ('A', 'a'), ('a', 'a')"
is there a way how to configure smtphandler in python to do more advanced stuff?,"class MySMTPHandler(SMTPHandler):

    def getSubject(self, record):
        return 'My Error Format from the record dict'

def emit(self, record):
    if sendit:
        super(MySMTPHandler, self).emit(record)"
how to create a tuple of an empty tuple in python?,"len(a)
a[0]"
authentication only via config file?,"auth.set_access_token(secret['ACCESS_TOKEN'], secret['ACCESS_SECRET'])"
python library for user input,result = input(msg).strip()
proxying to another web service with flask,"def _proxy(*args, **kwargs):
    resp = requests.request(method=request.method, url=request.url.replace(
        'old-domain.com', 'new-domain.com'), headers={key: value for key,
        value in request.headers if key != 'Host'}, data=request.get_data(),
        cookies=request.cookies, allow_redirects=False)"
how to obtain oauth credentials with the google drive sdk 2 and python without human interaction,http = credentials.authorize(httplib2.Http())
generic function in python - calling a method with unknown number of arguments,"print((a, b, c, d))"
"django-registration, force unique e-mail","from registration.backends.default.views import RegistrationView
urlpatterns = patterns('', url('^register/$', RegistrationView.as_view(
    form_class=RegistrationFormUniqueEmail), name='registration_register'))"
what's a fast and pythonic/clean way of removing a sorted list from another sorted list in python?,"i1, i2 = 0, 0"
input format for kruskal-wallis test in python,"if pval > 0.05:
    pass"
coverage on a frozen executable,cov.save()
python 3.2: how to setup versioning for a project,print(myproject.__version__)
how do i get rid of a circular dependency error while creating a database in sqlalchemy?,text = Column(String)
how to trim a list in python,"t = [1, 2, 3, 4, 5]
del t[4:]"
minimizing python function that has numpy array as argument,"def rosen(x):
    """"""The Rosenbrock function""""""
return sum(100.0 * (x[1:] - x[:-1] ** 2.0) ** 2.0 + (1 - x[:-1]) ** 2.0)
x0 = [1.3, 0.7, 0.8, 1.9, 1.2]"
how to plot time series in python,"import datetime
import numpy as np
x = np.array([datetime.datetime(2013, 9, 28, i, 0) for i in range(24)])
y = np.random.randint(100, size=x.shape)
plt.plot(x, y)
plt.show()"
how to create a large pandas dataframe from an sql query without running out of memory?,"import pandas as pd
import pandas.io.sql as psql"
python extract data from file,"BOM = codecs.BOM_UTF8.decode('utf8')
with codecs.open(filename, encoding='utf-8') as f:
    for line in f:
        line = line.lstrip(BOM)"
adaptive plotting of a function in python,"x_a = points[..., :-1][..., (mask)]"
how to skip the index in python for loop,"for arr in array[2:]:
    pass"
displaying true-colour 2d rgb textures in a 3d plot?,from matplotlib.cbook import get_sample_data
"find ""one letter that appears twice"" in a string",s = 'abbbcppq'
double iteration in list comprehension,"from itertools import chain
list(chain.from_iterable(a))
list(chain(*a))"
how to delete a s3 version from a bucket using boto and python,list(bucket.list_versions())
"dead simple example of using multiprocessing queue, pool and locking",time.sleep(int(the_time))
suds ignoring proxy setting,import suds
how to use different formatters with the same logging handler in python,handler = logging.StreamHandler()
writing a tokenizer in python,print(repr(tokzr_QA(inp1)))
comparing order of 2 python lists,return alist == sorted(alist)
php to python pack('h'),"import binascii
import hashlib
the_hash = hashlib.md5('Dummy String').hexdigest()
print(the_hash)
the_unhex = binascii.unhexlify(the_hash)
print(the_unhex)"
find physical coordinates of a pixel in a fits file with python,"w.wcs_pix2world(100.0, 100.0, 1)"
counting each letter's frequency in a string,"import collections
letters = collections.defaultdict(int)"
python port forwarding/multiplexing server,"listenSocket = socket(AF_INET, SOCK_DGRAM)"
wxpython changing the shape of bitmap button,app = wx.PySimpleApp()
read xlsx stored on sharepoint location with openpyxl in python?,from openpyxl import load_workbook
export with alphabetical sort in python configparser,mo = self.OPTCRE.match(line)
how to prevent scrapy from url encoding request urls,DOWNLOADER_MIDDLEWARES = {'so.middlewares.MyCustomDownloaderMiddleware': 900}
how to divide a tuple into two in pythonic way,"di = {}
for x in tup:
    di.setdefault(Number if isinstance(x, Number) else str if isinstance(x,
        str) else object, []).append(x)
di[str], di[Number]"
pandas equivalent of stata's encode,"x = pd.DataFrame({'cat': ('A', 'A', 'B'), 'val': (10, 20, 30)})
labels, levels = pd.factorize(x['cat'])
x['cat'] = labels
x = x.set_index('cat')
print(x)"
"hacking django admin, hooks for login/logout","post_login.send(sender=None, user=user)"
why is the size of an empty dict same as that of a non empty dict in python?,12568
how to change the name of a django app?,default_app_config = 'polls.apps.PollsConfig'
how to redirect 'print' output to a file using python?,"f = open('out.txt', 'w')"
speed up creation of random data,"f = open('2014-07-17-1M_testdata_1Mx500.csv', 'w', 50000000)
for i in range(1000):
    m = numpy.random.random_integers(0, 1000000, (1000, 500))
numpy.savetxt(f, m, delimiter=',')"
how to read a file byte by byte in python and how to print a bytelist as a binary?,"with open(filename, 'rb') as f:
    while 1:
        byte_s = f.read(1)
if not byte_s:
    break"
multiple linear regression in python,"for ele in x[1:]:
    X = sm.add_constant(np.column_stack((ele, X)))"
how to incrementally sample without replacement?,random.shuffle(target)
pretty-printing physical quantities with automatic scaling of si prefixes,"def sign(x, value=1):
    """"""Mathematical signum function.
    :param x: Object of investigation
    :param value: The size of the signum (defaults to 1)
    :returns: Plus or minus value
    """"""
return -value if x < 0 else value

def prefix(x, dimension=1):
    """"""Give the number an appropriate SI prefix.
    :param x: Too big or too small number.
    :returns: String containing a number between 1 and 1000 and SI prefix.
    """"""
if x == 0:
    return '0  '
l = math.floor(math.log10(abs(x)))
if abs(l) > 24:
    l = sign(l, value=24)
div, mod = divmod(l, 3 * dimension)
return '%.3g %s' % (x * 10 ** (-l + mod), ' kMGTPEZYyzafpn\xc2\xb5m'[div])"
google app engine local (development) ipython shell,"from IPython.Shell import IPShellEmbed
ipshell = IPShellEmbed(user_ns=namespace, banner=banner)"
matplotlib.animation: how to remove white margin,writer.grab_frame()
remove python list element,"while item in l1:
    pass"
sympy - solving for variable in equation,"eqn = Eq(i_out, D_PWM * (A / Rsense))
solve(eqn, Rsense)"
how to calculate centroid in python,"[27.17, 8.58, 33.79],"
use python to inject macros into spreadsheets,path = os.path.dirname(_file)
how do i use xml namespaces with find/findall in lxml?,"tree = etree.parse(zf.open('content.xml'))
root = tree.getroot()"
pyqt5: how can i connect a qpushbutton to a slot?,"layout.addWidget(self.label)
layout.addWidget(self.button)"
using !s vs. :s to format a string in python,return 'Foo as a string'
how to get last record,"session.query(ObjectRes).filter(ObjectRes.id == session.query(func.max(
    ObjectRes.id)))"
ultimate answer to relative python imports,"if __name__ == '__main__':
    import os, sys
foo_dir = os.path.dirname(os.path.join(os.getcwd(), __file__))
sys.path.append(os.path.normpath(os.path.join(foo_dir, '..', '..')))
from mypackage import bar"
save an image generated with wand to django imagefield,last_edit = models.DateTimeField(auto_now=True)
how to slice one multiindex dataframe with the multiindex of another,"ix_use = pd.MultiIndex.from_tuples([('foo', 'can'), ('bar', 'baz')], names=
    ['b', 'c'])
other = pd.DataFrame(dict(a=1), index=ix_use)
other"
get column name where value is something in pandas dataframe,row = df_result.irow(0)
python: monkeypatching a method of an object,"setattr(requests, 'post', post)"
converting bibtex files to html with python (maybe pybtex?),print(value.fields['author'])
running subprocess within different virtualenv with python,"myProcess = subprocess.Popen(['these', 'are', 'for', 'the', 'shell'],
    stdout=subprocess.PIPE, stderr=subprocess.PIPE)"
how do i send an email with a .csv attachment using python,msg.attach(attachment)
indexable weak ordered set in python,"def __len__(self):
    return len(self._od)

def __iter__(self):
    return iter(self._od)

def __contains__(self, value):
    return value in self._od

def add(self, value):
    self._od[value] = None

def discard(self, value):
    self._od.pop(value, None)


class OrderedWeakrefSet(weakref.WeakSet):

    def __init__(self, values=()):
        super(OrderedWeakrefSet, self).__init__()
self.data = OrderedSet()
for elem in values:
    self.add(elem)"
is there a way to store python objects directly in mongodb without serializing them,"myObj = {}
myObj['demo'] = 'Some demo data'"
downloading files in twisted using queue,workers = [worker(queue) for _ in range(MAX)]
pandas dataframe drop columns by number of nan,"for c in dff:
    if sum(dff[c].isnull()) >= 2:
        dff.drop(c, axis=1, inplace=True)"
using a global flag for python regexp compile,"re.compile = lambda pattern, flags: re.my_compile(pattern, flags | re.DOTALL)"
argparse: map user input to defined constant,parser.parse_args('--foo INVALID'.split())
using python multiprocessing pool in the terminal and in code modules for django or flask,module.run_pool()
how to calculate the percentage of each element in a list?,"temp = [(t.count(str(i)) / len(x)) for i in range(1, 5)]"
can i yield from an instance method,assert nthdiff is not None
check if any tests raise a deprecation warning with pytest,"import warnings
with warnings.catch_warnings(record=True) as w:
    pass"
how to count the number of unique characters in a file?,"disallowed = set('!@#.')
unique_char_count = len(set(char for line in codecs.open(filename, encoding
    ='UTF-8') for char in line if char not in disallowed))"
how to use 'extent' in matplotlib.pyplot.imshow,figure(figsize=figsize)
find the newest folder in a directory in python,"for d in os.listdir(b):
    bd = os.path.join(b, d)
if os.path.isdir(bd):
    result.append(bd)
return result"
"python pretty print dictionary of lists, abbreviate long lists","pprint.pprint(obj, depth=1)"
from transaction data to list of sets in an efficient way,"return list(map(list, out))"
how to speed up resample procedure in pandas?,"idx2 = pd.date_range('1/1/1940', periods=10000000, freq='Min')
idx3 = pd.date_range('1/1/1980', periods=10000000, freq='Min')"
how can i change device used of theano,import theano.sandbox.cuda
how to convert a float into hex,"import struct
double_to_hex(17.5)
double_to_hex(-17.5)"
pythonic way to store a method result as an attribute,"def __init__(self, x, y):
    pass"
how to search if dictionary value contains certain string with python,"match = re.search('Mary', list(myDict.values())[i][j])"
how to fake type with python,"return isinstance(instance, User)"
representing a network in python,"for a, b in edges:
    pass"
how to only read lines in a text file after a certain string using python?,"with open(files, 'r') as f:
    dropped = dropwhile(lambda _line: 'Abstract' not in _line, f)"
unable to perform collectstatic,PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
how to find probability distribution and parameters for real data? (python 3),"dist_names = ['gamma', 'beta', 'rayleigh', 'norm', 'pareto']
for dist_name in dist_names:
    dist = getattr(scipy.stats, dist_name)"
usleep in python,"import time
usleep = lambda x: time.sleep(x / 1000000.0)
usleep(100)"
python matplotlib colorbar setting tick formator/locator changes tick labels,"plt.figure()
CS = plt.contour(xi, yi, zi, 25, cmap=plt.cm.jet)
bar = plt.colorbar(orientation='horizontal')
tick_locs = [-0.39, -0.26, -0.13, 0.0, 0.13, 0.26, 0.39]
tick_labels = ['-0.390', '-0.260', '-0.130', '0', '0.13', '0.26', '0.390']
bar.locator = matplotlib.ticker.FixedLocator(tick_locs)
bar.formatter = matplotlib.ticker.FixedFormatter(tick_labels)
bar.update_ticks()
plt.xlim(-2, 2)
plt.ylim(-2, 2)
plt.title('griddata test (%d points)' % npts)
plt.show()"
"python: is there an equivalent of mid, right, and left from basic?",return substring + s[:-amount]
wxpython changing the shape of bitmap button,"sizer.Add(button, 0, wx.ALIGN_CENTER)"
how to create a guid/uuid in python,uuid.uuid4()
scrapy from script output in json,results.append(dict(item))
how to successfully compile mpi4py using ms hpc server 2008 r2's mpi stack?,[msmpi]
"how to use ""raise"" keyword in python","if something:
    raise Exception('My error!')"
python: search a string for a variable repeating characters,"for s in values:
    if re.search('(\\d)\\1{3}', s):
        pass"
call python function from matlab,return y
python pandas -- random sampling of time series,"rndseries = pd.Series(np.random.randn(len(rndrange)), index=rndrange)
rndseries.head()"
datetime string format alignment,"""""""{:%Y/%m/%d}"""""".format(dt)
""""""{:>20}"""""".format(dt)
""""""{:>20}"""""".format(str(dt))"
"django - need datetime fields that can handle only year, or year and month values","if isinstance(value, datetime.date):
    return format(value, '%Y-%m')"
python: parse stream title with mplayer,"p = subprocess.Popen(['mplayer', url], stdout=subprocess.PIPE, stderr=
    subprocess.STDOUT)
for line in p.stdout:
    if line.startswith('ICY Info:'):
        info = line.split(':', 1)[1].strip()
attrs = dict(re.findall(""(\\w+)='([^']*)'"", info))
print('Stream title: ' + attrs.get('StreamTitle', '(none)'))"
a more pythonic way of iterating a list while excluding an element each iteration,"for i in range(0, len(a)):
    pass"
how to wrap a column in a cast operation,"class myTable(Base):
    pass"
find out the unicode script of a character,"print(unicodedata2.script_cat('\u306e'))
print(unicodedata2.script_cat('\u2605'))"
how do i apply django model meta options to models that i did not write?,"ordering = ['-id', 'username']"
xml parsing from web response,from xml.etree.ElementTree import parse
how can i escape latex special characters inside django templates,"conv = {'&': '\\&', '%': '\\%', '$': '\\$', '#': '\\#', '_': '\\_', '{':
    '\\{', '}': '\\}', '~': '\\textasciitilde{}', '^': '\\^{}', '\\':
    '\\textbackslash{}', '<': '\\textless', '>': '\\textgreater'}"
python: parse stream title with mplayer,"for line in p.stdout:
    if line.startswith('ICY Info:'):
        info = line.split(':', 1)[1].strip()"
accessing key in factory of defaultdict,"def __missing__(self, key):
    self[key] = self.factory(key)"
loop with conditions in python,"if some_condition:
    for i in range(10):
        do_something()"
convert a unixtime to a datetime object and back again (pair of time conversion functions that are inverses),"import calendar, datetime

def dt(u):
    pass"
how do i create a tuple with an attribute using python?,self.weight = weight
how can i run python source from stdin that itself reads from stdin?,"import os
with os.fdopen(3, 'r') as fp:
    pass"
reverse engineering python to strings,module.hello()
how do replace all occurrences of certain characters?,"line = ['ad', 'da', 'sdf', 'asd', '3424', '342sfas', 'asdfaf', 'sdfa', 'afase']
print(line[7])
line = remove_chars(line)
print(line[7])"
is it possible in python to declare that method must be overriden?,"class A(object):
    pass"
how to retrieve the original order of key-word arguments passed to a function call?,"def multiple_kwarguments(first, **lotsofothers):
    pass"
get list of unique multi-sets,"from collections import Counter, OrderedDict
list(OrderedDict([frozenset(list(Counter(tup).items())), tup] for tup in data).values())"
best way to turn word list into frequency dict,"c = Counter()
for letter in 'here is a sample of english text':
    c[letter] += 1"
difficulty with python prime number check,"if a < 2:
    pass"
printing attributes of objects in a class in python,all_potions = {}
python multiple inheritance function overriding and listview in django,"def get_context_data(self, **context):
    super(MyListView, self).get_context_data(**context)"
remove all occurrences of a value from a python list,"x = [1, 2, 3, 2, 2, 2, 3, 4]
list(filter((2).__ne__, x))"
remove transparency/alpha from any image using pil,"def remove_transparency(im, bg_colour=(255, 255, 255)):
    if im.mode in ('RGBA', 'LA'
        ) or im.mode == 'P' and 'transparency' in im.info:
        alpha = im.convert('RGBA').split()[-1]"
renormalize weight matrix using tensorflow,"x = tf.constant([0.0, 0.0, 3.0, 4.0, 30.0, 40.0, 300.0, 400.0], shape=(4, 2))"
how to handle different versions of python protobuf,deactivate
executing python multi-line statements in the one-line command-line,"for r in range(3):
    print('rob')
EOF"
joining only lines with spaces in python,"p = re.compile('\\n\\n|\\n(?=[^\\n]*\\n\\n)', re.IGNORECASE)
test_str = (
    'Report Area\n\nTotal Population\n\nTotal Land Area\n(Square Miles)\n\nPopulation Density \n(Per Square Mile)\n\n\nReport Area 37,325,068 155,738.02 239.67 \nAlameda County, CA 1,515,136 738.82 2,050.75 \nAlpine County, CA 1,197 738.13 1.62 \nAmador County, CA 37,764 594.43 63.53 \nButte County, CA 220,101 1,636.03 134.53 \nCalaveras County, CA 45,507 1,019.74 44.63 \nColusa County, CA 21,329 1,150.43 18.54 '
    )
subst = ' '
result = re.sub(p, subst, test_str)"
convert list to tuple in python,"tuple
l = [4, 5, 6]"
django database query: how to filter objects by date range?,"import datetime
samples = Sample.objects.filter(sampledate__gte=datetime.date(2011, 1, 1),
    sampledate__lte=datetime.date(2011, 1, 31))"
how to center a window on the screen in tkinter?,win = tk.Toplevel(root)
concurrent downloads - python,from eventlet.green import urllib2
best data structure for storing license plates and searching if a given license plate exists,from time import time
load gui from a glade with gtksourceview in pygobject,"class MyApp(object):

    def __init__(self):
        pass"
how to compute an expensive high precision sum in python?,"def binomln(n, k):
    return -betaln(1 + n - k, 1 + k) - np.log(n + 1)
for n in range(2, 1000, 10):
    m = 2.2 * n / np.log(n)
a = np.arange(1, n + 1)[(np.newaxis), :]
b = np.arange(n + 1)[:, (np.newaxis)]
v = binomln(n, a) + binomln(n - a, b) + m * binomln(a + b, a) - m * (a + b
    ) * np.log(2)
term = np.exp(logsumexp(v))
print(term)"
how to check type of files without extensions in python?,"magic.from_file('greenland.png', mime=True)"
remove all files in a directory,"import glob, os
test = '/path/*'
r = glob.glob(test)"
how to suppress noisy factory started/stopped log messages from twisted?,"class QuietHTTP11ClientFactory(client._HTTP11ClientFactory):
    noisy = False
myQuietPool = client.HTTPConnectionPool(reactor)
myQuietPool._factory = QuietHTTP11ClientFactory"
how to speed up numpy array-filling in python?,yield np.random.bytes(block_size)
what's a good approach to managing the db connection in a google cloud sql (gae) python app?,self.response.out.write('</td></tr>')
how to read a config file using python,"path2 = config.get('My Section', 'path2')"
i want to match money amount with regex for indian currency without commas,"teststring = 'Rs. 2000 , Rs.2000 , Rs 20,000.00 ,20,000 INR 200.25 INR.'"
overcoming memoryerror / slow runtime in ashton string task,"return a
t = int(eval(input()))"
deriving an ssh fingerprint from a public key in python,"import sshpubkeys
key = sshpubkeys.SSHKey('ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAqmEmDTNBC6O8H' +
    'GCdu0MZ9zLCivDsYSttrrmlq87/YsEBpvwUTiF3UEQuFLaq5Gm+dtgxJewg/UwsZrDFxz' +
    'pQhCHB6VmqrbKN2hEIkk/HJvCnAmR1ehXv8n2BWw3Jlw7Z+VgWwXAH50f2HWYqTaE4qP4' +
    'Dxc4RlElxgNmlDPGXw/dYBvChYBG/RvIiTz1L+pYzPD4JR54IMmTOwjcGIJl7nk1VjKvl' +
    '3D8Wgp6qejv4MfZ7Htdc99SUKcKWAeHYsjPXosSk3GlwKiS/sZi51Yca394GE7T4hZu6H' +
    'TaXeZoD8+IZ7AijYn89H7EPjuu0iCAa/cjVzBsFHGszQYG+U5KfIw== user@host')
print(key.bits)
print(key.hash())"
symbolic solution of equation system using sympy with trivial solutions depending on symbols,"top_matrix[3, 3] = -1"
how to write to an existing excel file without overwriting data (using pandas)?,master_book = load_workbook(master_file_path)
package for time series analysis in python,import numpy as np
splitting a variable length string into multiple parts in python,"s
print('\n'.join(s))"
how to set elementtree element text field in the constructor,"self.tag = tag
self.attrib = attrib
self._children = []"
overwriting file in ziparchive,shutil.rmtree(tempdir)
how to skip a unittest case in python 2.6,import unittest2 as unittest
sklearn: how to feed data to sklearn randomforestclassifier,"np_labels = np.array(labels)
clf = RandomForestClassifier(n_estimators=20, max_depth=5)
clf.fit(np_training, np_labels)"
updating a numpy array with another,"_, a_idx = np.where(a[:, (None), (0)] == out_id)"
multiple positional arguments with python and argparse,"parser.add_argument('input', nargs='+', action=MyAction)"
right click contextmenu on qpushbutton,"from PyQt4 import QtGui, QtCore"
"python, store a dict in a database",import sqlite3
count number of lines in a txt file with python - but exclude blank lines,"with open('data.txt', 'r') as f:
    lines = f.readlines()"
how does one debug nan values in tensorflow?,summary_merge = tf.merge_all_summaries()
algorithm optimization to find possible aminoacid sequences with total mass m,"valid_combinations = [(i, x) for i, x in enumerate(PROD) if x == M]"
lock mutable objects as immutable in python,obj.lock()
get smallest n values from numpy array ignoring inf and nan,"np.isnan(a[2])
np.isnan(a[2]).nonzero()"
python dataframe pandas drop column using int,"def drop_col_n(df, col_n_to_drop):
    pass"
how to check whether screen is off in mac/python?,"def main():
    pass"
using pysmbc to read files over samba,"dfile.flush()
sfile.close()"
cannot change global variables in a function through an exec() statement?,"exec('globals()[""myvar""] = ""changed!""')"
recursion: how to avoid python set changed set during iteration runtimeerror,"self.map[var].color = color
for key in node.neighbors:
    pass"
python: how to increment a ctypes pointer instance,"void_p = ctypes.cast(p, ctypes.c_voidp).value + 1"
how do i output info to the console in a gimp python script?,import sys
caching data within a python class (to avoid expensive filesystem reads on app engine),"def load_theme_variables(self):
    if not self.__theme_variables is None:
        pass"
how do i request and process json with python?,"import urllib.request, urllib.error, urllib.parse"
python - bulk select then insert from one db to another,"cursor = connection.cursor()
cursor.execute('ATTACH ""/path/to/main.sqlite"" AS master')"
how to make python argparse mutually exclusive group arguments without prefix?,"list_parser.add_argument('dirname', action='store', help='Directory to list')"
log scale on radial contour plot with matplotlib,"x[:] = np.where(mask, np.nan, r * np.cos(t))"
variable number of inputs with django forms possible?,"class Foo(forms.Form):
    field = forms.Charfield()
forms = [Foo(prefix=i) for i in range(x)]"
pandas csv-import: keep leading zeros in a column,"import csv
from pandas import read_csv
dataframe = read_csv('projects.csv')
print(dataframe)"
plotting correlation heatmaps with seaborn facetgrid,"df = pd.DataFrame(randint(0, 10, (200, 12)), columns=list('abcdefghijkl'))
grouped = df.groupby('a')
rowlength = grouped.ngroups / 2
fig, axs = plt.subplots(figsize=(9, 4), nrows=2, ncols=rowlength)
targets = zip(list(grouped.groups.keys()), axs.flatten())
for i, (key, ax) in enumerate(targets):
    sns.heatmap(grouped.get_group(key).corr(), ax=ax, xticklabels=i >=
        rowlength, yticklabels=i % rowlength == 0, cbar=False)
ax.set_title('a=%d' % key)
plt.show()"
add custom border to certain cells in a matplotlib / seaborn plot,"sns.set()
flights = sns.load_dataset('flights')"
creating numpy linspace out of datetime,x[0] * 3
update database with multiple sql statments,"import mysql.connector
cnx = mysql.connector.connect(user='scott', database='test')
cursor = cnx.cursor()
SQL = """"""
    update my_table 
    set 
    LAY = 'P6682'
    , BLK = 'P6682'
    , ANI = 'P6682'
    where
    Shot = 'SH01';
    update my_table 
    set 
    LAY = '1863'
    , BLK = '1863'
    , ANI = '1863'
    where
    Shot = 'SH02'
""""""
for result in cursor.execute(SQL, multi=True):
    pass
cnx.commit()
cur.close()
cnx.close()
cnx.disconnect()"
fastest method to generate big random string with lower latin letters,"timeit.timeit('f()', 'from __main__ import bytes as f', number=3)"
python data type to track duplicates,"for record in matches:
    if item == record.value:
        pass"
numpy/scipy/ipython:failed to interpret file as a pickle,"s = """"""0,0.104553357966
1,0.213014562052
2,0.280656379048
3,0.0654249076288
4,0.312223429689
5,0.0959008911106
6,0.114207780917
7,0.105294501195
8,0.0900673766572
9,0.23941317105
10,0.0598239513149
11,0.541701803956
12,0.093929580526"""""""
how to catch exceptions in workers in multiprocessing,"pool.join()
print('Multiprocessing done!')"
python how cyclic fetch a pre-fixed number of elements in array,"i, size = 5, 9
array[i:i + size] + array[:max(0, i + size - len(array))]"
how to calculate cosine similarity given 2 sentence strings? - python,numerator = sum([(vec1[x] * vec2[x]) for x in intersection])
cube root modulo p -- how do i do this?,"if p % 3 == 2:
    return pow(a, (2 * p - 1) / 3, p)"
pytest use same fixture twice in one function,"def login():
    pass"
wtforms hidden field value,"return render_template('experiment.html', form=form)"
rectangles from points using python,print('### Feature ' + str(ft) + ' ###')
python: how do i format a date in jinja2?,{{car.date_of_manufacture | datetime}}
pandas shift converts my column from integer to float.,df = pd.DataFrame({'a': list(range(5))})
how to exit the entire application from a python thread?,"os.kill(os.getpid(), signal.SIGUSR1)"
override default installation directory for python bdist windows installer,"[command]
option = value"
how to annotate seaborn pairplots?,"p.fig.text(0.1, -0.08, """"""Some multiline
footnote..."""""", fontsize=10)"
"dependency rule tried to blank out primary key in sqlalchemy, when foreign key constraint is part of composite primary key",s = get_session()
python string substitution,"w = ['a', 'b', 'c']"
how can i use a pip requirements file to uninstall as well as install packages?,deactivate
"get unique tuples from list , python",print(list(d.values()))
most efficent way to create all possible combinations of four lists in python?,"headers = ['Hello there', 'Hi there!']"
how can i discover classes in a specific package in python?,print(Base.getSubclasses())
how can i have a django signal call a model method?,"def send_email(cls, sender, instance, created, **kwargs):
    pass"
running a standalone script doing a model query in django with `settings/dev.py` instead of `settings.py`,from my_app.models import MyModel
python zipfile module with textiowrapper,"for filename in zf.namelist():
    with zf.open(filename, 'r') as f:
        words = io.TextIOWrapper(f, newline=None)
for line in words:
    pass"
how do i sum tuples in a list where the first value is the same?,"p = [('AAPL', 50), ('AAPL', -50), ('RY', 100), ('RY', -43)]
map(lambda g: (g[0], sum(map(itemgetter(1), g[1]))), groupby(sorted(p),
    itemgetter(0)))"
need to convert utc (aws ec2) to pst in python,"print('Local date & time is  :', date.strftime(date_format))"
pandas groupby apply all,"grouped = test_df.groupby('name')
for name, group in grouped:
    pass"
how to determine pid of process started via os.system,"import subprocess
import time"
plotting animated quivers in python,"ax.set_ylim(-1, 7)

def update_quiver(num, Q, X, Y):
    """"""updates the horizontal and vertical vector components by a
    fixed increment on each frame
    """"""
U = np.cos(X + num * 0.1)
V = np.sin(Y + num * 0.1)
Q.set_UVC(U, V)
return Q,
anim = animation.FuncAnimation(fig, update_quiver, fargs=(Q, X, Y),
    interval=10, blit=False)
plt.show()"
"matplotlib: annotate subplots in a figure with a, b, c","import matplotlib.pyplot as plt
import string"
how to compare 2 json in python,"import json
x = json.loads(
    """"""[
    {
       ""globalControlId"": 72,
       ""value"": 0,
       ""controlId"": 2
   },
   {
       ""globalControlId"": 77,
       ""value"": 3,
       ""controlId"": 7
   }
]""""""
    )
y = json.loads(
    '[{""value"": 0, ""globalControlId"": 72,""controlId"": 2}, {""globalControlId"": 77, ""value"": 3, ""controlId"": 7 }]'
    )"
defining a discrete colormap for imshow in matplotlib,"np.random.seed(101)
zvals = np.random.rand(100, 100) * 10
cmap = colors.ListedColormap(['white', 'red'])"
how can i copy the order of one array into another? [python],"for i, elem in zip(locations, sorted_B):
    result[i] = elem"
browse files and subfolders in python,"htmlfiles = [os.path.join(root, name) for root, dirs, files in os.walk(path
    ) for name in files if name.endswith(('.html', '.htm'))]"
principal components analysis using pandas dataframe,"df = pd.DataFrame(data=np.random.normal(0, 1, (20, 10)))"
create a python object that can be accessed with square brackets,"test = Test()
print(test[0])
print(test['kitten'])"
how to generate a repeatable random number sequence?,"def repeatable_random(seed):
    hash = seed"
implementing a patricia trie for use as a dictionary,j += 1
headless script crashes after a few runs,from selenium.webdriver.firefox.firefox_binary import FirefoxBinary
standard regex vs python regex discrepancy,m = p.match('aa')
how can i create a python timestamp with millisecond granularity?,posix_timestamp_millis = posix_timestamp_micros // 1000
python - running a program increasingly faster,print(0)
python dict to json via json.loads:,"import simplejson as json
final = {'first': first_data, 'second': second_data}"
matplotlib: show labels for minor ticks also,from matplotlib import pyplot as plt
algorithm for itertools.combinations in python,"for j in range(i + 1, r):
    pass"
pinging an ip range with scapy,"TIMEOUT = 2
conf.verb = 0
for ip in range(0, 256):
    packet = IP(dst='192.168.0.' + str(ip), ttl=20) / ICMP()
reply = sr1(packet, timeout=TIMEOUT)
if not reply is None:
    print(reply.dst, 'is online')
else:
    print('Timeout waiting for %s' % packet[IP].dst)"
dealing with a colon in beautifulsoup css selectors,"html = """"""
<div style=""display:flex"">
    <div class=""half"" style=""font-size: 0.8em;width: 33%;""> apple </div>
    <div class=""half"" style=""font-size: 0.8em;text-align: center;width: 28%;""> peach </div>
    <div class=""half"" style=""font-size: 0.8em;text-align: right;width: 33%;"" title=""nofruit""> cucumber </div>
</div>
""""""
soup = BeautifulSoup(html)
soup.select('div[style=""display: flex""]')"
selecting values from a json file in python,"data = response.json()
issues = data.get('issues', list())"
how do you change the code example font size in latex pdf output with sphinx?,"class CustomLatexFormatter(LatexFormatter):

    def __init__(self, **options):
        super(CustomLatexFormatter, self).__init__(**options)"
how to pass kwargs from save to post_save signal,return user
"shorten a number of lists based on a collective max length, moving excess to new lists",numElems = int(math.floor(maxLength / len(remaining)))
"python - way to restart a for loop, similar to ""continue"" for while loops?","if i == 5:
    should_restart = True
break"
how to get text for a root element using lxml?,from lxml import etree
plot a circle with pyplot,"figure(figsize=(8, 8))"
text-replace in docx and save the changed file with python-docx,"def docx_replace(old_file, new_file, rep):
    zin = zipfile.ZipFile(old_file, 'r')
zout = zipfile.ZipFile(new_file, 'w')
for item in zin.infolist():
    buffer = zin.read(item.filename)
if item.filename == 'word/document.xml':
    res = buffer.decode('utf-8')
for r in rep:
    res = res.replace(r, rep[r])
buffer = res.encode('utf-8')
zout.writestr(item, buffer)
zout.close()
zin.close()"
how to save/crop detected faces in dlib python,"img = cv2.imread('test.jpg')
dets = detector.run(img, 1)
for i, d in enumerate(dets):
    print('Detection {}, score: {}, face_type:{}'.format(d, scores[i], idx[i]))
crop = img[d.top():d.botton(), d.left():d.right()]"
"numpy: need a hand in understanding what happens with the ""in"" operator","b = np.array((3, 3))
c = np.array((2, 1))"
can a method be used as either a staticmethod or instance method?,"class Foo(object):
    pass"
droping lower order terms of a polynomial with sympy,from sympy.abc import x
flask optional url parameters,"@app.route('/<user_id>/<username>')
def show(user_id, username='Anonymous'):
    return user_id + ':' + username"
get closest element from list of dictionaries,"def __init__(self, dictList, key):
    pass"
best way to count the number of rows with missing values in a pandas dataframe,"df = pd.DataFrame(randn(5, 3), index=['a', 'c', 'e', 'f', 'h'], columns=[
    'one', 'two', 'three'])
df = df.reindex(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'])
df"
aks primes algorithm in python,print('# p: (x-1)^p for small p')
best way to remove elements from a list,"to_be_removed = {'a', '1', 2}"
how to input a regex in string.replace?,import re
find whether the string starts and ends with the same word,"""""""earth"""""".startswith('earth')"
count letter differences of two strings,"print(i, '  ', j)"
how can i profile memory of multithread program in python?,"def __add__(self, other):
    pass"
segmenting license plate characters,title('Homomorphic Filtered Result')
user defined legend in python,"ax.axis(ymin=-1, ymax=2)
plt.show()"
how to gather dataframe column into key value pairs as row in python,"df.columns = df.columns.str.split('_', expand=True)
df = df.stack().reset_index(level=0, drop=True).rename_axis('year'
    ).reset_index()"
how do i get such a nested lists?,"def recursivereverese(l):
    pass"
loading all modules in a folder in python,"for module in os.listdir(os.path.dirname(__file__)):
    if module == '__init__.py' or module[-3:] != '.py':
        pass"
how to display the value of the bar on each bar with pyplot.barh()?,"ax.set_xticks(ind + width / 2)
ax.set_xticklabels(('G1', 'G2', 'G3', 'G4', 'G5'))
ax.legend((rects1[0], rects2[0]), ('Men', 'Women'))

def autolabel(rects):
    """"""
    Attach a text label above each bar displaying its height
    """"""
for rect in rects:
    height = rect.get_height()
ax.text(rect.get_x() + rect.get_width() / 2.0, 1.05 * height, '%d' % int(
    height), ha='center', va='bottom')
autolabel(rects1)
autolabel(rects2)
plt.show()"
proper way to reload a python module from the console,"if isinstance(thing, ModuleType):
    pass"
"is there a python json library can convert json to model objects, similar to google-gson?",s = yaml.dump(f)
intersection of 2d and 1d numpy array,"listed.shape = A.shape[0], A.shape[1] - 3"
downloading a picture via urllib and python,import requests
how to scrape all the content of each link with scrapy?,"item['body'] = sel.xpath('//*[@id=""postingbody""]').extract_first()
item['link'] = response.url
yield item"
removing white space around a saved image in matplotlib,"plt.savefig('test.png', bbox_inches='tight')"
"python : list of dict, if exists increment a dict value, if not append a new dict","urls_d = {}
for url in list_of_urls:
    if not url in urls_d:
        urls_d[url] = 1
else:
    urls_d[url] += 1"
how to generate permutations of array in python?,random.shuffle(temp)
how to represent a strange graph in some data structure,"return self.destinations(goingTo, passingBy)"
using the lambda function for a function that depends on the input,print(p(42))
python build a dynamic growing truth table,"return (row + [v] for row in subtable for v in [0, 1])"
is there a numpy builtin to reject outliers from a list,"iqr = qhigh - qlow
return sr[(sr - median).abs() <= iqr]"
get keys correspond to a value in dictionary,"def f2a():
    return [item[0] for item in list(d1.items()) if item[1] == 55][0]"
how to understand expression lists in python,"b = 1, 2"
how to prevent numbers being changed to exponential form in python matplotlib figure,plt.draw()
how to profile my code?,"def testSomething(self):
    pass"
restful web services consumed by web and native mobile apps with authentication in python using django framework,"trustStore.load(null, null)"
meaning of the <- symbol in python,"a = -5
b = 3
a < -b
a = 3
b = 4
a < -b"
"in django, how do i call the subcommand 'syncdb' from the initialization script?",call_command('runserver')
matplotlib: draw lines with width given in data coordinates,"ax.set_xlim(-50, 50)
ax.set_ylim(-75, 75)"
finding missing values in a numpy array,numpy.nonzero(m.mask)
regex for matching string python,"size = re.findall('\\d{1,3}(?:,\\d{3})*(?:\\.\\d+)?', my_string)"
reduce left and right margins in matplotlib plot,subplot2 = fig.add_subplot(122)
python: how to make this color thresholding function more efficient,"right_thresh = np.zeros_like(img, dtype=np.float32)"
read all possible sequential substrings in python,word = 'WINE'
smart way to end a subroutine if file doesnt exist in cwd,"def readlines(path):
    return open(path).readlines() if opath.exists(path) else []"
wtforms creating a custom widget,"return HTMLString(html % (params, escape(field.label.text)))"
filtering a list. get elements of list only with a certain distance between items?,"if i - lst[-1] > 999:
    pass"
deleting rows based on a column's value in pandas,"df['col.2'] = df.groupby('col.1')['col.2'].cumsum()
df['col.2'] = df.groupby('col.1')['col.2'].cumsum()"
convert utf-8 with bom to utf-8 with no bom in python,s = u.encode('utf-8')
recursive crawling with python and scrapy,br.set_cookiejar(cj)
what does 'h' mean in a python format string?,'[%Le]' % 2.5
return image url in django rest framework,"class Meta:
    model = Picture
fields = 'field', 'image', 'image_url'

def get_image_url(self, obj):
    pass"
python argparse print usage text after description,return formatter.format_help()
sending messages or datas with bluetooth via python,"service = find_service(address='00:yy:72:zz:bb:aa')
pprint(service)"
"is there a way to script in python to change user passwords in linux? if so, how?",passwd.communicate(((phrase + '\n') * 2).encode('utf-8'))
check if python dictionary contains value and if so return related value,"fileMod = [item['fileMod'] for item in fileList if item['fileName'] == filename
    ]"
how to import csv data file into scikit-learn?,import pandas as pd
"tkinter: set stringvar after <key> event, including the key pressed",root = tk.Tk()
how to link pycharm with pyspark?,sys.path.append('/Users/myUser/Downloads/spark-1.6.1-bin-hadoop2.6/python')
finding the sum of even valued terms in fibonacci sequence,"a, b = b, a + b"
show an array in format of scientific notation,print(a)
how to iterate over time periods in pandas,s
find equivalent results under distributive and commutative laws,"def create_groupings(n, exclude=()):
    if n <= 0:
        yield ()
for i in range(1, n + 1):
    pass"
get document doctype with beautifulsoup,declaration_type = child.string.split()[0]
"how to ""log in"" to a website using python's requests module?",print(r.content)
check if element is already in a queue,return self.queue.pop()
how to find element in kml tree containing ':',tree = etree.parse('test.xml')
python dependencies between groups using argparse,"group_simulate = root_group.add_mutually_exclusive_group()
group_simulate.add_argument('-M', help='simulate module down', nargs=1,
    metavar='module_name', dest='simulate')
group_simulate.add_argument('-P', help='simulate FC port down', nargs=1,
    metavar='fc_port_name', dest='simulate')
group_simulate.add_argument('-I', help='simulate iSCSI port down', nargs=1,
    metavar='iSCSI_port_name', dest='simulate')
group_simulate.add_argument('--simulate', help=
    'simulate module or port down', nargs=1, dest='simulate')
args = parser.parse_args()
print(args)"
"inheriting setter, overwriting getter in python abstract class","p = partialAP(func, self.fset)"
set database connection timeout in python,"cursor.execute(query)
res = cursor.fetchall()
t.cancel()"
can python do di seamlessly without relying on a service locator?,e.foo()
python - extract the body from a mail in plain text,body = ''
traverse a list in reverse order in python,"def reverse_enum(L):
    for index in reversed(range(len(L))):
        yield index, L[index]
L = ['foo', 'bar', 'bas']
for index, item in reverse_enum(L):
    pass"
pandas how to use groupby to group columns by date in the label?,print(pivotdf.head())
python regex: splitting on pattern match that is an empty string,"x = 'bazbarbarfoobar'
print(regex.split('(?<!baz)(?=bar)', x, flags=regex.VERSION1))"
sort dataframe by position in group then by that group,"id_arr2[sf[0]] = -sf[0] + 1
id_arr2[sf[1:]] = sf[:-1] - sf[1:] + 1"
how to get an average pixel value of a gray scale image in python using pil\numpy?,"img = NP.random.rand(100, 100)
img[:5, :5]"
getting an unexpected nameerror in pycassashell when invoking one function from another,"def bbb():
    global aaa
aaa()"
how to merge n python dictionaries without overwriting values?,"for i, j in list(d.items()):
    pass"
how to mask numpy structured array on multiple columns?,A[(A['segment'] == 42) & (A['material'] == 5)]
data binning: irregular polygons to regular mesh,"data = np.zeros(len(llx), 'f2') + np.nan"
how can i slow down a loop in python?,print(i)
navigation with beautifulsoup,"for link in soup.select('div.container a[href]'):
    pass"
pysqlite's integrityerror: distinguish 'not null' from 'unique' violation,print('There is unique violation')
merging a list with a list of lists,"a = [['John', 'Sergeant '], ['Jack', 'Commander '], ['Jill', 'Captain ']]"
how to write and save html file in python?,"myFile.write('</tr>')
myFile.write('</table>')
myFile.write('</body>')
myFile.write('</html>')"
python/spss rename variable names,"import spss, spssaux"
how to speed up numpy array-filling in python?,in_memory_blocks = a.view(np.uint64)
dynamically attaching a method to an existing python object generated with swig?,print(sdi)
"in a dict of dicts, how do you emulate perl's auto-vivification behavior?",hash = {}
python send post with header,headers = {}
how can i use a pseudoterminal in python to emulate a serial port?,"self.err = ''
self.out = ''

def writeLine(self, line):
    line = line.strip('\r\n')
self.serial.write('%s\r\n' % line)

def __del__(self):
    self.stop()

def stop(self):
    self.proc.kill()
self.out, self.err = self.proc.communicate()"
is there a way to detach matplotlib plots so that the computation can continue?,print('Now lets wait for the graph be closed to continue...:')
writing xlwt dates with excel 'date' format,"date_format.num_format_str = 'dd/mm/yyyy'
worksheet.write(0, 0, datetime.datetime.now(), date_format)"
best method of saving data,my_saved_data
pandas: assign an index to each group identified by groupby,df
python dictionary of dictionaries,result[real_name][false_name].append(location)
comparing two date strings in python,"a = dt.strptime('10/12/13', '%m/%d/%y')"
how to display picture and get mouse click coordinate on it,"canvas.create_image(0, 0, image=img, anchor='nw')"
plot networkx graph from adjacency matrix in csv file,plt.show()
row-to-column transposition in python,"lis = [[1, 2, 3], [4, 5, 6]]
zip(*lis)"
can one declare an abstract exception in python?,"class TransactionException(Exception):
    pass"
how do i increment an attribute at runtime using getattr/setattr?,"def increment(self, name):
    """"""Increments a counter specified by the 'name' argument.""""""
self.__dict__[name] += 1"
separation of business logic and data access in django,user_id = self.cleaned_data['user_id']
changing request method using hidden field _method in flask,app.run(debug=True)
algorithm for finding multiset permutation given lexicographic index,"from functools import reduce
return factorial(sum(values)) / reduce(lambda a, v: a * factorial(v), values, 1
    )

def permutation(l, index):
    l = sorted(l)
if not index:
    return l
counter = Counter(l)
total_count = count_permutations(counter)
acc = 0
for i, v in enumerate(l):
    if i > 0 and v == l[i - 1]:
        continue
count = total_count * counter[v] / len(l)
if acc + count > index:
    return [v] + permutation(l[:i] + l[i + 1:], index - acc)
acc += count
raise ValueError('Not enough permutations')"
list comprehension for running total,l[0] += x
display array as raster image in python,"im.blit(0, 0, window.width, window.height)"
importing a python module into a dict (for use as globals in execfile())?,s = 'getcwd'
"selenium: trying to log in with cookies - ""can only set cookies for current domain""",driver.implicitly_wait(1)
faster sockets in python,"chunk = struct.unpack_from(fmt, self.recv_buf, self.recv_buf_i)
self.recv_buf_i += sz"
improving display performance,"def blit_slow(dstv, dsthgt, dstwid, dstybase, dstxbase, srcv, srchgt, srcwid):
    pass"
implementing a popularity algorithm in django,user = models.ForeignKey(User)
how to project and resample a grid to match another grid with gdal python?,dst.SetGeoTransform(match_geotrans)
speed of calculating powers (in python),"if op == byteplay.BINARY_POWER:
    pass"
get bins coordinates with hexbin in matplotlib,"x, y = points.T"
managing multiple settings.py files,pass
how can i speed up reading multiple files and putting the data into a dataframe?,import pandas as pd
looping dictionary values,print('No known ancestors')
inline-like solution for django admin where admin contains foreignkey to other model,"class MySuperModelAdmin(admin.ModelAdmin):

    def get_form(self, request, obj=None, **kwargs):
        if obj:
            pass"
fast n-dimensional sparse array in python / cython,from distutils.core import setup
sort argparse help alphabetically,"class SortingHelpFormatter(HelpFormatter):

    def add_arguments(self, actions):
        actions = sorted(actions, key=attrgetter('option_strings'))"
python reflection - can i use this to get the source code of a method definition,import mymodule
efficiently create 2d histograms from large datasets,import scipy.sparse
how to make an object properly hashable?,"def __init__(self, name, age):
    self.name = name"
converting numpy array to opencv array,"import numpy as np, cv2
vis = np.zeros((384, 836), np.float32)
vis2 = cv2.cvtColor(vis, cv2.COLOR_GRAY2BGR)"
can you plot live data in matplotlib?,"ln, = plt.plot([])"
how to get http status message in (py)curl?,"r = hurl.get('http://example.org')
print(r.status_code)"
removing trailing empty elements in python,"while my_list and my_list[-1] is None:
    pass"
what's a good way to express hierarchical grouping of widgets in python?,"def container(self, name=None):
    self.AddWidget(name=name, type='container', push=True)
yield
self.PopParentWidget()"
how to swap a group of column headings with their values in pandas,"pd.DataFrame([{val: key for key, val in list(d.items())} for d in df.to_dict('r')])"
how to change numbers around in a list in python,"l[i + 1], l[i] = l[i], l[i + 1]"
how to fix the false positives rate of a linear svm?,indices = np.arange(y.shape[0])
add separate colors for two (or more) specific values in color plot and color bar,"fig, ax = plt.subplots()
colors = [(0.0, 0.0, 0.0), (1.0, 1.0, 1.0)]
colors.extend(mpl.cm.jet(np.linspace(0, 1, N - 1)))
cmap = mpl.colors.ListedColormap(colors)
mat = ax.matshow(a, cmap=cmap, vmin=-1, vmax=N - 1)
cax = plt.colorbar(mat, ticks=np.linspace(-0.5, N - 1 - 0.5, N + 1))
cax.set_ticklabels(list(range(-1, N)))
plt.show()"
pythonic way to create a 2d array?,n -= 1
double precision floating values in python?,"Fraction(1, 3 ** 54)"
rendering json objects using a django template after an ajax call,from django.template import loader
get image size without downloading it in python,pass
context in pyparsing parse actions besides globals,self.namespace[tok.key] = tok.value
in python how will you multiply individual elements of a list with a floating point or integer number?,"import numpy as np
P = 2.45"
add separate colors for two (or more) specific values in color plot and color bar,"colors = [(0.0, 0.0, 0.0), (1.0, 1.0, 1.0)]"
valueerror: can only call with other periodindex-ed objects,df1.columns = df1.columns.values.astype(str)
pip install customized include path,sys.path
python and csv: find a row and give column value,any(kidname == row[ct] for row in csv.reader(file))
is it possible to have an optional with/as statement in python?,"if f is not None:
    pass"
creating list of random numbers in python,print('%.5f' % randomList[index])
difficulty setting a legend with statsmodels python package,plt.show()
is it good practice to yield from within a context manager?,"with filecontext() as f:
    pass"
how to create a list of fields in django forms,"super(MyForm, self).__init__(*args, **kwargs)
counter = 1
for q in questions:
    self.fields['question-' + str(counter)] = forms.CharField(label=question)
counter += 1"
python: refactor code to remove global variable,"print('Incorrect!')
if __name__ == '__main__':
    main()"
pandas dataframe shift column by date,"df2 = df.copy()
df2['Date'] += 1
df.merge(df2, on=['Date', 'ID'], suffixes=('', '_lag1'), how='left')"
flask and sqlalchemy how to delete records from manytomany table?,post.tags.remove(sometag)
how to create a numpy record array?,"recarr = np.zeros((4,), dtype='i4,f4,a10')"
django admin - group permissions to edit or view models,"def has_add_permission(self, request):
    return request.user.groups.filter(name='Developers').exists()

def has_change_permission(self, request, obj=None):
    return request.user.groups.filter(name='Developers').exists()

def has_delete_permission(self, request, obj=None):
    pass"
constructing a python set from a numpy matrix,"def __hash__(self):
    return self.__hash"
how to scale axes in mplot3d,"plt.clf()
fig = pylab.figure()
ax = Axes3D(fig)"
how to slice a list of strings with space delimiter?,"new_list = [y for item in [x.split() for x in Original_List] for y in item if
    '.' in y]"
how can i indirectly call a macro in a jinja2 template?,template = env.from_string(template_string)
python unittest - invoke unittest.main() with a custom testsuite,"unittest.main(failfast=True, testRunner=unittest.TextTestRunner)"
removing an item from a priority queue,"a = list(range(10))
a.reverse()
heapq.heapify(a)
print(a)
a.remove(5)
heapq.heapify(a)
print(a)"
parallelize apply after pandas groupby,"print(applyParallel(df.groupby(df.index), tmpFunc))
print('regular version: ')
print(df.groupby(df.index).apply(tmpFunc))
print('ideal version (does not work): ')
print(df.groupby(df.index).applyParallel(tmpFunc))"
"select adjacent couples (or triads, etc ) from a list","def gen_k_slices(seq, k):
    for i in range(len(seq) - k + 1):
        yield seq[i:i + k]"
how to load an rsa key from a pem file and use it in python-crypto,public_key_filename = 'public_key.pem'
django template for loop,register = template.Library()
get selected subcommand with argparse,"foo_parser.add_argument('-c', '--count')"
installing numpy with pip fails on ubuntu,-gfortran
python: changing value in a tuple,"b = 1, 2, 3, 4, 5
b[:2] + (8, 9) + b[3:]
b[:2] + (8,) + b[3:]"
python mixin for __str__and method resolution order,"class B(object, A):
    pass


class C(object, A):
    pass


class D(object, B, C):
    pass


class E(object, A, D):
    pass"
performance of library itertools compared to python code,"b = [0, 1, 2, 3, 4, 0]"
simulate mouse click/detect color under cursor in python,"def grab_main_color(self, rect, max_colors=256):
    pass"
how can i validate that a domain name conforms to rfc 1035 using python?,"if '--' in domain:
    pass"
list comprehensions in python : efficient selection in a list,"return x * x
originalList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
"tuple assignment in python, is this a bug in python?","a = 4
a += 3"
python crashing while calculating sha-1 hashs for large files in windows os,"while True:
    buf = File.read(1048576)"
what is the significance of a function without a 'self' argument insde a class?,"def foo(self):
    pass"
how to send an email through gmail without enabling 'insecure access'?,from email.mime.audio import MIMEAudio
dictionary in python with order i set at start,d['database'] = 'master'
python pandas: lookup table by searching for substring,"def select(x):
    for key, game in zip(keywords, games):
        if key in x:
            return game
df['GameName'] = df['user-agent'].apply(select)"
python: cooperative supercall of __getattr__,"def __getattribute__(self, attr):
    i = self.obj_type.__mro__.find(self.obj_type)
i += 1
while i < len(obj_type.__mro__):
    cur_type = self.obj_type.__mro__[i]
cur_dict = cur_type.__dict___
res = cur_dict.get(attr)
if res is not None:
    return res
i += 1
return object.__getattribute__(self, attr)"
get traceback of warnings,"import traceback
import warnings"
"read large text files in python, line by line without loading it in to memory",do_something_with(line)
does python have matlab's `ans` variable that captures returned value not stored in any variable?,"_

def f(x):
    return x + 1"
fast queue of read only numpy arrays,yield x.sum()
"blueprints, pymongo in flask",app.register_blueprint(child2.child2)
forward a port via upnp in python,"main.quit()
igd.connect('mapped-external-port', mep)
igd.connect('error-mapping-port', emp)"
python: how to peek into a pty object to avoid blocking?,"if p1 and p1.is_alive():
    p1.join()"
issue feeding a list into feed_dict in tensorflow,"x = tf.placeholder(tf.types.float32, shape=(n, batch_size, input_size))"
how can i interleave or create unique permutations of two stings (without recursion),[''.join(r) for r in permutations(all_values)]
how do i check the content of a django cache with python memcached?,"import pylibmc
from memcached_stats import MemcachedStats
mem = MemcachedStats()"
compile pypy to exe,"sys.exit(1)
opts = {'py2exe': {'compressed': 1, 'optimize': 2, 'bundle_files': 1}}
setup(console=[entry_point], options=opts, zipfile=None)"
"python: efficient workaround for multiprocessing a function that is a data member of a class, from within that class",func = cls.__dict__[func_name]
"python optparse, default values, and explicit options",parser.values.x_set_explicitly = True
how can i run a makefile in setup.py?,DistutilsInstall.run(self)
how to generate random 'greenish' colors,"for i in range(50):
    h = randint(90, 140)"
how to access scrapy settings from item pipeline,my_setting = settings.get('MY_SETTING')
how to send asynchronous email using django  ,msg.content_subtype = 'html'
getting tick labels in matplotlib,print(label.get_text())
is it possible to generate and return a zip file with app engine?,"zipstream.seek(0)
self.response.headers['Content-Type'] = 'application/zip'"
django : case insensitive matching of username from auth user?,"self.assertEqual(user.username, testuser)"
"in python, how do i check the size of a stringio object?","s.write('abc')
s.seek(0, os.SEEK_END)
print(s.tell())"
"merging two pandas dataframes results in ""duplicate"" columns","df.drop(to_drop, axis=1, inplace=True)"
how to detect flash drive plug-in in windows using python?,"print(""Sorry, I couldn't find any newly mounted drives."")"
split models.py into several files,views.py
reading multiple csv files into python pandas dataframe,"frame = pd.read_csv(path, names=columns)
frame['year'] = year
names = pd.concat(names, frame, ignore_index=True)"
is there a javascript equivalent to unpack sequences like in python?,"[a, b] = [1, 2]"
how can i write asyncio coroutines that optionally act as regular functions?,"def async_gettter():
    pass"
plotting power spectrum in python,time_step = 1 / 30
how would i access variables from one class to another?,"def __init__(self):
    self.var1 = 1"
"python regular expression, matching the last word","mystr = 'HelloWorldToYou'
pat = re.compile('[A-Z][a-z]*')"
measure website load time with python requests,"start = time.time()
page = nf.read()
end = time.time()
nf.close()"
deleting already printed in python,"import os
if os.name == 'posix':
    os.system('clear')
elif os.name in ('nt', 'dos', 'ce'):
    os.system('CLS')
else:
    print('\n' * numlines)"
distributing a shared library and some c code with a cython extension module,warnings.warn(e.message)
how to send asynchronous email using django  ,"class EmailThread(threading.Thread):

    def __init__(self, subject, html_content, recipient_list):
        self.subject = subject"
convert value to row index in numpy array,"A = np.array([[4, 4, 19, 19, 20, 21, 25, 26, 26, 27, 27, 29], [1, 2, 1, 2, 
    1, 2, 1, 1, 2, 1, 2, 2], [1, 1, 3, 3, 1, 2, 1, 1, 1, 2, 2, 2]])
values, inverse = np.unique(A[0], return_inverse=True)
B = np.zeros((3, len(values)))
B[0] = values
B[1, inverse[A[1] == 1]] = A[2, A[1] == 1]
B[2, inverse[A[1] == 2]] = A[2, A[1] == 2]"
number of floats between two floats,"a = struct.pack('dd', 1.0, 1.000001)
b = struct.unpack('ll', a)
b[1] - b[0]
a = struct.pack('dd', 1.0, 1.000000001)"
how to zip a very large file in python,zinfo.external_attr = 384 << 16
send html e-mail in app engine / python?,message.send()
how do i use tls with asyncore?,asyncore.dispatcher.__init__(self)
how to convert a file to utf-8 in python?,contents = sourceFile.read(BLOCKSIZE)
get screenshot on windows with python?,"mem.Blit(0, 0, size[0], size[1], screen, 0, 0)
del mem
bmp.SaveFile('screenshot.png', wx.BITMAP_TYPE_PNG)"
is a constant list used in a loop constructed/deleted with each pass?,dis.dis(foo)
python dictionary creation syntax,"d2 = {value: key for key in d1 for value in d1[key]}
d2"
how to return the count of related entities in sqlalchemy query,"for forum, childforums in groupby(q, key=attrgetter('Node')):
    for _, child, post_count in childforums:
        pass"
change specific value in csv file via python,"df.loc[df['Ip'] == '127.0.0.2', 'Sites'] = 30"
how to use django-scheduler app in existing app,"def save(self, force_insert=False, force_update=False):
    new_task = False
if not self.id:
    pass"
parsing variable data out of a javascript tag using python,"jsonValue = '{%s}' % (textValue.split('{', 1)[1].rsplit('}', 1)[0],)"
infinite generator in python for days of week,"def day_generator():
    pass"
capturing emoticons using regular expression in python,"'',"
how to run an applescript from within a python script?,"script = """"""tell application ""System Events""
    activate
    display dialog ""Hello Cocoa!"" with title ""Sample Cocoa Dialog"" default button 2
end tell
""""""
proc = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE, stdout=
    subprocess.PIPE)"
trying to convert column headings which are in datetime.datetime format 2016-09-01 00:00:00 to datetime.datetime format to '2016-09-01',"df
df.columns = df.columns.normalize()
df"
how do you attach a popup menu to a column header button in gtk2 using pygobject?,liststore.append(['2'])
how can i filter emoji characters from my input so i can save in mysql <5.5?,emoji_transport_maps = re.compile('[\U0001f680-\U0001f6ff]')
"python - when one integer variable is changed, make the second variable the same","x[0] = 10
y"
how to read in iraf multispec spectra?,"spectra_list = read_fits.read_fits_spectrum1d('mymultispec.fits')
print(spectra_list[0])"
shortest way of creating an object with arbitrary attributes in python?,"class Struct(object):
    pass"
how do you remove duplicates from a list in whilst preserving order?,"def f7(seq):
    seen = set()
seen_add = seen.add
return [x for x in seq if not (x in seen or seen_add(x))]"
matplotlib: multiple plots on one figure,"plt.ylabel('Frequency (count)', fontsize=15)"
how to fill  specific positional arguments with partial in python?,return lambda *a: func(*(a + args))
how to print a dictionary line by line in python?,"print('{} : {}'.format(attribute, value))"
how to separate string and number in python list?,"broken = map(lambda s: re.findall('\\d+|\\D+', s), lst)"
data corruption piping between c++ and python,hangflg = 0
matching nested structures with regular expressions in python,print(p.parse('( (a ( ( c ) b ) ) ( d ) e )'))
how can i stop a while loop?,"def determine_period(universe_array):
    period = 0
tmp = universe_array
while True:
    tmp = apply_rules(tmp)
period += 1
if numpy.array_equal(tmp, universe_array) is True:
    break
if period > 12:
    period = 0
break
return period"
how to write utf8 to standard output in a way that works with python2 and python3,print('bar' + '\u2192')
contact tracing in python - working with timeseries,"infected_users = shelve.open('infected_users.dat')
for iteration in range(1, N):
    new_infected_users = dict()
for an_infected_timestamp in list(infected_users.keys()):
    current_infected_users = infected_users[an_infected_timestamp]
for a_clean_timestamp in list(clean_users.keys()):
    if time_stamp_in_delta(an_infected_timestamp, a_clean_timestamp):
        current_clean_users = clean_users[a_clean_timestamp]
infected_users.close()
clean_users.close()"
python: windows equivalent of sigalrm,"class Ticker(threading.Thread):
    """"""A very simple thread that merely blocks for :attr:`interval` and sets a
  :class:`threading.Event` when the :attr:`interval` has elapsed. It then waits
  for the caller to unset this event before looping again.
  Example use::
    t = Ticker(1.0) 
    t.start() 
    try:
      while t.evt.wait(): 
        t.evt.clear() 
        print time.time(), ""FIRING!""
    except:
      t.stop() 
      t.join() 
  """"""

def __init__(self, interval):
    super(Ticker, self).__init__()
self.interval = interval
self.evt = threading.Event()
self.evt.clear()
self.should_run = threading.Event()
self.should_run.set()

def stop(self):
    """"""Stop the this thread. You probably want to call :meth:`join` immediately
    afterwards
    """"""
self.should_run.clear()

def consume(self):
    was_set = self.evt.is_set()
if was_set:
    self.evt.clear()
return was_set

def run(self):
    """"""The internal main method of this thread. Block for :attr:`interval`
    seconds before setting :attr:`Ticker.evt`
    .. warning::
      Do not call this directly!  Instead call :meth:`start`.
    """"""
while self.should_run.is_set():
    time.sleep(self.interval)
self.evt.set()"
how to implement efficient filtering logic in python?,"if whereclauses:
    query = '{} WHERE {}'.format(query, ' AND '.join(whereclauses))"
sorting lines of file python,"for line in fo:
    if line.strip():
        pass"
does python has a similar library like quantmod in r that can download financial statement data?,"goog = DataReader('GOOG', 'yahoo', datetime(2000, 1, 1), datetime(2012, 1, 1))"
pythonic way to handle a method on network data structure,"def remove_edge(self, edge):
    pass"
matplotlib colorbar formatting,"rv = mpl.ticker.ScalarFormatter.__call__(self, x, pos)"
django serialize queryset.values() into json,"data = serializers.serialize('json', list(objectQuerySet), fields=(
    'fileName', 'id'))"
regular expression that reference a match from earlier part of expression,"print(s[start:end + int(s[start + 1:end])])
re.sub('[-+]\\d+', dump, s)"
converting flat python dictionary to list of dictionaries,"out = collections.defaultdict(list)
for k, v in list(d.items()):
    pass"
extended tuple unpacking in python 2,"def wrapper(thelist):
    for item in thelist:
        yield item[0], item[1], item[2], item[3:]"
getting a boundary of an item from another list,"for n in newlist:
    for i, t in enumerate(tlist):
        if t > n:
            upper, lower = t, tlist[i - 1]
break
print(lower, n, upper)"
python pandas write to sql with nan values,"insert_query = 'INSERT INTO %s (%s) VALUES (%s)' % (table, col_names, wildcards
    )
data = [[(None if type(y) == float and np.isnan(y) else y) for y in x] for
    x in frame.values]
cur.executemany(insert_query, data)"
django queryset filter after a concatenation of two columns,"Item.objects.create(series='B', number='1234')"
converting dict to ordereddict,ship = collections.OrderedDict(ship)
add a number to all odd or even indexed elements in numpy array without loops,"A[::2] += 0.1
A"
how do i memoize expensive calculations on django model objects?,self._expensive_operation = self.expensive_operation()
app engine (python) skips webapp middleware (like appstats) in production but works fine on dev server,appstats_MAX_LOCALS = 10
cherrypy interferes with twisted shutting down on windows,"if hasattr(engine, 'signal_handler'):
    engine.signal_handler.subscribe()"
data analysis for inconsistent string formatting,votemil = x[2]
python create access database using win32com,"print('""' + f + '"" created.')"
setting the position on a button in python?,"MyButton1 = Button(master, text='BUTTON1', width=10, command=callback)"
removing a list of characters in string,"re.sub(rx, '', subj)"
reportlab: how to add a footer to a pdf file,"elements.append(Paragraph('Hello', styles['Normal']))"
how can i find the authoritative dns server for a domain using dnspython?,"if len(response.authority) > 0:
    rrset = response.authority[0]"
fastest way to find the smallest positive real root of quartic polynomial 4 degree in python,"""""""CN all coeffs real."""""""
is it possible to trick pip install --find-links into using a downloaded sdist for --editable requirements?,"def find_version(sdists_dir, name):
    files = [f for f in os.listdir(sdists_dir) if f.startswith(name)]"
using colormap with bokeh scatter,output_notebook()
reshaping dataframes in pandas based on column labels,"df = pandas.DataFrame({'s1_x': scipy.randn(10), 's1_y': scipy.randn(10),
    's2_x': scipy.randn(10), 's2_y': scipy.randn(10)})
df.columns = pandas.MultiIndex.from_tuples([tuple(c.split('_')) for c in df
    .columns])"
finding a key recursively in a dictionary,"for k, v in list(obj.items()):
    if isinstance(v, dict):
        item = _finditem(v, key)
if item is not None:
    return item"
converting pil gdkpixbuf,"if img.mode != 'RGB':
    pass"
python implementations of packing algorithm,"def __init__(self):
    pass"
"sqlalchemy, get object not bound to a session","for item in lst:
    pass"
hashing arrays in python,"hash((1, 2, 3))
hash([1, 2, 3])
hash(frozenset((1, 2, 3)))"
how do you manage a temporary directory such that it is guaranteed to be deleted on program close?,"shutil.rmtree(self.__str__(), onerror=delete_dir_handler)"
connecting to a protected wifi from python on linux,print('Disconnecting ...')
extracting one-hot vector from text,"sent = np.zeros((len(vocab), len(text_idx)))"
taking control of a for loop (python),print('line')
determining the byte size of a scipy.sparse matrix?,"from scipy.sparse import csr_matrix
a = csr_matrix(np.arange(12).reshape((4, 3)))"
how to detect mouse and keyboard inactivity in linux,"fh = file('/dev/input/mice')
while True:
    fh.read(3)
print('Mouse moved!')"
writing a list to a csv file,"latlon = allitems.replace('0 ', '')"
match data of 2 excel sheets where column names are different,"{'MemberIdentifier': 'EmployeeID', 'DateofBirth': 'DOB', 'YOW': 'Age'}"
how to pass an argument to event handler in tkinter?,"btn.bind('<Button-1>', obj.callback)"
how can i do multiple substitutions using regex in python?,"regex = re.compile('(%s)' % '|'.join(map(re.escape, list(dict.keys()))))"
how to delete a record using gql?,"persons = Person.all()
d = []
for p in persons:
    d.append(p)
db.delete(d)"
parse date string and change format,"time.strftime('%d/%m/%Y', conv)"
assigning a variable nan in python without numpy,Fraction(float('nan'))
how to profile a django custom management command exclusively,from django.core.management.base import BaseCommand
interact with other programs using python,return ''.join(result)
reduce a key-value pair into a key-list pair with apache spark,"data = [(1, 'a'), (1, 'b'), (2, 'c'), (2, 'd'), (2, 'e'), (3, 'f')]"
how to get user's local timezone other than server timezone(utc) in python?,"print(now_pacific.strftime(fmt))
now_berlin = now_pacific.astimezone(timezone('Europe/Berlin'))"
fast performance array processing in numpy/python,"measurement_range_array = np.array(measurement_range)
flat_grid_idx = pow(measurement_range_array - d, 2).sum(1).argmin()"
python key value list to panda series,"import itertools as IT
dates, vals = IT.izip(*data)
s = pd.Series(vals, index=dates)"
filtering pandas or numpy arrays for continuous series with minimum window length,"x = pd.rolling_min(arr, window)"
gitpython get commit for a file,"items = list(repo.tree().items())
items.sort()
for i in items:
    c = repo.commits(path=i[0], max_count=1)"
python 2.7 counting number of dictionary items with given value,Counter(list(d.values()))
how do i compare rpm versions in python,import rpm
scatter plot in matplotlib,y.append(ind_2)
mako template variable names,"lexer = lexer.Lexer('${foo}', '')
node = lexer.parse()
compiler = lambda : None
compiler.reserved_names = set()"
python list filtering: remove subsets from list of lists,l2.remove(m)
how to change number of parallel processes?,"if __name__ == '__main__':
    pass"
how to render array of data into multiple mustache partials?,"def prepare_teasers(self):
    return [Teaser(Context(result)) for result in self.post.results]"
"matplotlib: how to colorize a large number of line segments as independent gradients, efficiently",plt.show()
how do i compare dates from twitter data stored in mongodb via pymongo?,"import datetime, pymongo
created_at = 'Mon Jun 8 10:51:32 +0000 2009'
dt = datetime.strptime(created_at, '%a %b %d %H:%M:%S +0000 %Y')"
how to configure logging in python,self.logger.info('Hello')
open more than 1 file using with - python,"with open(outfile, 'w') as fout:
    fout.write(fin.read())"
parse boolean arithmetic including parentheses with regex?,"import re
matches = re.findall('\\(.*?\\)|\\w+', x)"
"tensorflow: ""attempting to use uninitialized value"" in variable initialization","init = tf.global_variables_initializer()
sess.run(init)"
cython: working with c++ streams,"try:
    outputter.write(s, len(s))
finally:
    del outputter"
shade 'cells' in polar plot with matplotlib,plt.show()
sort a complex python dictionary by just one of its values,"d = {(1): 2, (3): 4}
list(d.items())"
how to generate all permutations of a list in python,"print(list(itertools.product([1, 2], repeat=3)))"
print the code which defined a lambda function,"def def_func(x):
    return x == 2"
gzip a file in python,"f.write(content)
f.close()"
how do i compute the logarithm of 1 minus the exponent of a given small number in python,"getcontext().prec = 200
(1 - 1 / Decimal(7000000)).ln()"
global variables confusion in python,"def main(self, argv):
    pass"
how do i get the url of the response page after i've submitted a form in mechanize?,"br.form['previewOrderButton']
br.submit()"
python: how to run unittest.main() for all source files in a subdirectory?,__init__.py
how to union two subqueries in sqlalchemy and postgresql,q = s1.union(s2).alias('alias_name')
vectorize forward euler method for system of differential equations,"y = np.zeros([num_steps + 1, 2])
a = 1.0
x[0, 0] = initial_x[0]
y[0, 0] = initial_y[0]
x[0, 1] = initial_x[1]
y[0, 1] = initial_y[1]
for step in range(int(num_steps)):
    x[step + 1] = x[step] + h * y[step]
y[step + 1] = y[step] + h * (-x[step] - a * y[step] * (x[step] ** 2 + y[
    step] ** 2 - 1))
return x, y"
asynchronous context manager,return self.client
how to assign a plot to a variable and use the variable as the return value in a python function,"a = fig_barh(['a', 'b', 'c'], [1, 2, 3], 'Test #1')"
replace the nan value zero after an operation with arrays,"a = numpy.array([1, 2, 3, 'NaN', 4])
s = numpy.isnan(a)
a[s] = 0.0"
consistent way to redirect both stdin & stdout to files in python using optparse,"if args.output and args.output != '-':
    sys.stdout = open(args.output, 'w')"
matplotlib (mplot3d) - how to increase the size of an axis (stretch) in a 3d plot?,"""""""
You need to include all the code above.
From here on you should be able to plot as usual.
""""""
mpl.rcParams['legend.fontsize'] = 10
fig = plt.figure(figsize=(5, 5))
ax = fig.gca(projection='3d')
theta = np.linspace(-4 * np.pi, 4 * np.pi, 100)
z = np.linspace(-2, 2, 100)
r = z ** 2 + 1
x = r * np.sin(theta)
y = r * np.cos(theta)
ax.plot(x, y, z, label='parametric curve')
ax.legend()
plt.show()"
how to write a tuple of tuples to a csv file using python,"writer = csv.writer(result, dialect='excel')"
pythonic way to do something n times without an index variable?,"for _ in range(power):
    product *= num"
python and csv: find a row and give column value,"if row[ct] == kidname:
    break"
convert categorical data in pandas dataframe,"df['col3'] = df['col3'].astype('category')
df.dtypes"
how to use the user_passes_test decorator in class based views?,"def get_login_url(self):
    pass"
how to make python speak,from espeak import espeak
raspberry pi using python to mkdir,"os.mkdir('\xe6\x96\x87\xe4\xbb\xb6\xe5\xa4\xb9')
os.mkdir('\u6587\u4ef6\u5939')"
creating pandas data frame from multiple files,"import os
import pandas as pd"
python tarfile without full path,"def cd_change(tmp_location):
    cd = os.getcwd()"
always allow geolocation in firefox using selenium,"""""""navigator.geolocation.getCurrentPosition = function(success) { success({coords: {latitude: 50.455755, longitude: 30.511565}}); }"""""""
make django admin to display no more than 100 characters in list results,"class FooAdmin(admin.ModelAdmin):
    pass"
what are the correct usage/parameter values for houghcircles in opencv for iris detection?,import numpy as np
scipy/numpy/scikits - calculating precision/recall scores based on two arrays,"predictions = clf.predict(digits.data[n_split:])
expected = digits.target[n_split:]"
generating pairs from python list,"list(itertools.combinations(keys, 2))"
pygobject gtk+ 3 - documentation?,window = Gtk.Window(Gtk.WindowType.TOPLEVEL)
converting yaml file to python dict,"if key in dict == 'instanceId':
    pass"
python: add list to set?,"l = ['f', 'g']
a |= set(l)"
how to implement an efficient infinite generator of prime numbers in python?,"def postponed_sieve():
    pass"
python logging over multiple files,"if not os.path.exists(logdir):
    os.mkdir(logdir)
log = logging.getLogger('stumbler')
log.setLevel(loglevel)
log_formatter = logging.Formatter('%(asctime)s - %(levelname)s :: %(message)s')
if txtlog:
    txt_handler = RotatingFileHandler(os.path.join(logdir, 'Stumbler.log'),
        backupCount=5)
txt_handler.doRollover()
txt_handler.setFormatter(log_formatter)
log.addHandler(txt_handler)
log.info('Logger initialised.')
if scrnlog:
    console_handler = logging.StreamHandler()
console_handler.setFormatter(log_formatter)
log.addHandler(console_handler)
setup_logging('/tmp/logs')
corelog = logging.getLogger('stumbler.core')
corelog.debug('Messages and rainbows...')"
converting list of dictionaries to unique list of dictionaries,"if dict['ROOT'] not in final_data['ROOT']:
    pass"
peak detection in a noisy 2d array,"y = np.arange(j - size, j + size)"
what is the most efficient way to remove a group of indices from a list of numbers in python 2.7?,"print(b - a, len(numbers))"
fast lookup in list of intervals,t1 = time.process_time()
dynamically assigning function implementation in python,"def __init__(self):
    self.name = 'Bob'"
how can i connect to owncloud with python using easywebdav?,"webdav = easywebdav.connect('test.org/owncloud/remote.php/webdav/',
    username='user', password='pass', protocol='https', port=443,
    verify_ssl=False)
print(webdav.ls('/'))"
python here document without newlines at top and bottom,print('\ndog\ncat\n'.strip())
python mechanize - retrieve a file from aspnetform submitcontrol that triggers a file download,fileobj.write(response.read())
generate alphanumeric strings sequentially,chars = digits + ascii_uppercase + ascii_lowercase
"on mac, how to create a drag & drop app for a python script where the script name rather than python shows in the menubar (etc.)?","apppath = os.path.abspath(os.path.join('.', project + '.app'))"
how to make a surface with a transparent background in pygame,image = image.convert_alpha()
dot product of two vectors in tensorflow,"x = tf.Variable([1, -2, 3], tf.float32, name='x')
y = tf.Variable([-1, 2, -3], tf.float32, name='y')"
is there a significant overhead by using different versions of sha hashing (hashlib module),return hashlib.sha1(s).hexdigest()
labels for clustermap in seaborn?,"import seaborn as sns
g = sns.clustermap(heatmap_df, metric='correlation')
plt.setp(g.ax_heatmap.get_yticklabels(), rotation=0)
plt.setp(g.ax_heatmap.get_xticklabels(), rotation=90)"
how to place minor ticks on symlog scale?,"plt.plot(x, y)
plt.yscale('symlog', linthreshy=0.1)"
how can i efficiently transfer data from a numpy array to a qpolygonf when using pyside?,qPlg.append(QPointF(*p))
how to get data from 'immutablemultidict' in flask,"def some_function():
    name = request.form['name']
age = request.form['age']
return 'You got it right'"
keep persistent variables in memory between runs of python script,sys.stdin.readline()
flask static_folder hosted on s3,return dict(static_url=static_url)
what's the correct way to use a unix domain socket in requests framework?,r = session.get('http+unix://%2Ftmp%2Fprofilesvc.sock/path/to/page')
stop pygtk gui from locking up during long-running process,window = gtk.Window()
"how to split but ignore separators in quoted strings, in python?",marker = ';!$%^&;'
how do i disable history in python mechanize module?,"class NoHistory(object):

    def add(self, *a, **k):
        pass

def clear(self):
    pass"
python get focused entry name,"emonth1.insert(10, 1)
emonth1.grid(row=1, column=2)"
delete the first element in subview of a matrix,"a = np.array([[0, 1], [0, 2], [0, 3], [0, 4], [1, 5], [1, 6], [1, 7], [2, 8
    ], [2, 9]])
_, i = np.unique(a[:, (0)], return_index=True)
b = np.delete(a, i, axis=0)"
dynamically update attributes of an object that depend on the state of other attributes of same object,"def c(self, value):
    self.__c = value"
create new list of repeated elements within a given list,"if result > 1:
    repeats.append(element)"
using websocket in pyramid using python3,app = web.Application(loop=loop)
"python: equivalent to matlab's svds(a, k) for large arrays?","if __name__ == '__main__':
    data = np.random.rand(5, 20)"
python: create a function to modify a list by reference not value,"new_foo = []
for item in foo:
    pass"
crawling ssl site with scrapy,return ctx
imploding a list for use in a python mysqldb in clause,"if isinstance(value, (list, tuple)):
    placeholders.append(', '.join(['%s'] * len(value)))"
more efficient way to look up dictionary values whose keys start with same prefix,start = d.bisect_left(key)
what does get_fscore of a ml model in xgboost do?,"if fid not in fmap:
    fmap[fid] = 1
else:
    fmap[fid] += 1
return fmap"
python mock method call arguments display the last state of a list,"from mock import MagicMock


class CopyArgsMagicMock(MagicMock):
    """"""
    Overrides MagicMock so that we store copies of arguments passed into calls to the
    mock object, instead of storing references to the original argument objects.
    """"""

def _mock_call(_mock_self, *args, **kwargs):
    args_copy = copy.deepcopy(args)
kwargs_copy = copy.deepcopy(kwargs)"
get file from post request using python's basehttpserver,file_content = self.rfile.read(content_length)
performing grouped average and standard deviation with numpy arrays,"x_unique = np.unique(x)
y_means = np.array([np.mean(y[x == u]) for u in x_unique])"
solve a multitude of linear least square system efficiently,"7.0, 7.0, 8.0, 8.0, 9.0, 9.0, 10.0, 10.0, 11.0, 11.0, 12.0, 12.0, 13.0"
python : operator overloading a specific type,"def __add__(self, other):
    if isinstance(other, self.__class__):
        return self.x + other.x"
python beginner confused by a complex line of code,"for p in perm(l[1:]):
    for i in range(sz):
        result.append(p[:i] + [l[0]] + p[i:])
return result"
how to get an app name using python in django,"from django.core import urlresolvers
from django.contrib.contenttypes.models import ContentType
content_type = ContentType.objects.get_for_model(self.__class__)
url = urlresolvers.reverse('admin:%s_%s_change' % (content_type.app_label,
    content_type.model), args=(self.id,))"
parsing dictionary-like url parameters in python,results = {}
"'too many values to unpack', iterating over a dict. key=>string, value=>list","for field in fields:
    pass"
python: how to switch between workspaces using xlib?,"sendEvent(root, display.intern_atom('_NET_CURRENT_DESKTOP'), [1, X.CurrentTime]
    )"
django: auto-generating a list of files in a directory,path = 'C:\\somedirectory'
"using flask blueprints, how to fix url_for from breaking if a subdomain is specified?","@frontend.route('/', subdomain='<var>')
def index_var(var):
    pass"
django queryset filter after a concatenation of two columns,from django.db.models.functions import Concat
pyplot: loglog() with base e,"ax.loglog(x, y, basex=np.e, basey=np.e)"
how can i send a message to a group conversation with skype4py in python,"if len(elem.Members) > 2:
    elem.SendMessage('SomeMessageHere')"
"how to generate a distribution with a given mean, variance, skew and kurtosis in python?","import scipy.stats
import matplotlib.pyplot as plt"
numpy object arrays,"a = numpy.empty((1, 10), dtype=object)
a[0] = X()"
how do i concatenate many objects into one object using inheritence in python? (during runtime),"bigclass = type('bigclass', (hello, bye), {})"
grouping dates in django,"truncate_date = connection.ops.date_trunc_sql('day', 'timestamp')
qs = qs.extra({'date': truncate_date})
return qs.values('date').annotate(Sum('amount')).order_by('date')"
reordering matrix elements to reflect column and row clustering in naiive python,"for j in range(40):
    D[i, j] = abs(x[i] - x[j])"
pdb how to break on exit?,"old_sys_exit = sys.exit

def new_sys_exit(value):
    print('in sys exit %s' % value)
old_sys_exit(value)
sys.exit = new_sys_exit"
how to print the percentage of zipping a file python,"for fname in files:
    path = os.path.join(root, fname)"
what's a faster way to look up a value in a list of tuples?,return int(''.join(octets[0:2]))
confidence interval with leastsq fit in scipy python,"mean_params = mean(ps, 0)"
how to calculate factoranalysis scores using python (scikit-learn)?,"data = np.genfromtxt('rangir_test.csv', delimiter=',')"
how to urlencode a querystring in python?,"ary_ordered_names.append('charlie')
ary_ordered_names.append('delta')"
getting corresponding module from function,module = __import__(modulename)
what would be the python code to add time to a specific timestamp?,"datetime.strptime('21/11/06 16:30', '%d/%m/%y %H:%M')"
how to check whether mfa is enabled for root account in aws using boto?,"if summary['AccountMFAEnabled']:
    pass"
how to use python multiprocessing pool.map to fill numpy array in a for loop,pool = Pool(processes=4)
implementing use of 'with object() as f' in custom class in python,"class Meter:

    def __init__(self, dev):
        self.dev = dev

def __enter__(self):
    self.fd = open(self.dev, MODE)
return self.fd

def __exit__(self, type, value, traceback):
    close(self.fd)
meter = Meter('dev/tty0')
with meter as m:
    m.read()"
string comparison technique used by python,"ord('a'), ord('b')"
unable to import a module from python notebook in jupyter,"import sys
sys.path"
"how to find collocations in text, python",words_iter = iter(words)
how to make a chain of function decorators?,print(whisper())
how can i get pyyaml to correctly display structure in output?,"test2 = [{'A': ['a', 'b']}, {'B': 'b'}]
yaml.dump(test2)
print(yaml.dump(test2))"
python sql select statement from a list variable?,"""""""abc""""""
'abc',"
fill 2d numpy array from three 1d numpy arrays,vals_array.fill(np.nan)
drawing lines between pairs in python,"edges = [(3, 6), (7, 2), (8, 5), (9, 5), (5, 13), (10, 6), (6, 1), (1, 13),
    (11, 2), (2, 13), (12, 4), (4, 13)]
G.add_edges_from(edges)"
python: how to increment a ctypes pointer instance,"void_p = ctypes.cast(p, ctypes.c_voidp).value + 1
p = ctypes.cast(void_p, ctypes.POINTER(ctypes.c_char))"
index all *except* one item in python,mask = [1] * len(arr)
prevent touching db during unit testing with sqlalchemy,"event.remove(engine, 'before_cursor_execute', self._before_cursor_execute)

def _before_cusor_execute(self, conn, cursor, statement, parameters,
    context, executemany):
    raise RuntimeError('No touching the database!')"
python json dumps,json.dumps(json.load(str_w_quotes))
rsync over ssh - using channel created by paramiko in python,"client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
client.connect(domain, username='root', timeout=5)
stdin, mpstat, stderr = client.exec_command('mpstat')"
python - removing vertical bar lines from histogram,"ax.hist(x, bins=50, histtype='step', fill=None)"
how to print a numpy array without brackets,"M
array_str(M)
array_repr(M)"
numpy: find column index for element on each row,"[True, False, False],"
rsync over ssh - using channel created by paramiko in python,"client.connect(domain, username='root', timeout=5)
stdin, mpstat, stderr = client.exec_command('mpstat')"
what python framework for a rest/json web service with no front end?,"import cherrypy


class HelloWorld(object):

    def index(self):
        return 'Hello World!'
index.exposed = True"
how to split a dos path into its components in python,path = os.path.normpath(path)
pandas apply function to multiple columns and multiple rows,x2 = df['xpos'].ix[count - 1]
python (pandas): store a data frame in hdf5 with a multi index,types = data.apply(lambda x: pd.lib.infer_dtype(x.values))
"python, fix broken npy file. valueerror: total size of new array must be unchanged","import numpy as np
a = 10 ** np.array(np.linspace(-10, 10, 51), dtype=np.float64)"
length of a finite generator,"timeit(d(
    """"""
    count = -1
    for _ in s:
        count += 1
    count += 1
    """"""
    ), 's = range(1000)')
timeit(d(
    """"""
    count = -1
    for count, _ in enumerate(s):
        pass
    count += 1
    """"""
    ), 's = range(1000)')
timeit(d(
    """"""
    count, _ = reduce(f, enumerate(range(1000)), (-1, -1))
    count += 1
    """"""
    ), d(
    """"""
    from functools import reduce
    def f(_, count):
        return count
    s = range(1000)
    """"""
    ))
timeit('count = sum(1 for _ in s)', 's = range(1000)')
timeit('count = len(tuple(s))', 's = range(1000)')
timeit('count = len(list(s))', 's = range(1000)')
timeit('count = len(list(1 for _ in s))', 's = range(1000)')"
how do i validate the mx record for a domain in python?,"for mx in mx_hosts:
    pass"
invoking yield for a generator in another function,"class gen2(object):
    pass"
gtk treeview: place image buttons on rows,gtk.CellRendererPixbuf.__init__(self)
sieve of atkin implementation in python,n = 3 * x ** 2 - y ** 2
round to 5 (or other number) in python,"def myround(x, base=5):
    return int(base * round(float(x) / base))"
is it good practice to yield from within a context manager?,"def inner():
    pass"
get coordinates of local maxima in 2d array above certain value,import numpy as np
is there a programmatic way to transform a sequence of image files into a pdf?,"from reportlab.lib.pagesizes import letter
from glob import glob"
populating a pdf file - python,"template = Template(filename='template.pdf')
output = Template.render(first_name='Simon', postcode='12345')"
how to clone a python generator object?,"walk, walk2 = itertools.tee(walk)"
how to use ansible 2.0 python api to run a playbook?,"'private_key_file', 'ssh_common_args', 'ssh_extra_args'
'sftp_extra_args', 'scp_extra_args', 'become', 'become_method'"
how do i download pdf file over https with python,"response = requests.get('https://websitewithfile.com/file.pdf', verify=
    False, auth=('user', 'pass'))"
how to read a raw image using pil?,"i = Image.open('image.png')
imgSize = i.size
rawData = i.tostring()
img = Image.fromstring('L', imgSize, rawData)
img.save('lmode.png')
img = Image.fromstring('RGB', imgSize, rawData)
img.save('rgbmode.png')
img = Image.fromstring('RGBX', imgSize, rawData)
img.save('rgbxmode.jfif')
img = Image.fromstring('RGBA', imgSize, rawData)
img.save('rgbamode.png')
img = Image.fromstring('CMYK', imgSize, rawData)
img.save('rgbamode.tiff')"
looking for example using mediafileupload,"body = {'name': file_name, 'mimeType': 'application/vnd.google-apps.document'}"
how can i return system information in python?,"import sys
if sys.platform == 'win32':
    import win32_sysinfo as sysinfo"
dynamic table creation and orm mapping in sqlalchemy,"mapper(tableClass, table)"
selecting elements from list according to their labels in the other list,d = defaultdict(list)
detect all global variables within a python function?,next(op)
valueerror: invalid literal for int() with base 10: '',"h = open(fname)
for line in h:
    if line.strip():
        [int(next(h).strip()) for _ in range(4)]"
how to create simple 3-layer neural network and teach it using supervised learning?,"ds = SupervisedDataSet(2, 1)"
delete column in pandas based on condition,"df = pd.DataFrame([[1, 0, 0, 0], [0, 0, 1, 0]])"
show training and validation accuracy in tensorflow using same graph,"tf.scalar_summary('SomethingElse', foo)
summary_op = tf.merge_all_summaries()
summaries_dir = '/me/mydir/'"
need to improve accuracy in fsolve to find multiples roots,"pfit = np.polyfit(x_range, y_range, 10)
f_poly = np.poly1d(pfit)"
how to have a custom user model for my app while keeping the admins working as default in django?,"phone = models.CharField(max_length=250, blank=True, null=True)"
how to delete json object using python?,"o = json.loads(
    """"""[
    {
        ""ename"": ""mark"",
        ""url"": ""Lennon.com""
    },
    {
        ""ename"": ""egg"",
        ""url"": ""Lennon.com""
    }
]""""""
    )
o = [x for x in o if x['ename'] != 'mark']
output_string = json.dumps(o)"
disable pyyaml value conversion,"x = [[1, 2, 3], {(1): 2}]
s = yaml.dump(x)
s"
detailed date in cursor pos on pyplot charts,plt.gca().fmt_xdata = matplotlib.dates.DateFormatter('%Y-%m-%d')
how to use current logged in user as pk for django detailview?,"class CurrentUserDetailView(UserDetailView):

    def get_object(self):
        return self.request.user"
loss of precision with very small numbers in python arrays,Yf[0]
python selenium webdriver - proxy authentication,"prof.set_preference('network.auth.use-sspi', 'false')"
how to scroll a div when ajax is used to load data in python selenium,"driver.execute_script('arguments[0].scrollIntoView();', reviews[-1])"
all tuesdays and wednesdays in a date range: is there a more pythonic way?,"while d.weekday() != i:
    pass"
convert dataframe to dictionary,"import pandas as pd
df = pd.DataFrame([{'a': 'ac', 'b': 'dc'}, {'a': 'ddd', 'b': 'fdf'}])
print(df)
d = df.to_dict(orient='records')"
how to assign a 1d numpy array to 2d numpy array?,"X[:, start:end] = x"
how to return data from a python sax parser?,"class SpamExtractor(sax.ContentHandler):

    def __init__(self, canning_machine):
        self.canning_machine = canning_machine

def startElement(self, name, attrs):
    if name == 'spam':
        print('We found a spam!')
self.canning_machine.can(name, attrs)"
python - optimisation of perfect number search,p.append(x)
how to save and load cookies using python selenium webdriver,"pickle.dump(driver.get_cookies(), open('cookies.pkl', 'wb'))"
is there a python equivalent of range(n) for multidimensional ranges?,import itertools
how can i obtain the full ast in python?,py > ast.body[1].value
"python trace module - trace lines as they are executed, but save to file, rather than stdout",return localtrace
"repeatedly extract a line between two delimiters in a text file, python","import re

def GetTheSentences(infile):
    with open(infile) as fp:
        for result in re.findall('DELIMITER1(.*?)DELIMITER2', fp.read(), re.S):
            pass"
google search with python,data = json.load(data)
pandas dataframe total row,baz = 2 * df['qux'].sum() + 3 * df['bar'].sum()
dates in the xaxis for a matplotlib plot with imshow,ax.xaxis_date()
how can i dynamically create derived classes from a base class,"globals()[name] = ClassFactory(name, params)"
copy-paste into python interactive interpreter and indentation,1
python plot simple histogram given binned data,"plt.bar(list(range(0, 100)), x)"
pandas calculate sum of multiple columns given multiple conditions,"df = df.swaplevel(0, 1, 1)"
finding all possible permutations of a given string in python,return str[:index] + str[endIndex:]
hadoop streaming: mapper 'wrapping' a binary executable,"sys.path.append('.')
import module"
inserting a row at a specific location in a 2d array in numpy?,"np.insert(a, 1, np.array((1, 1)), 0)
np.insert(a, 1, np.array((1, 1)), 1)"
how to transform a opencv cvmat back to ndarray in numpy ？,import numpy as np
using numpy/scipy to calculate iso-surface from 3d array,"ax.plot_surface(X[:, :, (0)], Y[:, :, (0)], z, cstride=4, rstride=4, color='b')"
chose the farthest k points from given n points,proposed_outsiders = current_outsiders.copy()
"converting irregularly time stamped measurements into equally spaced, time-weighted averages",df3
how do i get rid of a circular dependency error while creating a database in sqlalchemy?,from sqlalchemy.ext.declarative import declarative_base
word segmentation using dynamic programming,"if text == '':
    pass"
pause/resume a python script in middle,input('Remove ' + PAUSEFILE + ' and hit ENTER to continue')
python packaging for relative imports,"import test.demo
demo.printer()"
"splitting the letters of a word based on conditions, and returning in a list (python)",it = iter(word)
how can i get my contour plot superimposed on a basemap,from mpl_toolkits.basemap import Basemap
crawling multiple sites with python scrapy with limited depth per site,self._compile_rules()
how to get an average picture from 100 pictures using pil?,"out = Image.fromarray(arr, mode='RGB')
out.save('Average.png')
out.show()"
"how to calculate precision, recall and f-score with libsvm in python",print('Confusion matrix')
python unittest with expensive setup,"def tearDownClass(cls):
    pass"
"tensorflow: using weights trained in one model inside another, different model","basegraph = tf.Graph()
with basegraph.as_default():
    pass"
"set cover or hitting set; numpy, least element combinations to make up full set",logging.debug('len of result_set is {0}'.format(len(result_set)))
loading base64 string into python image library,pic = cStringIO.StringIO()
how to save an image using django imagefield?,from django.utils import simplejson
listing attributes of namedtuple subclass,"def __dict__(self):
    print('inside A')
return self.__slots__


class B(A):
    pass
print(B().__dict__)
print('-' * 20)


class B(A):
    __slots__ = ()
print(B().__dict__)"
how does python import modules from .egg files?,"egg_path = '/home/shahid/suds_2.4.egg'
sys.path.append(egg_path)
import suds"
downloading a image using python mechanize,browser.back()
reading a binary file in fortran that was created by a python code,"import numpy as np
with open('sin.dat', 'wb') as outfile:
    np.sin(np.arange(0.0, 2 * np.pi, np.pi / 180.0, dtype=np.float32)).tofile(
        outfile)"
split an integer into digits to compute an isbn checksum,number //= 10
dot notation string manipulation,"rest, last = s.rsplit('.', 1)"
how to beautify json in python or through command line,"print(json.dumps({'4': 5, '6': 7}, sort_keys=True, indent=4))"
what happens if you append a list to itself?,gc.get_referents(some_list)
django url parameter passing,"urlpatterns = patterns('blog.views', url('^blog/(?P<year>\\d{4})/$',
    'year_archive', {'foo': 'bar'}))

def year_archive(request, year, foo=None):
    pass"
how to compare elements in a list of lists and compare keys in a list of lists in python?,acids = [aminoacid[base] for base in sublist]
finding groups of increasing numbers in a list,"print(list(igroups([9, 1, 2, 3, 1, 1, 2, 3, 5])))"
element-wise maximum of two sparse matrices,"BisBigger.data = np.where(BisBigger.data < 0, 1, 0)"
running sudo command with paramiko,client.close()
best way to strip punctuation from a string in python,"table = string.maketrans('', '')
regex = re.compile('[%s]' % re.escape(string.punctuation))"
3-dimensional array in numpy,cv2.waitKey(0)
filter foreignkey within inlineform,"def formfield_for_foreignkey(self, db_field, request, **kwargs):
    pass"
interpreting wav data,"num_frames = stream.getnframes()
raw_data = stream.readframes(num_frames)"
how to write specific iptables rules using python-iptables,phyrule['rule']['o_iface'] = 'ens3'
efficient unit basis vector with numpy,"index = 2
np.eye(1, size, index)"
pyephem - calculating positions of non-earthy moons,print(1.0359080813762214 * 10 ** 9 / ephem.meters_per_au)
gevent monkeypatching breaking multiprocessing,"import multiprocessing
from gevent import monkey"
extract nested json embedded as string in pandas dataframe,"def flatten(dct, separator='_'):
    """"""A fast way to flatten a dictionary,""""""
res = {}
queue = [('', dct)]
while queue:
    prefix, d = queue.pop()
for k, v in list(d.items()):
    key = prefix + k
if not isinstance(v, dict):
    res[key] = v
else:
    queue.append((key + separator, v))
return res

def records_from_json(fh):
    """"""Yields the records from a file object.""""""
rows = csv.reader(fh, delimiter='|')
header = next(rows)
for ident, dist, data in rows:
    rec = flatten(json.loads(data))
rec['id'] = ident
rec['dist'] = dist
yield rec

def from_records(path):
    with open(path) as fh:
        return pd.DataFrame.from_records(records_from_json(fh))"
run pdb without stdin/stdout using fifo,wdb.set_trace()
lists in configparser,[paths]
get svg text size in python,data = f.read()
redirect stdout to logger in python,"class LoggerWriter:

    def __init__(self, logger, level):
        self.logger = logger
self.level = level

def write(self, message):
    if message != '\n':
        self.logger.log(self.level, message)

def main():
    logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger('demo')
info_fp = LoggerWriter(logger, logging.INFO)"
calculate the area of a quadrilateral,area1 + area2
group together arbitrary date objects that are within a time range of each other,print(list(info))
"calculate probability in normal distribution given mean, std in python","scipy.stats.norm(100, 12).cdf(98)"
how should i format my file wite?,"with open('newdat.csv', 'w') as csvfile:
    spampwriter = csv.writer(csvfile, delimiter=',')"
python expandtabs string operation,"def expandtabs(string, n):
    result = ''
pos = 0
for char in string:
    if char == '\t':
        char = ' ' * (n - pos % n)
if char == '\n':
    pos = 0
else:
    pos += len(char)
result += char"
python/pil resize all images in a folder,"def resize():
    for item in dirs:
        if os.path.isfile(path + item):
            im = Image.open(path + item)
f, e = os.path.splitext(path + item)
imResize = im.resize((200, 200), Image.ANTIALIAS)"
efficent way to split a large text file in python,"with open(name) as f:
    pass"
plotting seismic wiggle traces using matplotlib,"fig, ax = plt.subplots()
y = np.linspace(700.0, 900.0, 401)
offsets = [94.0, 95.0, 96.0, 97.0]
times = [800.0, 790.0, 780.0, 770.0]
for offset, time in zip(offsets, times):
    x = offset + 10 * (np.sin(y / 2.0) * 1 / (10.0 * np.sqrt(2 * np.pi)) *
        np.exp(-(y - time) ** 2 / (2 * 10.0 ** 2)))
ax.plot(x, y, 'k-')
ax.fill_betweenx(y, offset, x, where=x > offset, color='k')
ax.set_xlim(93, 98)
plt.show()"
serializing sqlalchemy models for a rest api while respecting access control?,"""""""Must be implemented by implementors"""""""
python limited combination,seed(42)
pytest: reusable tests for different implementations of the same interface,"def test_one(Implementation):
    pass"
passing unicode strings from django to javascript,json_data_string = simplejson.dumps(your_data)
numpy recarray strings of variable length,"mydf = np.empty((2,), dtype=[('file_name', object), ('file_size_mb', float)])
mydf['file_name'][0] = 'foobarasdf.tif'
mydf['file_name'][1] = 'arghtidlsarbda.jpg'
mydf"
python lambda with regex,"r = re.compile('\\w+')
r.sub(partial(capitalize_long, length=3), s)"
is it possible to send data from a fortran program to python using mpi?,"data = numpy.arange(1, dtype='int8')"
"generating a linear, timeline-based, representation from items that consume time and items which do not, but still need space to be drawn on",t += res[-1].duration
merge several regular expressions into one re,p = re.compile('(' + RE2 + '|' + RE1 + ')')
python - py_initialize unresolved during compilation,Py_Finalize()
define aggfunc for each values column in pandas pivot table,"pd.pivot_table(df, values=['D', 'E'], rows=['B'], aggfunc={'D': np.sum, 'E':
    np.mean})"
finding first day of the month in python,"first_day = today.replace(day=1)
if today.day > 25:
    print(first_day + relativedelta(months=1))
else:
    print(first_day)"
python: check if an numpy array contains any element of another array,"array2 = [3, 4, 9, 10, 13, 15, 16, 18, 19, 20, 21, 22, 23]"
shorter version of this numpy array indexing,"a = np.in1d(np.arange(m), np.random.randint(0, m, m))
b = np.in1d(np.arange(n), np.random.randint(0, n, n))"
printing stdout in realtime from a subprocess that requires stdin,p.stdin.close()
how to replace (or strip) an extension from a filename in python?,"prefix, sep, suffix = filename.rpartition('.')
new_filename = prefix + '.jpg'"
need to iterate over a python list in reverse as fast as possible,"t.timeit(number=1000)
t = Timer('l.reverse(); [x for x in l]', 'l = list(range(100000))')
t.timeit(number=1000)"
how do i print out just the word itself in a wordnet synset using python nltk?,"wn.synset('dog.n.1').name
wn.synset('dog.n.1').name.partition('.')[0]"
"yielding a value from a coroutine in python, a.k.a. convert callback to generator","def gen():
    pass"
"best way to poll a web service (eg, for a twitter app)","anything_else_that_seems_important()
work_duration = time.clock() - start"
how to create pymongo connection per request in flask,"connection = Connection()
db = connection['test']
app.db = db"
"automatically setting getter, setter and deleter in python","person = Person(firstName='Peter', lastName='Smith', age=21)"
using absolute unix paths in windows with python,path = os.path.normpath(os.path.expanduser(path))
python config parser that supports section inheritance?,"return _config_parser_get(fallback_environment, id)"
how to speed up a recursive algorithm,next_n_results = [table[k] for k in next_n]
finding whether a list contains a particular numpy array,"any(np.array_equal(a, x) for x in my_list)
any(np.array_equal(b, x) for x in my_list)"
python-c api wrapper in objective-c crashes with call to __getattr__ when passed a python object,size = PyTuple_GET_SIZE(arg)
python pandas series of datetimes to seconds since the epoch,"(df['date'] + timedelta(hours=2) - datetime.datetime(1970, 1, 1)
    ) / np.timedelta64(1, 's')"
python selenium webdriver - proxy authentication,"prof.set_preference('network.automatic-ntlm-auth.allow-proxies', 'false')"
how can i speed up reading multiple files and putting the data into a dataframe?,"def reader(filename):
    pass"
control the size textarea widget look in django admin,"from django.forms import Textarea


class RulesAdmin(admin.ModelAdmin):
    pass"
python pandas: plot histogram of dates?,dates.hist()
deleting all the file of certain size,"for dirpath, dirs, files in os.walk('.'):
    for file in files:
        pass"
django caching for authenticated users only,from django.views.decorators.cache import cache_page
python: reading all files in all directories,"import os
import fnmatch
for dirpath, dirs, files in os.walk('Test'):
    for filename in fnmatch.filter(files, '*.txt'):
        pass"
multiply in django template,"item = models.ForeignKey(Supplier)
quantity = models.IntegerField(default=0)"
how to make 'fuller' axis arrows with matplotlib,"ax.axhline(linewidth=1.7, color='k')"
how to write a numpy matrix in a text file - python,"with open('/tmp/test', 'rb') as f:
    line = f.readline().decode('ascii')"
python combine for-loops,"for table in document.tables:
    for row in table.rows:
        for cell in row.cells:
            pass"
how do i find the first letter of each word?,output = ''
function definition in python takes a lot of time,p = 123 ** 45
print the structure of large nested dictionaries in a compact way without printing all elements,"def compact_print(d, indent=''):
    items = list(d.items())
key, value = items[0]
if not indent:
    print('{')
if isinstance(value, dict):
    pass"
how can i use a different color for each side of a polygon?,"for i in range(1000):
    func(*args)"
python messagebox with icons using ctypes and windll,"MB_HELP = 16384
ICON_EXLAIM = 48
ICON_INFO = 64
ICON_STOP = 16
result = ctypes.windll.user32.MessageBoxA(0, 'Your text?', 'Your title', 
    MB_HELP | MB_YESNO | ICON_STOP)"
celery: access all previous results in a chain,conf = config['persistence']
"matplotlib color in 3d plotting from an x,y,z data set without using contour",import matplotlib.pyplot as plt
unexpected result -- numpy fromfunction with constant functions,func = lambda i: 1
how to check paramiko version installed?,print(paramiko.__version__)
loop over two generator together,pass
multiple value search in dictionary keys,"x, y = map(float, val)"
convert array of integers into dictionary of indices,"materials = [0, 0, 47, 0, 2, 2, 47]
d = {}
for k, m in enumerate(materials):
    d.setdefault(m, []).append(k)
print(d)"
xgboost xgbclassifier defaults in python,XGBClassifier(**grid)
how to find time at particular timezone from anywhere,mytz = timezone('Europe/Paris')
python multiple threads/ multiple processes for reading serial ports,p.stdin.write('<command-here>\n')
building a simple progress bar or loading animation in kivy,ExampleApp().run()
fast ping sweep in python,"if __name__ == '__main__':
    pool_size = 255
jobs = multiprocessing.Queue()
results = multiprocessing.Queue()
pool = [multiprocessing.Process(target=pinger, args=(jobs, results)) for i in
    range(pool_size)]
for p in pool:
    p.start()
for i in range(1, 255):
    jobs.put('192.168.1.{0}'.format(i))
for p in pool:
    jobs.put(None)
for p in pool:
    p.join()"
how to run a python file using cron jobs,-------------Minute(0 - 59)
jinja2 filter to convert custom markup to html,"@evalcontextfilter
def mark2html(eval_ctx, value):
    result = value.replace('[s]', '<strong>')
result = result.replace('[/s]', '</strong>')
if eval_ctx.autoescape:
    result = Markup(result)"
how to setup ipython as a simplified command shell for the average user,"def do_quit(self, arg):
    sys.exit(1)"
sentence tokenization for texts that contains quotes,"text = io.open('in.txt', 'r', encoding='utf8').read()
print(text)"
is unsetting a single bit in flags safe with python variable-length integers?,~1
how to find url in another url?,"re.findall('imgurl=([^&]+)&', url)"
modifying a python dictionary from different threads,y = 1
scatter plots in pandas/pyplot: how to plot by category,"fig, ax = plt.subplots()
ax.margins(0.05)"
exporting a zope folder with python,password_dev = 'password_dev'
how to create an application which embeds and runs python code without local python installation?,"applicationDirectory,"
how do i display current time using python + django?,"import datetime
from django.utils.timezone import utc
now = datetime.datetime.utcnow().replace(tzinfo=utc)"
numpy size of data type,print(np.dtype(np.float32).itemsize)
python module that implements ftps,"f.connect('', 9021)
f.auth_tls()"
how can i allow django admin to set a field to null?,self.my_nullable_string = None
pandas groupby sort within groups,"df_agg = df.groupby(['job', 'source']).agg({'count': sum})"
duplicate each member in a list - python,a = list(range(10))
fitting data to distributions?,"x = x[x >= 0]
distributions = c('normal', 'exponential')"
seaborn heatmap y-axis reverse order,"uniform_data = np.random.rand(10, 12)
ax = sns.heatmap(uniform_data)"
python requests fetch a file from a local url,requests_session.get('file://<some_local_path>')
slice indices limited to 0x7fffffff,pass
python: uniqueness for list of lists,"testdata = [['9034968', 'ETH'], ['14160113', 'ETH'], ['9034968', 'ETH'], [
    '11111', 'NOT'], ['9555269', 'NOT'], ['15724032', 'ETH'], ['15481740',
    'ETH'], ['15481757', 'ETH'], ['15481724', 'ETH'], ['10307528', 'ETH'],
    ['15481757', 'ETH'], ['15481724', 'ETH'], ['15481740', 'ETH'], [
    '15379365', 'ETH'], ['11111', 'NOT'], ['9555269', 'NOT'], ['15379365',
    'ETH']]"
copy constructor in python,b = Foo(a)
python - abstracting a recursion to all nth level recursion (lxml),"d = {'0': ['a.root', 'b.root', 0]}
for i in range(n):
    d[str(i + 1)] = [d[str(i)][0] + '[' + chr(105 + i) + ']', d[str(i)][1] +
        '[' + chr(105 + i) + ']', i + 1]
print(d)

def compare(points=d['0'], passNo=0):
    if xml.xml_compare(eval(points[0]), eval(points[1])) == False:
        exec ('for' + str(chr(points[2] + 105)) + 'in enumerate(' + str(
            points[0]) + '): compare(' + str(d[str(passNo + 1)][0]) + ', ' +
            str(d[str(passNo + 1)][1]) + ')')
compare()"
how to define a binary string in python in a way that works with both py2 and py3?,return codecs.latin_1_encode(x)[0]
give openid users additional information,self.response.headers['Content-Type'] = 'text/html'
"strategy pattern in python when a ""strategy"" consists of more than one function","def formatbyte(n):
    return '$%02X' % n"
python contour for binary 2d matrix,"topbottom[(0), im.shape[1]:] = im.shape[0] - 1 - np.argmax(np.flipud(im),
    axis=0)
mask = np.tile(np.any(im, axis=0), (2,))
xvalues = np.tile(np.arange(im.shape[1]), (1, 2))
return np.vstack([topbottom, xvalues])[:, (mask)].T"
how to use list of python objects whose representation is unicode,"[A()]
'%s' % [A()]
'%s' % [A()]
print('%s' % [A()])"
load a pickle file from a zipfile,"zf.writestr('data.pkl', cPickle.dumps(some_data, -1))
sd2 = cPickle.load(zf.open('data.pkl'))"
checking status of process with subprocess.popen in python,"""""""::singleProcessExecuter > Got %s %s in myPopy.communicate() when trying get output of command %s. It is probably a bug (more info: http://bugs.python.org/issue1731717)"""""""
how can i optimize this google app engine code?,"groups = []
for x in allLinks:
    pass"
overwrite global var in one line in python?,"import sys
thismodule = sys.modules[__name__]
thismodule.foo = 'bar'

def update_foo():
    thismodule.foo = 'baz'"
how to use freebase to label a very large unlabeled nlp dataset?,"print('\t'.join([t, r['mid'], r['name']] + r['/common/topic/alias']))"
using concurrent.futures to consume many dequeued messages a time,"def new_task(self, function):
    """"""Start a new task, blocks if all workers are busy.""""""
self.workers.acquire()"
"i have a list of tuples containing dictionaries. how do i edit my code to find the values in a separate list, inside these dictionaries?",print('Node: ' + str(tupl[0]) + ' Match at key(s): ' + str(matching_key))
python - find longest path,raise RuntimeError('Graph has loop')
how to convert 4 byte ieee (little endian) float binary representation to float,"x
round_total_digits(x)"
how to append rows in a pandas dataframe in a for loop?,import pandas as pd
why can't i use a list as a dict key in python?,"li = [1, 2, 3]"
how to add a line parallel to y axis in matplotlib?,plt.figure()
how to read numbers in text file using python?,"for line in f:
    pass"
python lxml etree applet information from yahoo,parse()
pythonic way to copy a column from a csv file,"for row in reader:
    for key, value in row.items():
        defaultdict[key] = value"
sending custom pyqt signals?,pass
set diagonal triangle in pandas dataframe to nan,"a[il1] = np.nan
print(a)"
how can sqlalchemy be tought to recover from a disconnect?,"try:
    result = connection.execute(""select 'OK'"")
except sqlalchemy.exc.OperationalError:
    connection = engine.connect()"
porting pymc2 bayesian a/b testing example to pymc3,step = pm.Metropolis()
how to display images in a row with ipython display?,"imshow(image, cmap='Greys_r')
axis('off')"
pythonic way to handle a method on network data structure,"def remove_edge(edge):
    if isinstance(edge, int):
        pass"
sqlalchemy: add a relationship using id instead of object?,"def add_reviews(self, review_ids):
    sess = object_session(self)"
install filter on logging level in python using dictconfig,import logging
creating custom connectivity in pybrain neural networks,"net.addConnection(FullConnection(h2, outp))"
getting user in django-socketio,"from django.contrib.auth.models import User

def message(request, socket, context, message):
    session = Session.objects.get(session_key=message['session_key'])
uid = session.get_decoded().get('_auth_user_id')
user = User.objects.get(pk=uid)"
how to create english language dictionary application with python (django)?,"class DictEntry(Model):
    keyword = CharField(max_length=100)"
how to get the logical right binary shift in python,"def rshift(val, n):
    pass"
need user to be able to input up to three letters at a time for python turtle to draw,"velcro.color('purple', 'blue')"
flipping the boolean values in a list python,list(~numpy.array(mylist))
python string templating with case sensitivity,"super(CustomRenameTemplate, self).__init__(*args, **kws)"
how to sort a list by checking values in a sublist in python?,"from operator import itemgetter
L = [['a', [10]], ['b', [1]], ['c', [5, 10]], ['d', [5, 1, -10]], ['e', [5,
    1, -1]]]"
simplest example for streaming audio with alexa,""""""" Called when the user specifies an intent for this skill """""""
"concurrent asynchronous processes with python, flask and celery",res = g()
"numpy array, change the values that are not in a list of indices","mask = np.ones(a.shape, dtype=bool)
mask[indices] = False
a[~mask] = 999
a[mask] = 888"
what would be the python code to add time to a specific timestamp?,"x = '00:03:12,200 --> 00:03:14,316'
x1 = x.split('-->')"
python modbus library,"print('   !modbus-tk:\terrCnt: %s; last tb: %s' % (errCnt, tb))"
python sort strings with digits at the end,"l = [('asdf' + str(t)) for t in z]
l"
creating a |n| x |m| matrix from a hash-table,import itertools
pandas: building a column with self-refrencing past values,"for i in range(1, len(a)):
    pass"
what is the python way of doing a \g anchored parsing loop?,"while m and index != m.end():
    o.append(m.group(1))"
how to use bash variables inside a python code?,"os.environ['var'] = 'foo_bar'
subprocess.call(['echo $var'], shell=True)"
best way to package a python library that includes a c shared library?,"from setuptools import setup
with open(os.path.join(os.path.dirname(__file__), 'README.rst')) as f:
    readme = f.read()
subprocess.call(['make', '-C', 'src'])
setup(name='LSD', version='0.0.1', description=
    'Python bindings for the LSD line segment detector.', long_description=
    readme, author='Geoff Hing', author_email='geoffhing@gmail.com', url=
    'https://github.com/ghing/python-lsd', packages=['lsd'], package_data={
    'lsd': ['liblsd.so']}, include_package_data=True, classifiers=[
    'Development Status :: 1 - Planning', 'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Operating System :: OS Independent', 'Programming Language :: Python',
    'Programming Language :: C'])"
python/gspread - how can i update multiple cells with different values at once?,"cell_values = [1, 2, 3, 4, 5, 6, 7]
for i, val in enumerate(cell_values):
    cell_list[i].value = val
worksheet.update_cells(cell_list)"
get index of the top n values of a list in python,[a[i] for i in np.argsort(a)[-2:]]
"how do i get the ""visible"" length of a combining unicode string in python?","len(regex.findall('\\X', 'A\u0332\u0305BC'))"
shebang env preferred python version,"""""""'test $(python --version 2>&1 | cut -c 8) -eq 3 && exec python ""$0"" ""$@"" # """""""
print list of unicode chars without escape characters,"s = ['\xc3\xa4\xc3\xa5\xc3\xb6', '\xc3\xa4\xc3\xa5']
print('\n'.join(s))
print(', '.join(s))
s = ['\xe5\xe4\xf6']"
finding a set of indices that maps the rows of one numpy ndarray to another,assert a.shape == b.shape
convert python filenames to unicode,"for dirpath, dirnames, filenames in os.walk('.'):
    pass"
python duplicate removal,"with open('input.csv', 'rb') as csvfile:
    reader = csv.reader(csvfile)"
word frequency calculation for 1gb text file in python,freq = collections.Counter()
python: counting the items in a generator consumed by other code,"process(i for i, v in zip(generator(), counter))"
explode in pyspark,"DF = sqlContext.createDataFrame([(""""""cat 

 elephant rat 
 rat cat
mat
"""""",
    )], ['word'])"
how to iterate over dataframe and generate a new dataframe,print(s)
picking out elements based on complement of records in python pandas,"t1 = df1[['start', 'end']]
t2 = df2[['start', 'end']]
f = t2.apply(lambda x2: t1.apply(lambda x1: x1.isin(x2).all(), axis=1).any(
    ), axis=1)"
refining data stored in sqlite - how to join several contacts?,select
align ticklabels in matplotlib colorbar,t.set_horizontalalignment('right')
build a url using requests module python,"url = 'http://some-address.com/api/'
term = 'This is a test'"
fast way to read from stringio until some byte is encountered,"while True:
    pass"
can i define a scope anywhere in python?,dirname = os.path.dirname
how to set self.maxdiff in nose to get full diff output?,"from unittest import TestCase
TestCase.maxDiff = None"
merge and sort a list using merge sort,"right = [2, 4]
results = []"
is there a python module to solve/integrate a system of stochastic differential equations?,""""""" add required Python packages """"""
from pysde import *
from sympy import *
"""""" Variables acclaimed """"""
x, dx = symbols('x dx')
r, G, e, d = symbols('r G epsilon delta')
"""""" Solve Kolmogorov Forward Equation """"""
l = sde.KolmogorovFE_Spdf(r * (G - x), e * x * (1 - x), 0, 1)
sol = l.subs({e: r * d})
pprint(sol)"
create a engine to replace template entries with json objects in python,"import re
t = '<h1><%% Songs.name %%></h1>'
re.search('<%%(.+?)%%>', t).groups()"
how to do unit test on autobahn applications using twisted trial?,self.patches.append(patcher)
tensorflow: run model evaluation over multiple checkpoints,"print('Succesfully loaded model from %s at step=%s.' % (ckpt.
    model_checkpoint_path, global_step))"
xlwt - how to add page breaks to an excel file?,"class HorizontalPageBreaksRecord(BiffRecord):
    pass"
smtplib sends blank message if the message contain certain characters,"mailto('test@gmail.com', 'http://www.url.com')"
pandas hdfstore of multiindex dataframes: how to efficiently get all indexes,"df = DataFrame(randn(100000, 3), columns=list('ABC'))
df['one'] = 'foo'"
multiple database support in django,"myCursor.execute('SELECT COUNT(1) FROM my_table;')
myCursor.fetchone()"
python functools.partial - how to apply it to a class method with the static decorator,"load_fax = staticmethod(_load_fax)
fail_fax = staticmethod(partial(_load_fax, error='PC LOAD LETTER'))"
how do you get the next value in the floating-point sequence?,return -next_up(-x)
read from socket: is it guaranteed to at least get x bytes?,"import socket
s = socket.socket()"
"setuptools, easy_install, and a custom pypi server",[easy_install]
how to slice a generator object or iterator in python,g = (i for i in range(100))
merging a list with a list of lists,"c = [(a[i] + [bi]) for i, bi in enumerate(b)]"
combine two columns of text in dataframe in pandas/python,"df = pd.DataFrame([['2014', 'q1'], ['2015', 'q3']], columns=('Year', 'Quarter')
    )
print(df)"
how to remove all of the data in a table using django,"def delete_everything(self):
    pass"
how to pip or easy_install tkinter,"import tkinter
tkinter._test()"
how to play wav data right from memory?,"file_on_disk = open('myfile.wav', 'rb')"
how do i create a variable number of variables?,"getattr(obj, name)"
python xlrd parse excel xlsx to csv with date conversion,csvfile.close()
pandas data from stdin,import sys
association_proxy with 0-n relations,"class C(Base):
    pass"
python random lines from subfolders,"fullPath = os.path.join(dirpath, filename)"
how to test for a regex match,"url_match('<a href=""test"">', 'te')"
dynamic url with cherrypy methoddispatcher,"cherrypy.response.headers['Access-Control-Allow-Methods'] = 'GET, PUT, DELETE'"
how to use python mysqldb to insert many rows at once,flattened_values = [item for sublist in values_to_insert for item in sublist]
apply borders to all cells in a range with openpyxl,"for row in rows:
    pass"
convert list to a 1-column panda dataframe,"t = """"""id1 id2 id3 id4
0 1 0 1 
1 1 0 0""""""
df = pd.read_csv(io.StringIO(t), sep='\\s+')
df"
transforming string output to json,out[k] = v
how to call python functions dynamically,"def __init__(self, fields):
    pass"
how to get the same day of next month of a given day in python using datetime,"def next_month(date):
    pass"
implement a java udf and call it from pyspark,"jc = sc._jvm.java.lang.Thread.currentThread().getContextClassLoader(
    ).loadClass(pcls).newInstance().getUdf().apply
return Column(jc(_to_seq(sc, [], _to_java_column)))
rdd1 = sc.parallelize([{'c1': 'a'}, {'c1': 'b'}, {'c1': 'c'}])
df1 = rdd1.toDF()"
best method for changing a list while iterating over it,"for i, v in enumerate(reversed(x)):
    pass"
how to install rpy2 on mac os x,import rpy2
perform 2 sample t-test,"print('ttest_ind:            t = %g  p = %g' % (t, p))
abar = a.mean()"
pypyodbc with parameters: [odbc microsoft access driver] too few parameters. expected 4,"SELECT[Date], [Time], [uSec], [twoCV]"
what is the most efficient way to get a value by objectid in mongodb using pymongo?,db = connection[self.db_name]
test a string for a substring?,pass
"convert pandas dataframe to numpy array, preserving index",df.to_records().dtype
how to pass a javascript array to a python script using flask [using flask example],"@app.route('/_array2python')
def array2python():
    wordlist = json.loads(request.args.get('wordlist'))
return jsonify(result=wordlist)"
how can i make an animation with contourf()?,import matplotlib.animation as animation
how do i transform a multi-level list into a list of strings in python?,"from functools import reduce
[reduce(lambda x, y: x + y, i) for i in a]"
django: how to make a datetime object aware of the timezone in which it was created?,"from django.utils import timezone
import pytz"
send asyncio tasks to loop running in other thread,"t = Thread(target=f, args=(loop,))"
appending items to a list of lists in python,"cols = [' V1', ' I1']
data = [[] for col in cols]
with open('data.csv', 'r') as f:
    for rec in csv.DictReader(f):
        for l, col in zip(data, cols):
            l.append(float(rec[col]))
print(data)"
how to find median using spark,"rdd.map(lambda x: (float(x),)).toDF(['x']).registerTempTable('df')"
dynamically assigning function implementation in python,from types import MethodType
how does moose compare to python's oo system?,"class Person:

    def __init__(self):
        self.firstname = None
self.lastname = None
me = Person()
me.firstname = 'Kirk'
me.lastname = 'Strauser'"
opencv detect movement in python,cam = cv2.VideoCapture(0)
is there a way in python to return value via output parameter?,myList.append(2)
how to create ternary contour plot in python?,"a = test_data[:, (0)]
b = test_data[:, (1)]
c = test_data[:, (2)]
v = test_data[:, (-1)]
x = 0.5 * (2.0 * b + c) / (a + b + c)
y = 0.5 * np.sqrt(3) * c / (a + b + c)
T = tri.Triangulation(x, y)
plt.tricontourf(x, y, T.triangles, v)
corners = np.array([[0, 0], [1, 0], [0.5, np.sqrt(3) * 0.5]])
triangle = tri.Triangulation(corners[:, (0)], corners[:, (1)])
refiner = tri.UniformTriRefiner(triangle)
trimesh = refiner.refine_triangulation(subdiv=4)
plt.triplot(trimesh, 'k--')
plt.show()"
python remove comma in dollar amount,"re.sub('[\\$,]', '', RawPurchaseAmount)"
getting 401 on twitter oauth post requests,"def encodekeyval(key, val):
    pass"
how to effiiciently rebuild pandas hdfstore table when append fails,self.store.close()
python version of php's stripslashes,"def stripslashes(s):
    pass"
log exception with traceback,threading.Thread(target=foo).start()
writing multi-line strings to cells using xlwt module,"book = xlwt.Workbook()
sheet = book.add_sheet('Test')
sheet.write(0, 0, 'Hello\nWorld')
style = xlwt.XFStyle()
style.alignment.wrap = 1
sheet.write(0, 1, 'Hello\nWorld', style)
book.save('test.xls')"
detect videos with youtube playback restriction,entry.control.FindExtensions('state')[0].attributes
sage importing from csv and plotting numbers larger than 10,"import csv
a = csv.reader(open(DATA + 'testi1.csv'))
G = Graphics()
x_series = []
y_series = []
for x, y, z in a:
    x_series.append(int(x))
y_series.append(int(z))
plot = scatter_plot(zip(x_series, y_series))
G += plot
G.set_axes_range(0, 20, 0, 20)
G"
"in python, how do i split a string and keep the separators?",return ['']
deleting specific control characters(\n \r \t) from a string,"import string
s = 'a\nb\rc\td'
print(s.translate(string.maketrans('\n\t\r', '   ')))"
sum of absolute differences of a number in an array,"counts, sums = Fenwick(len(a)), Fenwick(len(a))"
"simple function that returns a number incremented by 1 on each call, without globals?","class Inc(object):
    pass"
how do i unload (reload) a python module?,"sys.getrefcount(sys)
sys.getrefcount(os)
sys.getrefcount(empty)"
remap values in pandas column with a dict,"df['col1'].replace(di, inplace=True)
print(df)"
get the number of bytes needed for a unicode string,print(len('\uc815\uc815'.encode('UTF-16-LE')))
python readline() from a string?,"foo.split('\n', 1)"
python string replacement with % character/**kwargs weirdness,"url = url.replace('%%%s%%' % key, str(kwargs[key]))"
how to combine pool.map with array (shared memory) in python multiprocessing?,"for p in workers:
    p.join()"
running fabric scripts as root,run('do another thing')
python parse html table using lxml,"doc = """"""<TABLE>
<TR>
    <TD><P>Name</P></TD>
    <TD><P>Fees</P></TD>
    <TD><P>Awards</P></TD>
    <TD><P>Total</P></TD>
</TR>
<TR>
    <TD><P>Tony</P></TD>
    <TD >7,800</TD>
    <TD >7</TD>
    <TD>15,400</TD>
</TR>
<TR>
    <TD><P>Paul</FONT></P></TD>
    <TD >7,800</TD>
    <TD >7</TD>
    <TD>15,400</TD>
</TR>
<TR>
    <TD><P>Richard</P></TD>
    <TD >7,800</TD>
    <TD >7</TD>
    <TD>15,400</TD>
</TR>
</TR>
</TABLE>
<TABLE>
<TR>
    <TD><P>Name</P></TD>
    <TD><P>Fees</P></TD>
    <TD><P>Awards</P></TD>
    <TD><P>Total</P></TD>
</TR>
<TR>
    <TD><P>Tony</P></TD>
    <TD >7,800</TD>
    <TD >7</TD>
    <TD>15,400</TD>
</TR>
<TR>
    <TD><P>Paul</FONT></P></TD>
    <TD >7,800</TD>
    <TD >7</TD>
    <TD>15,400</TD>
</TR>
<TR>
    <TD><P>Richard</P></TD>
    <TD >7,800</TD>
    <TD >7</TD>
    <TD>15,400</TD>
</TR>
</TR>
</TABLE>""""""
import lxml.html
root = lxml.html.fromstring(doc)
root.xpath('//tr/td//text()')
for tbl in root.xpath('//table'):
    elements = tbl.xpath('.//tr/td//text()')
print(elements)"
python: find identical items in multiple lists,seen.add(i)
problems with a shared mutable?,"{'tags2': [], 'cnt2': 0, 'cnt1': 1, 'tags1': ['work']}"
"globally capture, ignore and send keyevents with python xlib, recognize fake input",import time
how do you apply 'or' to all values of a list in python?,"from functools import reduce
def iam(result):
    print('iam(%r)' % result)
return result
any(iam(x) for x in [False, True, False])
reduce(lambda x, y: x or y, (iam(x) for x in [False, True, False]))"
webdriver wait for ajax request in python,"ff.get('http://somedomain/url_that_delays_loading')
ff.find_element_by_xpath(""//div[@class='searchbox']/input"").send_keys('obama')"
python pandas - how to flatten a hierarchical index in columns,mi = df.columns
passing a matplotlib figure to html (flask),"@app.route('/images/<cropzonekey>')
def images(cropzonekey):
    return render_template('images.html', title=cropzonekey)

@app.route('/fig/<cropzonekey>')
def fig(cropzonekey):
    pass"
a fast way to find an all zero answer,x = x + (x >> 16)
how to send a sigint to python from a bash script?,"exit(0)
if __name__ == '__main__':
    signal.signal(signal.SIGINT, quit_gracefully)"
how to detect a shift between images,im1_gray -= np.mean(im1_gray)
how to order these lines for a highscore table in python,"with open('infile', 'r') as infile:
    items = [parse_item(line.strip()) for line in infile]
for item in sorted(items, key=itemgetter(1), reverse=True):
    pass"
generating unique number sequence for use as entity key for app engine datastore,"new_ids = db.allocate_ids(handmade_key, 1)
new_id_num = int(new_id[0])
new_key = db.Key.from_path('MyModel', new_id_num)"
how to combine python asyncio with threads?,"import time
from concurrent.futures import ProcessPoolExecutor"
how to autoimport module in flask-migrate migration,from myapp import migration_types
"pull large amounts of data from a remote server, into a dataframe","def read_sql_chunked(query, con, nrows, chunksize=1000):
    start = 1
dfs = []
while start < nrows:
    df = pd.read_sql('%s LIMIT %s OFFSET %s' % (query, chunksize, start), con)"
what's the simplest way of detecting keyboard input in python from the terminal?,print(c)
how to skip a unittest case in python 2.6,"if condition:
    return lambda x: x"
tornado equivalent of delay,"class MyHandler(RequestHandler):
    pass"
templatedoesnotexist at / base.html,BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
"distance between numpy arrays, columnwise",normed.mean(axis=1)
driver python for postgresql,"from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
some_engine = create_engine('postgresql://scott:tiger@localhost/')
Session = sessionmaker(bind=some_engine)
session = Session()
myobject = MyObject('foo', 'bar')
session.add(myobject)
session.commit()"
output pyodbc cursor results as python dictionary,cursor.select('<your SQL here>')
parsing meaning from text,"text = nltk.word_tokenize('And now for something completely different')
nltk.pos_tag(text)"
combining a tokenizer into a grammar and parser with nltk,"['DT', 'NN', 'VBZ', 'DT', 'NN']"
howto get all methods of a python class with given decorator,"print(list(methodsWithDecorator(Test3, deco)))"
python: how to check if an object is an instance of a namedtuple?,"def isnamedtupleinstance(x):
    pass"
removing duplicates of a list of sets,"for item in L:
    pass"
python dictionary creation syntax,"a['q']
a['r'] = a['s'] = a['t'] = 2"
how to replace all non-numeric entries with nan in a pandas dataframe?,"def isnumber(x):
    pass"
see if two files have the same content in python,randText2 = getRandText(N)
numpy: comparing elements in two arrays,import numpy as np
how to use dot notation for dict in python?,"from collections import namedtuple
Test = namedtuple('Test', 'name foo bar')
my_test = Test('value', 'foo_val', 'bar_val')
print(my_test)
print(my_test.name)"
python remove last char from string and return it,c = a[-1]
list's ngrams with zip,"def make_ngrams(lst, n):
    return zip(*(lst[i:] for i in range(n)))"
pythonic way to generate string rotations,"def rotations(s):
    pass"
find hyperlinks in text using python (twitter related),"import re
myString = 'This is my tweet check it out http://tinyurl.com/blah'
r = re.compile('(http://[^ ]+)')"
flask: are blueprints necessary for app factories?,""""""" register the blueprints on your app """""""
csv to sparse matrix in python,from numpy import *
how to make a grouped boxplot graph in matplotlib,"fig, axes = plt.subplots(ncols=3, sharey=True)"
optional argument for each positional argument,parser = argparse.ArgumentParser()
using mock to patch a non-existing attribute,"with MyContextManager():
    pass"
argparse: some mutually exclusive arguments in required group,parser.error('No arguments provided.')
python: how to keep only first 50 char of a string,"len(x)
y = x[:50]
len(y)
y"
python itertools.combinations: how to obtain the indices of the combined numbers,"a = [7, 5, 5, 4]"
best seed for parallel process,rand_int <<= 8
how to update the value of a row of a wpf datagrid from ironpython?,self.value += 1
proper way of cancelling accept and closing a python processing/multiprocessing listener connection,c = l.accept()
convert a space delimited file to comma separated values file in python,"df.to_csv('data_out.csv', header=None)"
match set of dictionaries. most elegant solution. python,"deleted = set(old.keys()) - set(new.keys())
intersect = set(new.keys()).intersection(set(old.keys()))
diff = {id: dict(set(new[id].items()) - set(old[id].items())) for id in
    intersect}
diff.update({id: new[id] for id in created})
list_diff = [dict(data, **{'id': id}) for id, data in list(diff.items())]"
python mro order,"def mro_merge(*args):
    pass"
how to convert a str to a single element list in python,var_1 = ['hello']
data corruption piping between c++ and python,"msvcrt.setmode(sys.stdin.fileno(), os.O_BINARY)"
"python sqlalchemy - ""mysql server has gone away""","from sqlalchemy import create_engine, event
from sqlalchemy.exc import DisconnectionError

def checkout_listener(dbapi_con, con_record, con_proxy):
    pass"
odoo/openerp: hiding create button from treeview,"def fields_view_get(self, cr, uid, view_id=None, view_type='form', context=
    None, toolbar=False, submenu=False):
    res = models.Model.fields_view_get(self, cr, uid, view_id=view_id,
        view_type=view_type, context=context, toolbar=toolbar, submenu=submenu)
default_type = context.get('default_type', False)
can_create = default_type != 'out_customer_production'
update = not can_create and view_type in ['form', 'tree']
if update:
    doc = etree.XML(res['arch'])
if not can_create:
    for t in doc.xpath('//' + view_type):
        t.attrib['create'] = 'false'
res['arch'] = etree.tostring(doc)
return res"
how to extract information between two unique words in a large text file,"x = re.findall('alpha(.*?)bravo', data, re.DOTALL)
x
"""""""""""".join(x).replace('\n', ' ')"
calling custom functions from python using rpy2,r_getname()
replacing punctuation in a data frame based on punctuation list,df
equivalent of transform in r/ddply in python/pandas?,mtcars = com.load_data('mtcars')
making exe file from python that uses command line arguments,import py2exe
how to convert listof list into single list without import,"from itertools import chain
a = [[1, 2], [23, 51, 6], ['Hi', 'hello']]
list(chain.from_iterable(a))"
webpy: how to set http status code to 300,"def __init__(self, choices):
    status = '300 Multiple Choices'"
how do i create a list of unique random numbers?,answer.add(r)
how can i apply a namedtuple onto a function?,"Record = namedtuple('Record', 'foo bar')
r = Record(foo=1, bar=False)
func(**r._asdict())
func(*r)"
depth of a tree python,"def depth(self):
    if self.left == None and self.right == None:
        return 1"
data structure to perform fast gps lookups?,"return '[' + xmin + ', ' + xmax + '] x [' + ymin + ', ' + ymax + ']'"
is a string formatter that pulls variables from its calling scope bad practice?,"def inner():
    pass"
how to turn off mysql query cache while using sqlalchemy?,"if DEBUGGING:
    event.listen(engine, 'connect', disable_query_cache)"
replace all words from word list with another string in python,"text = text.replace(word, 'swords')"
list match in python: get indices of a sub-list in a larger list,"a = [1, 2, 9, 3, 8]
b = [1, 9, 1]
[a.index(item) for item in b]"
simulate python keypresses for controlling a game,"ctypes.windll.user32.SendInput(1, ctypes.pointer(x), ctypes.sizeof(x))"
matrix multiplication with numpy,"m = diag(list(range(1, 11)))"
python - enable access control on simple http server,from http.server import SimpleHTTPRequestHandler
how to display locale sensitive time format without seconds in python,"date_time = datetime.now()
formatted_time = format_time(date_time, format='short', locale='en_US')
print(formatted_time)"
intersection of two linestrings geopandas,intersect = r.intersection(c)
how to add a new column to a hierarchical dataframe grouped by groupby,"if magdir < 180:
    pass"
how to remove dates from a list in python,"list_of_words = ['08/20/2014', '10:04:27', 'pm', 'complet', 'vendor', 'per',
    'mfg/recommend', '08/20/2014', '10:04:27', 'pm', 'complet']"
ask multiple user input in single line,first_input = eval(input('enter first input: '))
how to plot line (polygonal chain) with numpy/scipy/matplotlib with minimal smoothing,"plt.plot(xx, interp(xx))
plt.plot(x, y, 'bo')
plt.ylim(0, 25)
plt.grid(True)
plt.show()"
how to unittest gpio output value of raspberry pi in python,"def test_rotateClockwise(self, mock_output):
    pass"
multiple negative lookbehind assertions in python regex?,import re
python: make a list generator json serializable,"f.write(json.dumps(item, f) + ',')"
pandas dataframe with 2-rows header and export to csv,"'\n'.join([','.join(h) for h in zip(*df.columns)]) + '\n'"
python last iteration in for loop,"if i < len(my_list) - 1:
    pass"
reversing a stack in python using recursion,"if not reversel:
    reversel = []"
parse_dates in pandas,"import datetime as dt
dt.datetime.strptime('30MAR1990', '%d%b%Y')
parser = lambda date: pd.datetime.strptime(date, '%d%b%Y')
pd.read_csv(StringIO(s), parse_dates=[0], date_parser=parser)"
how to pull a random record using django's orm?,"from django.db.models.aggregates import Count
from random import randint


class PaintingManager(models.Manager):

    def random(self):
        count = self.aggregate(count=Count('id'))['count']
random_index = randint(0, count - 1)
return self.all()[random_index]"
matplotlib legend: including markers and lines from two different graphs in one line,"ax.legend(loc='center right', numpoints=1)"
logging using elasticsearch-py,ll.debug('msg1')
plotting the projection of 3d plot in three planes using contours,"ax.contourf(X, Y, Z, zdir='y', offset=4, cmap=plt.cm.hot)"
comparing two numpy arrays of different length,"numpy.digitize(b, a)"
python : multiprocessing and array of c_char_p,lock = mp.Lock()
how to annotate seaborn pairplots?,"p.fig.suptitle('this is the figure title', verticalalignment='top', fontsize=20
    )
p.fig.text(0.33, 1.02, 'Above the plot', fontsize=20)
p.fig.text(0, 1, 'Left the plot', fontsize=20, rotation=90)"
delete duplicate rows in django db,"if MyModel.objects.filter(photo_id=row.photo_id).count() > 1:
    pass"
how do you get the display width of combined unicode characters in python 3?,"def visible_length(unistr):
    """"""Returns the number of printed characters in a Unicode string.""""""
return len([char for char in unistr if unicodedata.combining(char) == 0])"
tree transformations using visitor pattern,"n1.accept(this)
this.nextLoc = result.right"
how to properly write cross-references to external documentation with intersphinx?,"'http://docs.scipy.org/doc/numpy/reference/generated/numpy.broadcast.html#numpy.broadcast',"
remove items from a list while iterating without using extra memory in python,"for g_current in list_of_g:
    if not subtle_condition(g_current):
        list_of_g[to_idx] = g_current
to_idx += 1
del list_of_g[to_idx:]"
return values from array based on indices of common values in two other arrays,"a = np.random.randint(0, 200, 100)
b1 = np.random.randint(0, 100, 50)
np.intersect1d(b1, a)"
how to set layer-wise learning rate in tensorflow?,opt2 = tf.train.GradientDescentOptimizer(0.0001)
delete / insert data in mmap'ed file,VDATA.close()
python dryscrape scrape page with cookies,"name.set('<login>')
password = session.at_xpath('//*[@name=""password""]')"
confused with getattribute and setattribute in python,o3.method()
how can i vectorize this for loop in numpy?,"masked = np.where(flag > 0, X.T[..., (np.newaxis)], 0)
dW = masked.sum(axis=1)"
is it possible to debug cherrypy applications?,"if __name__ == '__main__':
    generate_app(options.environment)
engine = cherrypy.engine
try:
    engine.start()
except:
    sys.exit(1)"
how can i get all the request headers in django?,request_headers[header] = request.META[header]
grouping items by a key?,lookup = collections.defaultdict(list)
how to format a floating number to fixed width in python,print('% 6.2f' % v)
creating signed urls for amazon cloudfront,"msg_base64 = msg_base64.replace('+', '-')"
static behavior of iterators in python,"print((next(I1), next(I1), next(I1)))
next(I2)"
is there a library for image warping / image morphing for python with controlled points?,from PIL import Image
how can i profile memory of multithread program in python?,pass
how can i implement incremental training for xgboost?,"params = {'objective': 'reg:linear', 'verbose': False}"
django: how to login user directly after registration using generic createview,"class CreateArtistView(CreateView):
    template_name = 'register.html'"
"in a unit test, how can the parameter passed to a custom exception be determined?","class MyError(Exception):
    pass

def raiseError():
    raise MyError(100)


class TestStuff(unittest.TestCase):

    def testError(self):
        self.assertRaisesRegex(MyError, '100', raiseError)
unittest.main()"
windows (xp to windows 7) audio playback with python?,"sys.exit(-1)
wf = wave.open(sys.argv[1], 'rb')
p = pyaudio.PyAudio()
stream = p.open(format=p.get_format_from_width(wf.getsampwidth()), channels
    =wf.getnchannels(), rate=wf.getframerate(), output=True)
data = wf.readframes(chunk)
while data != '':
    stream.write(data)
data = wf.readframes(chunk)
stream.close()
p.terminate()"
contours with map overlay on irregular grid in python,"im = ax.contourf(xi, yi, zi)
ax.scatter(data.Lon, data.Lat, c=data.Z, s=100, vmin=zi.min(), vmax=zi.max())
fig.colorbar(im)
plt.show()"
streaming data for pandas df,"print(df.shape)
sleep(0.1)"
numpy: creating a complex array from 2 real ones?,"A = rand(100, 2)
A_comp = A.view(dtype=np.complex128)"
python keep points in spline interpolation,"interpolated_x = np.linspace(x.min(), x.max(), new_length - len(x) + 2)
new_x = np.sort(np.append(interpolated_x, x[1:-1]))"
combining text stemming and removal of punctuation in nltk and scikit-learn,"def tokenize(text):
    text = ''.join([ch for ch in text if ch not in string.punctuation])
tokens = nltk.word_tokenize(text)
stems = stem_tokens(tokens, stemmer)"
cherrypy logging: how do i configure and use the global and application level loggers?,log.error_log.addHandler(h)
how to move files between two amazon s3 buckets using boto?,"import boto
c = boto.connect_s3()
src = c.get_bucket('my_source_bucket')
dst = c.get_bucket('my_destination_bucket')"
"python regex, remove all punctuation except hyphen for unicode string","txt = "")*^%{}[]thi's - is - @@#!a !%%!!%- test.""
re.sub(pattern, '', txt)"
"in python, what is the fastest algorithm for removing duplicates from a list so that all elements are unique *while preserving order*?","if item not in found:
    found.add(item)"
looping from 1 to infinity in python,"for i in range(sys.maxsize ** 10):
    pass"
how to create an object for a django model with a many to many field?,"foo = Foo()
foo.save()
foo.bars = [1, 2]"
new column with coordinates using geopy pandas,states = df['state_name'].unique()
how to install python subversion bindings needed by hg convert on mac os x 10.8?,xcode - select - -install
how to replace value of variable within function in python 3,testfunc()
python debug tools for multiprocessing,"if __name__ == '__main__':
    import multiprocessing
p = multiprocessing.Pool(processes=1)
r = p.apply(go)"
how to get most informative features for scikit-learn classifier for different class?,-5.55682806 - 4.86368088 - 5.55682806 - 4.86368088 - 5.55682806 - 5.55682806
dynamically add a class __dict__ property in python,"class C(CBase):
    pass"
basics of recursion in python,"print(listSum([1, 3, 4, 5, 6]))"
"reading in parts of file, stopping and starting with certain words","from re import findall, DOTALL"
pandas: keep only every row that has cumulated change by a threshold?,val = y.values
sscanf in python,"import re
input = '1:3.0 false,hello'"
how to subset a data frame using pandas based on a group criteria?,df.loc[df.groupby('User')['X'].filter(lambda x: x.sum() == 0).index]
animating a quadmesh from pcolormesh with matplotlib,plt.show()
creating a range of dates in python,"def date_generator():
    pass"
how can a python list be sliced such that a column is moved to being a separate element column?,"[item for sublist in [[i[1:], [i[0]]] for i in l] for item in sublist]"
quickly find differences between two large text files,print(result)
pytest: how to explicitly enable a plugin in command line,[pytest]
simulate python keypresses for controlling a game,"ctypes.windll.user32.SendInput(1, ctypes.pointer(x), ctypes.sizeof(x))
while True:
    PressKey(17)
time.sleep(1)
ReleaseKey(17)
time.sleep(1)"
represent directory tree as json,d['type'] = 'file'
"is there a numpy/scipy dot product, calculating only the diagonal entries of the result?","a = np.arange(15).reshape(5, 3)"
set hudson build description via web api,"req.add_header('Content-Type', 'application/x-www-form-urlencoded')"
how to include git dependencies in setup.py for pip installation,pytz == 2016.4
accessing elements in coo_matrix,"m = coo_matrix([[1, 2, 3], [4, 5, 6]])
m1 = m.tocsr()
m1[1, 2]
m1"
doing math to a list in python,"a = numpy.array([111, 222, 333])
a * 3
a + 7"
"in django, how do i select 100 random records from the database?",object_list = pool[:100]
display notifications in gnome shell,Notify.init('Hello world')
extract first and last row of a dataframe in pandas,"print(pd.concat([df.iloc[(0), :], df.iloc[(-1), :]], axis=1).T)"
python datetime object show wrong timezone offset,"dt = tz.localize(datetime.datetime(2011, 6, 20, 0, 0, 0, 0))"
using des/3des with python,"with open(keyfile, 'rb') as f:
    pass"
python: partial sum of numbers,print(value)
most efficient way to remove duplicates from python list while preserving order and removing the oldest element,"if k not in seen:
    seen.add(k)
L[next(n)] = item
L[:next(n) + 1] = []"
urllib.request: any way to read from it without modifying the request object?,"return getattr(self._request, attr)"
attribute error when extracting data from a url with a zip file,"data = urllib.parse.urlencode({'lookupPage': 'lookup_yield_curve.php',
    'startRange': '1986-01-01', 'searchRange': 'all'})"
astimezone() cannot be applied to a naive datetime,tz = pytz.timezone(account.timezone_name)
splitting a list inside a pandas dataframe,df_new.head()
how to check if a tuple contains an element in python?,"if element in thetuple:
    pass"
add dimensions to a numpy array,"frames = np.empty((480, 640, 3, 100))
for k in range(nframes):
    frames[:, :, :, (k)] = cv2.imread('frame_{}.jpg'.format(k))"
puzzle: how many ways can you hit a target with a laser beam within four reflective walls,"TOP_RIGHT = 3, 2
SOURCE = 1, 1
TARGET = 2, 1

def get_mirrored(point):
    ret = []
ret.append((point[0], point[1] - 2 * (point[1] - TOP_RIGHT[1])))
ret.append((point[0], point[1] - 2 * (point[1] - BOTTOM_LEFT[1])))
ret.append((point[0] - 2 * (point[0] - BOTTOM_LEFT[0]), point[1]))
ret.append((point[0] - 2 * (point[0] - TOP_RIGHT[0]), point[1]))
return ret
print(get_mirrored(TARGET))"
python sqlalchemy : table with no primary keys and duplicate values?,"Column('id', Integer, primary_key=True),"
how can a #defined c value be exposed to python in a cython module?,DISABLE_SIMULATION = _DISABLE_SIMULATION
how to sort using key function which takes more than one argument?,"def make_howCentric(boardSideLength):

    def howCentric(position):
        pass"
read file object as string in python,results = wordPattern.search(html)
dealing with duplicate primary keys on insert in sqlalchemy (declarative style),"session = Session()
with session.begin():
    pass"
python dictionary to equivalent pymongo statement,"FILTMAP = {'>=': '$gte', '<=': '$lte', '>': '$gt', '<': '$lt', '!=': '$ne'}"
reading from a frequently updated file,f1.write('blargh')
module with classes with only static methods,return 1.0141 * T ** 2 * p
solving fully parenthesized expressions with recursion,print(algo('((3+2)/(1+4))'))
python: read all text file lines in loop,"with open('t.ini') as f:
    for line in f:
        pass"
splitting chat records from a list,"df = df.groupby(b).agg({'Message': ' '.join, 'To': 'last', 'From': 'last'})"
calculate weighted pairwise distance matrix in python,"import numpy as np
from scipy.spatial.distance import pdist, wminkowski, squareform
object_1 = [0.2, 4.5, 198, 0.003]
object_2 = [0.3, 2.0, 999, 0.001]
object_3 = [0.1, 9.2, 321, 0.023]
list_of_objects = [object_1, object_2, object_3]
X = np.array(list_of_objects)
distances = pdist(X, wminkowski, 2, [1, 1, 1, 10])
distances_as_2d_matrix = squareform(distances)
print(distances)
print(distances_as_2d_matrix)"
efficient calculation on a pandas dataframe,C.grad_foo + C.grad_bar + C.grad_baz
removing duplicates from nested list based on first 2 elements,"seen = set()
seen_add = seen.add"
make an object that behaves like a slice,"""type '%.100s' is not an acceptable base type"","
one object two foreign keys to the same table,"post = db.relationship('Post', primaryjoin='User.id == Post.id', backref=
    'post_user', lazy='dynamic')
post_blame = db.relationship('Post', foreign_keys=
    'User.id == Post.moderated_by', backref='post_blame', lazy='dynamic')"
python berkeley db/sqlite,conn = dbapi2.connect('test.db')
sorting json in python by a specific value,"sorted_list_of_keyvalues = sorted(list(ips_data.items()), key=item[1]['data_two'])"
how are debug consoles implemented in python?,"def start(self):
    pass"
importing modules from parent folder,"currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.
    currentframe())))
parentdir = os.path.dirname(currentdir)
sys.path.insert(0, parentdir)
import mymodule"
pythonic way of comparing all adjacent elements in a list,"A = list(range(10))
found1 = True
while found1:
    found1 = False
for i, j in enumerate(range(1, len(A))):
    if A[i] < A[j]:
        A[i], A[j] = A[j], A[i]
found1 = True
print(A)"
how to export per-vertex uv coordinates in blender export script,vertexAttributeList.append(vertexAttribute)
how to make ordered dictionary from list of lists?,"bars['20010105']
bars['20010105'].close"
saving multiple plots,"fileNameTemplate = 'C:\\documents\\Plot{0:02d}.png'
for subdir, dirs, files in os.walk(rootdir):
    pass"
how to generate the pem serialization for the public rsa/dsa key,"seq[:] = [0, key.p, key.q, key.g, key.y, key.x]"
python matplotlib multiple bars,"ax.bar(x - 0.2, y, width=0.2, color='b', align='center')"
simple way to simulate a slow network in python,"time.sleep(max(requiredDuration - connectionDuration, self._latency))"
pandas: slicing a dataframe into multiple sheets of the same spreadsheet,new_df = df.groupby(m % how_many_groups).apply(reset)
difference between filter with multiple arguments and chain filter in django,"Model.objects.filter(m2m_field=1).filter(m2m_field=2)
Model.objects.filter(Q(m2m_field=1) & Q(m2m_field=2))"
python class that acts as mapping for **unpacking,__len__
spark rdd - mapping with extra arguments,return _processDataLine
how to embed a python interpreter in a pyqt widget,app.exec_()
how to pass unicode keywords to **kwargs,"for k in d:
    if isinstance(k, str):
        v = d[k]"
is it possible to compute an inverse of sparse matrix in python as fast as in matlab?,"A = np.diag(1.0 / np.arange(1, 10000))"
how redirect a shell command output to a python script input ?,"import sys
data = sys.stdin.readlines()"
i need a python class that keep tracks of how many times it is instantiated,"class Foo(object):
    pass"
resampling trade data into ohlcv with pandas,"vol = df.resample('30s', how={'volume': 'sum'})
vol.columns = pd.MultiIndex.from_tuples([('volume', 'sum')])
vol
price = df.resample('30s', how={'price': 'ohlc'})"
how do i generate a spectrogram of a 1d signal in python?,dt = 4e-08
how to strip source from distutils binary distributions?,return [filename for filename in filenames if not filename.endswith('.py')]
what do i need to import to gain access to my models?,from django.db import transaction
what's the best way of skip n values of the iteration variable in python?,continue
named string format arguments in python,"my_string = 'Hi! My name is {name}. I live in {state}'
new_string = my_string.format(name='Xi', state='Xo')
print(new_string)"
python: get the first character of a the first string in a list?,print(mystring[3])
turn pandas dataframe of strings into histogram,"s1 = pd.Series(['a', 'b', 'a', 'c', 'a', 'b'])
s2 = pd.Series(['a', 'f', 'a', 'd', 'a', 'f', 'f'])
d = pd.DataFrame({'s1': s1, 's2': s2})"
python: how to replace n random string occurrences in text?,import random
plotting points on the surface of a sphere in python's matplotlib,"fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(x, y, z, rstride=1, cstride=1, color='c', alpha=0.3,
    linewidth=0)
ax.scatter(xx, yy, zz, color='k', s=20)
ax.set_xlim([-1, 1])
ax.set_ylim([-1, 1])
ax.set_zlim([-1, 1])
ax.set_aspect('equal')
plt.tight_layout()
plt.show()"
how can i know the match index in a regular expression subn's repl function,self.matchcnt += 1
how to create a new instance from a class object in python,a2 = k2()
creating separate database connection for every celery worker,return self._close_old_connections()
fastest algorithm for finding overlap between two very large lists?,"small_list_set = set(small_list)
for line in big_list:
    for item in line:
        if item in small_list_set:
            pass"
relative importing python module from a subfolder from a different subfolder,configs / __init__.py
how do i merge two python iterators?,"def izipmerge(a, b):
    for i, j in zip(a, b):
        yield i"
django imagefield default,"if self.image and hasattr(self.image, 'url'):
    return self.image.url"
how do i subclass qapplication properly?,"""""""
classes needing 'global' application attributes use for example: 
QCoreApplication.instance().mainWindow
""""""


class MyApp(QApplication):

    def __init__(self, args):
        super(MyApp, self).__init__(args)"
how to transform a key pressed into a different one in pygtk,"if event.keyval == gtk.gdk.keyval_from_name('KP_Decimal'):
    pass"
"best way to poll a web service (eg, for a twitter app)","while running:
    start = time.clock()
poll_twitter()"
python - crontab to run a script,"job.hour.on(12)
cron.write()
if __name__ == '__main__':
    main()"
how to convert unicode text to normal text,chardet.detect(elems[0].getText())
python and remove annotation from figure,plt.draw()
django deleteview without confirmation template,success_url = '<success_url>'
extracting an attribute value with beautifulsoup,staininfo_attrb_value = each_tag['staininfo']
faster convolution of probability density functions in python,fft_of_rows = numpy.fft.fft(rows)
argsort for a multidimensional ndarray,"M, N = a.shape
out = b.ravel()[a.argsort(1) + np.arange(M)[:, (None)] * N]"
how can i dump raw xml of my request and server's response using suds in python,"logging.getLogger('suds.client').setLevel(logging.DEBUG)
logging.getLogger('suds.transport').setLevel(logging.DEBUG)
logging.getLogger('suds.xsd.schema').setLevel(logging.DEBUG)
logging.getLogger('suds.wsdl').setLevel(logging.DEBUG)"
argparse subcommands with nested namespaces,parser_a.add_argument('--foo')
can i add message to the tqdm progressbar?,"from tqdm import trange
from time import sleep
t = trange(100, desc='Bar desc', leave=True)
for i in t:
    t.set_description('Bar desc (file %i)' % i)
t.refresh()
sleep(0.01)"
convert custom formula to python function,formula = '(({foo} + {bar}) - ({baz}/2) )'.format(**function_mapping)
is there any gps library for use in python?,pass
column with list of strings in python,"categories = [['fast_food', 'restaurant'], ['coffee', 'cafe'], ['burger',
    'restaurant']]
counts = [137, 176, 390]
df = pd.DataFrame({'categories': categories, 'review_count': counts})
df.categories.map(lambda x: 'restaurant' in x)"
"python bottle always logs to console, no logging to file","def runWeb(aserver, aport):
    run(host=aserver, port=aport, debug=True)"
cmd console game; reduction of blinking,"for i in range(100):
    n = 0"
split a string by spaces -- preserving quoted substrings -- in python,import shlex
preserving text structure information - pyparsing,comment = pp.Literal('//') + pp.restOfLine
fastest object to iterate a chars in a list of strings,chars = list(chain.from_iterable([list(set(word)) for word in l]))
python constructor and default value,f2 = Foo()
how do i read the number of files in a folder using python?,"for f in os.listdir(path):
    if os.path.isfile(os.path.join(path, f)):
        pass"
how to avoid circular imports in python?,"def __init__(self):
    print(('in class ""B"":', a_mod().A.__name__))"
prevent string being printed python,"print(""don't write this"")
sys.stdout = sys.__stdout__"
most pythonic way to read csv values into dict of lists,"data = {k: [v] for k, v in list(dr.next().items())}"
numpy concatenate 2d arrays with 1d array,"np.row_stack((a, b))"
cross-platform gui toolkit for deploying python applications,self.threads.append(self.makeThread(particles[i]))
use nltk without installing,"ccg
chat"
getting a list of files in a custom directory using glob(),"filelist = glob.glob(fileroot)
print(filelist)"
regex in python - using groups,"tale = 'resent present ppresent presentt'
re.findall('\\bpresent\\b', tale)"
python qtwebkit save webpage to file,"super(Downloader, self).__init__(parent)"
counting the amount of occurences in a list of tuples,"{'12392': 2, '7862': 1}"
enumerate in python,"def uniq_docs(inverted_index):
    last = None"
how to grab numbers in the middle of a string? (python),"my_list = []
for line in s.splitlines():
    ints = list(filter(str.isdigit, line.split()))
if ints:
    my_list.append(map(int, ints))"
python multiprocessing with twisted's reactor,"def run(self):
    while True:
        time.sleep(1)"
how can i send a message to a group conversation with skype4py in python,"skypeClient = skype.Skype()
skypeClient.Attach()
for elem in skypeClient.ActiveChats:
    if len(elem.Members) > 2:
        elem.SendMessage('SomeMessageHere')"
find all circles in image,"for i in circles[(0), :]:
    cv2.circle(cimg, (i[0], i[1]), i[2], (0, 255, 0), 2)
cv2.circle(cimg, (i[0], i[1]), 2, (0, 0, 255), 3)"
"is there a simple, elegant way to define singletons?",print('Different')
flask-stormpath token based authentication,"def wrappingFunc():
    pass"
python-order a list so that x follows y and y follows x,"result = [None] * (len(data) + len(tweets))
result[::2] = data
result[1::2] = tweets"
how do i download pdf file over https with python,"with open('file.pdf', 'w') as fout:
    pass"
"given a linear order completely represented by a list of tuples of strings, output the order as a list of strings","ranks = [('best', 'better'), ('best', 'good'), ('better', 'good')]"
python: finding lowest integer,bar
jinja templates - format a float as comma-separated currency,"if kwargs:
    return ufmt_str.format(**kwargs)"
fetch a wikipedia article with python,"import urllib.request, urllib.error, urllib.parse"
python: pandas filter string data based on its string length,"df['B'] = df['B'].astype('str')
mask = (df['A'].str.len() == 10) & (df['B'].str.len() == 10)
df = df.loc[mask]
print(df)"
recursive crawling with python and scrapy,br.set_handle_equiv(True)
"copy 2d array into 3rd dimension, n times (python)","print(b[:, :, (1)])"
how can i quantify difference between two images?,"print('Zero norm:', n_0, '/ per pixel:', n_0 * 1.0 / img1.size)"
is there a way of putting the python shell output in a tkinter window?,"wid = termf.winfo_id()
os.system('xterm -into %d -geometry 80x20 -sb -e python &' % wid)"
python multiple variable assignment confusion,"a, b = 2, 3"
fetching tweets with hashtag from twitter using python,from twython import Twython
python xml.sax parsing issue with accentuated characters,import io
problem accessing config files within a python egg,"_log_config_location = resource_stream(__name__, _log_config_file)
logging.config.fileConfig(_log_config_location)"
numpy element-wise multiplication of an array and a vector,"ares = (a.transpose(0, 1, 3, 2) * v).transpose(0, 1, 3, 2)"
python itertools.combinations: how to obtain the indices of the combined numbers,b
how to output nltk chunks to file?,"for chunk in chunked:
    fout.write(text_type(chunk) + '\n\n')"
"how do you do a simple ""chmod +x"" from within python?","with open(path, 'w') as f:
    f.write('#!/bin/sh\n')
f.write('echo ""hello world""\n')
make_executable(path)"
how to join the stdout of two subprocesses and pipe to stdin of new subprocess in python,"def read(self, *args):
    ret = self.f1.read(*args)
if ret == '':
    ret = self.f2.read(*args)
return ret
fh_bam = open('output.bam', 'w')
params_0 = ['samtools', 'view', '-HS', 'header.sam']
params_1 = ['samtools', 'view', 'input.bam', '1:1-50000000']
params_2 = ['samtools', 'view', '-bS', '-']
sub_0 = subprocess.Popen(params_0, stderr=subprocess.PIPE, stdout=
    subprocess.PIPE)
sub_1 = subprocess.Popen(params_1, stderr=subprocess.PIPE, stdout=
    subprocess.PIPE)
sub_2 = subprocess.Popen(params_2, stdin=concat(sub_0.stdout, sub_1.stdout),
    stdout=fh_bam)"
"django switching, for a block of code, switch the language so translations are done in one language","with translation.override('dk'):
    pass"
search a list of nested tuples of strings in python,"['alfa', 'bravo', 'charlie', 'delta', 'echo']"
how to embed some application window in my application using any python gui framework,"x.connect('clicked', runxterm)
w.show_all()
gtk.main()"
how to add stdout and stderr to logger file in flask,log.setLevel(logging.INFO)
python: deep appending to dictionary? - in a single expression,return result
python: partial sum of numbers,"def cumsum(i):
    s = 0
for elt in i:
    s += elt
yield s"
confused by lexical closure in list comprehension,"return f
a, b, c = [fgen(n) for n in L]"
"how does one add an item to gtk's ""recently used"" file list from python?","recent_mgr = Gtk.RecentManager.get_default()
uri = 'file:/path/to/my/file'"
how to get the diff of two pdf files in python?,"print(cmp(c1, c2))"
"shorten a number of lists based on a collective max length, moving excess to new lists","for index, this_list in enumerate(new_lists):
    overflows[index] = this_list[maxLength:]
this_list = this_list[:maxLength]"
how to calculate auto-covariance in python,"print(('Autocorrelation:', autocorrelation()))"
fastest way to remove duplicates in lists python,s = set(list1)
how do i use python for web development without relying on a framework?,"start_response(status, response_headers)"
python + selenium + phantomjs render to pdf,"def execute(script, args):
    driver.execute('executePhantomScript', {'script': script, 'args': args})
driver = webdriver.PhantomJS('phantomjs')"
python regex - replace a string not located between two specific words,"re.sub('wolf.*?chicken|\\bate\\b', lambda m: 'drank' if m.group() == 'ate' else
    m.group(), s)"
how to create multidimensional array with numpy.mgrid,"ans = np.mgrid[0:1:100j, 0:1:100j, 0:1:100j]
assert np.allclose(result, ans)"
segmenting license plate characters,imshow(Iopen)
concatenating two range function results,"list(range(5))
list(range(10, 20))
list(range(5)) + list(range(10, 20))"
how to add values in keys in a dictionary inside a loop?,"x = ['a', '3', '4', 'b', '1', '2', 'c', '4', '5']
key = '<unknown>'
category = defaultdict(list)
for i in x:
    if i.isalpha():
        key = i
else:
    category[key].append(i)
print(category)"
how to select elements in the intersection of two lists in python,"for i in set(list1).intersection(set(list2)):
    pass"
"python: is there an equivalent of mid, right, and left from basic?",s[-2:]
django model fields. custom field value setter,"def x(self):
    del self._x"
how to get pixel coordinates for matplotlib-generated scatterplot?,"fig, ax = plt.subplots()
points, = ax.plot(list(range(10)), 'ro')
ax.axis([-1, 10, -1, 10])
x, y = points.get_data()
xy_pixels = ax.transData.transform(np.vstack([x, y]).T)
xpix, ypix = xy_pixels.T
width, height = fig.canvas.get_width_height()
ypix = height - ypix
print('Coordinates of the points in pixel coordinates...')
for xp, yp in zip(xpix, ypix):
    print('{x:0.2f}\t{y:0.2f}'.format(x=xp, y=yp))
fig.savefig('test.png', dpi=fig.dpi)"
sort versions in python,"self.assertEqual(expected, list(map(str, sorted(versions))))"
python continuously parse console input,self.data.append(data)
python debugger: stepping into a function that you have called interactively,"def foo(f, g):
    h = f + g
print(h)
return 2 * f"
adjusting subplot layout with pandas,"df.T.plot(kind='bar', subplots=True, width=0.7, legend=False, layout=(3, 2),
    sharex=True, sharey=True)
plt.tight_layout()"
how to make a python module or fuction and use it while writing other programs?,import allimports
__sizeof__ str is larger than __sizeof__ a tuple containing that string,t.__sizeof__()
concatenate custom features with countvectorizer,"d = {'text_length': len(terms), 'text_spam': whatever_this_means}
for t in terms:
    d[t] = d.get(t, 0) + 1
return d
vect = DictVectorizer()
X_train = vect.fit_transform(features(d) for d in documents)"
"django multivaluedictkeyerror error, how do i deal with it",from django.utils.datastructures import MultiValueDictKeyError
processing data by reference or by value in python,"a = [1, 2]
b = a"
how to read text from a tkinter text widget,frame.pack()
how to access previous/next element while for looping?,"l = [1, 2, 3]
for i, j in zip(l, l[1:]):
    pass"
repeating multiple characters regex,"re.search('[0-9]* (ABC(...))', '123 ABCDEF 456').group(1)"
is there a python shortcut for an __init__ that simply sets properties?,"def __init__(self, **kwds):
    pass"
creating pandas data frame from multiple files,import os
summing with a for loop faster than with reduce?,l = arange(3000000)
"how to split but ignore separators in quoted strings, in python?","PATTERN = re.compile('((?:[^;""\']|""[^""]*""|\'[^\']*\')+)')"
show an array in format of scientific notation,"import numpy as np
a = np.zeros(shape=(5, 5), dtype=float)"
python: read configuration file with multiple lines per key,print(sql_dict['query'])
how to build a python decorator with optional parameters?,return _trace(args[0])
how do i add items to a gtk.combobox created through glade at runtime?,combo = gtk.combo_box_new_text()
split a string of a specific pattern into three parts,prog = re.compile('\\[([^\\]]*)\\]\\s*\\[([^\\]]*)\\]\\s*(.*)')
remove overlapping tick marks on subplot in matplotlib,"plt.setp(xticklabels, visible=False)"
multiprocessing queue in python,q.put(item)
how to make an optional value for argument using argparse?,"parser.add_argument('--head', dest='size', const=10, default=80, action=
    'store', nargs='?', type=int, help='Only print the head of the output')"
how can i detect duplicate method names in a python class?,"assert func.__name__ not in names, func.__name__ + ' defined twice'"
can you list all folders in an s3 bucket?,"bucket = s3conn.get_bucket(bucket_name)
folders = bucket.list('', '/')"
pinging an ip range with scapy,"for ip in range(0, 256):
    pass"
how to avoid line color repetition in matplotlib.pyplot?,"sns.palplot(colors)
plt.savefig('pal3.png')"
abort evaluation of python's interactive console,self.process.terminate()
how to vectorise pandas calculation that is based on last x rows of data,"def calculateC2(row):
    if row.name > 365:
        if row.A > 0:
            depth = 10"
combine two arrays and sort,"return np.array(set.union(set(a), b))"
attaching a decorator to all functions within a class,"return super(DecoMeta, cls).__new__(cls, name, bases, attrs)"
how to enter arguments of celery jobs into database to be queried; using mysql,"curs.execute(sql_insert, result)

def add(num1, num2, user):
    return [num1 + num2, user]
curs.execute('SELECT * FROM your_table WHERE user = ?', [_user])
user_exists = curs.fetchone()
if user_exists:
    add.apply_async((num1, num2, user), link=store_callback.s())"
matplotlib contour plot: proportional colorbar levels in logarithmic scale,"cbar = plt.colorbar(CF, ticks=lvls, format='%.4f')"
inverting dictionary in python,movie_dict[actor].append(movie_name)
execute a file with arguments in python shell,"exec(compile(open('abc.py').read(), 'abc.py', 'exec'))"
gtk: how can i get a part of a file in a textview with scrollbars relating to the full file,"top = textview.get_iter_at_location(visible_rect.x, visible_rect.y)
bottom = textview.get_iter_at_location(visible_rect.x, visible_rect.y +
    visible_rect.height)"
set parent in a modelform in google app engine,"book = models.Book(title='Foo')
form = forms.ChapterForm(request.POST)
chapter = form.create(parent=book)"
can't convert a python list to timeseries,Dates = pd.to_datetime(tl2)
xml parsing in python,"dom1 = parse('c:\\temp\\mydata.xml')
datasource = open('c:\\temp\\mydata.xml')
dom2 = parse(datasource)
dom3 = parseString('<myxml>Some data<empty/> some more data</myxml>')"
defining a global function in a python script,"from rk4 import rk4
import numpy as np

def diff(x):
    return x

def mercury(u0, phi0, dphi):
    x = np.array([u0, phi0])
dt = 2
x = rk4(diff, x, dt)
return x
mercury(1, 1, 2)"
"save the ""out[]"" table of a pandas dataframe as a figure",plt.savefig('tmp1.jpg')
add new column and remove duplicates in that replace null values column wise,"df.loc[~df.duplicated(), ""C'""] = df['C']
df.fillna('', inplace=True)"
trying to find a match in two strings - python,"if string_a[i] == string_b[j]:
    same.append((i, j, string_b[j]))"
is there a way of drawing a caption box in matplotlib,"txt = """"""
    Lorem ipsum dolor sit amet, consectetur adipisicing elit,
    sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris
    nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in
    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla
    pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
    culpa qui officia deserunt mollit anim id est laborum.""""""
fig = plt.figure()
ax1 = fig.add_axes((0.1, 0.4, 0.8, 0.5))
ax1.bar(x, y, 0.2)
fig.text(0.1, 0.1, txt)
plt.show()"
how to make `help` act the same as `--help` in argparse,"subparsers = parser.add_subparsers()
p_help = subparsers.add_parser('help')
p_help.set_defaults(func=help, parser=parser)
args = parser.parse_args()
args.func(args)"
return the column name(s) for a specific value in a pandas dataframe,"""""""col7"""""""
convert list of objects to a list of integers and a lookup table,"for k, v in list(lookup.items()):
    lookup[k] = list(v)"
how to throttle django error emails,pass
extract historic leap seconds from tzdata,TZFILE_MAGIC = 'TZif'.encode('US-ASCII')
django rest framework + django rest swagger + imagefield,file = models.ImageField(upload_to='photos')
algorithm for itertools.combinations in python,"for j in range(i + 1, r):
    indices[j] = indices[j - 1] + 1"
use of properties in python like in example c#,self._x = 0
simplest example for streaming audio with alexa,"def build_audio_response(url):
    return {'version': '1.01', 'response': {'directives': [{'type':
        'AudioPlayer.Play', 'playBehavior': 'REPLACE_ALL', 'audioItem': {
        'stream': {'token': '12345', 'url': url, 'offsetInMilliseconds': 0}
        }}], 'shouldEndSession': True}}

def handle_session_end_request():
    return {'version': '1.0', 'response': {'shouldEndSession': True}}

def play_music(intent, session):
    pass"
how to insert the contents of one list into another,"array = ['the', 'fox', 'jumped', 'over', 'the', 'lazy', 'dog']
array[1:1] = ['quick', 'brown']"
convert string to md5,import hashlib
how can i get nose to find class attributes defined on a base test class?,"if self.validateAttrib(cls_attr) is not False:
    pass"
how to scrape all the content of each link with scrapy?,ITEM_PIPELINES = {'craig.pipelines.CraigPipeline': 300}
getting all visible text from a webpage using selenium,from selenium.webdriver import Firefox
extracting date from a string in python,date = matches[0]
"python, recursively reduce a list (combinations/permutations)",return [letter.join(i) for i in itertools.chain.from_iterable(L)]
plug in django-allauth as endpoint in django-rest-framework,app = SocialApp.objects.get(provider='facebook')
a few python questions,"while n % d != 0:
    d += 1"
"python, detecting elements have been removed/added/changed positions in a list","print('moved items:', moved)"
is it possible to write single line return statement with if statement?,"if x is None:
    pass"
how do i get a list of all windows on my gnome2 desktop using pygtk?,"root = gtk.gdk.get_default_root_window()
for id in root.property_get('_NET_CLIENT_LIST')[2]:
    pass"
django script to access model objects without using manage.py shell,setup()
kivy - screen manager - accessing attribute in other class,"class MenuScreen(Screen):
    pass"
is there a 'multimap' implementation in python?,"multimap.append((3, 'b'))"
get the object with the max attribute's value in a list of objects,"def __eq__(self, other):
    if not isinstance(other, type(self)):
        return NotImplemented"
go subprocess communication,"""""""os/exec"""""""
can't quit pyqt5 application with embedded ipython qtconsole,self._control.clear()
using initspider with splash: only parsing the login page?,driver.find_element_by_id('password').send_keys('password')
"pythonic way to modify all items in a list, and save list to .txt file","for num in range(4):
    for letter in the_list:
        f.write('%s%s\n' % (letter, num))"
check if a function uses @classmethod,"if inspect.ismethod(cls.method) and cls.method.__self__ is cls:
    pass"
python: logging module - globally,logger.debug('submodule message')
recursion in python? runtimeerror: maximum recursion depth exceeded while calling a python object,"while 1:
    stop = 1"
how match a paragraph using regex,"for match in re.finditer('(?s)((?:[^\\n][\\n]?)+)', DATA):
    pass"
assigning to vs. from a slice,a
how to automate the delegation of __special_methods__ in python?,s.append(3)
how to enumerate modules in python 64bit,"class MODULEENTRY32(Structure):
    _fields_ = [('dwSize', DWORD), ('th32ModuleID', DWORD), (
        'th32ProcessID', DWORD), ('GlblcntUsage', DWORD), ('ProccntUsage',
        DWORD), ('modBaseAddr', POINTER(BYTE)), ('modBaseSize', DWORD), (
        'hModule', HMODULE), ('szModule', c_char * 256), ('szExePath', 
        c_char * 260)]"
is it possible to modify lines in a file in-place?,"print(line, end=' ')"
python split string every 3rd value but into a nested format,"a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
flatten(a)"
python variable method name,"def func2(self):
    method = getattr(self, 'func1')
method('arg')"
"in class object, how to auto update attributes?",self.listsquare = [(x ** 2) for x in self.list]
create a complement of list preserving duplicate values,j += 1
"python: variables, inheritance, and default arguments","class C(A):

    def c(self, num=None):
        if num is None:
            pass"
django two modelforms with same field name on one template,"form = ACSForm(prefix='acs', instance=data)
form_edit = OrderACSEditForm(prefix='edit', instance=order)"
scrapy read list of urls from file to scrape?,"f = open('urls.txt')
start_urls = [url.strip() for url in f.readlines()]"
how to get the seconds since epoch from the time + date output of gmtime() in python?,calendar.timegm(time.gmtime(0))
"typeerror: unhashable type: 'dict', when dict used as a key for another dict","d1, d2 = {}, {}"
how to replace values at specific indexes of a python list?,S = numpy.array(s)
find the subset of a set of integers that has the maximum product,"find([-3, 0])"
"plotting a 2d matrix in python, code and most useful visualization","maxvi = np.argsort(a, axis=1)
ii = np.argsort(maxvi[:, (-1)])
pcolor(a[(ii), :])"
how do i change the string representation of a python class?,"def __str__(self):
    return 'a'"
python - how to compute all nth roots of a number?,return roots
determining where in a list ascending or descending stops,"asc, desc = [], []"
how do i use beaker caching in pyramid?,"def photos_view(request):
    gd_client = gdata.photos.service.PhotosService()"
fast tensor rotation with numpy,"def rotT(T, g):
    Tprime = T"
embed matplotlib widget in multiple places,self.fc1.draw()
how do i run tox in a project that has no setup.py?,skipsdist = True
"when using asyncio, how do you allow all running tasks to finish before shutting down the event loop","while True:
    pass"
numpy all differing from builtin all,result = wrap(result)
"an xml file inside hdf5, h5py","xmlfh = open('morphology.xml', 'rb')"
how do i remove dicts from a list with duplicate fields in python?,"list(dict((x['id'], x) for x in L).values())"
crawling through pages with postback data javascript python scrapy,"def parse(self, response):
    self.data = {}"
"comparing 2 dictionaries: same key, mismatching values","dict2 = {'a': 1, 'b': 2, 'c': 4}
m = MultiDict()
for k in list(dict1.keys()):
    if dict1.get(k) != dict2.get(k):
        m.add(k, dict1.get(k))
m.add(k, dict2.get(k))
print(m)
for k in list(m.keys()):
    pass"
how to read subprocess stdout using a different separator from line break,"delims = {'#', '!'}"
paring down a dictionary of lists in python,"((kk, [w for w in vv if re.search('t$', w)]) for kk, vv in list(wordlist.items()))"
find co-occurrence of columns in dataframe,"df = pd.DataFrame(np.random.choice([np.nan, 1, 2], 9).reshape([3, 3]),
    columns=list('abc'))"
python: is there a way to keep an automatic conversion from int to long int from happening?,"e = Decimal(maxint)
f = d ** e"
http post and get with cookies for authentication in python,"s.get(url_0)
r = s.post(url, data)"
check if python dictionary contains value and if so return related value,"for x in fileList:
    pass"
going character by character in a string and swapping whitespaces with python,sentence = 'Ceci est une toute petite phrase.'
how do you connect to oracle using pyodbc,import pyodbc
convert numpy array to pyside qpixmap,"print('%x' % imgarr[0, 0])"
"in python, if i return inside a ""with"" block, will the file still close?","def example(path, mode):
    f = open(path, mode)
try:
    return [line for line in f if condition]
finally:
    f.close()"
inheritance of private and protected methods in python,"class Child(Parent):
    pass"
pandas - add new column to dataframe from dictionary,new_d = pd.Series(d)
getting previous index values of a python list items after shuffling,"l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"
catching an exception while using a python 'with' statement,"try:
    f = open('foo.txt')
except IOError:
    print('error')
else:
    pass"
how do i fix a dimension error in tensorflow?,"def max_pool_2x2(x):
    return tf.nn.max_pool(x, ksize=[1, 1, 1, 1], strides=[1, 1, 1, 1],
        padding='SAME')"
does anyone know a working example of 2dsphere index in pymongo?,from bson.son import SON
regex to match mac address and also extract it's values,"mac_regx = re.compile('^([0-9A-F]{1,2})' + '\\:([0-9A-F]{1,2})' * 5 + '$',
    re.IGNORECASE)"
"convert ""unknown format"" strings to datetime objects?","parser.parse('10-09-2003')
parser.parse('10-09-2003', dayfirst=True)"
change title of tkinter application in os x menu bar,root.title('Your title here')
controlling browser using python?,"from selenium import webdriver
ff = webdriver.Firefox()
ff.get('http://stackoverflow.com/q/3369073/395287')"
optimizing product assembly / disassembly,return (item for item in list(self.__items.items()))
unable to load configuration file from instance folder when deploying app,"kwargs.setdefault('debug', self.config['DEBUG'])"
adding breakpoint command lists in gdb controlled from python script,"def stop(self):
    gdb.write('MyBreakpoint\n')"
2d hsv color space in matplotlib,"pl.imshow(RGB, origin='lower', extent=[0, 360, 0, 1], aspect=150)"
how to copy files to network path or drive using python,os.system(' '.join(cmd_parts))
use groupby in pandas to count things in one column in comparison to another,"df.pivot_table(index='Event', columns='Status', aggfunc=len, fill_value=0)"
sum of nested list in python,"for i in L:
    if isinstance(i, list):
        total += nested_sum(i)
else:
    total += i
return total"
how to scroll a div when ajax is used to load data in python selenium,from selenium.webdriver.support import expected_conditions as EC
executing a function (with a parameter) every x seconds in python,"def stop(self):
    pass"
how to take two lists and combine them excluding any duplicates?,"first = [1, 2, 3, 4]
second = [3, 2, 5, 6, 7]"
how to import a module from a folder next to the current folder?,from src import stringbuilder
how to make a grouped boxplot graph in matplotlib,"for k, v in data.items():
    upper = random.randint(0, 1000)
v['A'] = np.random.uniform(0, upper, size=n)
v['B'] = np.random.uniform(0, upper, size=n)
v['C'] = np.random.uniform(0, upper, size=n)
fig, axes = plt.subplots(ncols=3, sharey=True)
fig.subplots_adjust(wspace=0)
for ax, name in zip(axes, ['dataset1', 'dataset2', 'dataset3']):
    ax.boxplot([data[name][item] for item in ['A', 'B', 'C']])
ax.set(xticklabels=['A', 'B', 'C'], xlabel=name)
ax.margins(0.05)
plt.show()"
how to run python script in webpage,import cgitb
how to get the n maximum values per row in a numpy ndarray?,"gen.shuffle(y.T)
print(np.sort(np.partition(y, -10, axis=1)[:, -10:], axis=1))"
scipy: efficiently generate a series of integration (integral function),"import numpy as np
import scipy.integrate as si"
"python group by array a, and summarize array b - performance",pdf = defaultdict(int)
how to mix bash with python,sys.exit(0)
how to aggregate values over a bigger than ram gzip'ed csv file?,result.heterozygotes += 1
how do i slice a string every 3 indices?,"def chunk_str(str, chunk_size):
    pass"
insert or update keys in a python dictionary,"dict2 = {(1): 'hello', (4): 'four', (5): 'five'}"
sqlalchemy orm select multiple entities from subquery,"class B(Base):
    __tablename__ = 'b'
id = Column(Integer, primary_key=True)
a_id = Column(Integer, ForeignKey('a.id'))
e = create_engine('sqlite://', echo=True)
Base.metadata.create_all(e)
s = Session(e)
s.add_all([A(bs=[B(), B()]), A(bs=[B()])])
s.commit()
subq = s.query(A, B).join(A.bs).with_labels().subquery()
print(s.query(A, B).select_from(subq).all())
a_alias = aliased(A, subq)
b_alias = aliased(B, subq)
print(s.query(a_alias, b_alias).all())"
keep duplicates in a list in python,"counts = Counter(x)
output = [value for value, count in list(counts.items()) if count > 1]"
how to add my own method to the built-in str type?,"class MyStr(str):

    def change(self):
        result = ''
for index, item in enumerate(self):
    if index % 2 != 0:
        result = result + item
return result
x = MyStr('hallo world')
x
x.change()
'change' in dir(x)"
split string on a number of different characters,"sep = ' .,'
s = 'a b.c,d'
print([''.join(g) for k, g in groupby(s, sep.__contains__) if not k])"
python equivalent of perl/ruby ||=,"foo = locals().get('foo', 'hey')"
zeppelin: scala dataframe to python,from pyspark.sql import DataFrame
logging requests to django-rest-framework,from rest_framework import generics
how should i set the default python version in windows,"[defaults]
python = 3"
python is slower than php to get index position,"needle = open('needle.wav', 'rb').read()[46:]
for x in range(0, 10000):
    haystack = open('haystack.wav', 'rb').read()"
unicode in flask-restful api and json issue,sys.setdefaultencoding('utf-8')
python with non-latin-1 pythonhome path,PyObject * result
insert an item into sorted list in python,"l = [0, 2, 4, 5, 9]
bisect.insort_left(l, 8)"
convert matplotlib figure to numpy array without any borders/frame or axis,"back.paste(poly, mask=poly)"
aligning individual columns in pandas to_latex,"print(df.to_latex(index=None, column_format='rrr'))"
context dependent split of a string in python,"splitS = []
start = -1
for end in (sorted(split_commas) + [None]):
    splitS.append(s[start + 1:end])
start = end"
matplotlib scatter plot with legend,"ax.legend([p1, p2], ['$P_1(x)$', '$P_2(x)$'])
plt.show()"
make python respond to windows timezone changes,"class SYSTEMTIME(ctypes.Structure):
    _fields_ = [('wYear', ctypes.c_int16), ('wMonth', ctypes.c_int16), (
        'wDayOfWeek', ctypes.c_int16), ('wDay', ctypes.c_int16), ('wHour',
        ctypes.c_int16), ('wMinute', ctypes.c_int16), ('wSecond', ctypes.
        c_int16), ('wMilliseconds', ctypes.c_int16)]
SystemTime = SYSTEMTIME()
lpSystemTime = ctypes.pointer(SystemTime)
ctypes.windll.kernel32.GetLocalTime(lpSystemTime)"
custom sorting with pandas,"df.sort(columns=['Name', 'rank'], inplace=True)"
keeping function call signatures consistent for a function that accepts a superset of another function's arguments,"ret = foo(ax1, cmap=cmap, norm=norm, orientation='horizontal')"
how can i iterate through two lists in parallel in python?,"for f, b in zip(foo, bar):
    pass"
a fast way to find nonzero entries by row in a sparse matrix in python,"rows, cols = X.nonzero()"
getting random row through sqlalchemy,row = session.query(Table)[rand]
python classes that refer to each other,"def __init__(self):
    super(B, self).__init__()"
python statement of short 'if-else',"if t == 0:
    m = 100
else:
    m = 5"
check if substring is in a list of strings in python,b_any(word in x for x in lst)
how to compile simple python embeded program using distutils,"with open('main.c', 'w') as main:
    main.write(ccode)
compiler = MSVCCompiler()"
how to find union of two strings and maintain the order,yield l[i1:i2]
import csv as list in python,"with open('curr.csv', 'rb') as csvfile:
    spamreader = csv.reader(csvfile, delimiter=',')
print(list(spamreader))"
python socket.io client for sending broadcast messages to tornadio2 server,"super(ConnectionHandler, self).__init__(*args, **kwargs)"
does python assume a symbol is a type before trying to see if it is a function?,"print(Int, type(Int), obj, type(obj))"
extracting days from a numpy.timedelta64 value,"s = pd.Series(pd.timedelta_range(start='1 days', end='12 days', freq='3000T'))
s
s.dt.days"
loading a pyspark ml model in a non-spark environment,"if __name__ == '__main__':
    pass"
what is the easiest way to get all strings that do not start with a character?,"if line.startswith('?'):
    pass"
how to handle incoming real time data with python pandas,"for k, lst in list(CACHE.items()):
    store_and_clear(lst, k)"
reload flask app when template file changes,from os import path
changing constraint naming conventions in flask-sqlalchemy,base.query = _QueryProperty(self)
how can i get a python generator to return none rather than stopiteration?,"timeit.timeit('a.index(0)', 'a=range(10)')"
how to extend sqlite with python functions in django?,"from django.dispatch import receiver

@receiver(connection_created)
def extend_sqlite(connection=None, **kwargs):
    connection.connection.create_function('least', 2, min)"
align text to edge of label in scrollview in kivy,from kivy.config import Config
checking if a value is equal to any value in an array,pass
"python, numpy; how to insert element at the start of an array","np.insert(my_array, 0, myvalue, axis=1)"
how to create a manhattan plot with matplotlib in python?,"ax.set_xlim([0, len(df)])
ax.set_ylim([0, 3.5])"
how to identify non-photograph or 'uninteresting' images using python imaging library (pil),"for item in histogram:
    counts.setdefault(item, 0)"
find broken symlinks with python,"try:
    os.stat(path)
except OSError as e:
    pass"
python instance variables as optional arguments,"if blah is Foo.__default:
    blah = self.instavar"
is there a more efficient way to organize random outcomes by size in python?,"dice = [random.randint(1, 6) for x in range(4)]
sum(sorted(dice)[1:])"
build images and some configuration files like txt and xml files with pyinstaller,"imagesList.append(('icon.ico', '..\\pathfinder\\icon.ico', 'DATA'))"
change how python cmd module handles autocompletion,"completions = ['Mage Slayer (Alara Reborn)',
    'Magefire Wings (Alara Reborn)', 'Sages of the Anima (Alara Reborn)',
    'Sanctum Plowbeast (Alara Reborn)', 'Sangrite Backlash (Alara Reborn)',
    'Sanity Gnawers (Alara Reborn)', 'Sen Triplets (Alara Reborn)']


class mycmd(cmd.Cmd):

    def __init__(self):
        cmd.Cmd.__init__(self)

def do_quit(self, s):
    return True

def do_add(self, s):
    pass

def complete_add(self, text, line, begidx, endidx):
    mline = line.partition(' ')[2]
offs = len(mline) - len(text)
return [s[offs:] for s in completions if s.startswith(mline)]
if __name__ == '__main__':
    mycmd().cmdloop()"
python dictionary to url parameters,"f = furl.furl('')
f.args = {'a': 'A', 'b': 'B'}
print(f.url)"
how to get tkinter canvas to dynamically resize to window width?,"myframe.pack(fill=BOTH, expand=YES)"
any elegant way to add a method to an existing object in python?,"def __init__(self, name):
    pass"
how to overwrite array inside h5 file using h5py,"f1 = h5py.File(file_name, 'r+')
data = f1['meas/frame1/data']
data[...] = X1
f1.close()
f1 = h5py.File(file_name, 'r')"
how to create a temporary directory and get the path / file name in python,dirpath = tempfile.mkdtemp()
divide a dictionary into variables,"return [d[i] for i in k]
return (d[i] for i in k)
for i in k:
    yield d[i]"
python: updating a large dictionary using another large dictionary,b.update(d)
how to convert nested list of lists into a list of tuples in python 3.3?,"nested_lst = [['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]"
python numpy: how to construct a big diagonal array(matrix) from two small array,"[0, 0, 5, 6, 0, 0, 0, 0],"
converting list of dictionaries to unique list of dictionaries,"r.setdefault(key, []).append(lst2dct(val))"
python: variables are still accessible if defined in try or if?,"inner()
outer()"
save facebook profile picture in model using python-social-auth,"def update_avatar(backend, details, response, social_user, uid, user, *args,
    **kwargs):
    if backend.__class__ == FacebookBackend:
        url = 'http://graph.facebook.com/%s/picture?type=large' % response['id'
            ]
avatar = urlopen(url)
profile = user.get_profile()
profile.profile_photo.save(slugify(user.username + ' social') + '.jpg',
    ContentFile(avatar.read()))
profile.save()"
how to use different view for django-registration?,"from registration.forms import RegistrationFormUniqueEmail


class RegistrationViewUniqueEmail(RegistrationView):
    form_class = RegistrationFormUniqueEmail"
2d nearest neighbor interpolation in python,"lookupNearest(3.54, 6.9)"
python retaining column value,"df.insert(df.shape[1], 'State', df.iloc[:, (0)].str.extract('(.*)\\*'))"
detect arp poisoning using scapy,"from scapy.all import *
pkts = rdpcap('capture2.pcap')
ipadr = ['192.168.0.1', '192.168.0.2', '192.168.0.3', '192.168.0.30']"
how can i convert hh:mm:ss string to unix epoch time?,"dt = dt.replace(year=dt_now.year, month=dt_now.month, day=dt_now.day)
calendar.timegm(dt.utctimetuple())"
"django, save modelform","if form.is_valid():
    pass"
how can i check if a type is a subtype of a type in python?,"class A(object):
    pass


class B(A):
    pass


class C(object):
    pass"
python - convert utc datetime string to local datetime,print(t.astimezone(EST))
"how can i get the next string, in alphanumeric ordering, in python?","s = ''
for i in range(100):
    s = next(s, 5)
print(s)"
sending/receiving data between two different programs,socket.send(reply)
execute task every so often within a process,self.event.wait(1)
"python: cleanest way to wrap each method in parent class in a ""with""",p.methodA()
how to gracefully exit application started with twistd?,return
how to set class attribute with await in __init__,foo = Foo(settings)
removing runs from a 2d numpy array,"arr_win[:, (0)] = arr_cum[:, (n - 1)]"
"checking fuzzy/approximate substring existing in a longer string, in python?",query_string = 'manhattan'
plotting 2d kernel density estimation with python,ax = fig.gca()
remove object from a list of objects in python,del array[0]
reshape column to multiple columns,"result = result.rename(columns={'v1': 'v2'}).reset_index(drop=False)
result['v1'] = result['v1'].replace(df.groupby(counter).first().squeeze())"
group values based on range of number in python,"(220922000, 2428),
(220922001, 2429),"
python gui that draw a dot when clicking on plot?,""""""" Extracts locations from the user"""""""
add encoding parameter to logging.basicconfig,root_logger = logging.getLogger()
cant find releasecapture in opencv while using python?,frame = cv.QueryFrame(capture)
python bottle multiple file upload,"def do_upload():
    uploads = request.files.getall('upload')
for upload in uploads:
    pass"
programmatically creating variables in python,_g[char] = Variable(char)
python - using decorator.py to preserve a method docstring,A.func1
unicode string equivalent of contain,k.index(s)
geometric median of multidimensional points,"from scipy.spatial.distance import cdist, euclidean"
"unpacking keyword arguments, but only the ones that match the function","def foo(a=None, b=None, c=None):
    pass"
how do i serve css to django in development?,STATIC_URL = '//static.MYDOMAIN.com/'
using pydub to chop up a long audio file,"for i, chunk in enumerate(chunks):
    chunk.export('/path/to/ouput/dir/chunk{0}.wav'.format(i), format='wav')"
making python and fortran friends,"out_x = in_x ** 2
return"
how to replace all negative numbers in an array with zero,"[0.09558515, 0.0, 0.0],
[0.0, 0.95510649, 0.0],"
python bag of words clustering,"kp, dsc = sift.detectAndCompute(gray, None)"
"what is a clean, pythonic way to have multiple constructors in python?",f('a')
how can i write a list of lists into a txt file?,newList = json.load(infile)
how to get back name of the enum element in python?,STATUS_OK = 0
writing a csv from flask framework,"cw = csv.writer(si)
cw.writerows(csvList)"
python: normalizing some of the columns of a pandas dataframe,"def normalize(df, from_joint):
    pass"
creating json array in django,"def wall_copy(request):
    posts = user_post.objects.all().order_by('id')[:20].reverse()"
python try/finally for flow control,return result
how do i pass variables from one view to another and render with the last view's url in django?,data = do_other_things(request)
determining redirected url in python,"import urllib.request, urllib.error, urllib.parse

def get_redirected_url(url):
    opener = urllib.request.build_opener(urllib.request.HTTPRedirectHandler)
request = opener.open(url)
return request.url"
return results from multiple models with django rest framework,serializer_class = TimeLineSerializer
python - get relative path of all files and subfolders in a directory,"for dir_, _, files in os.walk(rootDir):
    pass"
finding double-spaces in a string - python,"def is_doublespace_separated(input_string):
    return '  '.join(input_string.split()) == input_string.strip()"
django admin - how can i add the green plus sign for many-to-many field in custom admin form,"rel = ManyToOneRel(self.instance.photos.model, 'id')"
cross product of a vector in numpy,"a = np.random.random((3, 4))"
wrapping around slices in python / numpy,"A = numpy.array(A)
indices = list(range(i - 2, i + 3))
neightbourhood = A.take(indices, axis=0, mode='wrap')"
keep console input line below output,"continue
if keypress != key.CR:
    self.input_buff = '%s%s' % (self.input_buff, keypress)
print('\x1b[0A%s' % self.input_buff)
continue"
python: how to create a file .txt and record information in it,file.write('second line\n')
how to resize an hdf5 array with `h5py`,"d = f.create_dataset('data', (3, 3), maxshape=(None, 3), dtype='i8', chunks
    =True)
d.resize((6, 3))"
how to replace all occurrences of regex as if applying replace repeatedly,"re.sub(pattern, '\\1 xby ', '2x4')"
sending stopiteration to for loop from outside of the iterator,raise StopIteration
how to perform an inner or outer join of dataframes with pandas on non-simplistic criterion,"df_b = pd.DataFrame([{'c': 2, 'd': 7}, {'c': 3, 'd': 8}])"
sending binary data over sockets with python,my_bytes.append(123)
how to set custom app name in python sysloghandler,hostname = 'stage-server'
select rows in pandas which does not contain a specific character,"df
df['str_name'].str.contains('c')"
enumerate in python,"def uniq_docs(inverted_index):
    last = None
for i, doc in enumerate(inverted_index):
    if doc != last:
        yield i, doc"
reading e-mails from outlook with python through mapi,body_content = message.body
how to place minor ticks on symlog scale?,"plt.yscale('symlog', linthreshy=0.1)"
how to convert a decimal number into fraction?,print(f.as_integer_ratio())
how to compare list in python?,"mapping = dict(zip(a, b))"
python : compare two files with different line endings,"with open(path_1, 'r') as f1:
    with open(path_2, 'r') as f2:
        while l1 != '' and l2 != '':
            pass"
how to use python-requests and event hooks to write a web crawler with a callback function?,recursive_urls(urls)
slicing a string after certain key words are mentioned into a list,"""""""  dylankid: *random words* senpai: *random words* dylankid: *random words* senpai: *random words*"""""""
evaluating into two or more lists,"for arg in arguments:
    lst = equal if '=' in arg else plain
lst.append(arg)"
encoding mail subject (smtp) in python with non-ascii characters,print(msg.as_string())
scikit-learn cross validation scoring for regression,"regr = linear_model.LinearRegression()
scores = cross_validation.cross_val_score(regr, X_digits, Y_digits, scoring
    ='mean_squared_error', cv=loo)"
print multiple arguments in python,c = a + b
obtaining tags from aws instances with boto,"reservations = conn.get_all_instances(instance_ids=['i-xxxxxxxx'])
instance = reservations[0].instances[0]"
is python bad at xml?,ns = '{my-namespace}'
how to think in python after working in c++?,"if word_s == other_s:
    pass"
using a key to rearrange string,"random.shuffle(d)
return ''.join(d)"
how to get rows with the max value by using python?,testreader = csv.reader(testr)
cannot save matplotlib animation with ffmpeg,"line.set_data([], [])"
filling numpy array with random element from another array,"array1 = np.array([0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1])"
how to describe url in django - still need an answer,page = request.GET.get('page')
setting transparency based on pixel values in matplotlib,"my_cmap.set_under('k', alpha=0)"
trouble with python calculator,"for button_text in ('CE', 'C'):
    pass"
python mqtt connect only for a limited time,"try:
    client.connect('localhost', 4444)
except:
    print('ERROR: Could not connect to MQTT')
client.on_connect = on_connect
client.on_message = on_message
startTime = time.time()
waitTime = 5
while True:
    client.loop()
elapsedTime = time.time() - startTime"
return index of last non-zero element in list,"a = [-2, -2, 0, 0, 0, 0, 0]"
"django, save modelform",student = form.save(commit=False)
two arguments in django-admin custom command,"def handle(self, *args, **options):
    pass"
how to multiplex multiple blocking python generators into one?,"t.start()
thrlist.append(t)
for t in thrlist:
    t.join()
item_q.put(StopIteration)
threading.Thread(target=run_all).start()
while True:
    item = item_q.get()
if item is StopIteration:
    return
yield item"
iterate over a dict or list in python,"[0, 0, 0, 0]"
subclassing from ordereddict and defaultdict,"def __init__(self, default, *args, **kwargs):
    defaultdict.__init__(self, default)"
configuring django,"import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mysite.settings')"
python import a module into one class only,"if self.OneHelper:
    self.OneHelper.blah()"
elegant find sub-list in list,found.append(pattern_list)
python decorators with parameters,"return fun(*args, **kwargs)"
persist variable changes between tests in unittest?,self.__class__.foo = 'can'
"python server ""only one usage of each socket address is normally permitted""","msg = newConnection.recv(BUFFER_SIZE)
print(msg)"
crawl dynamic webpage for data using scrapy,data = json.loads(response.body)
how to avoid increasing indent in a situation where you have to try: instead of if-elsif,grokster = None
efficient hunting for words in scrambled letters,from collections import Counter
show legend and label axes in plotly 3d scatter plots,"layout = Layout(scene=Scene(xaxis=XAxis(title='x axis title'), yaxis=YAxis(
    title='y axis title'), zaxis=ZAxis(title='z axis title')))
fig = Figure(data=data, layout=layout)"
how to change ticks on a histogram? (matplotlib),"hist(x)
xticks(list(range(1, 6)))"
what is the quickest way to get a number with unique digits in python?,"timeit(stmt3, number=100)"
key corresponding to maximum value in python dictionary,"b = [2, 3, 5, 6, 4]
max(b)

def inverse(x):
    return 1.0 / x
max(b, key=inverse)"
generating unique and opaque user ids in google app engine,email = 'user@host.com'
how to replace an instance in __init__() with a different object?,"def __new__(cls, theirnumber):
    if theirnumber > 10:
        pass"
integrate extracted pdf content with django-haystack,"def index_queryset(self, using=None):
    return self.get_model().objects.all()"
how can i do the multiple replace in python?,"path = '/Users/smcho/Desktop/bracket/[10,20]'
replacements = {'[': '[[]', ']': '[]]'}"
multiply two series with multiindex in pandas,"x = data_3levels.reset_index(level=2, drop=True) * data_2levels"
filter items in a python dictionary where keys contain a specific string,"filtered_dict = {k: v for k, v in list(d.items()) if filter_string in k}"
how to handle a button click event,"def buttonClick(self):
    """""" handle button click event and output text from entry area"""""""
joining elements in a list without the join command,"print(int(answer))
lists([12, 4, 15, 11])"
how do i close an image opened in pillow?,"with Image.open('test.png') as test_image:
    do_things(test_image)"
"in python, how do i cast a class object to a dict","def __iter__(self):
    yield 'a', self.a"
grep on elements of a list,"[x for x in names if re.search('aet', x)]"
creating versioned libraries in python,from package.module import functionv3
"matching character ""/"" in a string","if sTest.count('/') == 2:
    sTest = sTest.replace('/0/', '/1/')
elif sTest.count('/') == 1:
    pass"
parsing a tab-separated file with missing fields ,"for line in open('file', 'r'):
    pass"
what's the simplest way of detecting keyboard input in python from the terminal?,tty.setraw(sys.stdin.fileno())
summing over a function with symbolic output with sympy,"class f(Function):
    pass"
vectorizing loops in numpy,scalar1 = 1
get first and last values in a groupby,"return df.ix[[0, -1]]"
python mysql update statement,"""""""UPDATE tblTableName SET Year=%s, Month=%s, Day=%s, Hour=%s, Minute=%s WHERE Server='%s' """""""
how to group pandas dataframe by varying dates?,"df = pd.concat([prd_df, prc_df], axis=1)
df.groupby([df.index.get_level_values(0), df.Period.bfill()]).agg(dict(Date
    ='last', Price='sum')).dropna()"
python securely remove file,"import os

def secure_delete(path, passes=1):
    with open(path, 'ba+') as delfile:
        length = delfile.tell()
for i in range(passes):
    delfile.seek(0)
delfile.write(os.urandom(length))
os.remove(path)"
how do i create a pie chart using bokeh?,"colors = ['red', 'green', 'blue', 'orange', 'yellow']
p = figure(x_range=(-1, 1), y_range=(-1, 1))
p.wedge(x=0, y=0, radius=1, start_angle=starts, end_angle=ends, color=colors)
output_file('pie.html')
show(p)"
"how do i split a line by commas, but ignore commas within quotes python","['114111', 'Planes,Trains,and Automobiles', '50', 'BOOK']"
send file from client to server using xmlrpc?,return True
noun phrases with spacy,"for np in doc.noun_chunks:
    np.text"
python create own dict view of subset of dictionary,print(d)
how to access object attribute given string corresponding to name of that attribute,"getattr(object, attrname)
setattr(object, attrname, value)"
elegant way to perform tuple arithmetic,"a = 10, 10
b = 4, 4
c = tuple(x - y for x, y in zip(a, b))
c"
how to use map to lowercase strings in a dictionary?,"if 'content' in copy:
    copy['content'] = copy['content'].lower()"
merge two csv files based on a data from a column,"df2 = merge(df1, csv2, **kw2)"
how to obtain oauth credentials with the google drive sdk 2 and python without human interaction,SCOPES = 'https://www.googleapis.com/auth/drive'
how to speed up levenshtein distance calculation,t.start()
"python - how do i convert ""an os-level handle to an open file"" to a file object?","f = os.fdopen(tup[0], 'w')
f.write('foo')"
how to post multiple files using flask test client?,"try:
    rv = dict.__getitem__(self, key)
except KeyError:
    return []
if type is None:
    return list(rv)
result = []
for item in rv:
    pass"
how to compile simple python embeded program using distutils,"compiler.link_executable(['main.obj'], 'launch', libraries=['python27'],
    library_dirs=['C:/Python27/libs'])"
django annotate count with a distinct field,"Project.objects.all().annotate(Count('informationunit__username', distinct=
    True))"
pyqt/pyside - icon display,"_PYSIDEDIR = 'C:\\Python27\\Lib\\site-packages\\PySide'
data_files = [('imageformats', [join(_PYSIDEDIR,
    'plugins\\imageformats\\qico4.dll')]), ('.', [join(_PYSIDEDIR,
    'shiboken-python2.7.dll'), join(_PYSIDEDIR, 'QtCore4.dll'), join(
    _PYSIDEDIR, 'QtGui4.dll')])]"
change variable permanently,import string
docopt: options after repeating elements are interpeted as repeating elements,"""""""
Farmers market
Usage:
  farmersmarket.py buy -i <item> -q <quantity> [<quantity>] [-p <price>] [-dvh]
  farmersmarket.py -d | --debug
  farmersmarket.py -v | --version
  farmersmarket.py -h | --help
Options:
  -i --item           Item.
  -q --quantity       Quantity.
  -p --price <price>  Price.
  -d --debug          Show debug messages.
  -h --help           Show this screen.
  -v --version        Show version.
"""""""
get the href text of a link that has a certain class attribute using beautifulsoup in python,"if anchor.has_attr('href'):
    pass"
tk grid won't resize properly,"root = Tk()
root.columnconfigure(0, weight=1)"
valueerror: unconverted data remains: 02:05,"st = datetime.strptime(st, '%A %d %B %H %M')"
regex: efficiently matching words that are the same except for last character,"data = ['ades', 'adey', 'adhere', 'adherent', 'admin', 'admit', 'adverb',
    'advert', 'adipocere', 'adipocerous', 'adjoining', 'adjoint',
    'adjudicate', 'adjudication', 'adjunct']
{i: j for i, j in zip(data, data[1:]) if i[:-1] == j[:-1]}"
python beautifulsoup extract specific urls,"soup.find_all('a', href=re.compile('http://www\\.iwashere\\.com/'))"
dates in the xaxis for a matplotlib plot with imshow,"x_lims = mdates.date2num(x_lims)
y_lims = [0, 100]
fig, ax = plt.subplots()
ax.imshow(arr, extent=[x_lims[0], x_lims[1], y_lims[0], y_lims[1]], aspect=
    'auto')
ax.xaxis_date()
date_format = mdates.DateFormatter('%H:%M:%S')
ax.xaxis.set_major_formatter(date_format)
fig.autofmt_xdate()
plt.show()"
add a new column to an existing csv file,"import os
os.remove(csvfile)"
set serial port pin high using python,"time.sleep(0.5)
ser.setRTS(True)
time.sleep(0.5)
ser.setRTS(False)"
class-level read-only properties in python,"class X:
    pass"
django: how to get a static file's filepath in a development environment?,result = [result]
best way to remove an item from a python dictionary?,"dic.pop('c', 0)
dic.pop('a', 0)"
python - set list range to a specific value,"my_list = list(range(10))
bounds = 2, 5
my_list[bounds[0]:bounds[1] + 1] = ['foo'] * (bounds[1] + 1 - bounds[0])
my_list"
fitting a line in 3d,"ax.scatter(x, y, z)"
how to generate values in a range continuously?,"df.loc[idx, 'Dependents'] = np.take(list('012'), [(x % 3) for x in range(
    len(idx))])
df"
how to redirect the output of .exe to a file in python?,"import subprocess
with open('output.txt', 'w') as output_f:
    pass"
how is scikit-learn gridsearchcv best_score_ calculated?,"X = (y + np.random.randn(200)).reshape(-1, 1)"
how to write pandas dataframe to sqlite with index,from pandas.lib import Timestamp
complex query with django (posts from all friends),Post.objects.filter(userBy__id__in=friends_and_user)
why tuple is being used in string format,print('debug: %r' % nums)
xml parsing with python and minidom,"('My Document', 1),"
combining logic statements and in numpy array,x = np.arange(10)
pandas reset index on series to remove multiindex,"del df[1]
df"
list of minimal pairs from a pair of lists,"def MinPairs(up, down):
    if not (up or down):
        return []
up = list(itertools.takewhile(lambda x: x < down[-1], up))
if not up:
    return []
down = list(itertools.dropwhile(lambda x: x < up[0], down))
if not down:
    return []
for i in range(min(len(up), len(down))):
    if up[i] >= down[i]:
        up.insert(i, up[i - 1])
return tuple(itertools.zip_longest(up, down, fillvalue=(up, down)[len(up) >
    len(down)][-1]))"
how to check if a module/library/package is part of the python standard library?,import_module(module)
"splitting the letters of a word based on conditions, and returning in a list (python)",return pairs
how to pass args to a signal,raw_pass = kwargs.get('raw_password')
converting a 2d dictionary to a numpy matrix,books['auth2']['comedy'] = 20
python: best practice for dynamically constructing regex,"def remove_word_from(word, text):
    pass"
get longest element in dict,maks_key = key
interpolate each row in matrix of x values,"X = np.arange(100).reshape(10, 10).astype(float)
y = np.random.rand(10) * (X.shape[1] - 1)"
create dynamic queues with celery,"[{'worker1.local': {'ok': ""already consuming from u'foo'""}}]
app.control.add_consumer('foo', reply=True, destination=['worker1@example.com']
    )"
python pandas dataframe: retrieve number of columns,len(df.columns)
accessing xmlns attribute with python elementree?,"return uri, tag"
python pickle - how does it break?,self.key = key
"in python, how do i check to see if keys in a dictionary all have the same value x?","d = {'a': 1, 'b': 1, 'c': 1}
len(set(d.values())) == 1"
sort argparse help alphabetically,p = argparse.ArgumentParser()
using pylint with django,"import re
for pattern in self.config.generated_members:
    pass"
how to run a background procedure while constantly checking for input - threading?,"signal.signal(signum, _kronos)"
normalize histogram (brightness and contrast) of a set of images using python image library (pil),"for i in range(256):
    pass"
get params validation on viewsets.modelviewset,farming_details = {}
how can i approximate the periodicity of a panda time series,f = np.median(np.diff(aapl.index.values))
counting values in dictionary,my_list
pythonic way to import modules from packages,del scipy
"python : can reduce be translated into list comprehensions like map, lambda and filter?","def fold(func, iterable, initial=None, reverse=False):
    pass"
"in class object, how to auto update attributes?","c = SomeClass(5)
c.listsquare
c.list
c.list = list(range(0, 6))
c.list
c.listsquare
c.listsquare = [(x ** 2) for x in range(0, 10)]
c.list"
how to use the function 'predict' of svm_model in libsvm?,"for j in range(1, 121):
    a, b, val = svm_predict([1], values, model)
newval = val[0][0]
for i in range(1, 5):
    values[0][i] = values[0][i + 1]
values[0][5] = newval"
python crashing while calculating sha-1 hashs for large files in windows os,data = File.read(16 * 1024 * 1024)
return list of objects as dictionary with keys as the objects id with django rest framerwork,id = serializers.ReadOnlyField()
read lines containing integers from a file in python?,"with open('myfile.txt') as f:
    for line in f:
        int_list = [int(x) for x in line.split()]"
python sum function - `start` parameter explanation required,"sum(['a', 'b'], 'c')"
subprocess termination in python,"import functools, atexit

def kill_children(*pids):
    pass"
split pandas dataframe column based on number of digits,"df
arr = df.value.values.astype('S8')
pd.DataFrame(np.fromstring(arr, dtype=np.uint8).reshape(-1, 8) - 48)"
interpolation of curve,"np.random.seed(0)
data = np.random.uniform(low=-1600, high=-550, size=(50,))"
how can i pass my locals and access the variables directly from another function?,"def a():
    print(size)"
how do i print a python datetime in the local timezone?,eastern = timezone('US/Eastern')
"missing data, insert rows in pandas and fill with nan","df = DataFrame({'A': [0, 0.5, 1.0, 3.5, 4.0, 4.5], 'B': [1, 4, 6, 2, 4, 3],
    'C': [3, 2, 1, 0, 5, 3]})"
ring buffer with numpy/ctypes,ata
working in pandas with variable names with a common suffix,"for x in df.columns.str[0].unique():
    pass"
creating a colour bar for a plot made with plt.fill,"fig = plt.figure()
ax = fig.add_subplot(111)"
python merge duplicates in a single list and combine the results,from collections import defaultdict
writing header with dictwriter from python's csv module,"output.writerow(dict(zip(dr.fieldnames, dr.fieldnames)))"
raising builtin exception with default message in python,"raise OSError(2, 'No such file or directory', filename)"
how to safely run unreliable piece of code?,t.cancel()
how to set cookie in python mechanize,"import mechanize
import http.cookiejar
br = mechanize.Browser()
cj = http.cookiejar.CookieJar()
br.set_cookiejar(cj)"
recurrence relations in python,x = [0] * 51
how to execute something if any exception happens,eval(input(']'))
"nltk sentence tokenizer, consider new lines as sentence boundary",self._paragraphs = []
send multiple data (text and images) to a server through a socket,s.close()
how can i conduct a poll through an irc bot?,"def tally_votes(self):
    return self.votes.size()"
numpy masked arrays - indicating missing values,print(a)
python fails to open 11gb csv in r+ mode but opens in r mode,"import io
f = io.open('a.csv', 'r+')
f
f.buffer
f.buffer.raw
f.seek(0, os.SEEK_END)"
how do i create a new file on a remote host in fabric (python deployment tool)?,"run(""sed -i backup -e 's/$USER$/%s' -e 's/$HOST$/%s' app.wsgi.template"" % (
    user, host))"
how to embed a terminal in a tkinter application?,"root = Tk()
termf = Frame(root, height=400, width=500)"
computing diffs in pandas after using groupby leads to unexpected result,data3.sort_index(inplace=True)
"how to set ""camera position"" for 3d plots using python/matplotlib?",ylm = ax1.get_ylim3d()
"is there a way to ""nice"" a method of a python script","def reniced(*args, **kwargs):
    os.nice(5)
try:
    f(*args, **kwargs)
finally:
    os.nice(-5)
return reniced"
how to get/set logical directory path in python,self._cwd = os.environ.get('PWD')
scrapy parsing json output,"request = Request(link, callback=self.parse_resp)
yield request

def parse_resp(self, response):
    json = response.body
json_dict = json.loads(json)
xml = dicttoxml.dicttoxml(json_dict)
xml = etree.fromstring(xml)
xml = XmlXPathSelector(text=xml)
data = xml.select("".//*[@id='count']/text()"").extract()
return data"
"python - using argparse, pass an arbitrary string as an argument to be used in the script","help = super(MyParser, self).format_help()"
single legend for multiple axes,"h2, l2 = ax2.get_legend_handles_labels()"
how to insert arrays into a database?,name = models.CharField(max_length=64)
using python mock to count number of method calls,"self.assertEqual(1, c.count)"
how to i load a tsv file into a pandas dataframe?,"DataFrame.from_csv('c:/~/trainSetRel3.txt', sep='\t', header=0)"
finding adjacent neighbors on a hexagonal grid,self.y = int(grid_number[2:4])
sorting a list of lists of dictionaries in python,print(x)
how to substitute inf by 100?,"fresult.col1 = pd.to_numeric(fresult.col1).replace(np.inf, 100)
print(fresult)"
simple async example with tornado python,"application = tornado.web.Application([('/test', TestHandler)])
application.listen(9999)
IOLoop.instance().start()"
how do i import from a file if i don't know the file name until run time?,"from b import variableName
from c import variableName"
pandas value_counts() for loop fails as lambda,"output_lambda = df.apply(lambda x: [x.value_counts().to_dict()]).apply(lambda
    x: x[0]).to_dict()"
"calculate the greatest distance between any two strings in a group, using python",max_distanace_list = list(max_distances.values())
multiple variable in for loop list comprehension,x
problem with making object callable in python,"self.__class__ = type(self.__class__.__name__, (self.__class__,), {})"
matplotlib bar graph x axis won't plot string values,plt.title('Dispatches by Day of Week')
python returning data from a threaded def,res.append(func(*args))
how to write very long string that conforms with pep8 and prevent e501,"s = (
    """"""this is my really, really, really, really, really, really, really long string that I'd like to shorten.""""""
    )"
pandas: run length of nan holes,import numpy as np
using swig for functions with functions as input parameter,"print(callF(Add(), 3, 7))"
how can i use readline() to begin from the second line?,"""""""returns the DNA sequence of a FASTA file"""""""
how to map a series of conditions as keys in a dictionary?,"if test(i):
    return message"
outputting unicode text to an rtf file in python,test_unicode = '\xa92012'
python pandas dataframe group by based on a condition,"df = pd.DataFrame({'a': ['a', 'b', 'a', 'a', 'b', 'c', 'd']})"
twitter api - get number of followers of followers,"for user in list(tweepy.Cursor(api.followers, screen_name='twitter').items()):
    pass"
django - how to rename a model field using south?,"def backwards(self, orm):
    pass"
split multi-page tiff with python,import PIL.Image
calling nltk's concordance - how to get text before/after a word that was used?,import nltk
preserve file attributes in zipfile,"z = zipfile.ZipFile(sourceFile, 'r')"
simple select statement on existing table with sqlalchemy,from sqlalchemy.sql import and_
"run a python script from another python script, passing in args",os.system('script2.py 1')
how to implement a really efficient bitvector sorting in python,"def vec_sort2(input_li):
    bv = bitarray(len(input_li))
bv.setall(0)"
matplotlib colorbarbase: delete color separators,valmin = -1.0
equivalent of models.manager for sqlalchemy,"class BlogPost(Base):
    __tablename__ = 'blog_posts'
id = Column(Integer, primary_key=True)
visible = Column(Boolean, default=True)"
how do i drop a mongodb database using pymongo?,client.db.command('dropDatabase')
how to find line number of cursor in python?,"for i, line in enumerate(file):
    pass"
python: how can i know which exceptions might be thrown from a method call,"class RaiseVisitor(object):

    def __init__(self):
        self.nodes = []

def visitRaise(self, n):
    pass"
converting an rgb image to grayscale and manipulating the pixel data in python,"y = np.asarray(x.getdata(), dtype=np.float64).reshape((x.size[1], x.size[0]))"
how to create global lock/semaphore with multiprocessing.pool in python?,main()
pypdf merging multiple pdf files into one pdf,f.close()
remove a specific column in numpy,"np.delete(x, 1, 1)"
search a text file and print related lines in python?,print(line)
how to map one class against multiple tables with sqlalchemy?,metadata.drop_all()
django: filter for get_foo_display in a queryset,"def __init__(self, data=None, queryset=None, prefix=None, strict=None):
    pass"
implementing breadcrumbs in python using flask?,"def pagea():
    return flask.render_template('page.html')"
selenium webdriver - nosuchelementexceptions,driver.switch_to_frame('frameName')
what's the most efficient way to zip two nested list to a single level dictionary,"appendDict(list1, list2, resultDict)"
multiprocessing: how to use pool.map on a function defined in a class?,"return p.map(f, [1, 2, 3])"
open file and with statement in python,"def test():
    pass"
python - making decorators with optional arguments,"@register_gw_method
def my_function():
    print('hi...')

@register_gw_method('say_hi')
def my_function():
    print('hi...')"
number density contours in python,plt.clf()
adding to values in a dictionary from two lists of different length,from collections import defaultdict
how to pad with n characters in python,"""""""{s:{c}^{n}}"""""".format(s='dog', n=5, c='x')"
how to add an xml node based on the value of a text node,tree = lxml.etree.XML(DOC)
how to make the angles in a matplotlib polar plot go clockwise with 0° at the top?,P.show()
best way to print list output in python,print('---'.join(vals))
fast way of counting non-zero bits in python,n = (n & 71777214294589695) + ((n & 18374966859414961920) >> 8)
get sql headers from numpy array in python,from numpy import asarray
converting a 1.2gb list of edges into a sparse matrix,from scipy.sparse import coo_matrix
inserting a row into a pandas dataframe based on row value?,"newvals = arr[idx]
newvals[:, (df.columns.get_loc('C'))] = 'c'
out = np.insert(arr, idx + 1, newvals, axis=0)
df_index = np.insert(np.arange(arr.shape[0]), idx + 1, idx, axis=0)
df_out = pd.DataFrame(out, index=df_index)"
how to extend distutils with a simple post install script?,install_data.run(self)
modify namespace of importing script in python,__main__ = sys.modules['bar']
how to add annotate data in django-rest-framework queryset responses?,"class Book(models.Model):
    author = models.ForeignKey(Author)"
rounding decimals with new python format function,"""""""{number:.{digits}f}"""""".format(number=p, digits=n)"
how does a classmethod object work?,"Foo.__dict__['bar'].__get__(foo, type(foo))(1, 2)"
using files as stdin and stdout for subprocess,"p.wait()
myoutput.flush()"
multiply all elements of a list together (another list index out of range issue),"for j in range(i + 1, len(input_list)):
    pass"
python 3 join data from large files that are sorted,"def merge_join(*iters):
    values = list(advance_values(iters))"
python: read hex from file into list?,"inp = bytes((170, 12 * 16 + 13, 255, 15))"
how to send cookies in a post request with the python requests library?,"import requests
cookie = {'enwiki_session': '17ab96bd8ffbe8ca58a78657a918558'}"
pandas hdfstore unload dataframe from memory,store = pandas.HDFStore('test.h5')
how to find list comprehension in python code,print(node.col_offset)
imap deleting messages,box.close()
qt - keep reference of widget in python,sys.exit(app.exec_())
what's the simplest way of detecting keyboard input in python from the terminal?,print('Key pressed: %s' % msvcrt.getch())
passing a variable in url?,pass
how can i read inputs as integers in python?,"data = int(eval(input('Enter a number: ')), 2)"
using dictvectorizer with sklearn decisiontreeclassifier,vectorized_sparse = vectorizer.fit_transform(train_as_dicts)
python argparse: separate options for positional arguments,"parser.add_argument('-B', action='store_true')"
create a list of sets of atoms,"def powerset(iterable):
    """"""powerset([1,2,3]) --> () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)""""""
s = list(iterable)
return chain.from_iterable(combinations(s, r) for r in range(len(s) + 1))"
sample a truncated integer power law in python?,"return stats.rv_discrete(values=(list(range(1, m + 1)), pmf))"
overriding methods in subclassed python enums,custom_thing()
random strings in python,"import random, string

def randomword(length):
    pass"
how to speed-up python nested loop?,vol.append(volume[start:end])
how to remove an extension to a blob caused by morphology,"plt.xticks([]), plt.yticks([])"
how to make python regex which matches multiple patterns to same index,"def myfindall(regex, seq):
    resultlist = []
pos = 0
while True:
    result = regex.search(seq, pos)
if result is None:
    break
resultlist.append(seq[result.start():result.end()])
pos = result.start() + 1
return resultlist"
is there an open source python library for sanitizing html and removing all javascript?,soup = BeautifulSoup.BeautifulSoup(html)
specifying number of decimal places in python,"def input_meal():
    mealPrice = eval(input('Enter the meal subtotal: $'))"
how to turn a string of letters embedded in squared brackets into embedded lists,"a = '[[X v] -s]'
a = ''.join(map(lambda x: '""{}""'.format(x) if x.isalpha() or x == '-' else
    x, a))
json.loads(a.replace('[ [', '[[').replace('] ]', ']]').replace(' ', ',').
    replace('][', '],[').replace('""""', ''))"
how to reduce queries in django model has_relation method?,"if person.has_pet:
    pass"
how to check for hidden files & folders on ntfs partition using python on linux?,"print('Files with %s attribute in %s:' % (attribute, path))"
variables declared outside function,global global_var
python: help to implement an algorithm to find the minimum-area-rectangle for given points in order to compute the major and minor axis length,"rot_points = np.dot(rotations, hull_points.T)"
label width in tkinter,"label.pack(fill=BOTH, expand=1)
return label"
how can i separate runs of my tensorflow code in tensorboard?,from keras.callbacks import TensorBoard
interleave rows of two numpy arrays in python,"b = np.zeros_like(a)
c = np.hstack([a, b]).reshape(4, 3)
print(c)"
print original input order of dictionary in python,"key_value_pairs = [('Civic86', 12.5), ('Camry98', 13.2), ('Sentra98', 13.8)]
smallestCars = collections.OrderedDict(key_value_pairs)
for car in smallestCars:
    pass"
function to return copy of np.array with some elements replaced,"a1 = np.array([1, 2, 3, 4, 5, 6, 7])
a1 + csr_matrix((x - a1[ind], ([0] * x.size, ind)), (1, a1.size)).toarray()"
find enclosed spaces in array,"pen.append((x - 1, y))"
python export csv data into file,"for nfeature in enumerate(word_features):
    output.write('{0}:{1}\n'.format(nfeature[0] + 1, nfeature[1]))"
tidy data from multilevel excel file via pandas,"first_half = df.iloc[:, :3]"
passing table name as a parameter in pyodbc,"import pyodbc
dbconn = pyodbc.connect(ConnectionString)
c = dbconn.cursor()
j = 'table1'
query = 'Select * from %s' % j
c.execute(query)
result = c.fetchall()
print('Done')"
how to split a huge csv file based on content of first column?,import csv
how do i merge a 2d array in python into one string with list comprehension?,""""""","""""".join(map(str, li2))"
is there any available solution to provide xsrf/csrf support for google app engine?,"self.set_cookie('c', self.csrf_token)"
filtering pandas dataframes on dates,df.ix['2014-01-01':'2014-02-01']
find text in gtk.textview,"found = start_iter.forward_search(search_str, 0, None)
if found:
    pass"
how to generate a temporary url to upload file to amazon s3 with boto library?,"c.generate_url(300, 'PUT', 'test-1332789015', 'foobar', headers={
    'Content-Length': str(content_length)}, force_http=True)"
how to multiply functions in python?,self.function = function
"finding last occurence of substring in string, replacing that","replace_right('asd.asd.asd.', '.', '. -', 1)"
print raw http request in flask or wsgi,"@app.route('/')
def index():
    print(request.headers)"
adding an application to hosted django project,from django.core.wsgi import get_wsgi_application
"i need to define __setattr__ for assignment of fields without properties, but use the setter/getter functions for fields with a property defined","def gx(self):
    print('getting gx')"
feincms allow a contenttype only once per page object,content = models.Bar('...')
comparing values in a python dict of lists,"s = {n for v in list(my_dict.values()) for n in v}
{k: [max((a for a in s if all(w in a for w in n.split())), key=len) for n in
    v] for k, v in list(my_dict.items())}"
dictionary within dictionary in python 3,"capitals_dict = {'USA': 'Washington', 'Russia': 'Moscow', 'Japan': 'Tokyo'}
result = addproperty('capital', capitals_dict)
result
demonym_dict = {'USA': 'American', 'Russia': 'Russian', 'Japan': 'Japanese'}
addproperty('demonym', demonym_dict, result)"
polar contour plot in matplotlib,"t = np.linspace(0, 2 * np.pi, 100)
r, t = np.meshgrid(r, t)
z = (t - np.pi) ** 2 + 10 * (r - 0.5) ** 2
plt.subplot(121)
plt.contour(r * np.cos(t), r * np.sin(t), z)
r = r.flatten()
t = t.flatten()
x = r * np.cos(t)
y = r * np.sin(t)
z = z.flatten()
xgrid = np.linspace(x.min(), x.max(), 100)
ygrid = np.linspace(y.min(), y.max(), 100)
xgrid, ygrid = np.meshgrid(xgrid, ygrid)
zgrid = griddata(x, y, z, xgrid, ygrid)
plt.subplot(122)
plt.contour(xgrid, ygrid, zgrid)
plt.show()"
is there a pythonic way to process tree-structured dict keys?,"data = {'a/b/c': 10, 'a/b/d': 20, 'a/e': 'foo', 'a/f': False, 'g': 30}
print(hdict_from_dict(data))"
matplotlib suptitle prints over old title,plt.draw()
how to split list and pass them as separate parameter?,"egg2(a, b)"
how to sort only few values inside a list in python,"G = [list(g) for _, g in groupby(A, key=scientific_notation)]
list(chain.from_iterable(sorted(sub) if len(sub) > 1 else sub for sub in G))"
how do i set the terminal foreground process group for a process i'm running under a pty?,"hdlr = signal.signal(signal.SIGTTOU, signal.SIG_IGN)"
add usage help of command line tool to readme.rst,reprec
how do i get the position of a result in the list after an order_by?,"class Model(models.Model):
    pass"
python: check if a line has one of the strings in a list,print('yay!')
"determine if 2 lists have the same elements, regardless of order?","A = [0, 1, 2]
not sum([(not i in A) for i in B])"
python: load variables in a dict into namespace,"def __init__(self, adict):
    self.__dict__.update(adict)"
how to test if python is running from a virtualenv during package installation,import sys
"python: assigning # values in a list to bins, by rounding up","bins = [1, 2, 3]"
merge two dataframes with hierarchical columns,"A
B.columns = pd.MultiIndex.from_tuples(zip(cycle('B'), B.columns))
A.join(B)"
method refactor: from many kwargs to one arg-object,"kwargs = dict((x, l[x]) for x in args if x in l)"
will everything in the standard library treat strings as unicode in python 3.0?,print(type(fh.read(100)))
split strings and save comma int python,import csv
how to count the number of a specific character at the end of a string ignoring duplicates?,print(count_trailing_question_marks('one? two three??'))
using regex to extract information from a string,"if match.group(2):
    parts = splitparts.split(match.group(2))"
how to invert colors of image with pil (python-imaging)?,"inverted_image = PIL.ImageOps.invert(image)
inverted_image.save('new_name.png')"
how to change the dtype of a numpy recarray when one of the columns is an array?,"from astropy.table import Table
import pandas as pd
t = Table.read('file.fits')"
"in python, how do i find the date of the first monday of a given week?",delta_weeks -= 1
python selenium how to wait before clicking on link,from selenium.webdriver.common.by import By
how do i create a pie chart using bokeh?,"from bokeh.charts import Donut, show"
what is the max length of a python string?,print('begin')
algorithm to shuffle a list to minimise equal neighbours,"def careful_shuffle(lst):
    """"""Returns a new list based on a given iterable, with the elements shuffled
    such that the number of duplicate consecutive elements are minimized.""""""
c = Counter(lst)
if len(c) < 2:
    return lst
output = []"
python: how to load a module twice?,"file.close()
module = imp.new_module(name)"
how to convert integer timestamp to python datetime,import datetime
how to return the highest value from a multi dimensional array?,"map(max, arr)"
using print statements only to debug,logger.debug('Some string')
edit jar files with python,"import subprocess

def add_to_jar(file2add, jar_file):
    cmd = 'jar -uf ' + jar_file + ' ' + file2add
proc = subprocess.Popen(cmd, shell=True)
add_to_jar(file_to_add, jar_file)"
classifying a series to a new column in pandas,"df['D'][(df['A'] > 0) & (df['B'] == 0) & (df['C'] == 0)] = 'c1'
df['D'][(df['A'] == 0) & ((df['B'] > 0) | (df['C'] > 0))] = 'c2'"
detect python package installation path from within setup.py,from os import getcwd
fast tensor rotation with numpy,"Tprime = g[slices].T * Tprime
return Tprime.sum(-1).sum(-1).sum(-1).sum(-1)"
sine wave glissando from one pitch to another in numpy,"plot(times, sin(2 * pi * freq * times + phase_correction))
show()"
removing all extension of a string in list,"'GAGAGAGAC', 'GAGAGAGACA', 'GAGAGAGACAU', 'GAGAGAGACAUA'
'GAGAGAGACAUAG', 'GAGAGAGACAUAGA', 'GAGAGAGACAUAGAG'"
set points outside plot to upper limit,"ax.plot(x, y, 'o', ms=10)"
"how to process all kinds of exception in a scrapy project, in errback and callback?","class FailLogger(object):
    pass"
getting all arguments and values passed to a python function,saved_args = locals()
gridlines above 3d scatter plot in matplotlib,"Z = np.random.rand(1, 100)"
stochastic optimization in python,"sol = solvers.lp(c, G, h)"
"sqlalchemy - performing a bulk upsert (if exists, update, else insert) in postgresql","db.session.add_all(list(my_new_posts.values()))
db.session.commit()"
parsing a table with rowspan and colspan,col_i += 1
unwanted namespace declaration in lxml xpath,child = evaluator.evaluate('//def:subelement/child::*')[0]
how to access object attribute given string corresponding to name of that attribute,"setattr(obj, 'attr1', 10)
setattr(obj, 'attr2', 20)
getattr(obj, 'attr1')"
random numbers generation in pyspark,"len(set(sc.parallelize(list(range(4)), 4).map(lambda _: random.getstate()).collect())
    )"
getting string between 2 characters in python,char1 = '('
pandas - join by time proximity,"output_df.fillna(method='ffill', inplace=True)"
get random sample from list while maintaining ordering of items?,"tuple(orderedSampleWithoutReplacement([0, 1, 2, 3], 2))"
send post request in scrapy,page = response.meta['page'] + 1
context switching with 'yield',print('Implicit context switch back to bar')
detecting circular imports,"def newimport(modulename, *args, **kwargs):
    if modulename in beingimported:
        pass"
add new navigate modes in matplotlib,from matplotlib.backends.backend_wxagg import NavigationToolbar2WxAgg
python easiest way to sum list intersection of list of tuples,"result = {}
for k, v in (my_list + other_list):
    result[k] = result.get(k, 0) + v"
pandas groupby apply performing slow,"mask = group.values[1:, (4)] != group.values[:-1, (5)]"
randomly interleave 2 arrays in python,"a = [1, 2, 3, 4]
b = [5, 6, 7, 8, 9]
ratio = float(len(a)) / float(len(a) + len(b))
c = [(not a and b.pop(0) or not b and a.pop(0) or random.random() < ratio and
    b.pop(0) or a.pop(0)) for _ in range(len(a) + len(b))]"
"how to calculate precision, recall and f-score with libsvm in python",from sklearn import metrics
how can i make a discrete state markov model with pymc?,"timesteps[i] = Bernoulli('T%d' % i, p_i)"
pycharm show full diff when unittest fails for multiline string?,"def test_example(self):
    actual = open('actual.csv').read()
expected = pkg_resources.resource_string('my_package', 'expected.csv').decode(
    'utf8')"
python 3 join data from large files that are sorted,"def align_values(iters, values, key):
    for it, value in zip(iters, values):
        while (value[0], value[1]) < key:
            value = next(it)
yield value

def merge_join(*iters):
    values = list(advance_values(iters))
while True:
    if len(values) != len(iters):
        return
tms = [(v[0], v[1]) for v in values]"
putting separate python packages into same namespace?,"def __init__(self, person):
    pass"
"how can i decode this utf-8 string, picked on a random website and saved by the django orm, using python?","s1.encode('utf-8')
print(s1)
repr(s1)
str(s1.encode('utf-8'))"
"typeerror: string indices must be integers, not str // trying to get value of key",import json
find sequences of digits in long integers efficiently,"def __iter__(self):
    for i in range(len(self)):
        yield self[i]"
access github api using personal access token with python urllib2,"token = 'my_personal_access_token'
request = Request(url)"
prototypal programming in python,"print(""Init'ing (configuring) class"", name)"
fast way to read interleaved data?,"if i % chan.period == 0:
    yield chan"
how to scrub a dynamic python dictionary of specific keys?,structured_data = json.loads(raw_data)
python class--super variable,"super(Circle, self).__init__(x, y)"
all possibilities to split a list into two lists,"for pattern in patterns:
    l1 = [facs[-1]]
l2 = []
for fac, pat in zip(facs, pattern):
    (l1 if pat == 1 else l2).append(fac)"
how to speed up 4 million set intersections?,"overlap[l1, l2] = len(s1 & s2)"
permute arguments of matrix with regex,"line = 'ts(l,i,j,k) = ts(l,i,j,k1(i,j))'
rhs = re.split('=', line)[1]"
zlib decompression in python,str_object2 = zlib.decompress(str_object1)
pythonic way to filter list for elements with unique length,"[filtered.append(x) for x in mylist if len(x) not in [len(y) for y in filtered]
    ]
print(filtered)"
select largest n of a column of each groupby group using pandas,print(df.groupby(df.A // 2).A.nlargest(2))
django rest change users password view,"class UserViewSet(viewsets.ModelViewSet):
    lookup_field = 'username'
queryset = User.objects.all()
serializer_class = serializers.UserSerializer"
extracting user comments from news website,from selenium.webdriver.common.by import By
python/numpy - wrap slice around end of array,"b = np.append(b, b[0])
for i in range(0, len(b) - 1):
    pass"
how to treat the first line of a file differently in python?,"processHeader(f.readline())
for line in f:
    processBody(line)"
"setting up/inserting into many-to-many database with python, sqlalchemy, sqlite","result = conn.execute(tags.insert(), {'tagname': tag})"
numpy divide row by row sum,"e = np.dot(e, D_inv)"
adding padding to a tkinter widget only on one side,"class MyApp:

    def __init__(self):
        self.root = tk.Tk()"
python: one-hot encoding for huge data,"ynew = csc_matrix((data, (rows, cols)), shape=(y.size, y.max() + 1), dtype=
    dtype)"
simulate python keypresses for controlling a game,"class KeyBdInput(ctypes.Structure):
    _fields_ = [('wVk', ctypes.c_ushort), ('wScan', ctypes.c_ushort), (
        'dwFlags', ctypes.c_ulong), ('time', ctypes.c_ulong), (
        'dwExtraInfo', PUL)]


class HardwareInput(ctypes.Structure):
    _fields_ = [('uMsg', ctypes.c_ulong), ('wParamL', ctypes.c_short), (
        'wParamH', ctypes.c_ushort)]


class MouseInput(ctypes.Structure):
    _fields_ = [('dx', ctypes.c_long), ('dy', ctypes.c_long), ('mouseData',
        ctypes.c_ulong), ('dwFlags', ctypes.c_ulong), ('time', ctypes.
        c_ulong), ('dwExtraInfo', PUL)]"
numpy: get random set of rows from 2d array,"A = np.random.randint(5, size=(10, 3))
A"
"sparkstreaming, rabbitmq and mqtt in python using pika",channel = connection.channel()
is there a rest python docstring field for yields?,"def f():
    """"""
    :rtype: Generator[:class:`SomeClass`]
    """""""
slice pandas dataframe by row,df
chi square test of independence in python,"row3 = [109, 198, 172]
data = [row1, row2, row3]"
how to iterate over arguments,args = parser.parse_args()
how to see exceptions in a flask + gunicorn app?,"import logging
if not app.debug:
    pass"
how to read json from socket in python? (incremental parsing of json),response = h.getresponse()
expanding mean grouped by multiple columns in pandas,"c = b.reset_index().drop(['count', 'sum'], axis=1)"
split the result of 'counter',from collections import Counter
how to apply parallel or asynchronous i/o file writing on a python piece of code,"seen_emails.add(e)
return True"
how to embed matplotib in pyqt - for dummies,layout = QtGui.QVBoxLayout()
"in pyramid, how can i use a different renderer based on contents of context?",return len(context.products) == length
"using python to edit html, but lxml converts nice html entities to strange encoding",clean.clean(doc)
find first time a value occurs in the dataframe,"def qt_sub(val, first):
    pass"
partions of values in a fibonacci call graph (call graph is a binary tree),"while c < n:
    a, b = b, a + b"
paramiko combine stdout and stderr,print(stdout.read())
how to traverse through the files in a directory?,"import glob
for file in glob.glob('log-*-*.txt'):
    pass"
django tables - column filtering,"def get_table_data(self):
    pass"
how to remove attribute of a etree element?,tree = ET.parse(file_path)
cvxopt output suppression with mosek,help(cvxopt.msk.qp)
how to turn off info logging in pyspark?,"logger.LogManager.getLogger('org').setLevel(logger.Level.ERROR)
logger.LogManager.getLogger('akka').setLevel(logger.Level.ERROR)"
python xlsxwriter set border around multiple cells,new_dict = {}
find indices of large array if it contains values in smaller array,"np.in1d(a, b)"
"building a python shared object binding with cmake, which depends upon external libraries",FIND_PACKAGE(PythonInterp)
how can i access variables set in the python nosetests setup function,"def setup():
    global foo
foo = 10

def teardown():
    global foo
foo = None

@with_setup(setup, teardown)
def test_foo_value():
    assert_equal(foo, 10)"
matrix multiplication for sparse matrices in python,"i = np.random.randint(0, nrows - 1, numdense)"
generate random numbers from lognormal distribution in python,"return shape, scale"
trapping a mysql warning,"with warnings.catch_warnings():
    warnings.simplefilter('ignore')"
remove duplicates in list of object with python,seen_titles = set()
how to you check the status or kill an external process with python,"jobs.append((time, child))"
getting confused with lambda and list comprehension,"for x in range(5):

    def f():
        return x
funcs.append(f)
funcs[0]()"
merging 2 lists in multiple ways - python,"a, b, 1, 2, c, 3, 4, d"
"serializing a directed, weighted graph","done.add(cname)
candidates.extend(cchildren)
return output"
parsing a date that can be in several formats in python,from dateutil import parser
chain memoizer in python,"def __init__(self, func):
    pass"
swap case of letters in string input parameter,""""""""""""".join(map(str.swapcase, a))"
pip executes the wrong python library versions inside virtual env,pwd
detect tap with pyaudio from live mic,print('Tap!')
"merging multiple, unaligned data-frames into single pandas data-frame","for idx, df in enumerate(dflist):
    n = idx + 1
name = 'df{0:d}.Close'.format(n)"
avoiding regex in pandas str.replace,"df.search_term.str.replace('in\\.', 'in. ')"
django date comparison different on server,WHERE(to_date >= '2015-08-22 14:01:56.663072')
how do i retrieve output from multiprocessing in python?,"time[i], signal[i] = q.get()"
remove multiple values from [list] dictionary python,"while 'x' in myDict[key]:
    myDict[key].remove('x')"
"base url for django, behind nginx proxy","html = render_to_string('admin/enquiry/quoterequest/generate.html', {
    'enquiry': enquiry}, context_instance=RequestContext(request))
response = HttpResponse(content_type='application/pdf')
response['Content-Disposition'] = 'filename=""Enquiry_{}.pdf'.format(enquiry
    .reference)
weasyprint.HTML(string=html, base_url=request.build_absolute_uri()).write_pdf(
    response, stylesheets=[weasyprint.CSS(settings.STATICFILES_DIRS[0] +
    '/css/print.css')])"
problems while trying to generate pandas dataframe columns from regulars expressions?,"for full_file_path in glob(join(dir_name, '*.txt')):
    with open(full_file_path, 'rb') as f:
        pass"
parsing csv data from memory in python,"sources = [StringIO(fromDB), fromDB.splitlines(True), fromDB.splitlines(),
    fromDB.split('\n')]
for i, source in enumerate(sources):
    pass"
check if all elements in nested iterables evaluate to false,"not any(chain.from_iterable(x))
not any(chain(*x))"
how to get all items in multi list in bottle?,"return bottle.redirect('/updatelist')

@bottle.route('/updatelist')
@bottle.view('index')
def index():
    return {}
bottle.run()"
gunicorn with flask using wrong python,itsdangerous == 0.23
is there a way to create a python object that will be not sortable?,"def __cmp__(self, other):
    raise Exception"
how can i handle static files with python webapp2 in heroku?,self.response.write('Hello cruel world.')
show a manytomanyfield as checkboxes in django admin,"def formfield_for_manytomany(self, db_field, request=None, **kwargs):
    if db_field.name == 'your field name':
        kwargs['widget'] = form_widgets.CheckboxSelectMultiple()
kwargs['help_text'] = ''
return db_field.formfield(**kwargs)"
python xlrd read as string,"sh2 = wb.sheet_by_name('colors')
print('content of', sh1.name)"
"how to call a perl script from python, piping input to it?",the_output = p.stdout.read()
looping over elements of named tuple in python,2
2^n itertools combinations with advanced filtering,"sts = [{'V', 'M'}, {'V', 'R'}, {'T', 'O'}]"
plotting dashed 2d vectors with matplotlib?,"ax.axis('equal')
ax.quiver((0, 0), (0, 0), (3, 1), (1, 0), angles='xy', scale_units='xy',
    scale=1, linestyle='dashed', facecolor='none', linewidth=2, width=
    0.0001, headwidth=300, headlength=500)
ax.axis([-4, 4, -4, 4])
plt.show()"
how to draw a line outside of an axis in matplotlib (in figure coordinates)?,pyplot.show()
get a try statement to loop around until correct value obtained,"while a not in (0, 1, 2, 3):
    print(""""""Please select one of the following?
Completion = 0
Release ID = 1
Version ID = 2
Build ID = 3
"""""")
try:
    a = int(eval(input('Please select the type of release required: ')))
except ValueError:
    pass
files(a)"
overriding append method after inheriting from a python list,"def __delitem__(self, i):
    del self.list[i]"
anyone know of a good python based web crawler that i could use?,pass
howto clean comments from raw sql file,new_sql.append(new_statement.to_unicode())
"multipart/form-data post, put, patch in django-tastypie","multipart_data.update(request.FILES)
return multipart_data
return super(MultipartResource, self).deserialize(request, data, format)

def put_detail(self, request, **kwargs):
    if request.META.get('CONTENT_TYPE', '').startswith('multipart/form-data'
        ) and not hasattr(request, '_body'):
        request._body = ''
return super(MultipartResource, self).put_detail(request, **kwargs)

def patch_detail(self, request, **kwargs):
    if request.META.get('CONTENT_TYPE', '').startswith('multipart/form-data'
        ) and not hasattr(request, '_body'):
        request._body = ''
return super(MultipartResource, self).patch_detail(request, **kwargs)"
count letter differences of two strings,"a = 'IGADKYFHARGNYDAA'
b = 'KGADKYFHARGNYEAA'
u = zip(a, b)
d = dict(u)
x = []
for i, j in list(d.items()):
    if i == j:
        x.append('*')
else:
    x.append(j)
print(x)"
how to multiply a given row `i` or column `j` with a scalar?,"M[(i), :]
M[:, (j)]"
how do i access a dynamically added iframe using selenium webdriver?,continue
how to get the scrapy failure urls?,allowed_domains = ['help.github.com']
mysterious exceptions when making many concurrent requests from urllib.request to httpserver,"self.send_header('Content-length', len(data))"
modifying locals in python,aFunction(**someDictWithKeys_a_b_c_d_e_f)
is it faster to union sets or check the whole list for a duplicate?,l1.append(elem)
operate on a list in a pythonic way when output depends on other elements,"x = ['*a', 'b', 'c', '*d', 'e', '*f', '*g']
partials = []"
alter all values in a python list of lists?,"[[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]"
gunicorn not reloading a django application,autostart = true
url decode utf-8 in python,"import urllib.request, urllib.parse, urllib.error
url = (
    """"""example.com?title=%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D0%B2%D0%B0%D1%8F+%D0%B7%D0%B0%D1%89%D0%B8%D1%82%D0%B0""""""
    )
urllib.parse.unquote(url).decode('utf8')"
python 2 vs python 3 - difference in behavior of filter,print(tuple(l))
how to validate ip address in python?,socket.inet_aton(address)
"arrow direction set by data, but length set by figure size","ax.quiver(x0, y0, dx, dy, units='inches', angles='xy', scale=1, scale_units
    ='inches', color='red')
ax.axis((0, 2, 0, 2))
plt.show()"
convert enum to int in python,"nat = Nationalities('PL', 'FR', 'DE')"
streaming data with python and flask,"return Response(stream_template('index.html', data=g()))"
two instances of the same python module?,"x = SomeObject()
x.y = 1
a = x.y
x.y = 2
print(a)"
"fast linear interpolation in numpy / scipy ""along a path""","location = np.linspace(altitudes[0], altitudes[-1], N)"
"how to see traceback on xmlrpc server, not client?","if __name__ == '__main__':
    pass"
pandas read_csv from url,"import pandas as pd
import io
import requests
url = 'https://raw.githubusercontent.com/cs109/2014_data/master/countries.csv'
s = requests.get(url).content
c = pd.read_csv(io.StringIO(s.decode('utf-8')))"
latex citation in matplotlib legend,"x = np.linspace(0.0, 1.0, num=100)"
asychronous programming in python twisted,print('Running')
transfer ownership of numpy data,"np.multiply(d, d, out=g)"
"pylab: plotting axes to log scale, but labelling specific points on the axes","ax.yaxis.get_major_formatter().base(2)
plt.show()"
how do i run a python script from c#?,InitializeComponent()
in django : how to serialize dict object to json?,"return HttpResponse(serialized_instance, content_type='application/json')"
how to calculate the scrape url for a torrent,"binary_info_hash = binascii.unhexlify(
    '79b193385de5b967175ca86073670fce0e45a324')
print(binary_info_hash)"
generating a 10000 bit random sequence,"p, = b.find('0b000000')
if b[99]:
    b[100] = False"
extract list of persons and organizations using stanford ner tagger in nltk,from itertools import groupby
split numpy array at multiple values?,"array([[11.4, 4.0], [12.0, 5.0]]),"
get mouse events outside of tkinter window in python,root = tk.Tk()
multivariate series expansion in sympy,"g.series(x, 0, y, 0)
g.series(x, y, 0, 0)"
summing only the numbers contained in a list,"sum([i for i in l1 if isinstance(i, int)])"
convert bytes to floating point numbers in python,"import struct
struct.pack('f', 3.141592654)
struct.unpack('f', '\xdb\x0fI@')"
how to get the vertices from an edge using igraph in python?,source_vertex_id = edge.source
how can i get the name of a drive in python,fileSystemNameBuffer = ctypes.create_unicode_buffer(1024)
splitting a list in python,current.append(x)
how to feed information to a python daemon?,"thefifo = 'comms.fifo'
os.mkfifo(thefifo)"
add a string into a url python,url = url_test.format(i)
pandas drop row with multiple columns,"['Bugs,', 'Rabbit', 'and', 'Bunny', '12/11/2015']
['Cortese,', 'Robert', 'and', 'Laura', '10/15/2014']"
"how to set the line width of error bar caps, in matplotlib?",cap.set_markeredgewidth(10)
cut some rows and columns where values are 255,"rows = mask.all(axis=1)
cols = mask.all(axis=0)"
pandas apply but only for rows where a condition is met,"import numpy as np
mask = z['b'] != 0
z_valid = z[mask]
z['c'] = 0
z.loc[mask, 'c'] = z_valid['a'] / np.log(z_valid['b'])"
"python 2.7.1: how to open, edit and close a csv file",writer.writerows(changes)
extract emoticons from a text,exp = re.compile('|'.join(search_words))
adding a y-axis label to secondary y-axis in matplotlib,"fig, ax1 = plt.subplots()"
is there a way to have a conditional requirements.txt file for my python application based on platform?,"if __name__ == '__main__':
    pass"
python post osx notification,notification.setInformativeText_(info_text)
how do i undo true = false in python interactive mode?,True = 1 == 1
how to achieve inner join using sqlalchemy?,__tablename__ = 'messages'
changing tick label line spacing in matplotlib,"ax.tick_params(axis='both', which='major', labelsize=8)
ax.set_yticks([1], [""""""A very long label
broken into 2 line""""""],
    linespacing=0.5)"
confused with rules in scrapy in python spider,start_urls = ['http://annapolis.craigslist.org/sof/']
"python: converting ('monday', 'tuesday', 'wednesday') to 'monday to wednesday'",return day_int_to_str(r[0]) + ' to ' + day_int_to_str(r[1])
controlling mouse with python,"pyautogui.dragRel(0, 10)"
python subprocess: how to use pipes thrice?,output = p3.communicate()[0]
handle either a list or single integer as an argument,"if type(to_select) is list:
    to_select = set(to_select)"
matplotlib - extracting data from contour lines,"for seg in segs:
    plt.plot(seg[:, (0)], seg[:, (1)], color='white')
plt.show()"
"how do you do a simple ""chmod +x"" from within python?","import os
st = os.stat('hello.txt')"
accessing lower triangle of a numpy matrix?,"def tri_flat(array):
    R = array.shape[0]
mask = np.asarray(np.invert(np.tri(R, R, dtype=bool)), dtype=float)
x, y = mask.nonzero()
return array[x, y]"
class to position a window on the screen,gui = Program()
mapping two list without looping,"l2 = [1, 1, 2, 1, 3, 4, 3]"
python: extract variables out of namespace,globals().update(vars(args))
"why does python lint want me to use different local variable name, than a global, for the same purpose","def main():
    pass"
selecting pandas cells with none value,"df = yes_records_sample
n = np.empty_like(df)
n[...] = None"
tell how an argument was received by a function?,"def f(a, b, c=30):
    pass"
what is this kind of assignment in python called? a = b = true,"def a(x):
    g = h = x
import dis
dis.dis(a)"
django class-based view: how do i pass additional parameters to the as_view method?,model = MyModel
numpy -- transform non-contiguous data to contiguous data in place,a[:len(b)] = b
find nearest value in numpy array,idx = np.abs(a - a0).argmin()
passing c++ pointer as argument into cython function,pass
expire a view-cache in django?,from django.db.models.signals import post_save
add blobs or trees to a created repository using pygit2 (libgit2)?,"import pygit2 as g
repo = g.Repository('.')
oid = repo.write(g.GIT_OBJ_BLOB, contents)"
find daily observation closest to specific time for irregularly spaced data,np.random.seed(42)
method to return the equation of a straight line given two points,"return Point(-self.x, self.y)"
run a program in background and redirect their outputs to file in real time,"import sys
desired_output_file = open('/path/to/file', 'a')"
processing malformed text data with machine learning or nlp,"class Pattern(object):

    def __init__(self, text='', escape=None):
        self.text = text
self.matchers = []
escape = not self.text.startswith('!') if escape is None else False
if escape:
    self.regex = re.sub('([\\[\\].?+\\-()\\^\\\\])', '\\\\\\1', self.text)
else:
    self.regex = self.text[1:]
self.size = len(re.findall('(\\$[A-Za-z0-9\\-_]+)', self.regex))
self.regex = re.sub('(\\$[A-Za-z0-9\\-_]+)', Replacer(), self.regex)
self.regex = re.sub('\\s+', '\\\\s+', self.regex)

def search(self, text):
    return re.search(self.regex, text)

def findall(self, text, max_depth=1.0):
    results = []
length = float(len(text))
for result in re.finditer(self.regex, text):
    if result.start() / length < max_depth:
        results.extend(result.groups())
return results

def match(self, text):
    result = map(lambda x: (x.groupdict(), x.start()), re.finditer(self.
        regex, text))
if result:
    return result
else:
    return []"
how to get field names when running plain sql query in django,row = cursor.fetchone()
how to find out two lists with same structure in python?,"for i in range(len(a)):
    if not same_structure(a[i], b[i]):
        pass"
ordering and pagination in sql-alchemy using non-sql ranking,"post_ids = [3, 4, 1]"
create launchable gui script from python setuptools (without console window!),"if group == 'gui_scripts':
    ext, launcher = '-script.pyw', 'gui.exe'"
nested python class needs to access variable in enclosing class,"attributes = [n for n in directory if not callable(getattr(cls, n))]"
'pipelinedrdd' object has no attribute 'todf' in pyspark,"hasattr(rdd, 'toDF')
rdd.toDF().show()"
python: count occurrences in a list using dict comprehension/generator,"words.sort()
dct = {k: sum(1 for _ in g) for k, g in groupby(words)}"
pyinstaller: 2 instances of my cherrypy app exe get executed,autoreload.on = False
reading arabic text encoded in utf-8 in python,print(line)
merging two dictionaries of lists with the same keys in python,assert list(a.keys()) == list(b.keys())
how do i add my own custom attributes to existing built-in python types? like a string?,print(''.my_method())
pull from a list in a dict using mongoengine,"Mydoc.objects(item_number=1).update_one(__raw__={'$pull': {'x.mongo': {
    'list': 'listc'}}})"
sorting list of string with specific locale in python,random.shuffle(a_list)
most pythonic way of counting matching elements in something iterable,v[i] += 1
"map list of tuples into a dictionary, python","myDict = defaultdict(int)
for item in myTupleList:
    myDict[item[1]] += item[2]"
how to upload an image with python-tornado from an html form?,file_body = self.request.files['filefieldname'][0]['body']
finding median of list in python,"def median(lst):
    lst = sorted(lst)
if len(lst) < 1:
    return None
if len(lst) % 2 == 1:
    return lst[(len(lst) + 1) / 2 - 1]
else:
    return float(sum(lst[len(lst) / 2 - 1:len(lst) / 2 + 1])) / 2.0"
python lambda problems,"funcs.append(lambda x, i=i: f(i, x))"
how to divide a tuple into two in pythonic way,"for x in tup:
    di.setdefault(Number if isinstance(x, Number) else str if isinstance(x,
        str) else object, []).append(x)
di[str], di[Number]"
python - grouping defaultdict values by hamming distance in keys,"def unpack_key(key):
    data = key.split('_')"
python: how to check if optional argument can be used?,"def myfunc(**kwargs):
    print(list(kwargs.items()))"
how can i iterate over only the first variable of a tuple,"a = 1, 2, 3, 4
b, _, _, c = a"
pandas pivot tables row subtotals,"import pandas as pd
import io
incsv = io.StringIO(
    """"""Date,State,City,SalesToday,SalesMTD,SalesYTD
20130320,stA,ctA,20,400,1000
20130320,stA,ctB,30,500,1100
20130320,stB,ctC,10,500,900
20130320,stB,ctD,40,200,1300
20130320,stC,ctF,30,300,800""""""
    )"
how to send data with twisted protocol via factory,"reactor.connectTCP(host, port, factory)"
matplotlib bar chart with data frame row names as legend,"ax.legend(loc='best', frameon=False)
ax.margins(0.05)
ax.set_ylim(bottom=0)
ax.patch.set_facecolor('0.9')
ax.grid(color='white', linestyle='-')
ax.set(axisbelow=True, xticklabels=[])
plt.show()"
post request using python to asp.net page,"eventvalidation = soup.select('#__EVENTVALIDATION')[0]['value']
formData = ('__EVENTVALIDATION', eventvalidation), ('__VIEWSTATE', viewstate
    ), ('__VIEWSTATEENCRYPTED', ''), ('txt_offname', ''), ('ddl_dist', '0'), (
    'txt_dist_on', ''), ('ddl_state', '1'), ('btn_state', 'Search'), (
    'txt_stateon', ''), ('hdn_tabchoice', '1'), ('search_on', 'Search')
encodedFields = urllib.parse.urlencode(formData)
f = myopener.open(url, encodedFields)
try:
    fout = open('tmp.html', 'w')
except:
    print('Could not open output file\n')
fout.writelines(f.readlines())
fout.close()"
using python to execute a command on every file in a folder,"for filename in os.listdir('dirname'):
    callthecommandhere(blablahbla, filename, foo)"
"displaying numbers with ""x"" instead of ""e"" scientific notation in matplotlib","plt.text(0.01, 0.23, '$a = {0:s}$'.format(as_si(a, 2)), size=20)"
python regex pattern max length in re.compile?,stopstring = '|'.join(stop_list)
python logging string formatting,"return '[%s] %s' % (a.ljust(self.width), record.msg)
if __name__ == '__main__':
    logger = logging.getLogger('simple_example')
logger.setLevel(logging.DEBUG)
ch = logging.StreamHandler()
ch.setLevel(logging.DEBUG)
formatter = MyFormatter()
ch.setFormatter(formatter)
logger.addHandler(ch)
logger.debug('No one expects the spammish repetition')"
having both single and double quotation in a python string,""""""" This 'string' contains ""both"" types of quote """"""
"""""" So ' does "" this """""""
is there a python module to open spss files?,"import pandas.rpy.common as com
filename = 'weights.sav'"
sort by last name,"l = ['John Fine', 'Doug Biro', 'Jo Ann Alfred']"
"tensorflow: ""attempting to use uninitialized value"" in variable initialization",parameters = []
nltk - automatically translating similar words,"great = wn.synsets('great', 'a')[0]"
schedule number of web dynos by time of day,"import sys
import heroku"
labelling a matplotlib histogram bin with an arrow,"series = pd.Series(np.random.normal(0, 100, 1000))
series.plot(kind='hist', bins=50, ax=ax)
ax.annotate('', xy=(300, 5), xycoords='data', xytext=(300, 20), textcoords=
    'data', arrowprops=dict(arrowstyle='->', connectionstyle='arc3'))"
struggling with slice syntax to join list element of a part of a list,"a
a[1:3] = [4, 5, 6]"
fastest way to count array values above a threshold in numpy,length = arr_view.shape[0]
"image embossing in python with pil -- adding depth, azimuth, etc","h = [[1, 0, 0][0, 0, 0][0, 0, -1]]"
simplest way to return an array that is nested in multiple arrays,import numpy as np
a list > a list of lists,"l = ['1', 'a', 'b', '---', '2', 'c', 'd', '---', '3', '123', 'e', '---', '4']
r = []
i = iter(l)
while True:
    a = [x for x in itertools.takewhile(lambda x: x != '---', i)]
if not a:
    break
r.append(a)
print(r)"
identifying that a variable is a new-style class in python?,"def is_new_style(cls):
    return hasattr(cls, '__class__') and ('__dict__' in dir(cls) or hasattr
        (cls, '__slots__'))


class new_style(object):
    pass


class old_style:
    pass
print(is_new_style(int))
print(is_new_style(new_style))
print(is_new_style(old_style))"
"single django model, multiple tables?","MyModel._meta.db_table = '10293847_table'
MyModel.objects.all()"
find the dot product of sub-arrays in numpy,"Z1 = matrix_multiply(X, Y)"
increment numpy array with repeated indices,"b = np.array([99999, 99997, 99999])
blo, bhi = b.min(), b.max()
bbins = np.bincount(b - blo)
a[blo:bhi + 1] += bbins
print(a[blo:bhi + 1])"
how do you set up a flask application with sqlalchemy for testing?,"app.config.from_pyfile(config, silent=True)"
tkinter label: how do i know that the text is too long for it?,height = default_font.metrics('linespace')
how to compare surf features in python opencv2.4,"idx1 = np.arange(len(desc1))
pairs = np.int32(zip(idx1, idx2[:, (0)]))"
resampling a numpy array representing an image,"data = np.arange(27).reshape(3, 3, 3)"
terminate importation of module non-fatally?,self.module = locals
pickle versus shelve storing large dictionaries in python,myShelve.close()
how do i make 'import x' return a subclass of types.moduletype?,print(type(foo))
perform a reverse cumulative sum on a numpy array,"cumsum = lambda a: [sum(a[:i + 1]) for i, x in enumerate(a)]
print(reverse(array))"
downloading a picture via urllib and python,"import urllib.request, urllib.parse, urllib.error
f = open('00000001.jpg', 'wb')
f.write(urllib.request.urlopen('http://www.gunnerkrigg.com//comics/00000001.jpg').
    read())
f.close()"
simulating relational data (or a database) in python?,"db = create_engine('sqlite:///tutorial.db')
metadata = BoundMetaData(db)"
go subprocess communication,"""""""log"""""""
number of nodes in a balanced tree,"return {1, 0, 0}"
switch in python,"func = switch_dict[switch_var]
result = func()"
convert python exception information to string for logging,"import sys
import traceback"
parse json in python,"json_data.close()
print('Dimension: ', data['cubes'][cube]['dim'])
print('Measures:  ', data['cubes'][cube]['meas'])"
static properties in python,"class MyClass:
    pass"
how to fold/accumulate a numpy matrix product (dot)?,"Sz = np.array([[1.0, 0], [0, -1]])
print(np.einsum('ij,jk,kl', S0, Sx, Sz))
einsum_py.myeinsum('ij,jk,kl', S0, Sx, Sz, debug=True)
""""""
{'max_label': 108, 'min_label': 105, 'nop': 3, 
 'shapes': [(2, 2), (2, 2), (2, 2)], 
 'strides': [(16, 8), (16, 8), (16, 8)], 
 'ndim_broadcast': 0, 'ndims': [2, 2, 2], 'num_labels': 4,
 ....
 op_axes [[0, -1, 1, -1], [-1, -1, 0, 1], [-1, 1, -1, 0], [0, 1, -1, -1]]
""""""
op_axes = [[0, -1, 1, -1], [-1, -1, 0, 1], [-1, 1, -1, 0], [0, 1, -1, -1]]
w = sop.sum_product_cy3([S0, Sx, Sz], op_axes)
print(w)"
gevent to tornado ioloop - structure code with coroutines/generators,manager.ioloop.IOLoop.instance()
how to create a manhattan plot with matplotlib in python?,"ax.set_xlim([0, len(df)])"
right outer join in sqlalchemy,"session.query(Beard, Moustache).select_entity_from(stmt)"
pandas compare next row,"df['qty_s'] = df['qty'].shift(-1)
df['t_s'] = df['t'].shift(-1)
df['z_s'] = df['z'].shift(-1)"
two python modules require each other's contents - can that work?,"import webbrowser

def open_example():
    pass"
how does this function to remove duplicate characters from a string in python work?,"a
b
c
d"
"python: using scikit-learn to predict, gives blank predictions","classifier = classifier.fit(X_train, y_train)
predicted = classifier.predict(X_test)"
integration with sympy,"from sympy import *
x = sym.Symbol('x')
expr = (x + 3) ** 5
integrate(expr, manual=True)"
how to make some django settings accessible by staff?,"cache.set('settings', local_settings)
cache.add('settings', local_settings)
local_settings = cache.get('settings')"
argparse argument order,"parser.add_argument('--optional1')
parser.add_argument('positionals', nargs='+')"
plot normal distribution with matplotlib,"plt.plot(h, pdf)"
how to read stdin to a 2d python array of integers?,stdin = StringIO('1 2\n3 4\n5 6')
merging background with transparent image in pil,"foreground = Image.new('RGB', (100, 100), (255, 0, 0))
mask = Image.new('L', (100, 100), 0)
draw = ImageDraw.Draw(mask)
for i in range(5, 100, 10):
    draw.line((i, 0, i, 100), fill=random.randrange(256))
draw.line((0, i, 100, i), fill=random.randrange(256))
result = Image.composite(background, foreground, mask)"
combinatorial explosion while merging dataframes in pandas,raise Exception('Combinatorial explosion! (boom)')
"in python, what is the easiest way to add a list consisting of keyword pairs to a dictionary?","with open('test.csv', 'r') as f:
    for row in f:
        for e in row.rstrip('\n').split(', '):
            print(e)
k, v = e.split(':')
changes.setdefault(k, []).append(v)
print(changes)"
access private variables in injected method - python,-10
sort a numpy array like a table,indices = np.argsort(subarray)
how do i set up a daemon with python-daemon?,logger.debug('this is a DEBUG message')
matplotlib showing x-tick labels overlapping despite best efforts,ax = axes.flatten()[i]
how can i set a users password in linux from a python script?,"proc.stdin.write('password\n')
proc.stdin.write('password')"
fit a monotonic curve (preferably in python),Xfit_mono_ind[len_mono] = iX
selecting the first index after a certain timestamp with a pandas timeseries,l.append(8)
"slicing a list using a variable, in python","i = 2
j = 4"
c malloc array pointer return in cython,"a = np.zeros(n * n, dtype=np.complex128)"
testing equivalence of mathematical expressions in python,return str
python file modes detail,"PyErr_SetString(PyExc_ValueError,
    'Must have exactly one of read/write/append mode')"
how to combine the data from many data frames into a single data frame with an array as the data values,"array([2, 4])
array([5, 7])"
"how to generate tcp,ip and udp packets in python?","PORT = 80
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)"
a good way to get the charset/encoding of an http response in python,"from bs4 import BeautifulSoup
soup = BeautifulSoup(urllib.request.urlopen(url))"
python: check if an numpy array contains any element of another array,"np.any(np.in1d(a1, a2))"
create list of object attributes in python,"list_of_objects = [Object_1, Object_2, Object_3]"
how can i search a list in python and print at which location(s) in that list my criteria is located?,"newNums = (i for i, x in enumerate(nums) if x == 12)"
"page number in pdf converted from html - pdfkit, python/django","pdfkit.from_string('Hello World', 'out.pdf', options=options)"
in tkinter is there any way to make a widget not visible? ,root.mainloop()
python: how can i execute bat file in new cmd window?,p = Popen('cmd.exe /k start a.bat')
how can i change the linecolor if y-value changes,ny.append(y[-1])
how to make a python decorator function in flask with arguments (for authorization),"return update_wrapper(wrapped_function, fn)"
convert enum to int in python,"nat = Nationalities('PL', 'FR', 'DE')
print(nat.Poland)
print(nat.index(nat.Germany))"
how is python storing strings so that the 'is' operator works on literals?,"c += 'a'
print(id(a))
print(id(b))
print(id(c))"
django how to use manyrelatedmanager,pizzas_bought = models.ManyToManyField(related_name='pizzas')
python - access class variable from instance,"def method1(self):
    RLCN.static_var += 1

def method2(self):
    self.static_var += 1
rlcn = RLCN()
RLCN.static_var, rlcn.static_var
rlcn.static_var
rlcn.method1()
RLCN.static_var, rlcn.static_var
rlcn.method2()
RLCN.static_var, rlcn.static_var"
python: finding a trend in a set of numbers,Sx = Sx + x
python: how to check if keys exists and retrieve value from dictionary in descending priority,break
finding the maximum of a function,"x = Symbol('x', real=True)
f = -2 * x ** 2 + 4 * x
fprime = f.diff(x)
fprime
solve(fprime, x)"
how can i include a python package with hadoop streaming job?,"import zipimport
importer = zipimport.zipimporter('nltkandyaml.mod')
yaml = importer.load_module('yaml')
nltk = importer.load_module('nltk')"
filtering a list of strings based on contents,"l = ['a', 'ab', 'abc', 'bac']
result = []
for s in l:
    if 'ab' in s:
        result.append(s)"
read file from line 2 or skip header row,"with open(fname) as f:
    pass"
how to pass soap headers into python suds that are not defined in wsdl file,speed = client.factory.create('ns4:PTZSpeed')
modifying a subset of rows in a pandas dataframe,"df.ix[df.A == 0, 'B'] = np.nan"
gdb pretty printing with python a recursive structure,return boxstringprinter(value)
create a series of tuples using a for loop,"lines = []
for line in inFile:
    lines.append(line)"
numpy: how to randomly split/select an matrix into n-different matrices,np.random.shuffle(data)
python inspect module: keyword only args,"max(arg1, arg2, arg3, key=lambda x: -x)"
parsing html5 data-* attribute values with selenium in python,"for element in elements:
    pass"
how to filter by sub-level index in pandas,"x[x.RPT_Date.str.endswith('0630')].set_index(['STK_ID', 'RPT_Date'])"
how do i wrap a string in a file in python?,"with io.StringIO() as f:
    pass"
rounded division by power of 2,"def scale(x, power2=16):
    divider = float(1 << power2)
result = round(x / divider)"
how to remove an extension to a blob caused by morphology,"for i in range(4):
    pass"
using lxml to parse namepaced html?,"print(link.attrib.get('title', 'No title'))"
django modelform with extra fields that are not in the model,"class Meta:
    model = User"
how to query an advanced search with google customsearch api?,"res = service.cse().list(q=search_term, cx=cse_id, **kwargs).execute()"
formatting string into datetime using pandas - trouble with directives,"fourth_jan = datetime.date(iso_year, 1, 4)"
unlucky number 13,print(ans(1000000000))
how can i parse javascript variables using python?,"y = data.find(';', x)"
pandas hdfstore - how to reopen?,"with pd.HDFStore('test.h5', mode='r') as newstore:
    pass"
drop all duplicate rows in python pandas,"print(pd.concat([DG.get_group(item) for item, value in list(DG.groups.items()) if
    len(value) == 1]))"
how do i use static keyword inside class in c++ to emulate the behavior of @classmethod in python?,c2.say_my_name()
integer square root in python,gmpy2.isqrt((10 ** 100 + 1) ** 2 - 1)
how to implement ssdp / upnp? trying to use sony's camera api,import sys
make requests using python over tor,"print(requests.get(url, proxies=proxies).text)"
"in python scipting, how do i capture output from subprocess.call to a file","subprocess.call(['dir', 'c:\\temp'], shell=True, stdout=f)
f.close()"
matplotlib in pyside with qt designer (pyside),matplotlib.use('Qt4Agg')
printing in a pyramid pattern in python,"print('\n'.join([''.join(['{}'.format(i) for i in range(1, j)]) for j in
    range(2, 6)]))"
how to count all positive and negative values in a pandas groupby?,df.groupby('A').C_sign.value_counts()
how to change marker border width and hatch width?,plt.subplot(121)
efficient array replacement in python,"for row in data:
    pass"
"in python, how do i decode gzip encoding?","data2 = GzipFile('', 'r', 0, StringIO(data)).read()"
how to extract a subset of a colormap as a new colormap in matplotlib?,from matplotlib.colors import LinearSegmentedColormap
make 2d numpy array from coordinates,"out = np.zeros((Y_idx.max() + 1, X_idx.max() + 1))
out[Y_idx, X_idx] = Z
return out"
python product of infinite generators,"print(next(product(count(1), count(1))))
1, 1"
how can i create stacked line graph with matplotlib?,"plot(x, y2s)"
python dryscrape scrape page with cookies,"name.set('<login>')
password = session.at_xpath('//*[@name=""password""]')
password.set('<password>')
name.form().submit()
session.visit('<url to visit with proper cookies>')"
format all elements of a list,"def format(l):
    pass"
matplotlib fill beetwen multiple lines,"plt.fill_between(X, Y1, Y3, color='y', alpha=0.5)"
after executing a command by python paramiko how could i save result?,stdin.flush()
python: getting a traceback from a multiprocessing.process,"try:
    return functor()
except:
    raise Exception(''.join(traceback.format_exception(*sys.exc_info())))"
latex citation in matplotlib legend,"plt.plot(x, y, label='Data \\cite{<key>}')"
how do i get a list of column names from a psycopg2 cursor?,data_rows = []
"python ""import datetime"" v.s. ""from datetime import datetime""","from datetime import datetime, date"
finding the nearest value and return the index of array in python,right = A[idx]
python: find all sets of numbers inside a range where each set contains values that are x distance apart and don't exceed the range,"if so_far is None:
    pass"
looking for inverse of url_for in flask,"owner_url_rule, owner_view_args = match('/users/21414512')
tenant_url_rule, tenant_view_args = match('/users/16324642')"
"encrypt in php, decrypt in python","decoded = base64.b64decode(plain)
decrypted = crypt_object.decrypt(decoded)"
pickle - putting more than 1 object in a file?,"f = open('example', 'w')
pickle.dump(['hello', 'world'], f)
pickle.dump([2, 3], f)
f.close()
f = open('example', 'r')
value1 = pickle.load(f)
value2 = pickle.load(f)
f.close()"
improving efficiency of reading a large csv file,"def chunk_file(file_name):
    chunk_start = 0"
how would i check a string for a certain letter in python?,print('Yes!')
how to know where an object was instantiated in python?,trace_call()
how do i get more than 10 entries from users or interests using mailchimp api 3.0?,"'http://us4.api.mailchimp.com/3.0/lists/0000000000/interest-categories/',"
how can i read inputs as integers in python?,"data = eval(input('Enter a number: '))
data, type(data)"
how to use template inheritance with chameleon?,"def layout(self):
    pass"
get parent user after sudo with python,"import os
if 'SUDO_USER' in os.environ:
    pass"
summation of elements of dictionary that are list of lists,"d = {'a': [[1, 2, 3], [1, 2, 3]], 'b': [[2, 4, 1], [1, 6, 1]]}
{k: map(sum, zip(*v)) for k, v in list(d.items())}"
speed-improvement on large pandas read_csv with datetime index,"out_ar[i] = pd.Timestamp(datetime.datetime.combine(date, time))"
python - how can i make this code asynchronous?,from twisted.internet import reactor
importing the entire python standard library,import math
how to trim spaces within timestamps using 'm/d/yy' format,""""""" Hello World """""".strip()"
xml writing tools for python,w.data('.')
how do i use method overloading in python?,ob.stackoverflow(2)
what happens in degenerate case of multiple assignment?,"A[0] = previous_A[1]
A[1] = previous_A[1]"
change django templates based on user-agent,"'yourproj.middleware.MobileMiddleware',"
python - best way to set a column in a 2d array to a specific value,"for row in range(rows):
    data[row][set_col] = val"
how to specify uniqueness for a tuple of field in a django model,"unique_together = 'field1', 'field2'"
timing block of code in python without putting it in a function,"print('%s: %0.2f seconds elapsed' % (title, t2 - t1))"
python nltk keyword extraction from sentence,"def filter_stop_words(pos_list):
    return [[token, token_type] for token, token_type in pos_list if token.
        lower() not in stop_words[token_type]]"
counting occurrences in a python list,"x = collections.Counter(l)
print(x.most_common())"
cases where use of tuple is a must,{}[tuple()] = 1
issue parsing multiline json file using python,"import json
with open('test.json', 'r') as jf:
    weatherData = json.load(jf)
print(weatherData)"
world map without rivers with matplotlib / basemap?,"m = Basemap(resolution='c', projection='robin', lon_0=0)"
converting python dictionary to list,dictlist.append(temp)
"how to flatten a list with various data types (int, tuple)","l = [0, 2, (1, 2), 5, 2, (3, 5)]
list(chain(*(i if isinstance(i, tuple) else (i,) for i in l)))"
how to apply __str__ function when printing a list of objects in python,return 'asd'
is there implementation of git in pure python?,"repo.stage('file.txt')
repo.stage(['other1.txt', 'other2.txt'])"
how to read the header with pycurl,"c = pycurl.Curl()
c.setopt(c.URL, 'http://www.demaziere.fr/eve/')"
how to inherit a class' methods and have them access self member variables in python,"super(Graph, self).__init__()"
initialise numpy array of unknown length,"y = list(range(10))
a = np.array([np.array(list) for _ in y])"
diff two big files in python,"f1 = open('bigfile1')
f2 = open('bigfile2')
b1 = []"
mysql compress() with sqlalchemy,from sqlalchemy.ext.declarative import declarative_base
reading json files from curl in python,"data = response.read()
values = json.loads(data)"
how do i decode unicode one line at a time in python 2.7?,import codecs
django just sort listview by date,"position = models.ManyToManyField(Position)
title = models.CharField(max_length=100)


class Meta:
    ordering = ['-created']"
how to obtain a gaussian filter in python,"array([[0.002969, 0.013306, 0.021938, 0.013306, 0.002969], [0.013306, 
    0.059634, 0.09832, 0.059634, 0.013306], [0.021938, 0.09832, 0.162103, 
    0.09832, 0.021938], [0.013306, 0.059634, 0.09832, 0.059634, 0.013306],
    [0.002969, 0.013306, 0.021938, 0.013306, 0.002969]])"
is it possible to stream output from a python subprocess to a webpage in real time?,"for i in range(5):
    print(i)
sys.stdout.flush()"
how to expand matrix expression in sympy,from sympy import init_session
python dictionary- two keys to each value,"d[1] = c
d[2] = c"
django model group by datetime's date,"from itertools import groupby
entities = Entity.objects.order_by('start_time')
for start_date, group in groupby(entities, key=extract_date):
    pass"
how can i combine range() functions,"for i in (x for x in range(1, 31) if x not in skips):
    pass"
what is the best way to remove a dictionary item by value in python?,"{'Answer': 42, (1): 'egg sandwich', 'foo': 42, (8): 14}"
converting a pandas groupby object to dataframe,"print(df1.groupby(['Name', 'City']).count())
print(df1.groupby(['Name', 'City'])[['Name', 'City']].count())
print(df1.groupby(['Name', 'City']).size().reset_index(name='count'))"
check if numpy array is in list of numpy arrays,"print(is_arr_in_list(mylistarr[2], mylistarr))"
how can you generate a pollpri event on a regular file?,"p = select.poll()
p.register(f, select.POLLPRI | select.POLLERR)"
applying an operation on multiple columns with a fixed column in pandas,4 - 0.958774
json serialize django queryset with values being called. is there anything wrong with my approach?,simplejson.dumps(list(people))
why does tensorflow return [[nan nan]] instead of probabilities from a csv file?,"for i in range(1):
    pass"
numpy - how to outer join arrays,"dfs = [pd.DataFrame.from_records(a) for a in (a1, a2, a3)]"
plotting a pandas dataseries.groupby,"group.plot(x='saleDate', y='MeanToDate', title=str(i))"
python how to kill threads blocked on queue with signals?,"term.daemon = True
term.start()"
python regular expression only matches once,"res = re.sub('\\[\\*\\]', lambda m: next(note), text)
print(res)"
remove common letters in strings,"print(remove_common('Lets chat about code', 'that cave'))
print(remove_common('basdf aa', 'a basd'))
print(remove_common('asdfq', 'asdf'))
print(remove_common('asdf', 'asdfq'))
print(remove_common('aa bb s', 'a bbb'))"
sort a complex python dictionary by just one of its values,"d = {(1): 2, (3): 4}"
convert tab-delimited txt file into a csv file using python,"txt_file = 'mytxt.txt'
csv_file = 'mycsv.csv'
in_txt = csv.reader(open(txt_file, 'rb'), delimiter='\t')
out_csv = csv.writer(open(csv_file, 'wb'))
out_csv.writerows(in_txt)"
how to use the same line of code in all functions?,"def read_file(filename):
    with open(filename, 'r') as f:
        return f.read()

def word_count(filename):
    return len(read_file(filename).split())

def line_count(filename):
    return len(read_file(filename).splitlines())

def character_count(filename):
    return len(read_file(filename))"
unable to log in to asp.net website with requests module of python,r = s.get(URL)
convert strings to int or float in python 3?,from ast import literal_eval
how to stub python methods without mock,"def getDataLength(self):
    return len(self.getData())


class TestClassIWantToTest(unittest.TestCase):

    def testGetDataLength(self):

        def mockGetData(self):
            print('MOCK getData called')
return '1234'"
how to check if multiple characters are in a list?,"combination = '456'
needed = '123'
set(needed) & set(combination)
combination = '156'"
simplest way to return an array that is nested in multiple arrays,"get_nested_list([[[[1, 2], [3]]]])"
how to handle constructors or methods with a different set (or type) of arguments in python?,"Color(**{'r': r, 'g': g, 'b': b})"
deleting key/value from list of dictionaries using lambda and map,"for d in list_of_d:
    pass"
sqlalchemy: re-saving model's unique field after trying to save non-unique value,"try:
    transaction.commit()
except IntegrityError:
    transaction.abort()
session = DBSession()"
"django, ajax populate form with model data","html_string = ''
for course in Courses.objects.all():
    pass"
establishing highest score for a set of combinations,"segment, score = segments[0]"
python: create list of tuples from lists,"y = [4, 5, 6]
zipped = zip(x, y)
zipped"
valueerror: need more than 2 values to unpack in python 2.6.6,"t = do_something()
if len(t) > 2:
    c = t[2]"
how to solve import errors while trying to deploy flask using wsgi on apache2,application = app
how to ensure that a python dict keys are lowercase?,ld['g'] = 'g'
determining running programs in python,"for line in proc.stdout:
    pass"
easiest way to rename a model using django/south?,"class Migration(SchemaMigration):
    pass"
generating python soaplib stubs from wsdl,print('Usage: %s <url>' % sys.argv[0])
trim whitespace using pil,"bg = Image.new(im.mode, im.size, im.getpixel((0, 0)))"
how does one monkey patch a function in python?,bar.do_something_expensive = lambda : 'Something really cheap.'
repeat numpy array without replicating data?,"arr = np.arange(10)
repeated = np.broadcast_to(arr, (1000, arr.size))"
measure website load time with python requests,"nf = urllib.request.urlopen(url)
start = time.time()"
python: delete element from heap,"h.pop()
heapq._siftup(h, i)"
"how do i get the utc time of ""midnight"" for a given timezone?",tz = pytz.timezone('Australia/Melbourne')
python convert pairs list to dictionary,"my_dict = dict(string)
my_dict"
column order in pandas groupby agg function,"from collections import OrderedDict
g = df.groupby(['people'])
g['people'].agg(OrderedDict([('C', len), ('B', len), ('A', len)]))"
recognize images in python,"for sample in image_samples:
    classifications.append(classifier(sample))"
how to wrap a c++ function which takes in a function pointer in python using swig,self.fptr = fptr
argparse option for passing a list as option,"parser.add_argument('-l', '--list', help='delimited list input', type=str)"
strange result when removing item from a list,numbers = [n for n in numbers if n >= 20]
how do i integrate ajax with django applications?,"return HttpResponse(data, **response_kwargs)"
https connection using pem certificate,conn.close()
iterate over a list of images and assign them as variables in python,AtoCIm.append(Image.open(image))
python - how to get high and low envelope of a signal?,"l_p = interp1d(l_x, l_y, kind='cubic', bounds_error=False, fill_value=0.0)"
pass extra values along with urls to scrapy spider,"def parse_page(self, response):
    pass"
post json to python cgi,"import sys, json
result = {'success': 'true', 'message': 'The Command Completed Successfully'}
myjson = json.load(sys.stdin)"
how to perform custom build steps in setup.py?,"if self.old_and_unmanageable or self.single_version_externally_managed:
    ret = _install.run(self)"
parallelize a sequence of generators,"def __iter__(self):
    return self"
how can i read the rgb value of a given pixel in python?,im.save('alive_parrot.png')
practical example of polymorphism,return 'Woof! Woof!'
reading and graphing data read from huge files,q.put(map.readlines(numbytes))
how to add color and asterisk per plot using seaborn pairgird and seaborn barplot,ax1 = fig.add_subplot(131)
extract digits in a simple way from a python string,get_num(orange)
how to debug external .py functions run from jupyter/ipython notebook,import pdb
what is the easiest way to detect key presses in python 3 on a linux machine?,"""""""KEY_F(3)"""""""
find in files using ruby or python,"for dir, subdirs, subfiles in os.walk('c:/docs/2009'):
    for name in fnmatch.filter(subfiles, '*.txt'):
        fn = os.path.join(dir, name)
with open(fn, 'r') as f:
    if regex_search:
        results += [(fn, lineno) for lineno, line in enumerate(f) if p.
            search(line)]"
encoding of headers in mimetext,"msg = MIMEText(body, 'plain', 'utf-8')
msg['Subject'] = Header(subject, 'utf-8')
text = msg.as_string()"
generating pairs from python list,"pairs = [(i, j) for i in range(n) for j in range(i + 1, n)]
from pprint import pprint as pp
pp(pairs, compact=True)
[(0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (0, 8), (0, 9), (1,
    2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (2, 3), (2,
    4), (2, 5), (2, 6), (2, 7), (2, 8), (2, 9), (3, 4), (3, 5), (3, 6), (3,
    7), (3, 8), (3, 9), (4, 5), (4, 6), (4, 7), (4, 8), (4, 9), (5, 6), (5,
    7), (5, 8), (5, 9), (6, 7), (6, 8), (6, 9), (7, 8), (7, 9), (8, 9)]"
"calculating user, nice, sys, idle, iowait, irq and sirq from /proc/stat","num_cpu = multiprocessing.cpu_count()
stat_fd = open('/proc/stat')"
"read file with ""variable=value"" (windows ini) format?","config.readfp(open('desiredFile'))
somevar = config.get('label2', 'variable1')"
matplotlib adjust figure margin,"ax = plt.subplot(111, aspect='equal')"
how do you change the sql isolation level from python using mysqldb?,"('foo',), ('bar',)"
in flask convert form post object into a representation suitable for mongodb,"@app.route('/api/v1/account', methods=['POST'])
def create_account():
    """"""Create user account""""""
account_dict = request.form.to_dict()
db.account.insert_one(account_dict)"
how to know values at the same index in 2 lists in python are the same in positive or negative?,"def same_direction(l1, l2):
    return all(x * y > 0 for x, y in zip(l1, l2))"
pythonic and efficient way of finding adjacent cells in grid,"def get_adjacent_cells(self, x_coord, y_coord):
    pass"
return generator instead of list of locations from a 2d array,"def find_dirty_cells(board):
    pass"
python propertymock side effect with attributeerror and valueerror,import mock
holiday files for g20 countries,"cal.holidays(2013)
cal.is_working_day(date(2013, 12, 25))
cal.is_working_day(date(2013, 12, 29))
cal.is_working_day(date(2013, 12, 26))"
raw_input without leaving a history in readline,"import readline

def raw_input_no_history():
    input = input()
readline.remove_history_item(readline.get_current_history_length() - 1)
return input"
dictionary comprehension with inline functions,d[3](1)
adding folders to a zip file using python,import zipfile
best way to make flask-login's login_required the default,"def check_valid_login():
    login_valid = 'user' in session
if request.endpoint and 'static' not in request.endpoint and not login_valid and not getattr(
    app.view_functions[request.endpoint], 'is_public', False):
    return render_template('login.html', next=request.endpoint)"
how do i convert a currency string to a floating point number in python?,"from decimal import Decimal
money = '$6,150,593.22'
value = Decimal(sub('[^\\d.]', '', money))"
how to plot line (polygonal chain) with numpy/scipy/matplotlib with minimal smoothing,"plt.plot(x, y, 'bo')
plt.ylim(0, 25)
plt.grid(True)
plt.show()"
how to create a generator/iterator with the python c api?,"import spam
for i in spam.myiter(10):
    pass"
intermediate variable in a list comprehension for simultaneous filtering and transformation,"a.append((float(k), float(j)))"
"python 2.6, 3 abstract base class misunderstanding","class Empty:

    def __init__(self):
        pass


class C1(Empty, Foo):
    pass


class C2(OrderedDict, Foo):
    pass"
is there a faster way to add two 2-d numpy array,a[3:8]
pythonic way to check if: all elements evaluate to false -or- all elements evaluate to true,"def all_bools_equal(lst):
    pass"
how do you get all the rows from a particular table using beautifulsoup?,cells = row.findChildren('td')
how to make an action happen every minute in python,"while game.running:
    t1 = time.time()
if t1 - t0 >= 60.0:
    game.wood += 1
t0 = t1
game.process()"
python: getting rid of \u200b from a string using regular expressions,"import codecs
f = codecs.open('a.txt', encoding='utf-8', mode='w')
f.write('used\u200bZero')"
is there a generator version of `string.split()` in python?,"sample2 = ' Good evening, world! '"
how to join these two lists in python to form a path?,"choices = ['django', 'genelaytics', '/etc/passwd']
os.path.join(*choices)"
create thumbnail images for jpegs with python,"import os, sys
import Image
size = 128, 128"
how to access (and edit) variables from a callback function?,"def myfunc():
    stuff = [17]

def lfun(arg):
    print('got arg', arg, 'and stuff[0] is', stuff[0])
stuff[0] += 1
return lfun
my_function = myfunc()
my_function('hello')
my_function('hello')"
selenium with ghostdriver in python on windows,phantomjs_path = 'C:\\Python27\\misc\\phantomjs-1.9.7-windows\\phantomjs.exe'
using a python dict for a sql insert statement,"columns_string = '(' + ','.join(list(myDict.keys())) + ')'"
search of dictionary keys python,filteredKeys = [key for key in list(aDict.keys()) if searchString in key]
how to color surface with stronger contrast,C = Z
"readability of scientific python code (line continuations, variable names, imports)",cost = opts['weightcost_pretrain'].dot(net['weights'][ix1][ix2])
how to properly convert a c ioctl call to a python fcntl.ioctl call?,fd.close()
how to raise a numpy.matrix to non-integer power?,A = logm(M) * x
how do i specify a single test in a file with nosetests?,"def test_something(self):
    pass

def test_something_else(self):
    pass"
plotting from pivot table using pandas,"plt.plot(t[[0]], color='red')
plt.plot(t[[1]], color='blue')
plt.xticks(list(range(2)), ['one', 'two'], size='small')
plt.show()"
edit the value of every nth item in a list,"l = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
l[1::2] += 1"
vectorizing a for loop in numpy/scipy?,"M = NP.random.randint(10, 99, 40).reshape(8, 5)
ndx = NP.where(NP.sum(M, 0) % 2 == 0)"
is there any advantage to using demorgan law in python?,not A or not (B and C)
skew a diagonal gradient to be vertical,"j_shift = np.interp(g[:, (0)], g[(0), :], np.arange(n))"
get description of an installed package without actual importing it,"for modname in list(sys.modules):
    if modname not in modules_copy:
        pass"
examples of entry_point usage,"if have_setuptools:
    extra_arguments = dict(zip_safe=False, test_suite='babel.tests.suite',
        tests_require=['pytz'], entry_points=
        """"""
        [console_scripts]
        pybabel = babel.messages.frontend:main
        [distutils.commands]
        compile_catalog = babel.messages.frontend:compile_catalog
        extract_messages = babel.messages.frontend:extract_messages
        init_catalog = babel.messages.frontend:init_catalog
        update_catalog = babel.messages.frontend:update_catalog
        [distutils.setup_keywords]
        message_extractors = babel.messages.frontend:check_message_extractors
        [babel.checkers]
        num_plurals = babel.messages.checkers:num_plurals
        python_format = babel.messages.checkers:python_format
        [babel.extractors]
        ignore = babel.messages.extract:extract_nothing
        python = babel.messages.extract:extract_python
        javascript = babel.messages.extract:extract_javascript
        """"""
        )"
how does a descriptor with __set__ but without __get__ work?,"print(('set', self.name))


class Test:
    pass"
how do i mark a python package as python 2 only?,"import sys
if sys.version_info[0] != 2:
    sys.stderr.write('This package only supports Python 2.\n')
sys.exit(1)"
convert float to int and leave nulls,"import pandas as pd
import numpy as np
df = pd.DataFrame({'a': [1, 5, 5], 'b': [np.NaN, 7200.0, 580.0], 'c': [3, 
    20, 20]})
print((df, '\n\n'))
df['b'] = np.nan_to_num(df['b']).astype(int)"
how can i add certain values that were produced in a 'while' loop using python,"a, b = b, a + b"
using static methods in python - best practice,"class Entity(object):

    def __init__(self, id, db_connection, data=None):
        self.id = id
self.db_connection = db_connection
if data is None:
    self.data = self.from_id(id, db_connection)
else:
    pass"
how to instantiate a template method of a template class with swig?,"wd.fooi(7)
wi.food(2.5)
wd.food(2.5)"
python - find dominant/most common color in an image,"c = ar.copy()
for i, code in enumerate(codes):
    c[(scipy.r_[scipy.where(vecs == i)]), :] = code
scipy.misc.imsave('clusters.png', c.reshape(*shape))
print('saved clustered image')"
python multiprocessing pool with map_async,pool.join()
how can i add certain values that were produced in a 'while' loop using python,"while b < 4000000:
    if not b % 2:
        pass"
creating a log-linear plot in matplotlib using hist2d,np.random.seed(1977)
does python's imaplib let you set a timeout?,"imap = imaplib.IMAP4('test.com', 666)"
how to speed up python loop,"if a == b and c == d:
    return [i, j], [i2, j2]"
python password rules validation,return True
saving zip list to csv in python,"writer = csv.DictWriter(output, fieldnames=['date', 'v'])"
how do i remove punctuation from an item in a list and save it as a separate item in the list?,"def separate(mylist):
    newlist = []
test = ''
a = ''
for e in mylist:
    for c in e:
        if not c.isalpha():
            a = c
else:
    test = test + c
if a != '':
    newlist = newlist + [test] + [a]
else:
    newlist = newlist + [test]
test = ''
a = ''
noduplicates = []
for i in newlist:
    if i not in noduplicates:
        noduplicates = noduplicates + [i]
return noduplicates"
how to access a superclass's class attributes in python?,"class A:
    pass"
python: how to get numbers after decimal point?,b = a - numpy.fix(a)
interleave rows of two numpy arrays in python,"numpy.dstack((A, B)).transpose(0, 2, 1).reshape(A.shape[0] * 2, A.shape[1])"
how do i efficiently filter computed values within a python list comprehension?,"for item in mylist:
    pass"
windows progress bar in python's tkinter,"root = Tk()
progressbar = ttk.Progressbar(orient=HORIZONTAL, length=200, mode='determinate'
    )
progressbar.pack(side='bottom')
progressbar.start()"
non-trivial sums of outer products without temporaries in numpy,"m2 = np.average(m, 0)
vals = np.zeros(N)
for i in range(N):
    u = nhat[i]
if u[0] >= 0 and u[1] >= 0 and u[2] >= 0:
    vals[i] = abs(np.dot(u, m2))
else:
    for j in range(M):
        vals[i] += abs(np.dot(u, m[j]))
vals[i] /= M"
split a dictionary into 2 dictionaries,"d = {'key1': 1, 'key2': 2, 'key3': 3, 'key4': 4, 'key5': 5}
d1 = dict(list(d.items())[len(d) / 2:])
d2 = dict(list(d.items())[:len(d) / 2])"
creating publication quality tables in python,of.write('<html><table>')
is there an easy way to capture all frame/window keystrokes in python or wxpython,"self.panel = wx.Panel(self, wx.ID_ANY)"
open a list of files using with/as context manager,return self.l
gzip fails at writing high amount of data in file,"def chunks(l, n):
    pass"
how do i use python to easily expand variables to strings?,"from string import Template
t = Template('$name is a $adjective $noun that $verb')
t.substitute(name='Lionel', adjective='awesome', noun='dude', verb='snores')"
how to compare type of an object in python?,"if isinstance(obj, MyClass):
    pass"
count characters in a string from a list of characters,c = Counter(s)
matching blank lines with regular expressions,"re.split('(?m)^\\s*$\\s*', text)"
python configuration file: any file format recommendation? ini format still appropriate? seems quite old school,"if __name__ == '__main__':
    pass"
automate the populating of subplots,"for ax, label in zip(axes[:, (0)], ['E', 'F', 'G', 'H']):
    ax.set_ylabel(label, size=20)"
comparing numpy datatypes to strings,"np.issubdtype(np.int32, float)
np.issubdtype(float, np.floating)"
pandas drop rows outside of time range,"df = pd.DataFrame(ts)
df.ix[df.index.indexer_between_time(datetime.time(10), datetime.time(14))]"
default value of parameter as result of instance method,"class Example(object):

    def __init__(self, data=None):
        self.data = self.default_data() if data is None else data"
using beautifulsoup to search through yahoo finance,"""""""598.56B"""""""
sending notifications with gobjects,"Notify.init('myapp')
n = Notify.Notification.new('summary text', 'body text', 'dialog-information')"
how do i configure tastypie to treat a field as unique?,"return super(FooResource, self).post_list(request, **kwargs)"
dynamically define a function,"xdata = np.array([1, 3, 6, 8, 10])"
how to change any data type into a string in python,myvariable = 4
"in python, how to do unit test on a function without return value?",self._old_stdout = sys.stdout
get subset of most frequent dummy variables in pandas,"s = pd.Series(list('aabccc'))
s
s.value_counts()"
download a zip file and extract it in memory using python3,zipDocment.extractall()
how to find all the intersection points between two contour-set in an efficient way,"y11, y21 = np.meshgrid(A[:-1, (1)], B[:-1, (1)])"
python mysql.connector dictcursor?,"return None
db = mysql.connector.connect(user='root', database='test')
cursor = db.cursor(cursor_class=MySQLCursorDict)"
"how to get the 5 tuples with the highest values, from the following vector?","data = np.array(vector, dtype=types)
np.sort(data, order='f1')[-5:][::-1]"
using python weakset to enable a callback functionality,a1.destroyCallback.add(b)
why inserting keys in order into a python dict is faster than doint it unordered,"def get_test_data(num, size):
    olist, ulist = [], []
for _ in range(num):
    nums = list(range(size))
random.shuffle(nums)
utest = [str(i) for i in nums]
otest = list(utest)
otest.sort(key=lambda x: int(x))
olist.append(otest)
ulist.append(utest)
return olist, ulist"
how to preview a part of a large pandas dataframe?,start_row = 1 if df.index.names[0] is None else 2
numpy argmax with max less than some number,"a
m = a < 1"
how to make python's argparse generate non-english text?,parser = argparse.ArgumentParser()
python -- regex -- how to find a string between two sets of strings,"import re
data = """"""
<div id=hotlinklist>
  <a href=""foo1.com"">Foo1</a>
  <div id=hotlink>
    <a href=""/"">Home</a>
  </div>
  <div id=hotlink>
    <a href=""/extract"">Extract</a>
  </div>
  <div id=hotlink>
    <a href=""/sitemap"">Sitemap</a>
  </div>
</div>
"""""""
how can i parse marked up text for further processing?,"def __repr__(self):
    pass"
how can i get qlistwidget item by name?,"print('row number of found item =', self.listWidgetName.row(item))"
need for speed: slow nested groupbys and applys in pandas,print(d.groupby(grps).apply(h))
using pipes to capture things printed to stderr into python variable from jupyter,t = tempfile.NamedTemporaryFile()
how can i import a python file through a command prompt?,problem = importlib.import_module(sys.argv[1])
how can i separate runs of my tensorflow code in tensorboard?,"model.fit(X, Y, batch_size=2, nb_epoch=100, shuffle=True, verbose=1,
    validation_split=0.1, callbacks=[TensorBoard(log_dir='./logs/' + now,
    histogram_freq=0, write_graph=True)])"
how to read parameter values from a file in python,"import pickle
file_name = 'parameters.pickled'
with open(file_name, 'wb') as out_file:
    pickle.dump(parameters, out_file)"
passing a function with two arguments to filter() in python,"from functools import partial
basetwo = partial(int, base=2)
basetwo.__doc__ = 'Convert base 2 string to an int.'
basetwo('10010')"
move child folder contents to parent folder in python,rmdir(root)
extract historic leap seconds from tzdata,"data = struct.unpack(fmt, f.read(size))"
sort at various levels in python,"def sortfunction(y):
    pass"
python - using regex to find multiple matches and print them out,print(matches)
"datetime.date(2014, 4, 25) is not json serializable in django","def default(self, obj):
    if isinstance(obj, datetime):
        return obj.strftime('%Y-%m-%dT%H:%M:%SZ')"
checking date against date range in python,"date(2011, 1, 15) - date.today()
date(2011, 1, 15) - date.today() < timedelta(days=3)
date(2011, 1, 18) - date.today() < timedelta(days=3)"
django logging to console,"import sys
LOGGING = {'version': 1, 'handlers': {'console': {'class':
    'logging.StreamHandler', 'stream': sys.stdout}}, 'root': {'handlers': [
    'console'], 'level': 'INFO'}}
logging.config.dictConfig(LOGGING)"
"matplotlib: two y-axis scales, how to align gridlines?","fig = plt.figure()
ax1 = fig.add_subplot(111)"
comparing dictionaries in python,"for k in d1:
    pass"
what makes pythons append method of lists so fast?,"import dis

def func_2(a, i):
    a += [i]

def func_3(a, i):
    pass"
incremental pca on big data,"h5['data'][i * 1000:(i + 1) * 1000] = np.random.rand(1000, 1000)"
python - difference between two strings,import difflib
how to set settings.login_url to a view function name in django 1.5+,"url('^accounts/login/$', 'my_app.view.Login', name='login'),"
how can i make a python wheel from an existing native library?,return True
summing over a multiindex pandas dataframe,df
django database planning - time series data,"time = models.IntegerField()
gas = models.IntegerField()"
how can i count occurrences of elements that are bigger than a given number in an list?,"def get_max_count(l, num):
    count = 0
for x in l:
    if x > num:
        count += 1
return count"
sort n-d numpy array by another 1-d array,"a[:, (b)]"
find in a dynamic pythonic way the minimum elements in a partially ordered set,return Mn
list manipulation in python with pop(),"interestingelts = (x for x in oldlist if x not in ['a', 'c'])"
subclassing and overriding a generator function in python,"def gen(self):
    yield 3"
celery - group inside a chain,"@task
def mapper(nr):
    return nr * 2

@task
def reducer(nrs):
    return sum(nrs)

@task
def double_then_sum(nrs):
    pass"
calculate curl of a vector field in python and plot it with matplotlib,plt.show()
"delimit a specific column and add them as columns in csv (python3, csv)","c3.columns = ['ID', 'Age', 'Height']"
custom json encoder in python with precomputed literal json,"{'a': 1, 'c': {'x': [1, 2, 3]}, 'b': 'abc'}"
"tail -f log on server, process data, then serve to client via twisted",follow(open(filename))
how do i vectorize this loop in numpy?,"np.ma.array(np.tile(arr, 2).reshape(2, 3), mask=~cond).argmax(axis=1)"
python: is there a way to determine the encoding of text file?,import magic
convert python dict into a dataframe,"df = pd.DataFrame(list(data.items()), columns=['Date', 'DateValue'])
df['Date'] = pd.to_datetime(df['Date'])"
run a program in background and redirect their outputs to file in real time,"os.dup2(desired_output_file.fileno(), sys.stdout)"
change timezone of date-time column in pandas and add as hierarchical index,"dataframe.tz_localize('UTC', level=0)"
open .dot formatted graph from python,"G = nx.Graph()
G.add_edge('1', '2')
nx.draw(G)
plt.show()"
groupby and reshape long to wide formatted dataframe while aggregating elements as arrays,"(2)[30, 60][40, 50][50, 40]"
how to get json from webpage into python script,print(get_jsonparsed_data(url))
how to group the choices in a django select widget?,"class Kingdom(Model):
    name = models.CharField(max_length=16)"
numpy replace groups of elements with integers incrementally,"def replace_groups(data):
    a, b, c = np.unique(data, True, True)
_, ret = np.unique(b[c], False, True)
return ret"
web crawler - following links,"for link in soup.findAll('tr', {'class': 'tableRowPrimary'}):
    anc = link.find('td')"
why is __del__ called at the end of a with block?,print('with block end???')
proper way to assert type of variable in python,print(begin.lower() + begin.upper() + end.lower())
python decorators with parameters,return wrapper
fastest way to check if the set contains numbers in a given range in python,"rng = list(range(6, 9))"
pandas - get first row value of a given column,"df.ix[1, 'foo']"
"after breaking a python program into functions, how do i make one the main function?",run_main()
validate inlines before saving model,"class ComponentInline(admin.TabularInline):
    model = Component"
django rest framework abstract class serializer,"myserializer = serializer_factory(mdl, fields=['id', 'name'])"
gae: setting multiple cookies (or a multi-value cookie) with simplecookie,"self.response.set_cookie('emailAddress', self.request.get('emailAddress'))
self.response.set_cookie('secretCode', self.request.get('secretCode'), path='/'
    )"
multiply two matrix by columns with python,"A[..., (None)].shape"
"how to print out only records with intervals, from one file, not overlapping with those from another file","with open(filename2, 'rb') as f1:
    with open(filename3, 'wb') as f2:
        reader = csv.reader(f1, delimiter=' ')
writer = csv.writer(f2, delimiter=' ')
for row in reader:
    cls, a, b = row[2], int(row[3]), int(row[4])
if cls in intervals:
    for interval in intervals[cls]:
        if (a in interval or b in interval or a < interval.lowerbound and b >
            interval.upperbound):
            break
else:
    writer.writerow(row)"
get tcp flags with scapy,ACK = 16
python summing frequencies in a file,"d = defaultdict(int)
with open('file') as fh:
    for line in fh:
        word, count = line.split()
d[word] += count"
"user input with a timeout, in a loop","while True:
    pass"
how do i implement a simple cross platform python daemon?,parent_only_code()
paraview python scripting equivalent of file->save data,writer.WriteAllTimeSteps = 1
python: how to get numbers after decimal point?,import math
checking file permissions in linux with python,"def isgroupreadable(filepath):
    pass"
lexical closures in python,"for i in range(3):
    flist.append(partial(func, i))
for f in flist:
    pass"
recursive expressions with pyparsing,i = initlen
using name of list as a string to access list,"x = {'0': [], '2': [], '16': []}"
"python, evaluate a variable value as a variable","getattr(object, 'field')
f = 'field_name'"
retrieve matplotlib contourset for sympy plots,"x, y = numpy.meshgrid(a, b)"
custom json sort_keys order in python,return json.dumps(data)
faster way to read excel files to pandas dataframe,"for sheet in sheets:
    pass"
fastest way to find which two elements of a list another item is closest to in python,"list_ = [0, 3.5, 5.8, 6.2, 88]
item = 4.4
bisect.bisect_left(list_, item)"
how to find the average of previous sales at each time in python,"df = pd.read_csv('Sample.csv', index_col='date', parse_dates=[0],
    date_parser=dateparse)
expd_gb = df.reset_index().groupby(['wholesaler', 'product'])['sales'].apply(pd
    .Series.expanding)
idx = df.reset_index().groupby(['wholesaler', 'product', 'date'])['sales'
    ].count().index
cnct = pd.concat([expd_gb.iloc[n].mean().shift(1) for n in range(len(expd_gb))]
    )
cnct.index = idx
cnct.to_csv('TotalAvg.csv')"
python - number of digits in exponent,"mantissa, exp = s.split('e')
return '%se%+0*d' % (mantissa, exp_digits + 1, int(exp))
print(eformat(8.70927939438012e-05, 14, 3))
print(eformat(100008.70927939437, 14, 3))
print(eformat(1.1e+123, 4, 4))
print(eformat(1.1e-123, 4, 4))"
"ftplib, how to manage exception without errno attribute?","try:
    ftp.size('123.zip')
except ftplib.all_errors as e:
    pass"
cumulative monthly ytd based on threshold,"res = df.groupby('month')
res['qualified'] = df.groupby('month')"
solve cross origin resource sharing with flask,"cors = CORS(app, resources={'/foo': {'origins': 'http://localhost:port'}})"
how can i check if my python object is a number?,"print('%15s %s' % (n.__repr__(), isinstance(n, Number)))"
pythonic way to convert variable to list,"for item in input:
    yield item"
convert matplotlib data units to normalized units,fig = plt.gcf()
how to prefetch data using a custom python function in tensorflow,"for _ in range(TRAINING_EPOCHS):
    pass"
can i set float128 as the standard float-array in numpy,"from numpy import *
_empty = empty

def empty(*args, **kwargs):
    kwargs.update(dtype=float128)
_empty(*args, **kwargs)"
python implementation of viterbi algorithm,"self.trell.append([word, copy.deepcopy(temp)])"
using code generated by py++ as a python extension,"env = Environment()
if 'linux' not in sys.platform:
    env['MSVS'] = {'VERSION': ''}
env['MSVS_VERSION'] = ''
Tool('msvc')(env)
t = env.SharedLibrary(target='abstract_classes', source=[
    '/home/roman/language-binding/sources/pyplusplus_dev/unittests/temp/abstract_classes.cpp'
    ], LIBS=['boost_python'], LIBPATH=['', '/home/roman/include/libs'],
    CPPPATH=['/home/roman/boost_svn', '/usr/include/python2.6',
    '/home/roman/language-binding/sources/pyplusplus_dev/unittests/temp',
    '/home/roman/language-binding/sources/pyplusplus_dev/unittests/data',
    '/home/roman/boost_svn'], CCFLAGS=[], SHLIBPREFIX='', SHLIBSUFFIX='.so')"
scatterplot with xerr and yerr with matplotlib,"import matplotlib.pyplot as plt
x = [124.46, 8.2, 52.55, 4.33]
y = [124.46, 50.2, 78.3, 778.8]
xerr = [54.2, 0.1, 2.41, 1.78]
yerr = [22.55, 0.37, 3.77, 0.14]
descrip = ['Atom 1', 'Atom 2', 'Atom 3', 'Atom 4']
plt.errorbar(x, y, xerr, yerr, capsize=0, ls='none', color='black',
    elinewidth=2)
for xpos, ypos, name in zip(x, y, descrip):
    plt.annotate(name, (xpos, ypos), xytext=(8, 8), va='bottom', textcoords
        ='offset points')
plt.show()"
sqlalchemy: joining to the same table multiple times using declarative and reflection,__tablename__ = 'procedure'
google search with python,"import pprint
data = urllib.request.urlopen(
    'https://www.googleapis.com/customsearch/v1?key=YOUR_KEY_HERE&cx=017576662512468239146:omuauf_lfve&q=lectures'
    )
data = json.load(data)
pprint.PrettyPrinter(indent=4).pprint(data['items'][0])"
python - check network map,main()
removing character in list of strings,print([s.strip('8') for s in lst])
how would i create a custom list class in python?,return len(self._list)
django @staticmethod sum of two fields,"@property
def fee_total(self):
    pass"
"python pandas, change one value based on another value","df = pandas.read_csv('test.csv')
df['FirstName'][df.ID == 103] = 'Matt'"
deleting elements in a given list only?,B = A[0]
python - how to nest file read loops?,root = etree.fromstring(xml)
how to perform square root without using math module?,"def sqrt(x):
    last_guess = x / 2.0
while True:
    guess = (last_guess + x / last_guess) / 2
if abs(guess - last_guess) < 1e-06:
    return guess
last_guess = guess"
django get url regex by name,"if url:
    pass"
making a list of evenly spaced numbers in a certain range in python,"np.linspace(0, 5, 10)"
how to get everything after last slash in a url?,"url.rsplit('/', 1)[-1]"
adding pandas series with different indices without getting nans,"import pandas as pd
Sr1 = pd.Series([1, 2, 3, 4], index=['A', 'B', 'C', 'D'])
Sr2 = pd.Series([5, 6], index=['A', 'C'])
Sr1 + Sr2
Sr1.add(Sr2, fill_value=0)"
non-blocking solution to the dining philosophers,"swap(leftFork, rightFork)"
how to do a multi-level cli in python?,"def do_subcommand_2(self, args):
    pass"
"python script with gevent pool, consumes a lot of memory, locks up","body = urllib.request.urlopen('http://' + url, None, 5).read()"
please help me find the official name of this programming approach,"[['a', 'b'], ['a', 'c', 'd']]"
how do i calculate a rolling idxmax,"maxidx = np.lib.stride_tricks.as_strided(arr, shape=(s.size - 3 + 1, 3),
    strides=(n, n)).argmax(1)"
how to import a module from a folder next to the current folder?,__init__.py
using cloudfront with django s3boto,location = settings.MEDIAFILES_LOCATION
python - increase recursion limit in mac osx,x = x[index]
python libraries to calculate human readable filesize from bytes?,humansize(18754875155724)
keeping the terminal in focus,"def set_foreground(self):
    win32gui.ShowWindow(self._handle, win32con.SW_RESTORE)
win32gui.SetWindowPos(self._handle, win32con.HWND_NOTOPMOST, 0, 0, 0, 0, 
    win32con.SWP_NOMOVE + win32con.SWP_NOSIZE)
win32gui.SetWindowPos(self._handle, win32con.HWND_TOPMOST, 0, 0, 0, 0, 
    win32con.SWP_NOMOVE + win32con.SWP_NOSIZE)
win32gui.SetWindowPos(self._handle, win32con.HWND_NOTOPMOST, 0, 0, 0, 0, 
    win32con.SWP_SHOWWINDOW + win32con.SWP_NOMOVE + win32con.SWP_NOSIZE)
shell = win32com.client.Dispatch('WScript.Shell')
shell.SendKeys('%')
win32gui.SetForegroundWindow(self._handle)

def find_and_set(self, search):
    self.find_window_wildcard(search)
self.set_foreground()"
python first and last element from array,"test
test[::-1]
numpy.vstack([test, test[::-1]])"
extract cow number from image,"class RecognizeDigits:

    def __init__(self):
        pass

def process(self, img, x0, y0, x1, y1):
    """""" Receive the gtk.Image, and the limits of the selected area (in
            window coordinates!)
            Call Tesseract on the area, and give the possibility to  edit the
            result.
            Returns None if NO is pressed, and the OCR'd (and edited) text if OK
        """""""
how to process only new (unprocessed) files in linux,"path = '/home/b2blogin/webapps/mongodb/rawdata/segment_slideproof_testing'
processed_files_file = os.path.join(path, 'processed_files.txt')"
zeromq: how to prevent infinite wait?,"print('got message ', work_receiver.recv(zmq.NOBLOCK))"
method refactor: from many kwargs to one arg-object,"def foo(*args, **kwargs):
    pass"
"any way to execute a piped command in python using subprocess module, without using shell=true?",import tarfile
programatically save draft in gmail drafts folder,"imap = imaplib.IMAP4_SSL('imap.googlemail.com')
imap.debug = 4
imap.authenticate('XOAUTH', lambda x: token)
msg = email.message.Message()
msg['Subject'] = 'subject of the message'
msg['From'] = MY_EMAIL
msg['To'] = MY_EMAIL
msg.set_payload('Body of the message')
now = imaplib.Time2Internaldate(time.time())
imap.append('[Gmail]/Drafts', '', now, str(msg))
imap.logout()"
how do you create a button on a tkinter canvas?,"button1 = Button(self, text='Quit', command=self.quit, anchor=W)"
implementation of repository pattern in python?,"Exception.__init__(self, message)"
manipulate bytes down to binary levels in python,"a += '0b001'
a.replace('0b111', '0b0')"
how to check if an argument from commandline has been set?,import argparse
efficient way to create numpy arrays from binary files,"z_series = hstack((z_series, record_z))"
python function that returns values from list smaller than a number,"smaller_than([1, 2, 3, 4, 5, 6, 7, 8], 5)
smaller_than('abcdefg', 'd')
smaller_than(set([1.34, 33.12, 1.0, 11.72, 10]), 10)"
calling python script from crontab with activate,"os.environ['DJANGO_SETTINGS_MODULE'] = 'settings.production'
os.environ['DJANGO_CONF'] = 'settings.production'"
how to create qstring in pyqt4?,from PyQt4 import QtCore
adding two items at a time in a list comprehension,"['^', 'A', '^', 'B', '^', 'C', '^', 'E', '^', 'L', '^', 'K', '^', 'J', '^',
    'S', '^', 'D', '^', 'L', '^', 'H', '^', 'F', '^', 'W', '^', 'E', '^',
    'H', '^', 'S', '^', 'J', '^', 'D', '^', 'H', '^', 'F', '^', 'K', '^',
    'H', '^', 'I', '^', 'U', '^', 'E', '^', 'H', '^', 'F', '^', 'S', '^',
    'D', '^', 'F']"
python standard library function for rearranging a list,"[1, 2, 3, 4]"
"how does one add an item to gtk's ""recently used"" file list from python?","recent_mgr.add_item(uri)
GObject.idle_add(Gtk.main_quit)"
pandas scatterplot using data frame fields to derive colors and legend,"for _, row in df.iterrows():
    plt.plot(row.preTestScore, row.postTestScore, 'o', ms=np.sqrt(row.age),
        label=row.last_name)
plt.legend(loc='upper left', bbox_to_anchor=(1, 1))"
frequency tables in pandas (like plyr in r),"d1.groupby('ExamenYear').agg({'Participated': len, 'Passed': lambda x: sum(
    x == 'yes')})"
how to deal with time values over 24 hours in python?,"time = time.replace(' 24', ' 23')"
anova in python using pandas dataframe with statsmodels or scipy?,"print(sm.stats.anova_lm(cw_lm, typ=2))"
combine two strings (char by char) and repeat last char of shortest one,"import itertools

def extendedString(string1, string2):
    filler = string2[-1] if len(string1) > len(string2) else string1[-1]
return ''.join(i for j in itertools.zip_longest(string1, string2, fillvalue
    =filler) for i in j)"
use of return in long if-elseif-else statements (python),"return
if eggs == 1:
    do_something_1()
elif eggs == 2:
    do_something_2()
elif eggs == 3:
    do_something_3()
else:
    assert False
do_something_4()
do_something_5()
do_something_6()"
assigning float as a dictionary key changes its precision (python),"x = pd.Series([16, 14, 12, 10, 3.1])"
retrieve top n in each group of a dataframe in pyspark,"rdd = sc.parallelize([('user_1', 'object_1', 3), ('user_1', 'object_2', 2),
    ('user_2', 'object_1', 5), ('user_2', 'object_2', 2), ('user_2',
    'object_2', 6)])
df = sqlContext.createDataFrame(rdd, ['user_id', 'object_id', 'score'])"
how to set the current working directory in python?,os.chdir('c:\\Users\\uname\\desktop\\python')
reloading a python module per process in the multiprocessing module,import my_module
is there a meaningful way to use context managers inside generators?,"def context():
    print('entering')
try:
    yield
finally:
    print('exiting')

def test():
    with context():
        for x in range(10):
            yield x"
how to find out whether a file is at its `eof`?,"for line in f:
    foo()"
python split string by pattern,"for match in repeat.finditer('a-bb-cccccccc'):
    pass"
django : update div with ajax,"url('^api/latest-chat/(?P<seconds_old>\\d+)/$', get_latest_chat),"
simplifying logging in flask,"def pre_request_logging():
    if 'text/html' in request.headers['Accept']:
        pass"
how to extract sheet from *.xlsm and save it as *.csv in python?,writer = csv.writer(f)
writing binary data to a file in python,"import struct
fout = open('test.dat', 'wb')
fout.write(struct.pack('>if', 42, 2.71828182846))
fout.close()"
python: how to read huge text file into memory,block = f.read(65536)
testing click python applications,assert result.output == 'Hello Sam\n'
"how to get min, seconds and milliseconds from datetime.now() in python?",a = datetime.datetime.now()
insert item into case-insensitive sorted list in python,"a.insert(lo, x)"
appropriate deep learning structure for multi-class classification,"model.add(Dense(nNeurons, input_dim=nFeatures))"
how to jump to a particular line in a huge text file?,"offset += len(line)
file.seek(0)"
"problem with 2d interpolation in scipy, non-rectangular grid","return 10 * np.cos(np.hypot(x, y) / np.sqrt(2) * 2 * np.pi * cycle)"
find intersection of two lists?,"b1 = [1, 2, 3, 4, 5, 9, 11, 15]
b2 = [4, 5, 6, 7, 8]
set(b1).intersection(b2)"
adding lines after specific line,file.seek(index)
all possible permutations of a set of lists in python,"l = [[1, 2, 3], [4], [5, 6]]
list(itertools.product(*l))
l = [[1, 2, 3], [4], [5, 6], [7, 8]]"
memcached getting null for string set with python and then get from java,key = 'someKey'
keep duplicates in a list in python,"x = [1, 2, 2, 2, 3, 4, 5, 6, 6, 7]"
how to check paramiko version installed?,"import paramiko
print(paramiko.__version__)"
cherrypy logging: how do i configure and use the global and application level loggers?,sys.exit()
how to send html email with django with dynamic content in it?,msg.send()
django circular model reference,"class Team(Model):
    name = CharField(max_length=50)

def get_captain(self):
    return PlayerRole.objects.get(team=self).player


class Player(Model):
    first_name = CharField(max_length=50)
last_name = CharField(max_length=50, blank=True)

def get_team(self):
    return PlayerRole.objects.get(player=self).team
PLAYER_ROLES = ('Regular', 'Regular'), ('Captain', 'Captain')


class PlayerRole(Model):
    player = OneToOneField(Player, primary_key=True)
team = ForeignKey(Team, null=True)
role = CharField(max_length=20, choices=PLAYER_ROLES, default=PLAYER_ROLES[
    0][0])


class Meta:
    unique_together = 'player', 'team'"
python pandas order column according to the values in a row,"df = pd.DataFrame(np.random.randn(10, 4), columns=['ddd', 'fff', 'aaa', 'ppp'])
last_row_name = df.index[-1]"
how to auto assign public ip to ec2 instance with boto,"return instance_id, instance_name"
is there any python implementation of logstash's grok functionality?,"def compile(pat):
    pass"
dealing with metaclass conflict with sql alchemy declarative base,"def __init__(cls, classname, bases, dict_):
    print('Meta')"
asyncio making http requests slower?,"for i in range(10):
    r = requests.get('http://google.com', timeout=3)"
is there a limit on the number of asynchronous urlfetch calls i can run simultaneously?,"for x in range(1, 30):
    rpc.append(urlfetch.create_rpc())
urlfetch.make_fetch_call(rpc[-1],
    'http://stackoverflow.com/questions/3639855/what-happens-if-i-call-more-than-10-asynchronous-url-fetch'
    )"
multiprocessing incompatible with numpy,numpy.core._dotblas.__file__
easiest way to replace a string using a dictionary of replacements?,pattern = re.compile('|'.join(list(d.keys())))
python finding index of maximum in list,"max(enumerate(a), key=lambda x: x[1])[0]"
flask test_client removes query string parameters,absolute_url = 'http://someurl.com/path/to/endpoint?q=test'
"in python, how to check the end of standard input streams (sys.stdin) and do something special on that",do_whatever()
how can i efficiently search for many strings at once in many files?,"if __name__ == '__main__':
    sys.exit(main(sys.argv))"
normalizing colors in matplotlib,fig = plt.figure()
find possible bijection between characters and digits,"def is_bijection(seq1, seq2):
    distinct1 = set(seq1)"
reading in integer from stdin in python,n = int(input())
resolving a relative url path to its absolute path,"urljoin('http://www.asite.com/folder/currentpage.html', '../finalpage.html')"
way to efficiently calculate xor(^) checksum based on a list of ids,"for n in range(x, x + lengthmodified):
    prestringresult ^= n"
how would i run a script file as part of the python setup.py install?,"from setuptools.command.install import install


class MyInstall(install):

    def run(self):
        install.run(self)
print(""""""



I did it!!!!



"""""")"
removing completely isolated cells from python array?,"sum3x3 = sat[3:, 3:] + sat[:-3, :-3] - sat[3:, :-3] - sat[:-3, 3:]"
how to remove a path prefix in python?,"path = '/book/html/wa/foo/bar/'
path[path.find('/wa'):]"
splitting a string with multiple delimiters in python,"import re
re.split('[,;]+', 'This,is;a,;string')"
most efficent way to create all possible combinations of four lists in python?,"for h, d in ((h, d) for h in headers for d in description):
    pass"
python: sort a list and change another one consequently,"ys = [1, 2, 3]"
"python 2.7 - find and replace from text file, using dictionary, to new text file",print(ame_to_bre(text))
optimizing implementation of a rotating mask in numpy/scipy,"def rotation_matrix2(section, _as_strided=stride_tricks.as_strided):
    section = section.reshape(5, 5)"
pyqt4 set windows taskbar icon,self.show()
how do i plot only weekdays using python's matplotlib candlestick?,"ax.set_xticks(list(range(0, len(weekday_quotes), 5)))
ax.set_xticklabels([mdates.num2date(quotes[index][0]).strftime('%b-%d') for
    index in ax.get_xticks()])"
how to accumulate an array by index in numpy?,"indices = np.array([1, 2, 2, 1, 3])
values = np.array([1, 1, 1, 1, 1])
a = np.array([0, 0, 0, 0, 0, 0])
for i, ix in enumerate(indices):
    a[ix] += values[i]
a"
create pandas dataframe from txt file with specific pattern,print(df)
implementing python slice notation,answer.append(L[i])
how to copy a python class?,"class A(object):
    pass"
add multiple columns to pandas dataframe from function,"newcols.columns = ['hour', 'weekday', 'weeknum']
newdf = df.join(newcols)"
python infinity - any caveats?,"try:
    res = math.exp(420000)
except OverflowError:
    pass"
python: how to compare multiple sequences from a fasta file with each other?,"for pos in range(0, min(len(sequence1), len(sequence2))):
    pass"
"pythonic way to iterate over sequence, 4 items at a time",from itertools import zip_longest
geometric median of multidimensional points,dist = []
"list of tables, db schema, dump etc using the python sqlite3 api","cursor.execute(""SELECT name FROM sqlite_master WHERE type='table';"")
tables = cursor.fetchall()"
pandas: union duplicate strings,"print(df.groupby([g.ID, df.date, g.url], sort=False).agg({'active_seconds':
    'sum', 'url': 'first'}).reset_index(level='url', drop=True).reset_index(
    ).reindex(columns=df.columns))"
canonical url compare in python?,return canonical_url(u1) == canonical_url(u2)
how to get one number specific times in an array python,C = []
insert binary file in sqlite database with python,row = db.execute('SELECT * FROM t').fetchone()
read a file in python starting with a particular string,"import glob
path = '/home/[user]'"
how to get rid of grid lines when plotting with seaborn + pandas with secondary_y,new_style = {'grid': False}
"i am learning python, need some pushing in the right direction","print(('Average is ', tot / line_cnt))
f.close()"
search similar meaning phrases with nltk,"verb_bool = wn.synset(verb_syn) in hypernym_paths(verb, 'v')"
how to sort alphanumerically in unix with sort? more complex than seems,"def natural_sorted(iterable, reverse=False):
    """"""Return a list sorted the way that humans expect.""""""

def convert(text):
    return int(text) if text.isdigit() else text

def natural(item):
    return map(convert, re.split('([0-9]+)', item))"
pipe subprocess standard output to a variable,output = subprocess.check_output('ls')
updating a large number of entities in a datastore on google app engine,"for model_db in model_dbs:
    pass"
python: log in a website using urllib,import requests
sine wave that exponentialy changes between frequencies f1 and f2 at given time/amount of samples,"for oversample in range(n_oversample):
    fractional_step = oversample / float(n_oversample)"
log scale on radial contour plot with matplotlib,"theta = np.where(y < 0, 2 * np.pi - theta, theta)"
reading dbf files with pyodbc,conn.Open(dsn)
python: how to add three text files into one variable and then split it into a list,msglist = []
python mysql.connector dictcursor?,"for row in recordset:
    pass"
make model __unicode__ method return to multiple colums,"def __unicode__(self):
    return str(self.name)"
profiling a method of a class in python using cprofile?,"foo = Foo()
foo.bar()"
convert bytes to bits in python,"c.invert()
c.bin[2:]"
ggplot multiple plots in one object,from ggplot import *
python: reading part of a text file,form = element.attrib['form']
resize fields in django admin,"class MyModelAdmin(admin.ModelAdmin):
    pass"
fastest way to load numeric data into python/pandas/numpy array from mysql,"df = psql.read_frame(sql, conn)"
how to convert an image to a specific file size?,"class Images(models.Model):
    profile_picture = imagekit.models.ProcessedImageField(upload_to=
        get_profile_picture_file_path, format='JPEG', processors=[
        ResizeToFill(height=150, width=150)])

def save(self, force_insert=False, force_update=False, using=None,
    update_fields=None):
    if os.stat(get_profile_picture_file_path + '/' + self.profile_picture.
        new_name).st_size > max_size:
        pass"
mutually exclusive option groups in python click,"kwargs['help'] = help + (
    ' NOTE: This argument is mutually exclusive with  arguments: [' +
    ex_str + '].')
super(MutuallyExclusiveOption, self).__init__(*args, **kwargs)

def handle_parse_result(self, ctx, opts, args):
    if self.mutually_exclusive.intersection(opts) and self.name in opts:
        raise UsageError(
            'Illegal usage: `{}` is mutually exclusive with arguments `{}`.'
            .format(self.name, ', '.join(self.mutually_exclusive)))
return super(MutuallyExclusiveOption, self).handle_parse_result(ctx, opts, args
    )"
python unicode string literals in module declared as utf-8,unicode_snowman = '\xe2\x98\x83'.decode('utf8')
python logging - disable logging from imported modules,"handler = logging.StreamHandler()
handler.setLevel(logging.DEBUG)
logger.addHandler(handler)
requests_logger.addHandler(handler)"
"python all possible combinations of 0,1 of length k","from itertools import product
for k in range(2, 5):
    pass"
how to set default text for a tkinter entry widget,root.mainloop()
python logging - overview of currently installed loggers/handlers,logger.level = logging.INFO
python: getting a windowserror instead of an ioerror,"if os.path.isdir(dir):
    shutil.rmtree(dir)"
python generate a dynamic dictionary from the list of keys,"t = t.setdefault(k, {})"
how do i set up a daemon with python-daemon?,"def do_something(logf):
    logger = logging.getLogger('eg_daemon')"
creating a custom spark rdd in python,assert rdd.squares().collect() == rdd.map(lambda x: x * x).collect()
prettier default plot colors in matplotlib,"for i in range(num_lines):
    x = np.linspace(0, 20, 200)
ax.plot(x, np.sin(x) + i)"
add 'decimal-mark' thousands separators to a number,"locale.setlocale(locale.LC_ALL, 'de_DE.utf-8')"
hacking javascript array into json with python,"array = nestedExpr('[', ']', delimitedList(object_, ','))
return array + StringEnd()
JS_GRAMMAR = js_grammar()

def parse(js):
    return JS_GRAMMAR.parseString(js[len('var txns = '):])[0]

def to_dict(object_):
    return dict((p.key, p.value) for p in object_)
result = [{'transaction': to_dict(object_)} for object_ in parse(data)]
print(json.dumps(result))"
getting 401 on twitter oauth post requests,"def encodekeyval(key, val):
    key = urllib.parse.quote(key, '')
val = urllib.parse.quote(val, '')
return urllib.parse.quote(key + '=' + val, '')

def signature_base_string(urlstr, oauthdata):
    sigstr = 'POST&' + urllib.parse.quote(urlstr, '') + '&'"
how to accept keypress in command line python?,"curses.cbreak()
stdscr.keypad(1)"
how can i change directory with python pathlib,"try:
    yield
finally:
    os.chdir(prev_cwd)"
python: flatten to a list of lists but no more,"[[1, 2, 3], ['a', 'b', 'c']]"
"easy, scriptable way to sub-sample unstructured thredds data?",lon = ncv['lon'][:]
set a read-only attribute in python?,sys.stdout = NewOut()
how do i perform deep equality comparisons of two lists of tuples?,"def setterific(l):
    return frozenset(frozenset(p) for p in l)
setterific(larry) == setterific(moe)"
passing arguments to modelview edit template in flask-admin,form_overrides = dict(text=forms.CustomTextAreaField)
how to pass a class variable to a decorator inside class definition?,print(self.var)
how do i detect the currently focused application?,"if wmclass is None and wmname is None:
    window = window.query_tree().parent
wmname = window.get_wm_name()
print('WM Name: %s' % (wmname,))"
how to gauss-filter (blur) a floating point numpy array,from scipy.ndimage.filters import gaussian_filter
check if a list has one or more strings that match a regex,"any(re.search('\\d{4}', s) for s in lst)"
split a string and add into `tuple`,"s = '012345'
map(''.join, zip(*([iter(s)] * 2)))"
how to access individual predictions in spark randomforest?,predictions = [t.predict(testData) for t in trees]
generate a heatmap in matplotlib using a scatter data set,"Z2 = ML.bivariate_normal(X, Y, 4, 1, 1, 1)"
match groups in python,"m1 = re.match('Ich liebe (\\w+)', statement)"
how to draw a proper grid on pyqt?,"self.setSceneRect(0, 0, width, height)"
python: get default gateway for a local interface/ip address in linux,"if fields[1] != '00000000' or not int(fields[3], 16) & 2:
    continue
return socket.inet_ntoa(struct.pack('<L', int(fields[2], 16)))"
regex to extract between two strings (which are variables),"pattern_string = re.escape(left_identifier) + '(.*?)' + re.escape(
    right_identifier)"
how to remove read-only attrib directory with python in windows?,"import os, stat
os.chmod('file_path_name', stat.S_IWRITE)"
python decorator makes function forget that it belongs to a class,"return func(*args, **kwargs)"
pybrain - how to do deep belief network training?,trainer.trainEpochs(epochs)
find unique elements of floating point array in numpy (with comparison using a delta value),"a = np.random.random((10,))
b = a.copy()
b.sort()
d = np.diff(b)
result = b[d > TOL]"
changing order of ordered dictionary in python,odict[key] = odict.pop(key)
cprofile taking a very long time,cProfile.run('main()')
the use of punctuation in python format strings,"class Computer(object):

    def __init__(self, IP):
        self.IP = IP"
what do i use for a max-heap implementation in python?,"import heapq
listForTree = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
heapq.heapify(listForTree)
heapq._heapify_max(listForTree)"
too many open files in python,fds.append(fd)
computing the correlation coefficient between two multi-dimensional arrays,"cov = np.dot(x, y.T) - n * np.dot(mu_x[:, (np.newaxis)], mu_y[(np.newaxis), :])"
restarting a self-updating python script,"args = [('""%s""' % arg) for arg in args]"
numpy subtract/add 1d array from 2d array,"import numpy
a = numpy.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15]])"
setting a clip on a seaborn plot,plt.show()
beautiful soup open all the url with pid in it,href = (domain_link + '/' + href).strip()
how do you merge images into a canvas using pil/pillow?,"im.thumbnail((100, 100))
for i in range(0, 500, 100):
    pass"
a nice way to find all combinations that give a sum of n?,l.append(digits)
converting xml to dictionary using elementtree,print(ET.tostring(dict_to_etree(d)))
"python: produce list which is a sum of two lists, item-wise","a = [1, 2, 3, 4, 5]
b = [5, 4, 3, 2, 1]
c = [(x + y) for x, y in zip(a, b)]
c"
smtp sending an priority email,"m['X-Priority'] = '2'
m['Subject'] = 'Urgent!'"
remove leading nan in pandas,s[first_non_nan:]
merging data frame columns of strings into one single column in pandas,"def pir3(df):
    a = df.values[:, (0)].copy()"
"in python, how to display current time in readable format","import time
time.ctime()"
how do i get a list of column names from a psycopg2 cursor?,"for row in cursor:
    pass"
how to implement python's namedtuple in javascript,return obj
add items to a dictionary of lists,"data = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]"
add text on image using pil,"font = ImageFont.truetype(os.path.join(fonts_path, 'sans_serif.ttf'), 24)"
pass existing webdriver object to custom python library for robot framework,"def get_webdriver_instance():
    pass"
finding index where one sequence is greater than another,"top = min(len(a1) - 1, len(a2) - 1)
if a2[top] <= a1[top]:
    return -1
while top > bottom:
    mid = top + bottom >> 1
if a2[mid] > a1[mid]:
    top = mid
else:
    bottom = mid + 1
return top
f1 = [(x + 20) for x in range(80)]
f2 = [(2 * x) for x in range(100)]
print(crossover(f1, f2))"
algorithm to sum/stack values from a time series graph where data points don't match on time,"def join_series(s1, s2):
    S1 = iter(s1)"
finding the values and keys from dictionaries and verifying them,"if d['pw'] == '*sss*' or d['pw'] == '':
    pass"
creating signed urls for amazon cloudfront,print(signed_url)
python: retrieve items from a set,return hash(self.x)
gsm location in python,"if ret[4] == 1:
    return int(ret[0]), int(ret[1]), ret[2], ret[3]"
zoom action in android using appium-python-client,"action2.long_press(x=xx, y=yy).move_to(x=0, y=-50).wait(500).release()
m_action.add(action1, action2)"
custom address field in django model,"forms.CharField(required=kwargs['required']),
USStateField(required=kwargs['required']),"
parsing html into sentences - how to handle tables/lists/headings/etc?,"html = doc.getroot()
body = html.xpath('//body')[0]"
"python basic data references, list of same reference",pprint.pprint(gc.get_referrers(l))
removing duplicates in a python list by id,"d[id(b)] = b
print(list(d.values()))"
removing nan values from a python list,"119.63673757, 19712.43294378, 0.0, 20052.36456133"
for python is there a way to print variables scope from context where exception happens?,"def f():
    pass"
tkinter: how to use after method,"def add_letter():
    pass"
context switching with 'yield',tasks.put(bar())
opening a ssl socket connection in python,"import socket
import ssl
packet, reply = '<packet>SOME_DATA</packet>', ''
HOST, PORT = 'XX.XX.XX.XX', 4434
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.settimeout(10)
wrappedSocket = ssl.wrap_socket(sock, ssl_version=ssl.PROTOCOL_TLSv1,
    ciphers='ADH-AES256-SHA')
wrappedSocket.connect((HOST, PORT))
wrappedSocket.send(packet)
print(wrappedSocket.recv(1280))
wrappedSocket.close()"
how to execute a python script and write output to txt file?,"text_file = open('output.txt', 'w')
text_file.write('my string i want to put in file')
text_file.close()"
executing assembler code with python,"code.add(x86.mov(code.gp_return, rsp))
proc = x86_env.Processor()"
extract id3 tags of a mp3 url with partial download using python,return response.read()
show the sql generated by flask-sqlalchemy,"from flask_sqlalchemy import get_debug_queries
User.query.filter_by(display_name='davidism').all()"
repeated function application,"iterate(f, 10, 3)"
custom double star operator for a class?,"def __len__(self):
    return 2

def __getitem__(self, item):
    pass"
how can i extend ckan api?,"@toolkit.side_effect_free
def get_news(context, data_dict=None):
    return {'hello': 'world'}


class CustomAPIPlugin(plugins.SingletonPlugin):
    pass"
sqlite data change notification callbacks in python or bash or cli,"if err:
    pass"
how can i compare a unicode type to a string in python?,a = 'MyString'
recursive pattern in regex,"regex.findall('{((?>[^{}]+|(?R))*)}', '{1, {2, 3}} {4, 5}')"
end a loop in a function from another function in python,worker_thread.run_event.clear()
python: optimal way of adding to dictionary with list values,"class myClass:

    def __init__(self):
        pass"
custom django field to store a list of email addresses,"return ','.join(self)"
delete files with python through os shell,"if file.endswith('.txt'):
    os.remove(os.path.join(dir, file))"
conditionally replacing values based on values in another column,d
is it faster to union sets or check the whole list for a duplicate?,l1.append(elem)
python : multiprocessing and array of c_char_p,print([a.value for a in arr])
use python for creating json,"super(ClassNodeVisitor, self).__init__()"
python logging configuration file,"file_handler.setLevel(logging.INFO)
console_handler = logging.StreamHandler()
console_handler.setLevel(logging.DEBUG)"
alternatives to django for python based web development?,"def hello1():
    return 'Hello World'

def hello5():
    return HTML(BODY(H1(T('Hello World'), _style='color: red;'))).xml()"
non-global middleware in django,"view_name = '.'.join((view_func.__module__, view_func.__name__))"
"in python using flask, how can i write out an object for download?","@app.route('/get-file')
def get_file():
    results = generate_file_data()"
python copytree with negated ignore pattern,"def ignored_files(adir, filenames):
    return [filename for filename in filenames if not filename.endswith('foo')]
shutil.copytree(source, destination, ignore=ignored_files)"
fabric and svn password,"print('[%s] run: %s' % (env.host_string, command))"
ordered manytomanyfield that can be used in fieldsets,from django.db import models
multiple tables (5) one one page using reportlab,"data2 = [['100', '01', '02', '03', '04'], ['10', '11', '12', '13', '14'], [
    '20', '21', '22', '23', '24'], ['30', '31', '32', '33', '34']]"
best way to implement a deck for a card game in python,"def __init__(self, rank, suit):
    pass"
python | accessing dll using ctypes,print(dll._sin(34))
boto3 and swf example needed,import boto3
"how can i remove all words that end in "":"" from a string in python?","import re
blah = 'word word: monty py: thon'
answer = re.sub('\\w+:\\s?', '', blah)
print(answer)"
are there technical reasons a ruby dsl like rspec couldn't be rewritten in python?,"class myint(int):
    pass
i = myint(5)
i"
python: implementation of shallow and deep copy constructors,"def __copy__(self):
    return type(self)(self.bar)

def __deepcopy__(self, memo):
    return type(self)(deepcopy(self.bar, memo))"
use of properties in python like in example c#,"class C(object):

    def __init__(self):
        self._x = 0

@property
def x(self):
    return self._x

@x.setter
def x(self, value):
    if value <= 0:
        pass"
python libraries for ssh handling,"ssh.connect(host, username=username, password=password)"
install filter on logging level in python using dictconfig,import sys
using explicit del in python on local variables,"class visdel(object):
    pass"
split numpy array at multiple values?,"[array([[0.1, 0.0], [3.5, 1.0], [6.5, 2.0], [7.9, 3.0]]), array([[11.4, 4.0
    ], [12.0, 5.0]]), array([[22.3, 6.0], [24.5, 7.0], [26.7, 8.0], [29.9, 
    9.0]])]"
define aggfunc for each values column in pandas pivot table,"df3 = pd.pivot_table(df, values=['D', 'E'], rows=['B'], aggfunc=[np.sum, np
    .mean])
df3
df3 = df3.ix[:, ([('sum', 'D'), ('mean', 'E')])]
df3.columns = ['D', 'E']"
double linebreak fails with matplotlib and xkcd style,"for il, l in enumerate(text.split('\n')):
    pass"
python asyncore using 100% cpu after client connects,return
converting dictionary with known indices to a multidimensional array,"idx = np.array(list(d.keys()))
vals = np.array(list(d.values()))
dims = idx.max(0) + 1
out = np.zeros(dims, dtype=vals.dtype)
out[idx[:, (0)], idx[:, (1)]] = vals"
fast lookup in list of intervals,"if value >= values[x][0] and value < values[x][1]:
    matches.append([value, values[x]])"
unpack a list to cycle tag in django,"class CycleNode(template.Node):

    def __init__(self, cyclevars):
        self.cyclevars = template.Variable(cyclevars)

def render(self, context):
    names = self.cyclevars.resolve(context)
if self not in context.render_context:
    context.render_context[self] = itertools.cycle(names)
cycle_iter = context.render_context[self]
return next(cycle_iter)"
how to free memory after opening a file in python,print('End of script')
is there a chain calling method in python?,"from functools import reduce
val = reduce(lambda r, f: f(r), (f1, f2, f3), arg)"
how can i include a python package with hadoop streaming job?,"importer = zipimport.zipimporter('nltkandyaml.mod')
yaml = importer.load_module('yaml')"
display image of png binary that is stored in mongodb,screenshot = PhotoImage(file='output.png')
using scipy to integrate a function that returns a matrix or array,"output += np.sum(integrand(a), axis=1)"
clear cookies from requests python,"s = requests.session()
s.get('http://httpbin.org/cookies/set', params={'foo': 'bar'})"
use plotly offline to generate graphs as images,"random_x = np.random.randn(N)
random_y = np.random.randn(N)
trace = go.Scatter(x=random_x, y=random_y, mode='markers')"
how to find row of 2d array in 3d numpy array,"[True, False]
[True, True]
[True, True]"
tkinter: how to use after method,"tile_frame = Label(frame, text=rand)"
direct way to generate sum of all parallel diagonals in numpy / pandas?,"np.sum(xs.data, axis=1)"
adding + sign to exponent in matplotlib axes,ax.xaxis.set_major_formatter(formatter)
how do i convert local time to utc in python?,"UTC_OFFSET_TIMEDELTA = datetime.datetime.utcnow() - datetime.datetime.now()
local_datetime = datetime.datetime.strptime('2008-09-17 14:04:00',
    '%Y-%m-%d %H:%M:%S')
result_utc_datetime = local_datetime + UTC_OFFSET_TIMEDELTA
result_utc_datetime.strftime('%Y-%m-%d %H:%M:%S')"
getting the average of a certain hour on weekdays over several years in a pandas dataframe,"res = df.groupby([df['Date/Time'].dt.year, df['Date/Time'].dt.hour]).mean()"
get function callers' information in python,"['f2', 'f3', 'f4', '<module>']"
"extracting a region from an image using slicing in python, opencv",cv2.waitKey(0)
"in sympy, how do i get the coefficients of a rational expression?","def get_rational_coeffs(expr):
    num, denom = expr.as_numer_denom()
return [sp.Poly(num, x).all_coeffs(), sp.Poly(denom, x).all_coeffs()]
a, b, c, d, x, s = sp.symbols('a b c d x s')
expr = (a + b * x) / (c + d * x)
(n1, n0), (d1, d0) = get_rational_coeffs(s * expr)
print(((n0, n1), (d0, d1)))"
python logging: use milliseconds in time format,logger.debug('Jackdaws love my big sphinx of quartz.')
numpy - square root of -1 leaves a small real part,math.cos(_ / 2)
"django, template context processors","TEMPLATE_CONTEXT_PROCESSORS = 'myapp.processor.foos',"
elegant grid search in python/numpy,"def my_func(x, y, z):
    return (x + y + z) / 3.0, x * y * z, max(x, y, z)"
array initialization in python,x = 3
numpy collapse columns according to list,n_cols = L.shape[0]
parse timezone abbreviation to utc,"cettime.isoformat()
""""""2010-01-01T12:57:00+01:00"""""""
find xml element based on its attribute and change its value,"for node in elem.findall('.//number'):
    if node.attrib['topic'] == 'sys/phoneNumber/1':
        tag = SubElement(node, 'TagName')
tag.attrib['attr'] = 'AttribValue'"
get md5 hash of big files in python,"while True:
    data = f.read(block_size)"
shutil.rmtree doesn't work with windows library,"shutil.rmtree(tmp, ignore_errors=True)"
python script to remove all comments from xml file,tree = etree.fromstring(XML)
"in gevent, how can i dump stack traces of all running greenlets?","for ob in gc.get_objects():
    if not isinstance(ob, greenlet):
        continue
if not ob:
    pass"
how would you create a comma-delimited string from a pyodbc result row?,"with open(out_file, 'w') as f:
    csv.writer(f, quoting=csv.QUOTE_NONE).writerows(cursor)"
find all coordinates within a circle in geographic data in python,"for point in points:
    distances, indices = tree.query(point, len(points), p=2,
        distance_upper_bound=max_distance)
point_neighbors = []
for index, distance in zip(indices, distances):
    if distance == inf:
        break
point_neighbors.append(points[index])
point_neighbors_list.append(point_neighbors)"
cherrypy logging: how do i configure and use the global and application level loggers?,hostname = socket.gethostname()
python round up integer to next hundred,roundup(101)
python how to check list does't contain any value,"def isEmpty(li=[]):
    for elem in li:
        if len(elem) > 0:
            pass"
how can i: generate 40/64 bit wep key in python?,"for i, c in enumerate(passphrase):
    bits[i & 3] ^= ord(c)"
python: how to read a (static) file from inside a package?,"template = pkg_resources.resource_string(resource_package, resource_path)"
extracting pitch features from audio file,"from bregman.suite import Chromagram
audio_file = 'mono_file.wav'
F = Chromagram(audio_file, nfft=16384, wfft=8192, nhop=2205)
F.X
F.X[:, (0)]"
iterate over matrices in numpy,"g = (np.array(x).reshape(n, n) for x in itertools.product([0, 1], repeat=n **
    2))"
how to implement 'someasyncworker()' from bottle asynchronous primer?,current = datetime.datetime.now()
how to do camelcase split in python,"def camel_case_split(identifier):
    pass"
longest chain of elements from list in python,"chain('spain', nations)"
how to get the n next values of a generator in a list (python),list(next(it) for _ in range(n))
how to group elements in python by n elements?,subList
root mean square in numpy and complications of matrix and arrays of numpy ,"k = np.zeros(N)
k[:] = U[(ind), :]"
displaying blob images in python (app engine),self.response.out.write('/static/unknown.gif')
cx-freeze doesn't find all dependencies,include_msvcr = False
inserting into python dictionary,"masterlist.update((x, False) for x in exceptions if x in masterlist)"
parse shell file output with python,output = {}
python dictionary contains list as value - how to update?,"dictionary['C1'] = [(x + 1) for x in dictionary['C1']]
dictionary"
variable number of digit in format string,"""""""16%"""""""
browser simulation - python,r = opener.open('http://example.com/')
sympy cannot solve polynomial equation of 4th order,"def maybeRightX(maybeX, polys):
    sum = 0
for i in range(len(polys)):
    sum += polys[i] * maybeX ** i
return sum"
pass file * into function from python / ctypes,"ctypes.pythonapi
api = _
api.PyFile_AsFile
api.PyFile_AsFile.restype = ctypes.c_void_p
api.PyFile_AsFile.argtypes = ctypes.c_void_p,
api.PyFile_AsFile(id(f))"
interactive slider to vary slice used in bokeh image plot,"source.data['image'] = RGB_image[:, :, (idx)]"
calculate local time derivative of series,df.plot()
python named tuple to dictionary,funkytown._asdict()
how do i save excel sheet as html in python?,xl = Dispatch('Excel.Application')
affine transformation between contours in opencv,"imshow(gray1, cmap=cm.gray, alpha=0.5)"
check whether the process is being run as a pipe,"if sys.stdin.isatty():
    pass"
how to calculate cohen's d in python?,from math import sqrt
remove duplicates from nested dictionaries in list,"l = [{'value1': 'fssd', 'value2': 'dsfds', 'value3': 'abcd', 'value4': 'gk'
    }, {'value1': 'asdasd', 'value2': 'asdas', 'value3': 'dafdd', 'value4':
    'sdfsdf'}, {'value1': 'sdfsf', 'value2': 'sdfsdf', 'value3': 'abcd',
    'value4': 'gk'}, {'value1': 'asddas', 'value2': 'asdsa', 'value3':
    'abcd', 'value4': 'gk'}, {'value1': 'asdasd', 'value2': 'dskksks',
    'value3': 'ldlsld', 'value4': 'sdlsld'}]"
writing pandas dataframe to excel with different formats for different columns,"df.to_excel(writer, sheet_name='Sheet1')
workbook = writer.book
worksheet = writer.sheets['Sheet1']
format1 = workbook.add_format({'num_format': '#,##0.00'})
format2 = workbook.add_format({'num_format': '0%'})
format3 = workbook.add_format({'num_format': 'h:mm:ss AM/PM'})
worksheet.set_column('B:B', 18, format1)
worksheet.set_column('C:C', None, format2)
worksheet.set_column('D:D', 16, format3)
writer.save()"
list to array conversion,"for item in dataset_list.split(';'):
    dataset_array.append(item)"
python local vs global variables,print(a)
sort nodes based on inputs / outputs,"unordered_nodes = [Node4, Node3, Node2, Node1]"
python vs javascript datetime,1376092800
change the axes labels after drawing a violinplot on a facetgrid,"g.map(sns.violinplot, '2013-2014 Assessment Score', 'Gender', color='RdBu')"
how to speed up the prime-finding process?,"import math

def is_prime(num):
    if num == 0 or num == 1:
        return False
if num == 2:
    return True
temp = 2
while temp < math.sqrt(num) + 1:
    if num % temp == 0:
        return False
temp += 1
return True"
custom json encoder in python with precomputed literal json,return result
debug slow program; restart from middle,a = np.vander(np.arange(3))
python - running autobahn|python asyncio websocket server in a separate subprocess or thread,p = Process(target=worker)
plotting ellipsoid with matplotlib,"ax = fig.add_subplot(111, projection='3d')"
how to check if an object is a generator object in python?,"types.GeneratorType
gen = (i for i in range(10))"
change specific indexes in string to same value python,"import mmap
with open('infilename', 'r') as in_f:
    in_view = mmap.mmap(in_f.fileno(), 0)"
exact hitting set for keywords in text,"kw_lengths.append((v[0][1] - v[0][0], k))"
find number of consecutive elements that are the same before they change,"a = [1, 1, 1, 2, 2]
b = [1, 1, 2, 2, 2]
c = [2, 1, 1, 1, 1]"
sorting 5 elements with minimum element comparison,"5
[0, 1, 1, 2, 4]"
programmatically specifying django model attributes,"class Car(models.Model):
    name = models.CharField(max_length=50)
for currency in currencies:
    pass"
using multiple colors in matplotlib plot,"import matplotlib.pyplot as plt
import numpy as np
a = np.array([[1, 2, 3, 4, 5, 6, 7, 8], [9, 8, 7, 6, 5, 4, 3, 2]])
categories = np.array([0, 2, 1, 1, 1, 2, 0, 0])
colormap = np.array(['r', 'g', 'b'])
plt.scatter(a[0], a[1], s=50, c=colormap[categories])
plt.show()"
python keep points in spline interpolation,"interpolated_x = np.linspace(x.min(), x.max(), new_length - len(x) + 2)
new_x = np.sort(np.append(interpolated_x, x[1:-1]))
new_y = sp.interpolate.interp1d(x, y, kind='cubic')(new_x)"
mfcc feature descriptors for audio classification using librosa,"ceps, mspec, spec = mfcc(X)
np.save('cache_file_name', ceps)"
how to count the number of words in a sentence?,string = string.rstrip().lstrip()
simultaneous matrix transpose for large array of matrices,"x[1, 1, 2]"
display fullscreen mode on tkinter,self.tk.config(menu=self.menu)
cleanest way to get last item from python iterator,aa = iter('apple')
python method to remove iterability,"if isinstance(arg, str):
    pass"
executing a function by variable name in python,func(arg)
python - integer factorization into primes,"[2, 491]"
how to close a socket left open by a killed program?,"s.bind((ADDR, PORT))"
is there a portable way to get the current username in python?,os.getlogin()
how can i run python source from stdin that itself reads from stdin?,"sys.stdin = open(tty_path, 'r')"
dynamically adding methods with or without metaclass in python,Z.__init__(self)
"python pil - changing colour profile to untagged rgb on crop, scale and save",icc_profile = im1.info.get('icc_profile')
set variable point size in matplotlib,"ax1.scatter(data[0], data[1], marker='o', c='b', s=data[2], label='the data')"
retrieving subfolders names in s3 bucket from boto3,s3 = boto3.client('s3')
how do i calculate percentiles with python/numpy?,"print(np.percentile(a, 95))"
decimal to hex in python,str(b)
finding common rows (intersection) in two pandas dataframes,df1[ind].append(df2[ind])
understanding the behavior of python's set,"s = set()
s.add([10])"
hide traceback unless a debug flag is set,"try:
    pass
except Exception as e:
    if debug:
        pass"
how to expand input buffer size of pyserial,"while mbed.inWaiting():
    in_buff += mbed.read(mbed.inWaiting())"
smallest positive float64 number,"import numpy as np
np.nextafter(0, 1)
np.nextafter(np.float32(0), np.float32(1))"
how to copy a file in python with a progress bar?,source.close()
how does coverage calculate its percentages?,"numerator = self.n_executed + self.n_executed_branches
denominator = self.n_statements + self.n_branches"
"storing elements of one list, in another list - by reference - in python?","a = [1000, 2000, [2], 4000]
b = [-1, a, -100, a[2], -1]
a[2] += [5]
b[-2] += [10]
a[2] is b[-2]
a
b"
how to include third party python libraries in google app engine?,project
inserting items in sub-buckets on s3 using boto,"bucket = connection.get_bucket('MyBucket')
file = 'test.jpg'
k = Key(bucket)"
writing a context manager in python that itself uses a with statement,print('Location A')
check if a string is hexadecimal,"int('ah', 16)"
uninstall and re-install pip package from python module,"import pip
import os"
pandas plotting from pivot table,"temp.plot(kind='line', color='r').legend()"
asterisk art in python,"while x < 10:
    print('%10s' % ('*' * x))
x = x + 1"
fetching data with python's asyncio in a sequential order,"l.append(print_page_sequential(menu_url, 10))"
how to fit result of matplotlib.pyplot.contourf into circle?,ax.set_yticks([])
mutable dictionary with fixed and ordered keys,"def __init__(self, *args):
    self._d = OrderedDict(*args)"
python: building an lru cache,self.root[0] = self.root[1] = self.root
python - speed up an a star pathfinding algorithm,"def retracePath(c):
    pass"
regex to extract between two strings (which are variables),text.partition(left_identifier)[2].partition(right_identifier)[0]
matplotlib 3d scatter plot with color gradient,"cNorm = matplotlib.colors.Normalize(vmin=min(cs), vmax=max(cs))"
numpy array item order - equal distribution of sequences,a.append(next)
scroll qtablewidget to specific column,"def scrollToColumn(self, column=0):
    visible = self.itemAt(0, 0)"
tricky filling holes in an image,"mask_borders = np.where(img == 0, True, False)"
python: how to create a file .txt and record information in it,"with open('outt.txt', 'w') as txt:
    pass"
how do i add a new column to a spark dataframe (using pyspark)?,"lookup = sqlContext.createDataFrame([(1, 'foo'), (2, 'bar')], ('k', 'v'))
df_with_x6 = df_with_x5.join(lookup, col('x1') == col('k'), 'leftouter').drop(
    'k').withColumnRenamed('v', 'x6')"
are there any declaration keywords in python?,"def foo():
    pass"
how to print file contents with filename before each line?,"b,"
pandas groupby with minimal group size,"for group_ids in group_ids_list:
    grouped_df = df.groupby(group_id)
for key, group in grouped_df:
    pass"
python: search for a file in current directory and all it's parents,print(glob.glob('*.csv'))
python - multiple frames with grid manager,"self.master.rowconfigure(r, weight=1)"
get utc timestamp in python with datetime,"def datetime_to_timestamp(dt):
    pass"
do i need to add a db_index to this django model?,kwargs['db_index'] = True
transposing all csv files within a folder,"filename = os.path.splitext(os.path.basename(in_file))[0] + '.csv'
with open(os.path.join(output, filename), 'wb') as output_file:
    writer = csv.writer(output_file)
for i in range(len(max(cols, key=len))):
    writer.writerow([(c[i] if i < len(c) else '') for c in cols])"
wait for a request to complete - python scrapy,self.p_token = ''
standard solution for supporting python 2 and python 3,from six.moves import configparser
how use decimal in a label with intvar on tkinter,"v.geometry('400x400')
a = IntVar()
a.set(round(5.494949, 2))
l = Label(textvariable=a)
l.pack()"
python pandas: lookup table by searching for substring,"matches = re.findall(regex, user_agent)"
regex for repeating words in a string in python,"re.sub('(?<!\\S)((\\S+)(?:\\s+\\2))(?:\\s+\\2)+(?!\\S)', '\\1', s)"
numpy roll vertical in 2d array,"[21, 8, 9, 10, 46, 12, 13],"
how to use django model inheritance with signals?,"for model_class in model_classes:
    post_save.connect(update_attachment_count_on_save, sender=model_class,
        dispatch_uid='att_post_save_' + model_class.__name__)"
get the size of a folder in linux server,print('%.2f MB' % (folder.Size / MB))
how restrict creation of objects of one class to instances of another in python?,another_b = b_cls()
"fit two gaussians to a histogram from one set of data, python","def gauss(x, mu, sigma, A):
    pass"
lambda function don't closure the parameter in python?,li.append((lambda x: lambda : pprint(x))(i))
how do you install a file to site-packages (not package sub-folder) from setuptools?,"copydir('windows', 'modname')"
how to specify a custom 404 view for django using class based views?,as_view_fn = cls.as_view()
remove leading nan in pandas,"A = pd.Series([np.nan, np.nan, np.nan, 1, 2, np.nan, 3])
A
A[np.where(~np.isnan(A))[0][0]:]
A[np.maximum.accumulate(~np.isnan(A))]"
pandas: connecting information between two dataframes,dfb = dfb.sort_values('Timestamp')
how to bind spacebar key to a certain method in tkinter (python),"canvas.create_oval(randint(0, 399), randint(0, 299), 15, 15, fill='red')
draw()
canvas.pack()
root.bind('<space>', draw)
root.mainloop()"
how do you call a python file that requires a command line argument from within another python file?,test2.main(args)
python: get key of index in dictionary,"items = ['a', 'b', 'c']
items.index('a')
items[0]"
missing levels in python contour plot,"cs = plt.contour(x, y, vel, levels)
plt.clabel(cs, inline=1, fontsize=9)"
what is faster - loading a pickled dictionary object or loading a json file - to a dictionary?,print('simplejson:')
returning matpotlib image as string,"pylab.savefig(response, format='png')"
django get display name choices,lists.append({'quality': choice[1]})
windows progress bar in python's tkinter,"progressbar = ttk.Progressbar(orient=HORIZONTAL, length=200, mode='determinate'
    )
progressbar.pack(side='bottom')
progressbar.start()
root.mainloop()"
use of return in long if-elseif-else statements (python),"funs = {(1): do_something_1, (2): do_something_2, (3): do_something_3}"
python accessing nested json data,"for each in j['places']:
    pass"
how to accept keypress in command line python?,"stdscr.refresh()
key = ''
while key != ord('q'):
    key = stdscr.getch()
stdscr.addch(20, 25, key)
stdscr.refresh()
if key == curses.KEY_UP:
    stdscr.addstr(2, 20, 'Up')
elif key == curses.KEY_DOWN:
    stdscr.addstr(3, 20, 'Down')
curses.endwin()"
"python, safe, sandbox","def f():
    pass"
how to join components of a path when you are constructing a url in python,"if 'posix' in _names:
    pass"
calculate matrix rank using scipy,"def rank(A, eps=1e-12):
    pass"
python socket closed before all data have been consumed by remote,print(data)
how to get all the values from a numpy array excluding a certain index?,"a = np.ma.array(a, mask=False)
a.mask[3] = True"
find the index of minimum values in given array in python,"min_idxs = [idx for idx, val in enumerate(a) if val == min_val]"
dealing with multiple apps overriding managment commands in django,"sys.path.insert(1, os.path.join(PROJECT_PATH, 'lib'))"
fill in missing values with nearest neighbour in python numpy masked arrays?,"x, y = np.mgrid[0:a.shape[0], 0:a.shape[1]]"
send a print job to usb printer using python,self.Centre()
python pandas: drop rows of a timeserie based on time range,"slice(36, 85, None)"
web services with google app engine,"def main():
    application = webapp.WSGIApplication([('/', MainHandler)], debug=True)
wsgiref.handlers.CGIHandler().run(application)
if __name__ == '__main__':
    main()"
how to convert 4 byte ieee (little endian) float binary representation to float,"round_total_digits(struct.unpack('<f', '\x94S\xf0@')[0])"
exporting layout positions for a graph using networkx,"import networkx as nx
G = nx.path_graph(4)
pos = nx.spring_layout(G)"
querying patentsview for patents of multiple assignee organization,"query = (
    """"""q={""_or"":[{""assignee_organization"":""Apple""},{""_contains"":{""assignee_organization"":""Samsung""}}]}""""""
    )"
including pyds/dlls in py2exe builds,pygamedir = os.path.split(pygame.base.__file__)[0]
linear regression with python numpy,"import numpy as np
a = np.array([[3, 1], [1, 2]])
b = np.array([9, 8])"
what's the most memory efficient way to generate the combinations of a set in python?,"if not input_list:
    pass"
checking if any element in a list starts with any of a number of prefixes in python?,"matches = [(t, p) for t, p in product(targets, prefixes) if t.startswith(p)]
print(matches)"
python - check network map,"logging.basicConfig(filename=LOG_FILENAME, level=logging.DEBUG, format=format)"
converting a list of tuples into a dict in python,"l = [('a', 1), ('a', 2), ('a', 3), ('b', 1), ('b', 2), ('c', 1)]
d = {}"
parse string of integer sets with intervals to list,"s = '2,5,7-9,12'"
setting object owner with generic create_object view in django,from django.forms import ModelForm
"counting lines, words, and characters within a text file using python","fname = 'feed.txt'
fname = open('feed.txt', 'r')"
python: search a string for a variable repeating characters,print(s)
remove final characters from string recursively - what's the best way to do this?,"example_line = 'jkhasdkjashdasjkd|abbbabbababcbccc'
bad_chars = {'a', 'b', 'c'}"
rotating a 5d array in the last 2 dimensions,"out1 = a[:, :, ::-1, ::-1]"
numpy: fix array with rows of different lengths by filling the empty elements with zeros,"df = pd.DataFrame([[1, 2, 3, 4], [2, 3, 1], [5, 5, 5, 5], [1, 1]], dtype=float)"
how to use a python context manager inside a generator,return False
if else branching in jinja2,environment = jinja2.Environment()
how to fast check list?,"def check_element(a):
    pass"
"write variable to file, including name",f.close()
euler's method in python,return x ** 2 - 2
use of curve_fit to fit data,"coeffs, matcov = curve_fit(func, x, y, p0)"
python: function and variable with same name,"id(a)

def a(x):
    return x"
"saving utf-8 texts in json.dumps as utf8, not as \u escape sequence","s = json.dumps(d, ensure_ascii=False, encoding='utf8')"
filtering a dictionary by multiple values,"st = {1, 2, 3}
v = [1, 4, 5]
st.isdisjoint(v)
v = [7, 4, 5]"
how to apply outer product for tensors without unnecessary increase of dimensions?,"print(np.outer(w[i], v[i]))"
how to filter through model of a many-to-many field?,"class Vehicle(SoftDeleteModel):
    pass"
using fill_between() with a pandas data series,"x = Series(linspace(0, 2 * pi, 10000))"
large django application layout,extends = base_seployment.cfg
python duplicate removal,"print(', '.join(header) + ', duplicate_flag')"
modifying a variable in a module imported using from ... import *,"database = 'original'

def printdatabase():
    pass"
automatically populating matrix elements in sympy,"import sympy
M = sympy.Matrix(3, 2, lambda i, j: sympy.var('M_%d%d' % (i + 1, j + 1)))"
how to create three separate lists of values from a python list of dictionaries where each dictionary has three keys,"item_numbers = []
for dictionary in your_list:
    dates.append(dictionary['Date'])
prices.append(dictionary['price'])
item_numbers.append(dictionary['itemnumber'])"
"style, formatting the slice operator",spam[ham(66) / 3:44 + eggs()]
find and draw regression plane to a set of points,"ax.set_ylim(-10, 10)
ax.set_zlim(0, 10)"
more efficient algorithm to compute an integer mapping for a set of relations,npreds = defaultdict(int)
testing python c libraries - get build path,print(b.build_lib)
removing character in list of strings,"lst = ['aaaa8', 'bb8', 'ccc8', 'dddddd8']
print([s.strip('8') for s in lst])"
about close a file in python,"def beans():

    def toast():
        f = open('toast.txt')"
python pandas: drop rows of a timeserie based on time range,"dropThis = pd.date_range(start_remove, end_remove, freq='2h')
df[~df.index.isin(dropThis)]"
how to get the index of a maximum element in a numpy array along one axis,"a = np.array([[1, 2, 3], [4, 3, 1]])"
how do i dynamically add mixins as base classes without getting mro errors?,"class FakeBase(object):
    pass


class C(FakeBase):
    pass

def c_factory():
    for base in (A, B):
        if base not in C.__bases__:
            C.__bases__ = (base,) + C.__bases__
return C()"
how to merge 2 complicated data frames in python pandas?,"merged = pd.concat((df1, d_teams), axis=1)
df2i = df2.set_index('team')"
how to add a new column to a csv file using python?,row0.append('berry')
how to assign rgb color values to grid mesh with matplotlib,"ny, nx = 2, 3"
parse json and store data in python class,"name = colander.SchemaNode(colander.String())
rating = colander.SchemaNode(colander.String())


class Characteristics(collander.SequenceSchema):
    characteristic = Characteristic()


class Person(colander.MappingSchema):
    id = colander.SchemaNode(colander.Int(), validator=colander.Range(0, 9999))
name = colander.SchemaNode(colander.String())
phone = colander.SchemaNode(colander.String())
characteristics = Characteristics()


class Data(collander.SequenceSchema):
    person = Person()"
changing the number of iterations in a for loop,"while i < loopcount:
    pass"
disable warnings originating from scipy,"t2 = np.linspace(1e-10, 1e-05, 1000000)"
pandas: how do i assign values based on multiple conditions for existing columns?,return 0
pandas dataframe from excel named range,book = xlrd.open_workbook(path)
how do i create a namespace package in python?,"from pkgutil import extend_path
__path__ = extend_path(__path__, __name__)"
convert gzipped data fetched by urllib2 to html,r.set_data(html)
"how to plot streamlines , when i know u and v components of velocity(numpy 2d arrays), using a plotting program in python?","y = np.linspace(-3, 3, 100)
u = -1 - x ** 2 + y[:, (np.newaxis)]
v = 1 + x - y[:, (np.newaxis)] ** 2
speed = np.sqrt(u * u + v * v)
plt.figure()
plt.subplot(121)
streamplot(x, y, u, v, density=1, INTEGRATOR='RK4', color='b')
plt.subplot(122)
streamplot(x, y, u, v, density=(1, 1), INTEGRATOR='RK4', color=u, linewidth
    =5 * speed / speed.max())
plt.show()"
is it possible to add pyqt4/pyside packages on a virtualenv sandbox?,done
setting a dynamic type's docstring in python 3,"x
xx = x()
xx.__doc__"
easy openstreetmap tile displaying for python,plt.show()
interacting with long-running python script,console._run()
skew normal distribution in scipy,e = 1.0
removing entries from a numpy array,"if mask[current[0], current[1]] > 0:
    cols.append(i)"
selecting rows from a numpy ndarray,"def selected(elmt):
    pass"
how can i call 'git pull' from within python?,import subprocess
"in python, why can a lambda expression refer to the variable being defined but not a list?",a = [a]
how to wrap an element (its text and subelements) in python 3?,"import lxml.etree as ET
content = """"""<root>
   She
   <opt>went</opt>
   <opt>didn't go</opt>
   to school.
</root>""""""
root = ET.fromstring(content)
root.tag = 'sentence'
newroot = ET.Element('root')
newroot.insert(0, root)
print(ET.tostring(newroot))"
flask : how to retrieve session data?,print(Nickname)
python nltk: find collocations without dot-separated words,from nltk import FreqDist
how to create a copy of python iterator?,first_it = iter(my_list)
how to visualize a nonlinear relationship in a scatter plot,"import numpy as np
import seaborn as sns
x = np.arange(0, 10, 0.01)
ytrue = np.exp(-x / 5) + 2 * np.sin(x / 3)
y = ytrue + np.random.normal(size=len(x))
sns.regplot(x, y, lowess=True)"
getting started with twitter\oauth2\python,ACCESS_SECRET = 'your access token secret'
how to properly fit a beta distribution in python?,data = args[0]
how can this python scrabble word finder be made faster?,print('Usage: python cheat_at_scrabble.py <yourrack>')
how to make pyinotify to run a program on any modification over a file?,"wm.add_watch('file.watched', pyinotify.IN_MODIFY, onChange)"
using curly braces to initialize set,"m = {'a': 2, (3): 'd'}"
how to reference the same model twice from another one?,"class Translation(db.Model):
    origin = db.ReferenceProperty(Expression, required=True,
        collection_name='origin_translation_set')"
grouping 2d numpy array in average,"Nsmall = 3
big = np.arange(36).reshape([6, 6])
array([[0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11], [12, 13, 14, 15, 16, 17],
    [18, 19, 20, 21, 22, 23], [24, 25, 26, 27, 28, 29], [30, 31, 32, 33, 34,
    35]])
small = big.reshape([Nsmall, Nbig // Nsmall, Nsmall, Nbig // Nsmall]).mean(3
    ).mean(1)
array([[3.5, 5.5, 7.5], [15.5, 17.5, 19.5], [27.5, 29.5, 31.5]])"
"in python, how do i read the exif data for an image?",import exifread
compute fast log base 2 ceiling in python,p += 1
how do i display a pil image object in a template?,contents = output.getvalue().encode('base64')
how to zip two lists of lists in python?,"Lx, Ly = ((L2, L1), (L1, L2))[len(L1) <= len(L2)]"
the equivalent of a goto in python,number = eval(input())
first items in inner list efficiently as possible,"yourlist = [[0, 0, 0], [0, 1, 1], [1, 0, 2]]
a = np.array(yourlist)
print(a[:, (0)])
bc = np.bincount(a[:, (0)])
count = bc[bc == 1].size"
pyqt - how to add separate ui widget to qmainwindow,sys.exit(app.exec_())
"using numpy to find average value across data sets, with some missing data",mean = all.mean(axis=-1)
subprocess replacement of popen2 with python,"proc.stdin.write('foo\n')
proc.stdin.write('bar\n')
out, err = proc.communicate()
print(out)"
"intersection of two graphs in python, find the x value:",plt.show()
scikit-learn: finding the features that contribute to each kmeans cluster,X_ = X - X.mean(0)
"count verbs, nouns, and other parts of speech with python's nltk","for word, tag in tagged:
    counts[tag] += 1
counts"
python statsmodel arima start [stationarity],"{'phi': [], 'theta': [0.407851844478153], 'intercept': 0, 'sigma2': 
    3068.29837379914, 'aic': 210.650287294343, 'prediction': [
    210.184175597721, 210.184175597721, 210.184175597721, 210.184175597721,
    210.184175597721, 210.184175597721, 210.184175597721, 210.184175597721,
    210.184175597721, 210.184175597721, 210.184175597721, 210.184175597721]}"
matplotlib animation in for loop?,"ax = plt.axes(xlim=(0, 2), ylim=(-2, 2))
line, = ax.plot([], [], lw=2)

def init():
    line.set_data([], [])
return line,

def animate(i):
    x = np.linspace(0, 2, 1000)
y = np.sin(2 * np.pi * (x - 0.01 * i + j / 4.0))
line.set_data(x, y)
return line,
anim = animation.FuncAnimation(fig, animate, init_func=init, frames=200,
    interval=20, blit=True, repeat=False)
plt.pause(0.02 * 200)
plt.close()
plt.show(block=True)"
check if class is equal with one of two strings,"soup = BeautifulSoup(text)
soup.find_all('table', {'class': ['class1', 'class7']})
import re
soup.find_all('table', {'class': re.compile('class[17]')})
soup.find_all('table', {'class': lambda x: 3 * int(x[-1]) ** 2 - 24 * int(x
    [-1]) + 17 == -4})"
best way to count the number of rows with missing values in a pandas dataframe,"np.count_nonzero(df.isnull().values)
np.count_nonzero(df.isnull())"
how to create a user in django?,"for i in range(nusers):
    pass"
pyqt4 center window on active screen,"screen = QtGui.QApplication.desktop().screenNumber(QtGui.QApplication.
    desktop().cursor().pos())
centerPoint = QtGui.QApplication.desktop().screenGeometry(screen).center()"
x distance between two lines of points,V = np.zeros(n)
force python interpreter to reload a code module,"module = getattr(root.addons, module_record.name)"
save a large file using the python requests library,"response = requests.get('http://www.example.com/image.jpg', stream=True)"
how to find if a list is a subset of another list in order?,"A = [4, 3, 2, 1, 2, 3]"
animate pygame sprite in elliptical path,"for degree in range(360):
    x = cos(degree * 2 * pi / 360) * xRadius"
python - what's your conventions to declare your attributes in a class?,self.c = 2
inheriting methods' docstrings in python,"class Foo(object):
    """"""Foo"""""""
"how to split data into 3 sets (train, validation and test)?",df
how can i simplify this condition in python?,"{color1, color2} == {'blue', 'yellow'}"
how to create a title page for a pdf document created using matplotlib,"pdf.savefig()
plt.close()"
python logging alternatives,"console_handler.setFormatter(default_formatter)
logging.root.setLevel(logging.DEBUG)"
discrete legend in seaborn heatmap plot,ax.set_xlabel('TO')
python multiprocessing.pool with processes that crash,"redo = False
while not Jobs.ready():
    if time.time() - job_start > maxWait:
        pool.terminate()
pool = multiprocessing.pool(args)
redo = True
break
if not redo:
    result = Jobs.get()
done = True"
how to spawn new independent process in python,"absp = os.path.abspath(ProgPath)
fn = os.path.join(gettempdir(), 'SelfDestruct.bat')
script_lines = ['@rem Self Destruct Script',
    '@echo ERROR - Attempting to run expired test only software', '@pause',
    '@del /F /Q %s' % absp, '@echo Deleted Offending File!', 
    '@del /F /Q %s\n' % fn]
bf = open(fn, 'wt')
bf.write('\n'.join(script_lines))
bf.flush()
bf.close()
p = subprocess.Popen([fn], shell=False)
sys.exit(-1)
if __name__ == '__main__':
    ExitAndDestroy(sys.argv[0])"
in-place replacement in stringio,"v = v.replace('haz', 'bar')
sio.seek(0)"
why does map return a map object instead of a list in python 3?,"list(map(min, [1, 2, 3, 4], [0, 10, 0, 10]))"
numpy array summing with weights,"np.dot(a, weights)"
how to create a multilevel dataframe in pandas?,import pandas as pd
google docs api with python,"for entry in contents.entry:
    pass"
calculating the overlap distance of two 1d line segments,"overlap(0, 50, 0, 50)"
python: printing a file to stdout,"f = open('file.txt', 'r')
print(f.read())
f.close()"
how to normalize by another row in a pandas dataframe?,"cols = ['value', 'value2']
new_cols = df.loc[:, (cols)] / df.loc[ii, cols].values"
how to check if an element from list a is not present in list b in python?,C = [i for i in A if i not in B]
downloading a directory tree with ftplib,"downloadFiles(path + file + '/', destination)"
add element with attributes in minidom python,"newScript.appendChild(newScriptText)
xmlFile.childNodes[0].appendChild(newScript)"
writing numpy arrays using cv2 videowriter,import numpy as np
indent python file (with pydev) in eclipse,"for i in range(100):
    outputData.append(str(i))
print(''.join(outputData))
outputData = []
for i in range(100):
    outputData.append(str(i))"
extract numerical values from zfilter object in python in audiolazy library,"mag_scale = 'dB'
fscale = freq_scale.lower()
mscale = mag_scale.lower()
mscale = 'dB'
fig = plt.figure()
Hz = 3.141592653589793 / 12.0
freqs = list(line(samples, min_freq, max_freq, finish=True))
freqs_label = list(line(samples, min_freq / Hz, max_freq / Hz, finish=True))
data = filt.freq_response(freqs)
mag = {'dB': dB20}[mscale]
print(mag(data))"
how to predict a continuous value (time) from text documents?,"from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import SGDRegressor"
setting up tkhtml (a tk widget) with python,"import tkinter
root = tkinter.Tk()"
token in query string with django rest framework's tokenauthentication,"""""""
Extend the TokenAuthentication class to support querystring authentication
in the form of ""http://www.example.com/?auth_token=<token_key>\""
""""""

def authenticate(self, request):
    if ('auth_token' in request.QUERY_PARAMS and 'HTTP_AUTHORIZATION' not in
        request.META):
        pass"
mysterious exceptions when making many concurrent requests from urllib.request to httpserver,"s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)"
add and compare datetime in python,print('expired')
reading huge number of json files in python?,"path = '../lastfm_train/'

def data_iterator(path):
    for root, dirs, files in os.walk(path):
        for f in files:
            if f.endswith('.json'):
                fp = os.path.join(root, f)
with open(fp) as o:
    data = json.load(o)
yield {'similars': data['similars'], 'track_id': data['track_id']}
df = pd.DataFrame(data_iterator(path))
df.set_index('track_id', inplace=True)"
ignore spaces when comparing strings in python,"print(difflib.SequenceMatcher(a='a b c', b='a bc').get_matching_blocks())"
multiple dimension selection in numpy using range finishes with unexpected behaviour,"x_range = list(range(3, 8))"
replacing row values in pandas,df
how to set ttk calendar programmatically,self._selection = None
python pandas : merge two tables without keys (multiply 2 dataframes with broadcasting all elements; nxn dataframe),print(DF2)
python mail puts unaccounted space in outlook subject line,"g = Generator(fp, mangle_from_=False, maxheaderlen=0)
g.flatten(msg)"
how to return the count of related entities in sqlalchemy query,"for _, child, post_count in childforums:
    if child is None:
        break"
how to wrap python instance methods at runtime,"setattr(self, method, wrapped_method)"
how to convert negative integer value to hex in python,"hex(-199703103 & 2 ** 32 - 1)
hex(-199703103 & 2 ** 64 - 1)"
how to convert gmt time to est time using python,"date = datetime.datetime.strptime(time, '%a, %d %b %Y %H:%M:%S GMT')
date
dategmt = gmt.localize(date)
dategmt
dateeastern = dategmt.astimezone(eastern)
dateeastern"
"how to optimize this python code (from thinkpython, exercise 10.10)","import itertools

def interlock(str1, str2):
    """"""Takes two strings of equal length and 'interlocks' them.""""""
return ''.join(itertools.chain(*zip(str1, str2)))"
"navigating a website in python, scraping, and posting",elements = driver.find_elements_by_tag_name('a')
storing and reading large data files efficiently,"xs = np.linspace(-3, 5, 800)"
optimized way of fetching parents with only latest child using django orm,return self.item_set.order_by('-created_date')[:10]
python c extension link with a custom shared library,"libz = ctypes.CDLL('zlib-1.2.8/libz.so.1.2.8')
libz.gzopen64('foo.gz', 'rb')"
defining private module functions in python,"def PrintBar(self):
    print(self.__bar)"
split list of datetimes into days,"[datetime.datetime(2012, 1, 3, 0, 0)]"
regular expression usage in python,subversion = re.compile('(?<=SDK )\\d*.\\d*.\\d*.\\d*')
simple way to convert a string to a dictionary,print(list(dd.keys()))
python - how to find files and skip directories in os.listdir,"basepath = '/path/to/directory'
for fname in os.listdir(basepath):
    pass"
joining pairs of elements of a list - python,"map(str.__add__, si, si)"
python: thinking of a module and its variables as a singleton — clean approach?,"print((cls.foo, spam, cls.bar))"
"python pandas: how to turn a dataframe with ""factors"" into a design matrix for linear regression?",print(row)
how to open excel file fast in python?,"if not ok:
    break"
get total number of running greenlets in gevent?,"def get_greenlet_status(greenlets):
    while True:
        status = _get_status(greenlets)
print(status)
if status['total'] == status['completed']:
    return
gevent.sleep(5)

def crawl(url):
    r = random.randint(0, 10)
gevent.sleep(r)
err = random.randint(0, 4)
if err == 0:
    raise Exception
greenlets = [gevent.spawn(crawl, each) for each in range(100)]
get_greenlet_status(greenlets)"
python pattern for sharing configuration throughout application,"def __init__(self, theConfig):
    pass"
python not quite random sampling from a list of objects,rate = np.array([x.rate for x in keys])
process list on linux via python,"4176, 4177, 4185, 4187, 4189, 4225, 4243, 4245, 4263, 4282, 4306, 4311
4312, 4313, 4314, 4337, 4339, 4357, 4358, 4363, 4383, 4395, 4408, 4433"
python: reading complicated text files with numpy,"inp = open(textfilename).readlines()
my_list = []
for line in inp:
    item = str.split(line)"
python: using list comprehensions to filter a list by a list of substrings,[r for r in x if not any(s in r for s in y)]
get the indices of n highest values in an ndarray,"a = np.random.random((100, 100, 100))"
multiprocessing with pool in python: about several instances with same name at the same time,"array[index] = a.output

def main():
    n = 8
manager = multiprocessing.Manager()
array = manager.list([0] * n)
pool = multiprocessing.Pool(4)
pool.map(worker, [(i, array) for i in range(n)])
print(array)"
is there a cross-os gui framework that supports embedding html pages?,"fileItem = Ti.UI.createMenuItem('File'),"
how do i wrap a string in a file in python?,f = io.StringIO('foo')
pandas daily groupby with condition based on first higher value,"df['result'] = 0
df.loc[df.groupby(df['dates'].dt.date).apply(lambda x: (x['num_2'] > x[
    'num_1']).idxmax()), 'result'] = 1"
"in python, how to capture the stdout from a c++ shared library to a variable",self.origstreamfd = self.origstream.fileno()
elegant way of using a range using an if statement?,print((k + 1) * lcm)
changing ld_library_path at runtime for ctypes,dll = CDLL('%s/iface.so' % path)
how do i format warnings captured with logging.capturewarnings?,log.addHandler(console_handler)
ftpes - ftp over explicit tls/ssl in python,chan.get_pty()
flask securecookie replacing pickle with json results in encoding error,"if __name__ == '__main__':
    app.run(debug=True)"
dropping root permissions in python,"if os.getuid() != 0:
    return"
python: estimate pi with trig functions as efficiently as possible,"from math import radians, sin"
splitting digits from other characters in a string in python,"import re

def split_digits(s):
    return [g for g in re.split('(\\d+)', s) if g]
for s in ['17.', '0,5', ',5', 'CO2-heidet', '1990ndatel']:
    pass"
deque in python pandas,buffer_deque.append(item)
how is returning the output of a function different than printing it?,"return 'Hello, world!'"
"django - need datetime fields that can handle only year, or year and month values","def __init__(self, input_formats=None, *args, **kwargs):
    pass"
how can i create a status bar item with cocoa and python (pyobjc)?,self.statusItem.setHighlightMode_(TRUE)
cookieerror: illegal key value,"if not 'cookie_err' in web.input():
    pass"
how do i pass in the 'id' portion of the url to a view_callable?,"id = matchdict.get('id', None)
return {'id': id}"
how can i convert a datetime object to milliseconds since epoch (unix time) in python?,"import datetime
epoch = datetime.datetime.utcfromtimestamp(0)

def unix_time_millis(dt):
    pass"
closing pyplot windows,fig = plt.figure(figsize=plt.figaspect(0.75))
python : how to create a dynamic list of class values,inst1.i = 2
how to open a file with the standard application?,os.startfile(file)
finding the surrounding sentence of a char/word in a string,"sentencesWithHighlights = ['Chickens crushes a popular vet next to the eater.',
    'Coffee funds chickens.']"
create automated tests for interactive shell based on python's cmd module,"self.assertTrue(cli.onecmd('exit'))
self.assertEqual('Goodbay\n', self._last_write())"
is it possible to use bpython as a full debugger?,"def help_Bpython(self):
    print('B(python)')"
execute command in time increments of 1 second on same line in terminal,time.sleep(1)
for loop for second items in list of lists only. (python),"def mymethod():
    return [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]
mylist = mymethod()"
building a minimal plugin architecture in python,return mod
how do i include unicode strings in python doctests?,mylen('\xc3\xa1\xc3\xa9\xc3\xad\xc3\xb3\xc3\xba')
"wtform: fieldlist with selectfield, how do i render?",print(order_form.order_entries)
how to solve a pair of nonlinear equations using python?,"return x + y ** 2 - 4, math.exp(x) + x * y - 3
x, y = fsolve(equations, (1, 1))
print(equations((x, y)))"
reading registers with pymodbus,print(response.registers)
"pyopengl gllookat behaves weirdly after first call, with same parameters","gluPerspective(fieldOfView, aspectRatio, 0.1, 50.0)"
how can i join a list into a string (caveat)?,"x = ['a', 'one ""two"" three', 'foo, bar', 'both""\'']
print(', '.join(map(quote, x)))"
https with http in flask python,"@app.route('/')
def index():
    if request.url.startswith('http://'):
        return redirect(request.url.replace('http', 'https', 1).replace(
            '080', '443', 1))"
how to remove multiple values from an array at once,"def float_equal(x, y, rtol=1e-05, atol=1e-08):
    return np.less_equal(abs(x - y), atol + rtol * abs(y))
np.delete(x, np.where(np.logical_or.reduce([float_equal(x, y) for y in [0, 
    180, 360]])))"
what is the most efficient way to check if a value exists in a numpy array?,"data = np.array([1, 4, 5, 5, 6, 8, 8, 9])"
how to overwrite the previous print to stdout in python?,"for x in range(10):
    print('{0}\r'.format(x), end=' ')
print()"
how to visualize 95% confidence interval in matplotlib?,"import numpy as np
import scipy.stats as ss
data_m = np.array([1, 2, 3, 4])
data_df = np.array([5, 6, 7, 8])
data_sd = np.array([11, 12, 12, 14])
import matplotlib.pyplot as plt
plt.errorbar([0, 1, 2, 3], data_m, yerr=ss.t.ppf(0.95, data_df) * data_sd)
plt.xlim((-1, 4))"
how to turn entire keras model into theano function,"from keras import backend as K
get_last_layer_output = K.function([model.layers[0].input], [model.layers[
    -1].get_output(train=False)])"
weighted slope one algorithm? (porting from python to r),"result < -update(userdata, freqs, diffs)"
executing a long running command through paramiko,"channel = transport.open_session()
channel.exec_command(COMMAND)"
how do you get the text from an html 'datacell' using beautifulsoup,s = BeautifulSoup('<p>Test 1 <span>More</span> Test 2</p>')
builder pattern equivalent in python,pass
dynamically loading django apps at runtime,from django.core import management
cntk complaining about dynamic axis in lstm,"x = np.arange(20.0, dtype=np.float32).reshape(4, 5, 1)"
multi nested dictionary from tuples in python,d.update(child.dictify())
detect 64bit os (windows) in python,return True
how to extract text and text coordinates from a pdf file?,from pdfminer.converter import PDFPageAggregator
avoid if __name__ == '__main__' in python subclasses to be run using function from parent,"if mainname == '__main__':
    clas().run()"
how do get more control over loop increments in python?,numelements = int((stop - start) / float(step))
how to manage many to one relationship in django,"class Province(models.Model):
    pass"
"trying to post multipart form data in python, won't post","request = urllib.request.Request(url, data, headers)
request.unverifiable = True"
how to access a superclass's class attributes in python?,"print(('c.c =', c.c))"
how do i get the same functionality as c's __function__ in python?,"def theFunc():
    print('running theFunc')
theFunc()"
how to insert current time in an entry widget,"print(time)
Time = Entry(root, relief=RIDGE, bd=5, width=16, cursor='plus', fg='red',
    selectforeground='red', selectbackground='black')
Time.place(x=0, y=0)"
how to expose a function returning a c++ object to python using cython?,retval.append(new_peak)
get column names (headers) from hdf file,list(group_660.keys())
exclude empty/null values from json serialization,return d
cannot move object from one database to another,session1 = SessionSRC()
print a dict sorted by values,from operator import itemgetter
how to use python to calculate time,from datetime import timedelta
search for a value in a nested dictionary python,"print(getpath(dictionary, 'image/svg+xml'))"
upload image available at public url to s3 using boto,file_object = urllib.request.urlopen(url)
pandas increment cell value of dataframe with mixed column types,"foo
foo.dtypes
foo.ix[0, 'a'] += 1
foo"
displaying within decimal range in python,print('%30.8f' % 2.34567891)
stripping inline tags with python's lxml,"print(etree.tostring(tree, pretty_print=True))
etree.strip_elements(tree, 'y', with_tail=False)"
reversing django urls with extra options,"urlpatterns = patterns('', url('^foo-direct/', 'myapp.views.someview', {
    'page_slug': 'foo'}, name='foo-direct'), url('^my-bar-page/',
    'myapp.views.someview', {'page_slug': 'bar'}, name='bar-page'))"
find unique dates in numpy datetime array,df['index'] = df['date'].apply(lambda x: x.day)
is there a more pythonic way to have multiple defaults arguments to a class?,"def set_var_1(self, val):
    pass"
bittorrent client : getting peer list from trackers [python],"buf += struct.pack('!q', int(urllib.parse.unquote(payload['downloaded'])))"
overwrite global var in one line in python?,import sys
"find index of first element in array close to float within tolerance, with numpy","np.abs(a - val) < tol
(np.abs(a - val) <= tol).argmax()"
confused with rules in scrapy in python spider,item['title'] = titles.select('a/text()').extract()
python strange multiprocessing with variable name,"class Klass(object):

    def __init__(self):
        print('Constructor ... %s' % multiprocessing.current_process().name)

def __del__(self):
    print('... Destructor %s' % multiprocessing.current_process().name)
if __name__ == '__main__':
    pass"
xml to/from a python dictionary,lst.append(' [')
how can i pythonically us opencv to find a a basketball in an image?,"element = np.ones((5, 5)).astype(np.uint8)"
how do i create a django form that displays a checkbox label to the right of the checkbox?,"def is_checkbox(value):
    return isinstance(value, CheckboxInput)"
how to speed up code to solve bit deletion puzzle,101111
is it possible to overload from/import in python?,"from types import ModuleType
import sys"
sunrise / set calculations,o = ephem.Observer()
applying low-level keyboard hooks with python and setwindowshookexa,"return windll.user32.CallNextHookEx(hook_id, nCode, wParam, lParam)"
custom django field to store a list of email addresses,"cleaned_email_list = list()
email_list = [_f for _f in re.split(';|,\\s|\\n', value) if _f]
for email in email_list:
    if email.strip(' @;,'):
        cleaned_email_list.append(email.strip(' @;,'))
print(cleaned_email_list)
cleaned_email_list = list(set(cleaned_email_list))
return ', '.join(cleaned_email_list)

def validate(self, value, model_instance):
    """"""Check if value consists only of valid emails.""""""
super(MultiEmailField, self).validate(value, model_instance)
email_list = value.split(',')
for email in email_list:
    validate_email(email.strip())"
downloading an excel file from the web in python,resp = requests.get(dls)
access parsed elements using pyparsing,['abcd']
how to get all sub-elements of an element tree with python elementtree?,"b = ET.SubElement(a, 'b')"
using django models in a script,"BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SYS_PATH = os.path.dirname(BASE_DIR)"
processing simultaneous/asynchronous requests with python basehttpserver,self.send_response(200)
wtforms: how to select options in selectmultiplefield?,"SelectMultipleField(choices=my_choices, default=['1', '3'])"
running a bash script from python,"cmd = 'xterm -hold -e scipt.sh'
p = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=
    subprocess.PIPE)"
"most efficient data structure for a read-only list of strings (about 100,000) with fast prefix search","def add(self, letters, n=-1, index=0):
    if n < 0:
        n = len(letters)
if index >= n:
    return
letter = letters[index]
if letter in self.children:
    child = self.children[letter]
else:
    child = Node(letter, index == n - 1)
self.children[letter] = child
child.add(letters, n, index + 1)

def load_dictionary(path):
    result = Node()
for line in open(path, 'r'):
    word = line.strip().lower()
result.add(word)
return result
words = load_dictionary('dictionary.txt')"
how to get unix timestamp from numpy.datetime64,import numpy as np
comparing two dataframes by one column with a return of three different outputs with panadas,import pandas as pd
python regex format,print('----------- Martijn 2 ------------')
how to make python autocompletion display matches?,"def print_suggestions(self, substitution, matches, longest_match_length):
    print('useless text to be displayed')
print(substitution)"
how to calculate percentage of sparsity for a numpy array/matrix?,np.isnan(a).sum() / np.prod(a.shape)
splitting a network into subnets of multiple prefixes,len(final_subnets)
maximizing a combination of a series of values,"for i in random_order:
    student = students[i]"
filtering string in python,"for c in account:
    if (c not in
        'abcdefghijklmopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.'):
        print('Invalid char', c, 'in e-mail')
for c in domain:
    if (c not in
        'abcdefghijklmopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.'):
        print('Invalid char', c, 'in e-mail')"
how restart scrapy spider,from twisted.internet import task
python and sqlite - escape input,"cursor.execute(sql, args)"
how do i change the background of a frame in tkinter?,import tkinter as tk
"capture the contents of a regex and delete them, efficiently",ab_re = re.compile('([ab])')
set execute bit for a file using python,mode |= stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH
how to monkeypatch python's datetime.datetime.now with py.test?,"FAKE_TIME = datetime.datetime(2020, 12, 25, 17, 5, 55)"
generate imei in python,luhn_residue('79927398713')
accurate timing of functions in python,"for i in range(1000):
    start = time.clock()"
data compression in python/numpy,"f_out = gzip.open(filepath_dot_gz, 'wb')"
first element of a path in python,"components.insert(0, tail)"
how to upload files to soundcloud using python?,"import soundcloud
client = soundcloud.Client(client_id=YOUR_CLIENT_ID, client_secret=
    YOUR_CLIENT_SECRET, redirect_uri='http://your/redirect/uri')"
how to execute python script from java?,writer.newLine()
astroquery simbad : obtaining coordinates for all frames,table['FK4'] = coords.fk4.to_string('hmsdms')
how to efficiently compute the inner product of two dictionaries,"keys = A.keys() & B.keys()
the_sum = sum(a[k] * b[k] for k in keys)"
how to programmatically measure the elements' sizes in html source code using python?,"width, resources = ghost.evaluate(
    ""document.getElementById('gbqfq').offsetWidth;"")"
inheritance + foreign keys,a.billing_system_id = o.id
how to efficiently parse emails without touching attachments using python,message += 'Date: ' + mail['Date'] + '\n'
flask display json in a neat way,app.route('/<major>/')
python:: turn string into operator,"ops = {'+': operator.add, '-': operator.sub}
print(ops['+'](1, 1))"
covert binary 64-bit timestamp offset from the gps epoch to python datetime object,"GPS_EPOCH = datetime(1980, 1, 6)"
learning python; how can i make this more pythonic?,writer.writerow(item)
"how to suppress ""unused variable"" warnings in eclipse/pydev",content = mywrapperfunc()
how to clear cookies using django,"def login(request):
    response = HttpResponseRedirect('/url/to_your_home_page')"
convert every character in a string to a dictionary key,alphabet = 'abcdefghijklmnopqrstuvwxyz'
django: render staticfiles through template engine at deploy-time,js_template_data = {'foo': 'bar'}
how do i determine whether a container is infinitely recursive and find its smallest unique container?,print(p)
using crontab with django,import kronos
widget layering in tkinter,window.lower(belowThis=None)
python - locating the position of a regex match in a string?,m.span()
pythonic way to split comma separated numbers into pairs,"zip(t[::2], t[1::2])"
"parsing nested parentheses in python, grab content by level","nested_paren.ParseNestedParen('(a)(b)(c)', 2)"
elegant expression for row-wise dot product of two matrices,"b = np.random.normal(size=(5000, 1000))"
python unittest multiple mixins,"super(BaseTestSuite, self).addTest(test)"
how do i convert a hex triplet to an rgb tuple and back?,rgbstr = 'aabbcc'
google app engine - getting sessions working with python 2.7,"class BaseHandler(webapp2.RequestHandler):

    def dispatch(self):
        self.session_store = sessions.get_store(request=self.request)"
python: how to convert from windows 1251 to unicode?,"import codecs
f = codecs.open('input.txt', encoding='cp1251')
assert isinstance(f.read(), str)"
pandas: drop rows based on duplicated values in a list,"df1['length'] = df1['Col1'].str.split('-').apply(set).apply(len)
print(df1)"
"given a 2d numpy array of real numbers, how to generate an image depicting the intensity of each number?",plt.show()
how can i plot maximum likelihood estimate in python,"x = np.arange(0, xmax, 0.1)"
"get files from directory argument, sorting by size","import os

def get_files_by_file_size(dirname, reverse=False):
    """""" Return list of file paths in directory sorted by file size """"""
filepaths = []
for basename in os.listdir(dirname):
    filename = os.path.join(dirname, basename)
if os.path.isfile(filename):
    filepaths.append(filename)
for i in range(len(filepaths)):
    filepaths[i] = filepaths[i], os.path.getsize(filepaths[i])
filepaths.sort(key=lambda filename: filename[1], reverse=reverse)
for i in range(len(filepaths)):
    filepaths[i] = filepaths[i][0]
return filepaths"
how to implement 'someasyncworker()' from bottle asynchronous primer?,app = bottle.Bottle()
how do you use a regex in a list comprehension in python?,regex = '\\W*' + re.escape(myString) + '\\W*'
how to join these two lists in python to form a path?,"root = '/test/foo/'
[os.path.join(root, *choices[:i + 1]) for i in range(len(choices))]"
split three-digit integer to three-item list of each digit in python,"map(int, str(634))
list(map(int, str(634)))"
equivalent of j in numpy,"1j
type(1j)"
matplotlib savefig image size with bbox_inches='tight',ax.set_axis_off()
get the list of figures in matplotlib,plt.figure()
python: variables are still accessible if defined in try or if?,"def outer():
    x = 5

def inner():
    print(x)
inner()
outer()"
how to access sparse matrix elements?,"a = csc_matrix([[1, 0, 0, 0], [0, 0, 10, 11], [0, 0, 0, 99]])
a.todense()
print(a[(1), :])"
loop with conditions in python,"for i, item in enumerate(selected):
    pass"
spark dataframe transform multiple rows to column,"return Row(**{k: tmp.get(k, 0) for k in ['a'] + majors})"
freeze a python script for every os,"""""""<console cmd name here> = my_package.module:main"""""""
how can i find a table after a text string using beautifulsoup in python?,"""""""<html><body><p align=""center""><b><font size=""2"">Table 1</font></b><table><tr><td>1. row 1, cell 1</td><td>1. row 1, cell 2</td></tr><tr><td>1. row 2, cell 1</td><td>1. row 2, cell 2</td></tr></table><p align=""center""><b><font size=""2"">Table 2</font></b><table><tr><td>2. row 1, cell 1</td><td>2. row 1, cell 2</td></tr><tr><td>2. row 2, cell 1</td><td>2. row 2, cell 2</td></tr></table></html>"""""""
converting png32 to png8 with pil while preserving transparency,alpha = im.split()[-1]
defining virtual fields in peewee,"def radius(cls):
    pass"
how can i get pyyaml to correctly display structure in output?,"import yaml
test2 = [{'A': ['a', 'b']}, {'B': 'b'}]"
providing test data in python,"self.assertEqual(expected, isEven(num))"
in python - parsing a response xml and finding a specific text vaule,"usock = urllib.request.urlopen('http://www.example.com/file.xml')
xmldoc = minidom.parse(usock)
for element in xmldoc.getElementsByTagName('data'):
    pass"
python's string.maketrans works at home but fails on google app engine,"trantab = dict((ord(a), b) for a, b in zip(intab, outtab))"
take a screenshot from a website from commandline or with python,"import urllib.request, urllib.error, urllib.parse
request = urllib.request.Request(
    'http://books.google.de/books?id=gikDAAAAMBAJ&pg=PA1&img=1&w=2500',
    headers={'User-Agent':
    'Mozilla/5.0 (X11; U; Linux i686) Gecko/20071127 firefox/2.0.0.11'})
page = urllib.request.urlopen(request)
with open('somefile.png', 'wb') as f:
    f.write(page.read())"
can't get django-star-ratings to display to template,"class Rate(models.Model):
    pass"
finding number of colored shapes from picture using python,"plt.imshow(labeled)
plt.show()"
how can i consume tweets from twitter's streaming api and store them in mongodb,self.db = pymongo.MongoClient().test
matrix mirroring in python,b = list(reversed(a[1:])) + a
python opencv - find black areas in a binary image,ConvexHull = cv2.convexHull(c)
python module for converting pdf to text,print(page.extractText())
"in python, how do i decode gzip encoding?","decompressed_data = zlib.decompress(f.read(), 16 + zlib.MAX_WBITS)"
select2 field implementation in flask/flask-admin,db.session.commit()
using generator send() within a for loop,"for x in range(10):
    yield x"
how to unzip file in python on all oses?,"for member in zf.infolist():
    words = member.filename.split('/')"
short description of scoping rules,func()
map list by partial function vs lambda,"def a(*args):
    return sum(args)
b = partial(a, 2, 3)
b(6, 7, 8)"
using numpy stride_tricks to get non-overlapping array blocks,"n = 4
m = 5
a = np.arange(1, n * m + 1).reshape(n, m)
print(a)
sz = a.itemsize
h, w = a.shape
bh, bw = 2, 2
shape = h / bh, w / bw, bh, bw
print(shape)
strides = sz * np.array([w * bh, bw, w, 1])
print(strides)
blocks = np.lib.stride_tricks.as_strided(a, shape=shape, strides=strides)
print(blocks)"
change a django form field to a hidden field,"super(MyModelForm, self).__init__(*args, **kwargs)
if hide_condition:
    pass"
tensorflow image reading & display,my_img = tf.image.decode_png(value)
selecting values from a json file in python,x = list()
how to find location with ip address in python?,"IP = data['ip']
org = data['org']
city = data['city']
country = data['country']
region = data['region']
print('Your IP detail\n ')
print(""""""IP : {4} 
Region : {1} 
Country : {2} 
City : {3} 
Org : {0}"""""".format(
    org, reg, ctry, city, IP))"
how to decode a non unicode character in python?,"return new_string, 1, enc"
how to remove duplicate columns from a dataframe using python pandas,"df
df.T.groupby(level=0).first().T"
"get ""actual"" length of string in unicode characters",len('\u272e')
python - posting with a urllib2 opener,"req = urllib.request.Request(url, data)
response = urllib.request.urlopen(req)"
pyramid of asterisks program in python,"for i in range(size):
    pass"
how to manually change a colormap in python/matplotlib,"my_cmap = matplotlib.cm.get_cmap('rainbow')
my_cmap.set_under('w')"
python loops with multiple lists?,"for dir, file in zip(directories, files):
    pass"
python - printing to more than one output,sys.__stdout__.write(s)
bind to pgcrypto from python,from passlib.hash import bcrypt
how to get unread messages and set message read flags over imap using python?,"imap.login(username, password)"
more efficient algorithm to compute an integer mapping for a set of relations,npreds[v] -= 1
py2neo how to retrieve a node based on node's property?,return results
pythonic way of removing reversed duplicates in list,deduped = set(lst_as_sets)
matplotlib plot small image without resampling,"plt.imshow(a, cmap=plt.gray())
plt.suptitle('imshow')
f1 = plt.figure()
plt.figimage(a, cmap=plt.gray())
plt.suptitle('figimage')
plt.show()"
how can i make start_url in scrapy to consume from a message queue?,"class ProfileSpider(scrapy.Spider):
    name = 'myspider'"
what is the most efficient way in python to convert a string to all lowercase stripping out all non-ascii alpha characters?,return [x for x in s.lower() if x in string.ascii_lowercase]
creating python function with partial parameters,"import functools

def add(x, y):
    pass"
how to pad with n characters in python,"if r % 2 == 0:
    pad = r / 2 * c
return pad + s + pad"
find and replace values in xml using python,"tree.find('idinfo/timeperd/timeinfo/rngdates/enddate').text = '1/1/2011'
tree.write(datafile)"
can you plot live data in matplotlib?,"data.append(random.random())
if __name__ == '__main__':
    thread = threading.Thread(target=data_listener)
thread.daemon = True
thread.start()
plt.figure()
ln, = plt.plot([])
plt.ion()
plt.show()
while True:
    plt.pause(1)
ln.set_xdata(list(range(len(data))))
ln.set_ydata(data)
plt.draw()"
migrating a password field to django,user.set_password(password)
bootstrap t method python implementation,from itertools import product
str performance in python,"Timer('str(100000)').timeit()
Timer('x(100000)', 'x=str').timeit()"
how to extract a subset of a colormap as a new colormap in matplotlib?,return new_cmap
how do you get the display width of combined unicode characters in python 3?,"def visible_length(unistr):
    pass"
set partition with constraints in python,"for g in (gen1, gen2, gen3):
    for t in g():
        yield t"
python pandas unstacking unique column values to columns of their own,df['g'] = df.groupby('Col1')['Col1'].cumcount()
fastest way to swap elements in python list,first_el = mylist.pop(0)
"python, draw a circle with pil",image = Image.open('x.png')
how to solve import errors while trying to deploy flask using wsgi on apache2,from app import app
inheriting from classes unpacked from a list,"class D:
    x = 1"
data frame indexing,"df = np.dot(df, p_value)"
how do you specify the foreign key column value in sqlalchemy?,from sqlalchemy.orm import relationship
how to ignore an output of a multi-output function in python?,"a = f()[1]
print(a)"
how to get value from selected item in treeview in pygtk?,tree_selection.set_mode(gtk.SELECTION_MULTIPLE)
asynchronous subprocess with timeout,"self.process = subprocess.Popen(args, shell=True)
self.timer.start()
self.process.wait()
self.timer.cancel()

def timer_callback():
    print('Terminating process (timed out)')
self.process.terminate()
thread = threading.Thread(target=target)
self.timer = threading.Timer(timeout, timer_callback)
thread.start()"
how to adapt my current splash screen to allow other pieces of my code to run in the background?,splash.Show()
python combining two logics of map(),"map(lambda a, b: f(np.atleast_2d(a), np.atleast_2d(b)), *np.
    broadcast_arrays(B, A))
list(_)"
parsing logical sentence very slow with pyparsing,"""""""((P = T) AND NOT (K =J) AND (B = F)) => (S = O) AND ((P = T) OR (k and b => (8 + z <= 10)) AND NOT (a + 9 <= F)) => (7 = a + z)"""""""
pandas dataframe groupby and get nth row,df.groupby('ID').apply(lambda t: t.iloc[1])
max retries exceeded with url,"print('ZZzzzz...')
time.sleep(5)
print('Was a nice sleep, now let me continue...')"
"how toget a list of ""fastest miles"" from a set of gps points","""""""Calculate a list of (average) speeds for a list of geographic points."""""""
uncapitalizing first letter of a name,"print((name, ':', proper_name))"
how do i pass a pointer to a c function with python's cffi?,"lib.some_function(ffi.addressof(lib, 'some_callback'))"
fastest way to create json to reflect a tree structure in python / django using mptt,from mptt.templatetags.mptt_tags import cache_tree_children
import local function from a module housed in another directory with relative imports in jupyter notebook using python3,import sys
read a file in reverse order using python,"for line in reversed(list(open('filename'))):
    pass"
single string or list of strings in a method,x.extend(a)
remove dtype at the end of numpy array,"myArray[i] = [i, i + 1, i + 2]"
efficiently calculating a euclidean distance matrix using numpy,"z = np.array([[0.0 + 0j, 2.0 + 1j, -1.0 + 4j]])"
opencv video capture with pyqt4,QtCore.QCoreApplication.quit()
how to get (sub)class name from a static method in python?,"Bar.bar()
Foo.bar()"
string splitting in python using regex,"import re
text = 'Some.File.Num10.example.txt'
re.split('Num\\d{2}', text)[0]"
extracting an attribute value with beautifulsoup,print(staininfo_attrb_value)
runtimeerror: working outside of application context,"with app.app_context():
    pass"
"using amazon s3 with heroku, python, and flask",from boto.s3.connection import S3Connection
iterator selector in python,print(item)
representing version number as regular expression,"with Separator(~Literal('.')):
    pass"
how to store money in elasticsearch,"{'mappings': {'my_type': {'properties': {'number_of_bytes': {'type':
    'integer'}, 'time_in_seconds': {'type': 'float'}, 'price': {'type':
    'scaled_float', 'scaling_factor': 100}}}}}"
multiply two matrix by columns with python,"a = np.hstack((a[:, ::2], a[:, 1::2]))"
django: how to filter model field values with out space?,City.objects.filter(name__iregex=insert_whitespace('newyork'))
how do i print this list vertically?,"myList = ['* *', '*', '* * *', '* * * * *', '* * * * * *', '* * * *']"
convert double to float in python,"v1 = 0.00582811585976
v2 = 0.00582811608911
import numpy as np
np.float32(v1)
float(np.float32(v1))
'%.14f' % np.float32(v1)
'%.14f' % np.float32(v1) == '%.14f' % v2"
skipping elements in a list python,"def skip13s(l):
    i = 0
s = 0
while i < len(l):
    if l[i] == 13:
        i += 1
else:
    s += l[i]
i += 1
return s"
google app engine jsonpickle,encoded = jsonpickle.encode(Pizza())
set rows of scipy.sparse matrix that meet certain condition to zeros,sps_a.toarray()
how can you easily select between pyqt or pyside at runtime?,"window = QWidget()
window.show()
app.exec_()"
match set of dictionaries. most elegant solution. python,"new = {item['id']: item for item in list_new}
old = {item['id']: item for item in list_old}
created = set(new.keys()) - set(old.keys())
deleted = set(old.keys()) - set(new.keys())
intersect = set(new.keys()).intersection(set(old.keys()))
diff = {id: dict(set(new[id].items()) - set(old[id].items())) for id in
    intersect}
diff.update({id: new[id] for id in created})
list_diff = [dict(data, **{'id': id}) for id, data in list(diff.items())]"
convert mysql timestamp to epoch time in python,"mysql_time_struct = time.strptime(mysql_time, '%Y-%m-%d %H:%M:%S')"
understanding a solution to the euler project in python,num *= 2
sympy and square roots of complex numbers,"x, y = symbols('x y', real=True)
z = x + I * y
solve(z ** 2 + (1 + I) * z + (6 + 18 * I), (x, y))"
how to capture output of curl from python script,"conn.request('GET', '/index.html')
r1 = conn.getresponse()
print(r1.status, r1.reason)"
preserving global state in a flask application,"if __name__ == '__main__':
    app.run()"
cant create tables in access with pyodbc,"cur = con.cursor()
string = (
    """"""CREATE TABLE TestTable(symbol varchar(15), leverage double, shares integer, price double)""""""
    )
cur.execute(string)"
get all text inside a tag in lxml,from itertools import chain
how to convert a pandas dataframe subset of columns and rows into a numpy array?,"df = DataFrame(np.random.rand(4, 5), columns=list('abcde'))"
programmatically find the installed version of pywin32,"def get_pywin32_version():
    pass"
k-means in python: determine which data are associated with each centroid,"codebook, distortion = kmeans(X, 3)
code, dist = vq(X, codebook)
code"
concurrent downloads - python,"for url, body in pool.imap(fetch, urls):
    pass"
"combine two pandas dataframes, resample on one time column, interpolate","ser2 = pd.Series(y2, index=new_t2)
df = pd.concat((ser1, ser2), axis=1)"
how to do this join query in django,"class Product(models.Model):
    name = models.CharField(max_length=50)"
show explorer's properties dialog for a file in windows,SEE_MASK_INVOKEIDLIST = 12
"selenium: trying to log in with cookies - ""can only set cookies for current domain""",driver.get(url2)
importing a shared library and the global namespace,"def main():
    visit.Launch()"
"how can ""nameerror: free variable 'var' referenced before assignment in enclosing scope"" occur in real code?","def f():

    def g(x):
        return x * n
if False:
    pass"
how to cache in ipython notebook?,from sklearn.externals import joblib
which is the best way to compress json to store in a memory based store like redis or memcache?,outputFile.write(chunk)
sort list of date strings,"def sorting(L):
    splitup = L.split('-')
return splitup[1], splitup[0]"
how to write specific iptables rules using python-iptables,"output, err = p.communicate()"
python library for splitting video,"cv.WriteFrame(video_out, frame)
while Condition2:
    frame = cv.RetrieveFrame(capture)"
writing a csv from flask framework,"output.headers['Content-Disposition'] = 'attachment; filename=export.csv'
output.headers['Content-type'] = 'text/csv'
return output"
python: conditionally delete elements from list,"y = [(k, v) for k, v in x if max(d[v]) == k]"
changing the text on a label,"root = Tk()
root.title('Geo Tagging')"
setting global font size in kivy,"def build(self):
    return MyWidget()"
euler's method in python,y[n + 1] = y[n] - f(y[n]) / fp(y[n])
how to detect if the console does support ansi escape codes in python?,"def supports_color():
    """"""
    Returns True if the running system's terminal supports color, and False
    otherwise.
    """"""
plat = sys.platform
supported_platform = plat != 'Pocket PC' and (plat != 'win32' or 'ANSICON' in
    os.environ)"
"read file in chunks - ram-usage, read strings from binary files","f = open(file, 'rb')
while True:
    piece = f.read(1024)"
fast numpy loops,"def outer(a, b, out=None):
    a = asarray(a)
b = asarray(b)"
python: can we convert a ctypes structure to a dictionary?,value = get_array(value)
python - function that is sum of arbitrary many other functions,"def sigma(funcs, x):
    return sum(f(x) for f in funcs)"
dictionary within dictionary in python 3,"result.setdefault(k, {})[property_str] = v"
time data does not match format,"from datetime import datetime
datetime.strptime('07/28/2014 18:54:55.099000', '%m/%d/%Y %H:%M:%S.%f')"
python itertools: best way to unpack product of product of list of lists,"print(xrange, yrange, zrange)"
how to use have only one instance of a class in python,"class Deck(object):
    _dict = {}

def __init__(self, ranks=None, suits=None):
    self.__dict__ = self._dict"
socket.io client library in python,hskey = resp.read().split(':')[0]
combining multiple 1d arrays returned from a function into a 2d array python,"a = np.array([1, 2, 3])
np.vstack((a, a, a))"
python - convert currency code to its sign,"import locale
locales = ('en_AU.utf8', 'en_BW.utf8', 'en_CA.utf8', 'en_DK.utf8',
    'en_GB.utf8', 'en_HK.utf8', 'en_IE.utf8', 'en_IN', 'en_NG',
    'en_PH.utf8', 'en_US.utf8', 'en_ZA.utf8', 'en_ZW.utf8', 'ja_JP.utf8')
for l in locales:
    locale.setlocale(locale.LC_ALL, l)
conv = locale.localeconv()
print('{ics} ==> {s}'.format(ics=conv['int_curr_symbol'], s=conv[
    'currency_symbol']))"
how can i detect heroku's environment?,"debug = True
if 'SOME_ENV_VAR' in os.environ:
    debug = False"
how to perform iterative 2d operation on 4d numpy array,"arr_view = as_strided(arr, shape=(254, 254, 3, 3), strides=arr.strides * 2)"
how to add a reader macro to python?,"class Infix(object):
    """"""
    Instances of this class can be treated like an infix operator
    by enclosing them with <<.>>.
    """"""

def __init__(self, function):
    self.function = function

def __rlshift__(self, other):
    return Infix(lambda x, self=self, other=other: self.function(other, x))

def __rshift__(self, other):
    return self.function(other)

def __call__(self, value1, value2):
    return self.function(value1, value2)"
flask-login with static user always yielding 401- unauthorized,return
how to construct a tarfile object in memory from byte buffer in python 3?,"import tarfile, io
byte_array = client.read_bytes()
file_like_object = io.BytesIO(byte_array)
tar = tarfile.open(fileobj=file_like_object)
for member in tar.getmembers():
    f = tar.extractfile(member)
print(f)"
python date string formatting,my_date.strftime('%-m/%-d/%y')
how to size my imshow?,"ax = fig.add_subplot(111)
ax.imshow(data, interpolation='nearest')"
get diagonal without using numpy in python,"diag = [row[-i - 1] for i, row in enumerate(mat)]"
what's the simplest way of detecting keyboard input in python from the terminal?,"fcntl.fcntl(fd, fcntl.F_SETFL, oldflags | os.O_NONBLOCK)"
retrieve multiple urls at once/in parallel,"def process_url(url):
    return what_you_want
pool = multiprocessing.Pool(processes=4)"
configuring the logging of a third party script,"if __name__ == '__main__':
    pass"
showing page count with reportlab,"if doc.page > TOTALPAGES:
    TOTALPAGES = doc.page"
functional pipes in python like %>% from dplyr,df['petal length*width'] = df['petal length'] * df['petal width']
variable names in python cannot start with a number or can they?,1
dynamic programming recurrence to solution,"path.push(st)
st = prior[st]"
render an xml to a view,return HttpResponse(open('myxmlfile.xml').read())
django admin: ordering of foreignkey and manytomanyfield relations referencing user,"class Meta:
    ordering = ['username']"
how to exclude *.pyc and __pycache__ from python wheels?,"version = '2.0.2',"
rename multiple files in python,"files = glob.glob('year*.jpg')
for file in files:
    pass"
how to convert escaped characters in python?,i += 2
django's prefetch_related for count only,"threads = Thread.objects.annotate(Count('comments', distinct=True)).annotate(
    Count('upvotes', distinct=True))
for thread in threads:
    pass"
"differentiate null=true, blank=true in django",intNull = models.IntegerField(null=True)
why is matplotlib plot produced from ipython notebook slightly different from terminal version?,"import matplotlib as mpl
mpl.rcParams['figure.figsize'] = 8.0, 6.0"
print statement in celery scheduled task doesn't appear in terminal,celery.config_from_object(__name__)
python: count frequency of words in a list,from collections import Counter
puzzle: how many ways can you hit a target with a laser beam within four reflective walls,"def get_mirrored(point):
    ret = []"
pandas apply function to multiple columns and multiple rows,"for count, row in df.iterrows():
    x1 = row['xpos']"
sympy lambdify with array inputs,"expr = '2*y/z*(x**(z-1)-x**(-1-z/2))'
T = lambdify((x, y, z), expr, 'numpy')
print(T(data[0], 0.29, 4.5))"
efficient way to find the index of the max upper triangular entry in a numpy array?,"print(np.allclose(cols, cols2))
True"
how do i skip a few iterations in a for loop,"if n is None:
    pass"
using des/3des with python,"crypt.SetEncodedKey(keyHex, 'hex')"
"how to iterate through every class declaration, descended from a particular base class?","def find_subclasses(cls):
    results = []
for sc in cls.__subclasses__():
    results.append(sc)
return results"
given a date range how can we break it up into n contiguous sub-intervals?,"begin = datetime.date(2001, 1, 1)"
valueerror: cannot set toolkit to wx because it has already been set to qt4,"import matplotlib
matplotlib.use('WXAgg')"
how to find spans with a specific class containing specific text using beautiful soup and re?,found_dates.append(m.group(1))
how to make others use my python script,"x = (
    'hai this is an exe file created from python scripts using cxfreeze. Press Enter to exit >> '
    )
y = eval(input(x))"
python lambdas and scoping,funcs.append(lambda : x)
grouping spaces in forsyth-edwards notation,new_str = ''.join(new_list)
how to apply the output of python's difflib.unified_diff to the original string?,"''.join(difflib.restore(diff, 1)) == ''.join(foo)"
parsing deepdiff result,"parseRoots({""root[1][2]['age']"": {'new_value': 90, 'old_value': 40}})"
plot time of day vs date in matplotlib,"some_time_dt = dt.datetime.strptime(some_time_str, '%Y-%m-%d %H:%M:%S')
some_time_num = mpl.dates.date2num(some_time_dt)"
pythonic way to do something n times without an index variable?,power = 3
json schema: validate a number-or-null value,from jsonschema import validate
"python list of dicts, get max value index","ld = [{'prop': 'foo', 'size': 100}, {'prop': 'boo', 'size': 200}]
max(range(len(ld)), key=lambda index: ld[index]['size'])
ld[1]"
batch renaming of files in a directory,"def rename(dir, pattern, titlePattern):
    for pathAndFilename in glob.iglob(os.path.join(dir, pattern)):
        title, ext = os.path.splitext(os.path.basename(pathAndFilename))
os.rename(pathAndFilename, os.path.join(dir, titlePattern % title + ext))"
how comparator works for objects that are not comparable in python?,"reverseCom([4, 5, 6], 1)
reverseCom([4, 5, 6], 2)
reverseCom([4, 5, 6], 3)"
python beautifulsoup scrape tables,"with open('output.txt', 'w') as f:
    for tr in soup.find_all('tr')[2:]:
        tds = tr.find_all('td')"
how to sort dictionary by key in numerical order python,"from collections import OrderedDict
d = {'57481': 50, '57480': 89, '57483': 110, '57482': 18, '57485': 82,
    '57484': 40}
OrderedDict(sorted(list(d.items()), key=lambda t: t[0]))"
how do i implement interfaces in python?,"def show(self):
    raise NotImplementedError"
pybrain:how can i put specific weights in a neural network?,"net.params
len(net.params)
new_params = numpy.array([1.0] * 13)"
how to convert an integer to variable length byte string?,"tmp = []
while n:
    n, d = divmod(n, 256)
tmp.append(chr(d))
result = ''.join(tmp[::-1])"
library/tool for drawing ternary/triangle plots,"ax.set_frame_on(False)
ax.plot([basis[_, 0] for _ in list(range(sides)) + [0]], [basis[_, 1] for _ in 
    list(range(sides)) + [0]], **edge_args)
return newdata, ax
if __name__ == '__main__':
    k = 0.5
s = 1000
data = vstack((array([k, 0, 0]) + rand(s, 3), array([0, k, 0]) + rand(s, 3),
    array([0, 0, k]) + rand(s, 3)))
color = array([[1, 0, 0]] * s + [[0, 1, 0]] * s + [[0, 0, 1]] * s)
newdata, ax = ternaryPlot(data)
ax.scatter(newdata[:, (0)], newdata[:, (1)], s=2, alpha=0.5, color=color)
show()"
how would i check a string for a certain letter in python?,"if 'x' not in dog:
    pass"
convert integer to a random but deterministically repeatable choice,result = (result ^ result >> 27) * 10723151780598845931
scrapy crawl urls in order,items.append(item)
need design suggestions for an efficient webcrawler that is going to parse 8m pages - python,"log.warn('1234567: exception - ' + str(e))
if not requestSucceeded:
    time.sleep(30)"
django get all records of related models,"user = UserProfile.objects.get(pk=1)
user.topics.all()"
unable to feed value for placeholder tensor,sess.run(model.train_step)
how to call a python script from php?,"print('This is python 3.4 code. Looks like included in PHP :)')
s = s + 42
print((r, ' : ', s))
ENDPYTHON"
sqlalchemy proper session handling in multi-thread applications,"def __init__(self, worker_count=5):
    self.task_queue = Queue()"
pandas slice rows based on joint condition,"a = df.values
df_out = df.iloc[(a == 3.2).any(1) & ((a != 0.1) & (a != 1.2)).all(1)]"
dividing large numbers in python,"fmin = N / f2
fmin"
python - how to speed up calculation of distances between cities,tree = KDTree(numpy.array(ecef_cities))
display fullscreen mode on tkinter,"Tk.attributes('-fullscreen', True)"
how do i add a title to seaborn heatmap?,"ax.set_title('lalala')
plt.show()"
how can a list be extended uniformly to include extrapolated mean values?,"for index in range(1, len(nums), 2):
    nums.insert(index, mean(nums[index - 1], nums[index]))"
how to get both return code and output from subprocess in python?,"get_out('adb', 'devices', 'foo')"
"restrict import to specific path, without restricting the imported module's path","modfile, modpath, description = imp.find_module('spam', search_paths)
with modfile:
    spam = imp.load_module('spam', modfile, modpath, description)"
self syntax in python,"myClassObj = MyClass(a=12, b='abc')"
vectorized lookups of pandas series to a dictionary,c = congruent.columns.to_series().map(lkp).values
determine precision and scale of particular number in python,"int_part = int(abs(x))
magnitude = 1 if int_part == 0 else int(math.log10(int_part)) + 1"
determine matplotlib axis size in pixels,"ax.imshow(data, aspect='normal')"
how to do a symbolic taylor expansion of an unknown function $f(x)$ using sympy,from sympy import *
subset of dictionary keys,"data = {'ip1:port1': 'value1', 'ip1:port2': 'value2', 'ip2:port1': 'value3',
    'ip2:port2': 'value4'}
by_ip = {k: list(g) for k, g in itertools.groupby(sorted(data), key=lambda
    s: s.split(':')[0])}
by_ip"
python: how can i create a correspondence matrix between values on rows and columns?,"row = len(row_names) - 1
data_table.append(['' for _ in range(len(data_table[0]))])
if group in col_names:
    col = col_names.index(group)
else:
    col_names.append(group)
col = len(col_names) - 1
for i, r in enumerate(data_table):
    data_table[i].append('')
data_table[row][col] = 'x'
print('Table:')
print('  ', '    '.join(col_names))
for rowname, row in zip(row_names, data_table):
    pass"
wrapping/unwrapping a vector along array diagonals,"b[my_triu_indices(4, 1)]"
remove the first word in a python string?,"s.split(' ', 1)[1]"
permutations with repetition in python,"vertices = ((v.count(1), v) for v in itertools.product((0, 1), repeat=3))
for count, vertex in sorted(vertices):
    pass"
join two lists of dictionaries on a single key,"l2 = [{'index': 1, 'c': 4}, {'index': 2, 'c': 5}]
d = defaultdict(dict)
for l in (l1, l2):
    for elem in l:
        d[elem['index']].update(elem)
l3 = list(d.values())
[{'b': 2, 'c': 4, 'index': 1}, {'b': 3, 'c': 5, 'index': 2}, {'green':
    'eggs', 'index': 3}]"
skew normal distribution in scipy,"print(leastsq(optm, [0.5, 0.5, 0.5], (x,)))"
how to read bits from a file?,module_name = os.path.splitext(os.path.basename(__file__))[0]
counting pixels within an ellipse from a numpy array,"c = m[0, 2] / m[0, 0] - yc ** 2"
a very simple asynchronous application in python,loop.close()
how to get all possible combination of items from 2-dimensional list in python?,cc0 = [x for x in cc]
slice pandas dataframe by labels that are not in a list,1 - 0.411741
pythonic random list of booleans of length n with exactly k trues,"def shuffle(self, x, random=None, int=int):
    randbelow = self._randbelow"
send html e-mail in app engine / python?,"message.html = """"""
<html><head></head><body>
Dear Albert:
Your example.com account has been approved.  You can now visit
http://www.example.com/ and sign in using your Google Account to
access new features.
Please let us know if you have any questions.
The example.com Team
</body></html>
"""""""
how to read (or parse) excel comments using python,from win32com.client import Dispatch
render page initially and update via ajax using the same template html,"""""""ul#comments"""""".append('<li>' + comment_content + '</li>')"
"how can i open multiple files using ""with open"" in python?","try:
    with open('a', 'w') as a:
        with open('b', 'w') as b:
            do_something()
except IOError as e:
    pass"
how to implement django like 'contains' filter query with google app engine?,return result
matplotlib: save figure as file from ipython notebook,"ax = fig.add_axes([1, 1, 1, 1])
plt.plot([1, 2])"
performance issues with pandas and filtering on datetime column,"df = pd.read_csv(StringIO(text), parse_dates=[0])"
python send control + q then control + a (special keys),"while True:
    inp = sys.stdin.read(1)
if len(inp) == 0:
    break
print(ord(inp[0]))"
"python, flask: how to set response header for all responses","def apply_caching(response):
    response.headers['X-Frame-Options'] = 'SAMEORIGIN'"
python : how to remove duplicate lists in a list of list?,"b = list()
for sublist in a:
    if sublist not in b:
        pass"
feature extraction for butterfly images,url = 'http://demo.nanonets.ai/classify/?appId=' + model_name
bcrypt. how to store salt with python3?,"salt = bcrypt.gensalt()
salt
passwd = 'p@ssw0rd'
hashed_passwd = bcrypt.hashpw(passwd, salt)
hashed_passwd.startswith(salt)"
how to group by multiple keys in spark?,"for val in value_list:
    fno = val[0].split('.')[0]
x[int(fno) - 5] = val[1]
return x
tgbr = tfile.map(lambda d: ((d[0][0], d[0][2]), [(d[0][1], d[1])])
    ).reduceByKey(lambda p, q: p + q).map(lambda d: (d[0], map_group(d)))"
pandas dataframe into sparse dictionary of dictionaries,"from pandas import compat

def to_dict_custom(data):
    return dict((k, v[v < 0].to_dict()) for k, v in compat.iteritems(data))"
tensorflow queues - switching between train and validation data,sess.run(tf.local_variables_initializer())
python double pointer,"pa_stream_peek(stream, ctypes.byref(vdata), ctypes.byref(length))
fdata = ctypes.cast(vdata, POINTER(float))"
combining roleneed's with flask principal,"if needed is None:
    pass"
is it possible to implement a python for range loop without an iterator variable?,"for i in range(n):
    f()"
how to get subprocess' stdout data asynchronously?,"while proc.poll() is None:
    output = proc.stdout.readline()
print(output)"
how to split two nested lists and combine the parts to create two new nested lists,"for i, o in enumerate(tree):
    if i == 0:
        pass"
revision information mismatch after sccs2svn conversion,"if v.match(mergedVersions[-1][-1]):
    pass"
python - opening and changing large text files,"def process_file(fname):
    pass"
reading unicode file data with bom chars in python,"infile.close()
print(data)"
search strings using regular expression in python,"for key in keywords:
    pass"
how to efficiently parse emails without touching attachments using python,mailserver.pass_('YOURPASSWORD')
more pythonic alternative for getting a value in range not using min and max,"if x > 100:
    x = 100
elif x < 1:
    pass"
how does django handle multiple memcached servers?,"def _get_server(self, key):
    if isinstance(key, tuple):
        serverhash, key = key"
"using an r-script in python, which was written for r","quadro = STAP(rcode, 'quadro')"
writing a cherrypy decorator for authorization,"def _authentication_required(*args, **kwargs):
    return f(*args, **kwargs)
return _authentication_required

def authentication_required(*allowed_groups):
    pass"
returning the product of a list,"from operator import mul
import numpy as np"
how to display picture and get mouse click coordinate on it,self.Layout()
numpy adding two vectors with different sizes,c = b.copy()
python wave byte data,import wave
is there a numpy function to return the first index of something in an array?,"l = [1, 2, 3, 4, 5]"
algorithm to shuffle a list to minimise equal neighbours,"def careful_shuffle(lst):
    pass"
how to find shortest path in a weighted graph using networkx?,"g.add_edge('a', 'b', distance=0.3)"
creating graph with date and time in axis labels with matplotlib,"plt.xticks(rotation='vertical')
plt.subplots_adjust(bottom=0.3)"
why 'python3 -m venv myenv' installs older version of pip into myenv than any version of pip i can find anywhere on the system?,"subprocess.check_output(cmd, stderr=subprocess.STDOUT)"
asyncio: is it possible to cancel a future been run by an executor?,"print('blocking {}/{}'.format(i, seconds_to_block))"
inserting and removing into/from sorted list in python,"for num in data:
    pass"
how can i make an alias to a non-function member attribute in a python class?,"setattr(inst, self.name, value)"
strip a verbose python regex,"def strip_escapes(match):
    if match.group(1) is None:
        return match.group(2)"
how can i separate runs of my tensorflow code in tensorboard?,test_n = len(list(n for n in folder.listdir() if n.startswith('test')))
matplotlib get ylim values,"plt.xlim([-0.5, len(values) - 0.5])
plt.xlabel('My x-axis title')"
"start, end and duration of maximum drawdown in python","plt.plot(xs)
plt.plot([i, j], [xs[i], xs[j]], 'o', color='Red', markersize=10)"
splitting a list inside a pandas dataframe,"df = pd.DataFrame(d)
df.head()
df_new = df.groupby('date').ts.apply(lambda x: pd.DataFrame(x.values[0])
    ).reset_index().drop('level_1', axis=1)
df_new.columns = ['date', 'ts']
df_new.head()"
referencing a numpy arrray without creating an expensive copy,"A = np.ones((50000000,))"
apply styles while exporting to 'xlsx' in pandas with xlsxwriter,"df.to_excel(writer, sheet_name='test')"
opencv contour minimum dimension location in python,"x, y, w, h = cv2.boundingRect(cnt)"
using mysql in flask,"db = MySQLdb.connect('localhost', 'root', 'yourDbPassWord', 'DBname')"
slice endpoints invisibly truncated,s.stop
dictionary to lowercase in python,"for k, v in {'My Key': 'My Value'}.items():
    pass"
labeling boxplot in seaborn with median value,"tips = sns.load_dataset('tips')
ax = sns.boxplot(x='day', y='total_bill', data=tips)
medians = tips.groupby(['day'])['total_bill'].median().values"
add tensorflow pre-processing to existing keras model (for use in tensorflow serving),saver = tf.train.Saver(sharded=True)
how can i modify password expiration in windows using python?,"user.Getinfo()
user.Put('userAccountControl', 65536 | user.Get('userAccountControl'))
user.Setinfo()"
forcing to make floating point calculations,"print((val1 + 0.0) / val2)
print(float(val1) / val2)"
numpy - square root of -1 leaves a small real part,"z = -1 + 0j
cmath.phase(z)"
file uploads with turbogears 2,"file.name = slugify(myfile.filename)
name, ext = os.path.splitext(file.name)
while os.path.exists(os.path.join(permanent_store, file.name)):
    name += '_'
file.name = name + ext
raw_file = os.path.join(permanent_store, file.name)"
making a python script object-oriented,"def cleaned_input(self):
    pass"
how to fill a knapsack table when using recursive dynamic programming,return 0
django override behavior of double underscore relationship lookup in queries,inactive_objects = models.Manager()
set values on the diagonal of pandas.dataframe,"def pd_fill_diagonal(df, value):
    pass"
get mean value avoiding nan using numpy in python,"np.nan != np.nan
np.isnan(np.nan)"
numpy: outer product of n vectors,"np.all(outer1(v1, v2, v3, v4) == outer2(v1, v2, v3, v4))"
iterate over values in pandas column containing lists and retrieve only unique values,"[w for w in ['ONE', 'TWO'] if data['Col1'].str.contains(w).any()]"
how do you set up pycharm to debug a fabric fabfile on windows?,"import re
import sys
from fabric.main import main
if __name__ == '__main__':
    pass"
getting current time with timezone in python?,"def dst(self, dt):
    return ZERO"
how to check for presence of a layer in a scapy packet?,p = pkts[0]
calling tcl procedures with function pointers as argument from python,print('I am in callbackFunc')
how can i generate more colors on pie chart matplotlib,"p = plt.pie(a, colors=cs)
plt.show()"
multiprocessing queue in python,"source = ['hi', 'there', 'how', 'are', 'you', 'doing']"
how to use tensorflow in oop style?,"self.saver.restore(self.session, fn)"
how to mask an image using numpy/opencv?,"circle = np.zeros((height, width), dtype=im.dtype)"
how do i get mouse position relative to the parent widget in tkinter?,app = App(root)
"globally capture, ignore and send keyevents with python xlib, recognize fake input","if __name__ == '__main__':
    pass"
how do i limit the amount of login retries in django,"login_form._errors.setdefault(NON_FIELD_ERRORS, ErrorList())"
how to know a generated sequence is at most a certain length,length = len(elements)
how to lazy load a data structure (python),self._data = None
how to add delta to python datetime.time?,"delta = dt.timedelta(hours=12)
t = now.time()
print(t)"
using python logging in multiple modules,"import logging
logger = logging.getLogger(__name__)"
creating link to an url of flask app in jinja2 template,"@post_blueprint.route('/posts/')
def get_all_posts():
    pass"
how to open file using argparse?,"parser.add_argument('filename')
args = parser.parse_args()"
how can i unit test responses from the webapp wsgi application in google app engine?,response = app.get('/')
writing bytes stream to s3 using python,files = zip_file.namelist()
negative zero in python,-0.0 == +0.0 == 0
how to protect myself from a gzip or bzip2 bomb?,print('warning: tar file ended in the middle of an entry')
"cross-validate precision, recall and f1 together with sklearn","from sklearn.metrics import recall_score, precision_score
from sklearn.metrics.scorer import make_scorer
recall_accumulator = []

def score_func(y_true, y_pred, **kwargs):
    recall_accumulator.append(recall_score(y_true, y_pred, **kwargs))
return precision_score(y_true, y_pred, **kwargs)
scorer = make_scorer(score_func)"
"how to generate a distribution with a given mean, variance, skew and kurtosis in python?",plt.hist(sample)
how to change the layout of a gtk application on fullscreen?,"win.show_all()
gtk.main()"
how to refer to something as an object instead of as a list?,"for row in range(MAPSIZE):
    Grid.append([])
for row in range(MAPSIZE):
    for column in range(MAPSIZE):
        TempTile = MapTile('Grass', column, row, False)"
recommended way to initialize variable in if block,"def foobar():
    msg = 'bar'
if foo:
    msg = 'foo'
return msg"
vectorizing a numpy slice operation,A1 = np.zeros_like(A)
how to obtain the day of the week in a 3 letter format from a datetime object in python?,"locale.setlocale(locale.LC_TIME, 'C')
return datetime.now().strftime('%a')"
colorplot of 2d array matplotlib,"H = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]])"
creating django objects with a random primary key,"""""""Adds encrypted_pk property to children."""""""
run several python programs at the same time,"from multiprocessing import Pool
p = Pool(5)"
how to check if one of the following items is in a list?,S1.intersection(S2)
truly custom font in tkinter,"""""""
Makes fonts located in file `fontpath` available to the font system.
`private`     if True, other processes cannot see this font, and this 
              font will be unloaded when the process dies
`enumerable`  if True, this font will appear when enumerating fonts
See https://msdn.microsoft.com/en-us/library/dd183327(VS.85).aspx
"""""""
parsing crontab-style lines,"import croniter
import datetime
now = datetime.datetime.now()
cron = croniter.croniter('45 17 */2  * *', now)"
django-autocomplete-light default load a previously saved value?,"def __init__(self, *args, **kwargs):
    super(MyForm, self).__init__(*args, **kwargs)
if self.initial.get('city', None):
    cityPK = self.initial['city']"
tkinter - how to create a combo box with autocompletion ,"""""""Run a mini application to test the AutocompleteEntry Widget."""""""
the truth value of an array with more than one element is ambigous when trying to index an array,"x > -2
x < 2"
game of life : how to keep track of active cells,create_plane(board)
app_template_filter with multiple arguments,"def _add(int1, int2):
    pass"
splitting string and removing whitespace python,"import timeit
stripper = str.strip
print(timeit.timeit('map(stripper, ""QVOD, Baidu Player"".split("",""))',
    'from __main__ import stripper', number=100000))
print(timeit.timeit(
    ""[item.strip() for item in 'QVOD, Baidu Player'.split(',')]"", number=100000
    ))"
how to create connection timeout with python socketserver,"server = SimpleServer(('localhost', 6666), SingleTCPHandler)"
"python, fix broken npy file. valueerror: total size of new array must be unchanged","import numpy as np
a = 10 ** np.array(np.linspace(-10, 10, 51), dtype=np.float64)
np.save('foo.npy', a)"
how to use ansible 2.0 python api to run a playbook?,"'syntax', 'connection', 'module_path', 'forks', 'remote_user'
'private_key_file', 'ssh_common_args', 'ssh_extra_args'
'sftp_extra_args', 'scp_extra_args', 'become', 'become_method'"
importerror: no module named **** error in google app engine,"USER_NAME = 'username'
PASSWORD = 'password'"
how to make a python program get into a function and finish with ctrl+x while running?,time.sleep(1)
is there a clean test for a dictionary element in python?,return True
processing simultaneous/asynchronous requests with python basehttpserver,"self.send_header('Content-type', 'text/plain')
self.end_headers()"
how do you apply the same action to multiple variables efficiently in python?,"x = 1
y = 2"
flask testing in python -- building one api in a repo with many to unit test it via import_module,"dir_above_top_level = os.path.join(os.path.abspath(__file__), '../../../..')
sys.path.append(os.path.abspath(dir_above_top_level))"
regex for twitter username,"text = (
    """"""@RayFranco is answering to @jjconti, this is a real '@username83' but this is an@email.com, and this is a @probablyfaketwitterusername""""""
    )
ftext = re.sub('(^|[^@\\w])@(\\w{1,15})\\b',
    '\\1<a href=""http://twitter.com/\\2"">\\2</a>', text)
print(ftext)"
how to use image_summary to view images from different batches in tensorflow?,sess = tf.Session()
how to count the occurrence of certain item in an ndarray in python?,np.count_nonzero(y == 1)
subprocess replacement of popen2 with python,"proc = subprocess.Popen(['sort'], stdin=subprocess.PIPE, stdout=subprocess.PIPE
    )
proc.stdin.write('foo\n')
proc.stdin.write('bar\n')
out, err = proc.communicate()"
fastest way to access and put values in matrix,import numpy as np
how to continue insertion after duplicate key error using pymongo,"db.products.insert([{_id: 11, item: 'pencil', qty: 50, type: 'no.2'}, {item:
    'pen', qty: 20}, {item: 'eraser', qty: 25}])"
transpose multiple columns pandas dataframe,"df.sort(axis=1, inplace=True)"
generate thumbnail for arbitrary audio file,"loudness_of_chunks = [sound[i * chunk_length:(i + 1) * chunk_length].rms for
    i in range(180)]"
find rhyme using nltk in python,return set(rhymes)
file uploads with turbogears 2,"name = Column(Unicode(16), unique=True)"
can i insert matplotlib graphs into excel programmatically?,ws = w.add_sheet('Image')
create a pseudo gtfs dataset from avl (gps) data in .csv format,"2, 0, 0, 0, 0, 0, 1, 1, 20160224, 20160226
3, 0, 0, 0, 0, 0, 1, 0, 20160224, 20160226"
socket trouble in python,"sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.connect((host, port))
data = open(filename).read()"
post request using python to asp.net page,"class MyOpener(urllib.request.FancyURLopener):
    version = (
        """"""Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.57 Safari/537.17""""""
        )
myopener = MyOpener()
url = 'http://www.indiapost.gov.in/pin/'
f = myopener.open(url)
soup = BeautifulSoup(f)
viewstate = soup.select('#__VIEWSTATE')[0]['value']
eventvalidation = soup.select('#__EVENTVALIDATION')[0]['value']
formData = ('__EVENTVALIDATION', eventvalidation), ('__VIEWSTATE', viewstate
    ), ('__VIEWSTATEENCRYPTED', ''), ('txt_offname', ''), ('ddl_dist', '0'), (
    'txt_dist_on', ''), ('ddl_state', '1'), ('btn_state', 'Search'), (
    'txt_stateon', ''), ('hdn_tabchoice', '1'), ('search_on', 'Search')
encodedFields = urllib.parse.urlencode(formData)
f = myopener.open(url, encodedFields)
try:
    fout = open('tmp.html', 'w')
except:
    print('Could not open output file\n')
fout.writelines(f.readlines())
fout.close()"
disable django debugging for celery,DEBUG = False
how can i change type of django calender with persian calender?,"class MyInlines2(j_admin.StackedInline):
    pass"
how to use pearson correlation as distance metric in scikit-learn agglomerative clustering,cluster.labels_
how to find if a list is a subset of another list in order?,"def is_sub(sub, lst):
    ln = len(sub)
for i in range(len(lst) - ln + 1):
    if all(sub[j] == lst[i + j] for j in range(ln)):
        return True
return False"
how to copy a sqlite table from a disk database to a memory database in python?,query = ''.join(line for line in old_db.iterdump())
how to do many-to-many django query to find book with 2 given authors?,Book.objects.filter(author__id=1).filter(author__id=2)
how to deal with settingwithcopywarning in pandas?,"dfa = df.ix[:, ([1, 0])].copy()"
substitute of function pointers in python,f = foo
efficiently finding the last line in a text file,"in_file.seek(seek_offset, os.SEEK_END)"
convert value to row index in numpy array,"B[A[1], cat_index] = A[2]"
python argparse: how to insert newline in the help text?,import argparse
parameters to numpy's fromfunction,"args = indices(shape, dtype=dtype)
return function(*args, **kwargs)"
reading yaml in python,"stream = open('test', 'r')
docs = yaml.load_all(stream)
for doc in docs:
    for k, v in list(doc.items()):
        pass"
valueerror: can only call with other periodindex-ed objects,df2.columns
python pandas multiprocessing apply,"res = pool.map(worker, [1, 2, 3])
pool.close()"
how can i obtain the same 'special' solutions to underdetermined linear systems that matlab's `a \ b` (mldivide) operator returns using numpy/scipy?,print(A.dot(x2))
multiple couchdb document fetch with couchdb-python,import simplejson as json
how to get the last key pressed in python?,"if char == 111:
    print('test')
break"
customize/remove django select box blank option,"def __init__(self, *args, **kwargs):
    super(ThingForm, self).__init__(*args, **kwargs)"
how to speed up code to solve bit deletion puzzle,110000
python: print a variable's name and value?,"r = re.search('\\((.*)\\)', s).group(1)
print('{} = {}'.format(r, x))"
how to visualize a nonlinear relationship in a scatter plot,ytrue = np.exp(-x / 5) + 2 * np.sin(x / 3)
python date of the previous month,first = today.replace(day=1)
call python code from c via cython,"Py_Initialize()
initquacker()"
numpy template matching using matrix multiplications,total += delta * delta
how to access list elements,"def printItems(l):
    for i in l:
        if type(i) == type(list):
            pass"
python dictionary with variables as keys,"with open('allocFile.txt') as fp:
    counter = Counter(line.split()[0] for line in fp)
for bytes, count in counter.most_common():
    pass"
catch mouse button pressed signal from qcombobox popup menu,"if item.checkState() == QtCore.Qt.Checked:
    pass"
get __name__ of calling function's module in python,code = frame.f_code
averages of slices on a 1d nparray: how to make it more numpy-thonic?,4 - 18.0
selenium using python: enter/provide http proxy password for firefox,"driver = webdriver.Chrome(executable_path='chromedriver.exe',
    chrome_options=chrome_options)"
renumber residues in a protein structure file (pdb),pdbname = '2kpl'
exclude object's field from pickling in python,"""""""Restore state from the unpickled state values."""""""
blaze with scikit learn k-means,data_cluster = KMeans(n_clusters=5)
pil convert png or gif with transparency to jpg without,"bg = Image.new('RGB', im.size, (255, 255, 255))
bg.paste(im, im)
bg.save('C:\\jk2.jpg')"
how do i gzip compress a string in python?,"out = StringIO.StringIO()
with gzip.GzipFile(fileobj=out, mode='w') as f:
    f.write(""This is mike number one, isn't this a lot of fun?"")"
setting spacing between grouped bar plots in matplotlib,"group_labels = ['G1', 'G2']
num_items = len(group_labels)
ind = np.arange(num_items)
margin = 0.05
width = (1.0 - 2.0 * margin) / num_items
s = plt.subplot(1, 1, 1)
for num, vals in enumerate(groups):
    print('plotting: ', vals)
xdata = ind + margin + num * width
gene_rects = plt.bar(xdata, vals, width)
s.set_xticks(ind + 0.5)
s.set_xticklabels(group_labels)"
"python dict, find value closest to x","for key, value in list(d.items()):
    if diff > abs(v - value):
        diff = abs(v - value)"
python set to list,a = set()
python split for lists,"ll = ['data', 'more data', '', 'data 2', 'more data 2', 'danger', '',
    'date3', 'lll']
p = [i for i in split_seq(ll, '')]"
what is a 'good practice' way to write a python gtk+ application?,"class MyApp(gtk.Window):
    pass"
stop nosetests from printing logging information?,"DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3'}
LOGGING['loggers'] = {}"
parsing a pdf with no /root object using pdfminer,raise PDFSyntaxError('No /Root object! - Is this really a PDF?')
how to remove attribute of a etree element?,"del otree.attrib['data']
etree.tostring(otree)"
accessing elements of python dictionary,dict['Apple']['American']
python:getting text from html using beatifulsoup,"pattern = re.compile('profile: ({.*}),', re.MULTILINE | re.DOTALL)
script = soup.find('script', text=pattern)
profile_text = pattern.search(script.text).group(1)
profile = json.loads(profile_text)
print(profile['ranking'], profile['rankingText'])"
post-install script with python setuptools,main()
always allow geolocation in firefox using selenium,"cls.profile.set_preference('geo.wifi.uri', GEOLOCATION_PATH)
cls.driver = Firefox(firefox_binary=cls.binary, firefox_profile=cls.profile)"
faster way to extract patches from images?,"all_patches = extract_patches(x, patch_size)"
instantiating objects in python,"class A(object):

    def __init__(self, param1, param2, param3):
        print(param1, param2, param3)
params = {'param1': 'foo', 'param2': 'bar', 'param3': 'hello'}
my_a = A(**params)"
what happens when objects in a set are altered to match each other?,self.h = h
triangle wave shaped array in python,import numpy as np
what is a reason to use ndarray instead of python array,"import numpy as np
import array"
opencv descriptor removes keypoint,cout << 'FOUND ' << keypoints2GPU.cols << ' keypoints on second image' << endl
"writing to mysql database with pandas using sqlalchemy, to_sql","import mysql.connector
from sqlalchemy import create_engine
engine = create_engine(
    'mysql+mysqlconnector://[user]:[pass]@[host]:[port]/[schema]', echo=False)"
unboundlocalerror: local variable 'x' referenced before assignment. proper use of tsplot in seaborn package for a dataframe?,"sns.tsplot(data.T.values, idx)"
sieve of atkin implementation in python,"for x in range(5, int(math.sqrt(limit))):
    if sieve[x]:
        pass"
print string as hex literal python,x = '\x01ABC'
elasticsearch bulk index in chunks using pyes,es.refresh()
"merge values of same key, in list of dicts","for key, value in d.items():
    pass"
how to call self in a mock method of an object in python?,"def mock_save(self):
    assert self.attr == 'dest_val'
with mock.patch.object(Item, 'save', autospec=True) as save:
    save.side_effect = mock_save
func_to_call()"
how to nest labelkfold?,"for inner_train, inner_test in inner_cv:
    pass"
is it possible to copy and update a python dictionary in a single chained expression?,"y = dict(x, foo='spam', bar='eggs', **{(2): 3, (42): 81})"
how to make wx.textentrydialog larger and resizable,style = wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER
python numpy: how to construct a big diagonal array(matrix) from two small array,"Z = np.zeros((2, 2), dtype=int)
np.asarray(np.bmat([[A, Z], [Z, B]]))"
how to animate the colorbar in matplotlib,"im.set_clim(vmin, vmax)"
reading array from config file in python,"cp.read('foo.cfg')
folder = eval(cp.get('common', 'folder'), {}, {})
print(folder)
print(type(folder))"
getting number of messages in a rabbitmq queue,connection = pika.BlockingConnection(pika_conn_params)
how can i create email template using xml odoo,"def send(self):
    self.state = 'sent'"
tcpdump to only print urls,"import scapy
tcpdump = sniff(count=5, filter='host 64.233.167.99', prn=lambda x: x.summary()
    )"
consume multiple queues in python / pika,"def on_channel_open(channel):
    channel.basic_consume(callback, queue='queue1')
channel.basic_consume(callback, queue='queue2')"
how to dynamically compose and access class attributes in python?,"class Class1:
    pass"
how to quickly find first multiple of 2 of list element in list of large integers?,j += 1
"in python, if i return inside a ""with"" block, will the file still close?",pass
how to code autocompletion in python?,"keywords = ['hello', 'hi', 'how are you', 'goodbye', 'great']"
dynamic method in python,"def get_pid(*params):
    for param in params:
        yield os.getpid(param)"
how to uniq list of objects?,"def __eq__(self, other):
    pass"
orthogonal matching pursuit regression - am i using it wrong?,import sklearn.linear_model
"python: cleanest way to wrap each method in parent class in a ""with""",return transact()
finding the roots of a large number of functions with one variable,"F0 = numpy.where(mask0, F_mid, F0)"
why is ctypes so slow to convert a python list to a c array?,"""""""v = array('I',t);assert v.itemsize == 4; addr, count = v.buffer_info();p = ctypes.cast(addr,ctypes.POINTER(ctypes.c_uint32))"""""""
how to include the private key in paramiko after fetching from string?,private_key = paramiko.RSAKey.from_private_key(not_really_a_file)
what does a for loop within a list do in python?,"if i % 2 == 0:
    myList.append(i)"
python- find unmatched values from multiple lists,"a(A, B)"
how to compile simple python embeded program using distutils,"compiler = MSVCCompiler()
compiler.compile(['main.c'], include_dirs=['C:/Python27/include'])"
fast cartesian to polar to cartesian in python,"Xcart = Xcart.astype(int)
Ycart = Ycart.astype(int)"
rationale behind python's preferred for syntax,"N = 10000

def thegoodone():
    for x in range(N):
        for y in range(M):
            pass

def thebadone():
    x = 0
while x < N:
    y = 0
while y < M:
    y += 1
x += 1"
django admin: how to make a readonly url field clickable in change_form.html?,"def the_callable(obj):
    return '<a href=""#"">link from the callable for {0}</a>'.format(obj)
the_callable.allow_tags = True


class SomeAdmin(admin.ModelAdmin):

    def the_method_in_modeladmin(self, obj):
        return ('<a href=""#"">link from the method of modeladmin for {0}</a>'
            .format(obj))
the_method_in_modeladmin.allow_tags = True"
how to create a multilevel dataframe in pandas?,"B.columns = pd.MultiIndex.from_product([['B'], B.columns])"
"finding the missing values in a range using any scripting language - perl, python or shell script",yield missing
how can i suppress newline in python logging module.,"class SniffLogHandler(TimedRotatingFileHandler):

    def __init__(self, filename, when, interval, backupCount=0, encoding=
        None, delay=0, utc=0):
        pass"
how can i allow django admin to set a field to null?,"my_nullable_string = models.CharField(max_length=15, null=True, blank=True)"
create set of random jpgs,"a = numpy.random.rand(30, 30, 3) * 255"
python: for loop - print on the same line,"f = partial(input, 'Enter a sentence: ')
for item in iter(f, ''):
    pass"
hacking javascript array into json with python,from pyparsing import *
find first time a value occurs in the dataframe,qt_dif = val[6] - first[6]
finding first samples greater than a threshold value efficiently in python (and matlab comparison),"thresholded_edge_indices = numpy.where(threshold_edges == 1)[0]
print(thresholded_edge_indices)"
regex to separate numeric from alpha,"import re
a = ['10people', '5cars']
[re.match('^(\\d+)([a-zA-Z]+)$', x).groups() for x in a]"
how do i use node.js to send an email every 10 seconds?,"setTimeout(sendEmail, 10 * 1000)"
is the `id()` of a variable associated to the value assigned to it after the variable lifetime finishes?,"id(var1)
id(var2)
var1 = 10
var2 = 10
id(var1)
id(var2)"
how to tell if string starts with a number?,"strg.startswith(('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'))"
how to pass django request object in user_passes_test decorator callable function,return decorator
how to call a program from python without waiting for it to return,"def run(self):
    pass"
python deep merge dictionary data,"""""""
run me with nosetests --with-doctest file.py
>>> a = { 'first' : { 'all_rows' : { 'pass' : 'dog', 'number' : '1' } } }
>>> b = { 'first' : { 'all_rows' : { 'fail' : 'cat', 'number' : '5' } } }
>>> merge(b, a) == { 'first' : { 'all_rows' : { 'pass' : 'dog', 'fail' : 'cat', 'number' : '5' } } }
True
"""""""
passing multple files with asterisk to python shell in windows,"for filename in glob(argv[1]):
    pass"
python 3: reading bytes from stdin pipe with readahead,line += self.fileobj.readline()
django drf with oauth2 using dot (django-oauth-toolkit),"{'access_token': 'jlLpKwzReB6maEnjuJrk2HxE4RHbiA', 'token_type': 'Bearer',
    'expires_in': 36000, 'refresh_token': 'DsDWz1LiSZ3bd7NVuLIp7Dkj6pbse1',
    'scope': 'read write groups'}"
function that accepts both expanded arguments and tuple,"print(args[0], args[1])"
alternatives to numpy einsum,"print(('total time =', end_time - start_time))"
python string and integer concatenation,"for i in range(11):
    string += repr(i)
print(string)"
python assign value to variable during condition in while loop,"with open(csvfilename, 'rb') as csvfh:
    reader = csv.reader(csvfh)"
how do i slice a numpy array up to a boundary?,self.A = np.asanyarray(A)
how to spawn another process and capture output in python?,"with Popen('ngrep -iW byline'.split() + [filter_], stdout=PIPE) as process:
    pass"
"how to detect end of file in python after iterating the file object with ""for"" statement","for line in file:
    if something:
        pass"
sorting dictionary by numeric value,"tag_weight = {k: int(v) for k, v in list(tag_weight.items())}
count = collections.Counter(tag_weight)
print(count.most_common(10))
print(count.most_common())"
limited number of user-initiated background processes,break
sqlalchemy integer column size,"id = Column(mysql.INTEGER(20), Sequence('%s_id_seq' % __tablename__),
    primary_key=True, nullable=False)
name = Column(String(30))"
how can i set proxy with authentication in selenium chrome web driver using python,driver.get('http://www.google.com.br')
arbitrary sleeping in threading's wait with timeout,"from queue import Queue, Empty"
python unpack argument list for format string,"def join_args(fmstr, *args):
    return fmstr.format(*args)
print(join_args('One: {} Two: {} Three: {} Four: {}', 1, 2, 3, 4))"
sorting by multiple conditions in python,result = -result
how to config nltk data directory from code?,"""""""A list of directories where the NLTK data package might reside.
   These directories will be checked in order when looking for a
   resource in the data package.  Note that this allows users to
   substitute in their own versions of resources, if they have them
   (e.g., in their home directory under ~/nltk_data).""""""
path += [d for d in os.environ.get('NLTK_DATA', str('')).split(os.pathsep) if d
    ]
if os.path.expanduser('~/') != '~/':
    path.append(os.path.expanduser(str('~/nltk_data')))
if sys.platform.startswith('win'):
    path += [str('C:\\nltk_data'), str('D:\\nltk_data'), str(
        'E:\\nltk_data'), os.path.join(sys.prefix, str('nltk_data')), os.
        path.join(sys.prefix, str('lib'), str('nltk_data')), os.path.join(
        os.environ.get(str('APPDATA'), str('C:\\')), str('nltk_data'))]
else:
    path += [str('/usr/share/nltk_data'), str('/usr/local/share/nltk_data'),
        str('/usr/lib/nltk_data'), str('/usr/local/lib/nltk_data')]"
implementing the factory design pattern using metaclasses in python,"class FactoryMetaclassObject(type):

    def __init__(cls, name, bases, attrs):
        """"""__init__ will happen when the metaclass is constructed: 
        the class object itself (not the instance of the class)""""""
pass

def __call__(*args, **kw):
    """"""
        __call__ will happen when an instance of the class (NOT metaclass)
        is instantiated. For example, We can add instance methods here and they will
        be added to the instance of our class and NOT as a class method
        (aka: a method applied to our instance of object).
        Or, if this metaclass is used as a factory, we can return a whole different
        classes' instance
        """"""
return 'hello world!'


class FactorWorker(object, metaclass=FactoryMetaclassObject):
    pass
f = FactorWorker()
print(f.__class__)"
"merging two pandas dataframes results in ""duplicate"" columns","def drop_y(df):
    to_drop = [x for x in df if x.endswith('_y')]
df.drop(to_drop, axis=1, inplace=True)
drop_y(merged)"
jmeter - run a python script before calling each http request sampler,"vars.put('ID', response.toString())"
python - lxml: enforcing a specific order for attributes,y = ET.Element('y')
nltk convert tree to array?,print(repr(t[1]))
generating a list of repetitions regardless of the order,"timeit(lambda : list(assignments(12, 5)), number=1)
sum(1 for _ in assignments(12, 5))"
sum zeros and ones by another vector in python,prior_reci = 1 / np.asarray(prior)
discrete legend in seaborn heatmap plot,"plt.setp(labels, rotation=0)"
multiprocessing.pool with maxtasksperchild produces equal pids,"def f(x):
    print('PID: %d' % os.getpid())"
how to create socket.io client in python to talk to a sails server,"socketIO.emit('event', data)"
"in flask, why are all the views shown in a single file?","@current_app.route('/myview')
def myview():
    pass"
theano element wise maximum,"linmax([[-1, -2], [3, 4]])"
redirecting stdout/stderr of a child process to a file,print('Failed to open or create temporary crontab file.')
flask optional url parameters,return user_id + ':' + username
add column with constant value to pandas dataframe,"df = DataFrame({'a': randint(3, size=10)})
df
s = df.a[:5]
dfa, sa = df.align(s, axis=0)
dfa"
using python's max to return two equally large values,"120, ['a', 'b']"
pythonic way to reduce the number of small subclasses in a base class?,"def __init__(self, name, weight, hair=HAIR_LONG, **kwargs):
    pass"
how do you configure django for simple development and deployment?,"if socket.gethostname().startswith('gabriel'):
    LIVEHOST = False"
how to continue in nested loops in python,doWork()
how to sort alpha numeric set in python,"s = set(['booklet', '4 sheets', '48 sheets', '12 sheets'])
for x in sorted_nicely(s):
    pass"
simple addition program in python,print('Enter two Numbers\n')
any way to keep track of the last 5 data points in python,self._index += 1
login to website using python,"login_data = {'loginemail': EMAIL, 'loginpswd': PASSWORD, 'submit': 'login'}"
pandas: remove encoding from the string,dfSearch['str_value'].map(lambda x: urllib.parse.unquote(x).decode('utf8'))
"how can i quickly estimate the distance between two (latitude, longitude) points?","x = (lon2 - lon1) * cos(0.5 * (lat2 + lat1))
y = lat2 - lat1
d = R * sqrt(x * x + y * y)"
python lists: indices of heapq.nlargest with repeating values in list,indices
creating a multithreaded server using socketserver framework in python,server.serve_forever()
updating a list of embedded documents in mongoengine,Feed.drop_collection()
scrapy - follow rss links,from scrapy.spider import BaseSpider
python: reading all files in all directories,"import os
import fnmatch
for dirpath, dirs, files in os.walk('Test'):
    pass"
timeseries fitted values from trend python,"ax.scatter(df.index, df.AdjClose)
ax.plot(df.index, df.fitted, 'r')
ax.set_ylabel('$')
fig.suptitle('Yahoo')
plt.show()"
django + mongodb,loc = models.TextField()
how do i concatenate many objects into one object using inheritence in python? (during runtime),"class bigclass:
    pass"
can you add a light source in blender using python,"lamp_object.location = 5.0, 5.0, 5.0
lamp_object.select = True
scene.objects.active = lamp_object"
how to add bi-directional manytomanyfields in django admin?,"class LocationGroupAdmin(admin.ModelAdmin):
    pass"
calling __new__ when making a subclass of tuple,"def __new__(*args, **kwargs):
    return tuple.__new__(*args, **kwargs)"
making a post call instead of get using urllib2,"data = dict(name='joe', age='10')
r = requests.post(url, data=data, allow_redirects=True)"
min heap in python,"def gen_wrapper(cmp):


    class Wrapper(object):
        pass"
"how does swig wrap a map<string,string> in python?","x = test.map_string_string({'a': 'b', 'c': 'd'})"
selenium: get coordinates or dimensions of element with python,size = e.size
python requests fetch a file from a local url,response.url = req.url.decode('utf-8')
how to use recursion to nest dictionaries while integrating with existing records,g_values = dict()
hidden dictonary key,pdb.set_trace()
how to implement the relu function in numpy,"np.maximum(x, 0)"
python not quite random sampling from a list of objects,i = 0
how can i implement asyncio websockets in a class?,return self._async_init().__await__()
how to parse multiple sub-commands using python argparse?,"argparser = argparse.ArgumentParser()
subparsers = argparser.add_subparsers(help='sub-command help', dest=
    'subparser_name')
parser_a = subparsers.add_parser('command_a', help='command_a help')
argparser.add_argument('extra', nargs='*', help='Other commands')"
connecting two points in a 3d scatter plot in python and matplotlib,"dates = [20020514, 20020515, 20020516, 20020517, 20020520]"
how to generate random points in a circular distribution,"x = r * math.cos(alpha) + circle_x
y = r * math.sin(alpha) + circle_y
print(('Random point', (x, y)))"
histogram matching of two images in python 2.x?,"ax2 = fig.add_subplot(gs[0, 1], sharex=ax1, sharey=ax1)"
how to uniqufy the tuple element?,"max_scores
tuple({name: score} for name, score in max_scores.items())"
how does one ignore unexpected keyword arguments passed to a function?,"def f(**kwargs):
    print(kwargs['a'])"
"algorithm to find the ""percolation"" threshold in a weighed network",low = 0
exporting a python module (to string or py file),"with open('newfoo.py', 'wb') as f:
    f.write(source)"
plot logarithmic axes with matplotlib in python,show()
voronoi - compute exact boundaries of every region,plt.show()
how to make uniques in django models? and also index a column in django,"class Meta:
    pass"
django - function inside a model. how to call it from a view?,"def insert_history(cls, field1, field2, field3):
    pass"
how to extract zip file recursively in python,"zip_file = zipfile.ZipFile(content)
for i in zip_file.namelist():
    zip_file.extract(i, dirname)"
logging into saml/shibboleth authenticated server using python,"driver.find_element_by_id('password').send_keys('mypassword')
driver.find_element_by_id('fm1').submit()"
django post_save preventing recursion without overriding model save(),"instance.do_stuff()
instance.save()"
set global hotkey with python 2.6,"pyhk.addHotkey(SomeHotkey, SomeFunction)"
python import a module from a directory(package) one level up,from . import something
google calendar api - access own calendar via service account,"http = httplib2.Http()
http = credentials.authorize(http)
return build('calendar', 'v3', http=http)"
"how to show why ""try"" failed in python","try:
    print(1 / 0)
except Exception:
    s = traceback.format_exc()
serr = """"""there were errors:
%s
"""""" % s"
removing all html tags along with their content from text,"soup = BeautifulSoup(text)
for tag in soup.find_all('strong'):
    tag.replaceWith('')"
copying one file's contents to another in python,data = input.read(100000)
matplotlib coordinates format,"ax.fmt_xdata = lambda x: '{0:f}'.format(x)
ax.fmt_ydata = lambda x: '{0:f}'.format(x)"
class with changing __hash__ still works with dictionary access,print(p in d)
"how to print all variables values when debugging python with pdb, without specifying each variable?","1, 1, 'value'"
"how to construct relative url, given two absolute urls in python","""""""http://coolwebsite.com/questions/1663807/how-can-i-iterate-through-two-lists-in-parallel-in-python"""""""
encoding binary data in flask/jinja2,"def show_entry(id):
    pass"
tastypie api not showing foreignkey in json result,"user = fields.ForeignKey(UserResource, user, full=True)"
time to decimal time in python,"t = datetime.time(12, 31, 53)
ts = t.hour * 3600 + t.minute * 60 + t.second
print(ts)"
creating a rotatable 3d earth,"ax.plot_surface(x, y, z, rstride=4, cstride=4, facecolors=bm)
plt.show()"
packing named arguments into a dict,"def foo(a, b):
    pass"
how to square or raise to a power (elementwise) a 2d numpy array?,a.dtype
how to calculate all interleavings of two lists?,slots = [None] * len(slots)
fastest way to search 1gb+ a string of data for the first occurence of a pattern in python,"if H[b] != k:
    pass"
print to the same line and not a new line in python,"def range_with_status(total):
    """""" iterate from 0 to total and show progress in console """""""
normalize a matrix row-wise in theano,"a = np.exp(np.random.randn(5, 10)).astype(theano.config.floatX)"
"pylab: plotting axes to log scale, but labelling specific points on the axes",fig = plt.figure()
check at once the boolean values from a set of variables,"print(is_all_true(a, b, c))"
typeerror: only length-1 arrays can be converted to python scalars while trying to exponentially fit data,"b = np.array([4, 5, 6])
c = np.concatenate(a, b)"
passing information from one script to another,"f_myfile = open('C:\\My Documents\\My Favorite Folder\\myfile.pickle', 'rb')"
extracting table contents from html with python and beautifulsoup,"soup = BeautifulSoup(unicodestring_containing_the_entire_htlm_doc)
table = soup.find('table', {'class': 'details'})"
mercurial hook - change a commit message pre commit,"repo.__class__ = myrepo
cmdtables = {}
testedwith = '2.7.1'"
how to get the physical interface ip address from an interface,ni.ifaddresses('eth0')
see anything wrong with my attempt to get flask running? (mod_wsgi + virtualenv),sys.path.append('directory/where/package/is/located')
how to plot events on time on using matplotlib,"plt.ylim(max(y) + 0.5, min(y) - 0.5)"
element-wise product of two 2-d lists,"list2 = [[5, 2, 9, 3, 7], [1, 3, 5, 2, 2]]
list1 = [[2, 3, 5, 6, 7], [5, 2, 9, 3, 7]]
result = [[(a * b) for a, b in zip(i, j)] for i, j in zip(list1, list2)]
print(result)"
numpy subtract/add 1d array from 2d array,"[2, 3, 4],
[4, 5, 6],"
extract the sha1 hash from a torrent file,"""""""Display error message and exit"""""""
how to write raw bytes to google cloud storage with gae's python api,gcs_file.close()
python feedparser: how can i check for new rss data?,"feed_update = feedparser.parse(url, etag=last_etag, modified=last_modified)"
how to save scikit-learn-keras model into a persistence file (pickle/hd5/json/yaml),json_model = model_tt.model.to_json()
lambda versus list comprehension performance,"from functools import reduce
print(reduce(lambda x, y: x + y, lst))
print(sum(lst))"
converting string to long in python,"int(round(float('1.1')))
int(round(float('1.9')))"
adding data to qtablewidget using pyqt4 in python,"self.table = QtGui.QTableWidget()
self.table.setRowCount(5)"
how to merge a transparent png image with another image using pil,"background = Image.open('test1.png')
foreground = Image.open('test2.png')"
python: disable http_proxy in urllib2,"proxy_handler = urllib.request.ProxyHandler({})
opener = urllib.request.build_opener(proxy_handler)
page = opener.open('http://www.google.com')"
parsing thread-index mail header with python,"ts = [datetime.datetime(1601, 1, 1) + datetime.timedelta(microseconds=f // 10)]"
attachment image to send by mail using python,msg['To'] = 'e@mail.cc'
unable to append a translated string to himself with gettext,print(stringtest)
is there anything like generic templates in django like generic views,{{field.errors}}
python: best way to remove duplicate character from string,"for char in oldstring[1:]:
    if char != newstring[-1]:
        newstring += char"
controlling alpha value on 3d scatter plot using python and matplotlib,fig = plt.figure()
storing a collection of integers in a list,print(RNA_integers)
nested for loops in python,"1, 0, 1"
how to create exact duplicate of django model that has m2m and fk relationships,"breeds = models.ManyToMany('myapp.Breed', help_text=
    'Remember, animals can be mixed of multiple breeds.', related_name=
    '%(app_label)s_%(class)s_dogs')"
tricky filling holes in an image,"plt.imshow(labels, cmap='flag', vmin=0, vmax=n_regions)"
screenshot of a window using python,QApplication.desktop()
how to pass in a dictionary with additional elements in python?,"class DictAdditionalValueWrapper:

    def __init__(self, baseDict, specialKey, specialValue):
        self.baseDict = baseDict
self.specialKey = specialKey
self.specialValue = specialValue

def __getitem__(self, key):
    if key == self.specialKey:
        return self.specialValue
return self.baseDict[key]"
a puzzle concerning q objects and foreign keys,"thing = models.ForeignKey(Thing, related_name='subthings')"
xml encoding problem while writing it in to file,"xm = xm.replace('<?xml version=""1.0"" ?>',
    '<?xml version=""1.0"" encoding=""ISO-8859-1""?>')
file.write(xm)"
"multipart/form-data post, put, patch in django-tastypie",return request.POST
normalize histogram (brightness and contrast) of a set of images using python image library (pil),im = Image.open(im_file)
remove all elements of a set that contain a specific char,"filtered_primes = map(int, primes)"
django - how to prepopulate admin form fields,form.base_fields['my_field_name'].initial = 'abcd'
substituting a regex only when it doesn't match another regex (python),"""""""(?!\\{)"""""""
count how many matrices have full rank for all submatrices,import numpy as np
how to use a generator to split socket read data on newlines,"with closing(socket.socket(socket.AF_INET, socket.SOCK_STREAM)) as s:
    s.connect(('127.0.0.1', 8080))
s.sendall('GET / HTTP/1.0\r\n\r\n')"
can i use a builtin name as a method name of a python class?,x.set(a)
python: tkinter to display video from webcam and do a qr scan,"self.root.bind('<Control-s>', self.start)"
python json encoder to support datetime?,"return {'__type__': 'decimal.Decimal', 'args': [str(obj)]}"
generic one-to-one relation in django,"class Event(models.Model):
    pass"
create lists of unique names in a for -loop in python,dct['lst_%s' % i] = []
merging two dictionaries while keeping the original,"{'b': [2, 3], 'c': [3], 'a': [1, 2]}"
random non-uniform distribution with given proportion,num = 100
python - how to access first type of data,NumberTextSet3['trillion']
how to apply pandas groupby with multiple conditions for split and apply multiple calculations?,"for col1, col2 in zip(list('ABC'), list('DEF')):
    pairs.append(col1 + col2)
mask = A[col1] > 1
mask2 = mask & (A[col2] > 0)
ser = A.loc[mask, col2]
result.append((ser.mean(), ser.std(), mask2.sum()))
mask = A[col1] < 1
mask2 = mask & (A[col2] < 0)
ser = A.loc[mask, col2]
result.append((ser.mean(), ser.std(), mask2.sum()))
index = pd.MultiIndex.from_product([pairs, [1, 2]], names=['pair', 'cond'])
df = pd.DataFrame(result, index=index, columns=['mean', 'sum', 'count'])
print(df)"
splitting a string based on tab in the file,r = re.compile('([^\\t]*)\\t*')
how to visualize 95% confidence interval in matplotlib?,"data_m = np.array([1, 2, 3, 4])"
wxpython: pyinstaller fails with no module named _core_,return module_loader
prevent delete in django model,"class CustomQuerySet(QuerySet):

    def delete(self):
        self.update(active=False)


class ActiveManager(models.Manager):

    def active(self):
        return self.model.objects.filter(active=True)

def get_queryset(self):
    return CustomQuerySet(self.model, using=self._db)


class Employee(models.Model):
    name = models.CharField(name, unique=True)
active = models.BooleanField(default=True, editable=False)
objects = ActiveManager()

def delete(self):
    self.active = False
self.save()"
how to recommend the next achievement,"for otherAlias in otherAliases:
    for otherAch in otherAlias.achievements.all():
        pass"
generating a random hex color in python,b = _chkarg(b)
get the first element of each tuple in a list in python,res_list = [x[0] for x in rows]
advanced custom sort,"'Hm H',"
python: unintentionally modifying parameters passed into a function,"def dont_modi_list(alist):
    alist = alist[:]
alist.append(4)"
a very simple asynchronous application in python,"tasks = [print_sum(1, 2), dosomethingelse(), compute(2, 4)]"
will using list comprehension to read a file automagically call close(),lines = [line.strip() for line in f]
share sqlalchemy models between flask and other apps,app = Flask(__name__)
how long does my python application take to run?,"print('My program took', time.time() - start_time, 'to run')"
flask app: update progress bar while function runs,app.debug = True
how to use forms in django-cms?,"""""""Enables latest event to be rendered in CMS"""""""
get diagonal without using numpy in python,"[11, 5, -12]
[4, 5, 10]"
is there a way to sort a list in python until the first sorted k elements are found?,lst.append(el)
how to do c++ style(indexed) nested loops in python?,"for a, b in itertools.permutations(A, 2):
    do_stuff(a, b)"
how to perform double sort inside an array?,"def __lt__(self, other):
    return self.defaultorder() < other.defaultorder()
bar.sort(reverse=True)"
plotting a large number of points using matplotlib and running out of memory,"ax.axis([0, 10, 0, 10])
fig.canvas.draw()"
how to read avro file in pyspark,"schema = avro.schema.parse(schema_string)
with open('kv.avro', 'w') as f:
    with DataFileWriter(f, DatumWriter(), schema) as wrt:
        wrt.append({'key': 'foo', 'value': -1})
wrt.append({'key': 'bar', 'value': 1})"
how to get a row-by-row mysql resultset in python,cursor = conn.cursor(cursors.SSCursor)
shortcut evalution of numpy's array comparison,"k = 0
while A[k] < B[k]:
    k += 1"
django datefield to unix timestamp,"import time
from django import template"
removing items from a nested list python,"familiesNew = [[f(i, j) for j in families[i] if i != j] for i in range(len(
    families))]"
"in python's pil, how do i change the quality of an image?",im = Image.open('C:\\Users\\Public\\Pictures\\Sample Pictures\\Jellyfish.jpg')
how to get python to open an outside file?,"data = file_.read()
print(data)"
eggs in path before pythonpath environment variable,"if lines and 'import sys' in lines[0]:
    open(path, 'wb').write(''.join(lines[1:-1]) + '\n')"
python defaultdict for large data sets,"self.store[i] = key, value"
how to reconnect a socket on asyncio?,"print(('start', transport))"
how do i concatenate many objects into one object using inheritence in python? (during runtime),"class Meta(type):
    pass"
how to accept a json post?,"if request.method == 'POST':
    the_data = request.get_json()"
django staticfiles app help,"from django.core.files.storage import FileSystemStorage
from django.contrib.staticfiles.finders import BaseStorageFinder
from django.conf import settings


class StaticFinder(BaseStorageFinder):
    storage = FileSystemStorage(settings.STATIC_ROOT, settings.STATIC_URL)"
build numpy array with multiple custom index ranges without explicit loop,"array3 = np.zeros(last - first + 1, dtype='i1')"
"any way to execute a piped command in python using subprocess module, without using shell=true?","from subprocess import Popen, PIPE
p1 = Popen(['tar', '-cvf', '-', 'path_to_archive'], stdout=PIPE)
p2 = Popen(['split', '-b', '20m', '-d', '-a', '5', '-',
    ""'archive.tar.split'""], stdin=p1.stdout, stdout=PIPE)"
add number to set,"a_set = set()
print(a_set.add(1))
a_set"
python multiprocessing safely writing to a file,job.get()
change flask-babel locale outside of request context for scheduled tasks,return user.locale
"python: run a process with timeout and capture stdout, stderr and exit status",time.sleep(poll_seconds)
python: custom logging across all modules,log.warning('warning message')
return the current user with django rest framework,queryset = User.objects.all()
datetime unix timestamp contains milliseconds,"the_date = datetime.fromtimestamp(unix_timestamp)
the_date += timedelta(milliseconds=milliseconds)"
fast/optimize n-gram implementations in python,"def pairwise(iterable, n=2):
    pass"
retrying tasks with django-celery - django/celery,"@task(default_retry_delay=5 * 60, max_retries=12)
def foo(bar):
    pass"
how can i capture all exceptions from a wxpython application?,"def write(self, text):
    self._log(text)"
python numpy: how to construct a big diagonal array(matrix) from two small array,"out = np.asarray(np.bmat([[A, Z], [Z, B]]))"
fitting data to distributions?,"print(paste('fitting parameters for ', dist))"
in django - model inheritance - does it allow you to override a parent model's attribute?,abstract = True
importing files in python from __init__.py,b.py
check that list of tuples has tuple with 1st element as defined string,"is_content = any(attr == 'class' and 'content' in val.split() for attr, val in
    element_attributes)"
how to plot data from multiple two column text files with legends in matplotlib?,"leg = ax1.legend()
plt.show()"
how to compose string from regex pattern with named groups and datadict in python?,print(result)
how do i check out a file from perforce in python?,p4in.write('description: ' + description)
finding if two strings are almost similar,0.909090909091
how to draw a line with animation in pyqt4,painter = Qt.QPainter()
tkinter grid: how to position widgets so they are not stuck together,"self.bottom_frame.pack(side='bottom', fill='both', expand=True)"
python capitalize first letter only,"""""""sandy"""""".title()"
using nextlink attribute to get the next result page,"params = {'ids': profile_id, 'start_date': start_date, 'end_date': end_date,
    'metrics': metrics, 'dimensions': dimensions, 'sort': sort,
    'start_index': 1, 'max_results': 1}
dummy_call = service.data().ga().get(**params).execute()
params['max_results'] = dummy_call['totalResults']
all_rows = service.data().ga().get(**params).execute()['rows']"
comparing two date strings in python,"b = dt.strptime('10/15/13', '%m/%d/%y')"
element-wise minimum of multiple vectors in numpy,"v2 = [4, 5]
v3 = [4, 4]
v4 = [1, 4]
V = [v1, v2, v3, v4]
np.asarray(V).min(0)
np.amin(V, axis=0)"
python pandas histogram log scale,"results.val1.hist(bins=120, log=True)"
saving plots (axessubplot) generated from python pandas with matplotlib's savefig,fig = plot.get_figure()
how to prevent numbers being changed to exponential form in python matplotlib figure,ax.get_xaxis().get_major_formatter().set_scientific(False)
why my panelnd factory throwing a keyerror?,"Subject = panelnd.create_nd_panel_factory(klass_name='Subject', axis_orders
    =['setsize', 'location', 'vfield', 'channels', 'samples'], axis_slices=
    {'location': 'labels', 'vfield': 'items', 'channels': 'major_axis',
    'samples': 'minor_axis'}, slicer=pd.Panel4D, axis_aliases={'ss':
    'setsize', 'loc': 'labels', 'vf': 'items', 'major': 'major_axis',
    'minor': 'minor_axis'})
subjects = dict()
for i in range(3):
    eeg = pd.DataFrame(np.random.randn(10, 2), columns=['level4_1',
        'level4_2'], index=[('level3_%s' % x) for x in range(10)])
loc, vf = 'level1_0', 'level2_0'
subjects['level0_%s' % i] = pd.Panel4D({loc: {vf: eeg}})
print(Subject(subjects))"
how to keep a c++ class name unmodified with cython?,"def xmin(self):
    return self.obj_.xmin()"
"tkinter: how to use threads to preventing main event loop from ""freezing""",self.timer.start()
monkey patch to raise attributeerror on attempted use of a particular attribute of an object,"fum.__class__ = DerivedFum
fum.bar"
issue with passing string from python to c shared lib using ctypes,"class TEST_STRUCT(Structure):
    pass"
how do i make this simple list comprehension?,"[sum(nums[i:i + 3]) for i in range(0, len(nums), 3)]"
"how to deal with pylint's ""too-many-instance-attributes"" message?",self.six = 6
parse a cron entry in python,"for cron4 in tab.find('echo'):
    pass"
setting the limits on a colorbar in matplotlib,cax = fig.add_subplot(122)
python introspection: how to get an 'unsorted' list of object attributes?,"__metaclass__ = OrderedMeta


class A:


    class D:
        pass


class C:
    pass
print(sorted([cls for cls in [getattr(A, name) for name in dir(A)] if
    isinstance(cls, OrderedMeta)], key=operator.attrgetter('_order')))"
limiting memory use in a *large* django queryset,"def next(self):
    pass"
python list slice syntax used for no obvious reason,c[3] = 20
restart python-script from within itself,os.system('runme.sh')
how to check if there exists a process with a given pid in python?,""""""" Check For the existence of a unix pid. """""""
python: how much space does each element of a list take?,"sys.getsizeof(a)
b = 1
type(b)
sys.getsizeof(b)"
how do i conditionally include a file in a sphinx 'toctree'?,public - sample.rst
applying a dictionary of string replacements to a list of strings,"for old, new in list(replacements.items()):
    pass"
proportional venn diagram for more than 3 sets,"plt.axis('off')
plt.show()"
how can i send a get request from my flask app to another site?,"@app.route('/proxy-example')
def proxy_example():
    r = requests.get('http://example.com/other-endpoint')"
get str repr with double quotes python,"return '""%s""' % string.replace('""', '\\""')"
how to extract equation from a polynomial fit?,from sklearn.preprocessing import PolynomialFeatures
standard deviation of a list,"if n < 1:
    raise ValueError('mean requires at least one data point')"
permutations with repetition in python,"sorted(_, key=lambda x: sum(x))"
"i need to convert a string to a list in python 3, how would i do this?",literal_eval(s)
how to use async/await in python 3.5?,import asyncio
dynamically add legends to matplotlib plots in python,"matplotlib.pylab.legend(loc='upper left')
matplotlib.pylab.show()"
change keyboard locks in python,"while 1:
    fcntl.ioctl(console_fd, KDSETLED, all_on)"
how to use sqlalchemy to select value at a position in a postgresql array?,"def any_(value, col):
    return literal(value).op('= ANY')(tuple_(col))
q = Comment.query.filter(any_(11, Comment.path))"
how to use doctest with a decorated function in python?,"functools.update_wrapper(_d, d)"
python scraping of javascript web pages fails for https pages only,from PyQt4.QtWebKit import QWebView
efficient data migration on a large django table,"articles = Article.objects.raw(
    'SELECT * from article where id > %s and id < %s' % (min, max))
for old_article in articles:
    article.save()"
histogram with equal number of points in each bin,"def histedges_equalN(x, nbin):
    npt = len(x)
return np.interp(np.linspace(0, npt, nbin + 1), np.arange(npt), np.sort(x))"
calcuate mean for selected rows for selected columns in pandas data frame,"df.iloc[[0, 2, 3], [0, 1, 3]].mean(axis=0)"
index of element in numpy array,"class myarray(np.ndarray):

    def __new__(cls, *args, **kwargs):
        return np.array(*args, **kwargs).view(myarray)

def index(self, value):
    pass"
efficient way to count unique elements in array in numpy/scipy in python,"data_array = [[0, 0, 1], [1, 1, 1], [1, 1, 1], [1, 0, 1]]"
plotting dates with sharex=true leads to valueerror: ordinal must be >= 1,"ax1.plot(x, y, 'b-')"
django - foreman cannot find installed modeles,activate_env = os.path.expanduser('/path/to/virtualenv/bin/activate_this.py')
redirect subprocess stderr to stdout,"output = ''
while True:
    line = proc.stdout.readline()
line = line.decode()
if line == '':
    break
output += line"
how can i count the occurrences of an item in a list of dictionaries?,"c['id', 2]"
getting a map() to return a list in python 3.x,"map = lmap
x = [1, 2, 3]
map(str, x)
map = __global_map
map(str, x)"
infinite generator in python for days of week,"def day_generator():
    days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday',
        'Saturday', 'Sunday']"
merge querysets in django,"def get_all_players(self):
    pass"
python regex to match a specific word,"match = re.search('\\bNot Ok\\b', strs)
if match:
    pass"
how to access the unittest.main(verbosity) setting in a unittest.testcase,"return unittest.main(*args, **kwargs)"
counting longest occurence of repeated sequence in python,current_seq_len = 1
sparse arrays from tuples,"A = np.asarray([[1, 2], [3, 4], [5, 6], [7, 8]])
B = scipy.sparse.diags([A[:, (0)], A[:, (1)]], [0, 1], [4, 5])"
how to create an internationalized google app engine application,return msgs
in python how do i use a class method without passing an instance to it?,return 'I am a class method'
"in python, how can i get the correctly-cased path for a file?","name = '%s[%s]' % (name[:-1], name[-1])"
python script that prints its source,print(open(my_module.__file__).read())
copy columns from multiple text files in python,"lines = map(lambda x: ','.join(x), lines)"
pandas: assigning multiple *new* columns simultaneously,"df.join(labeldf, on='label')"
splitting bracket-separated string to a dictionary,"print(dict(re.findall('(.+?)\\((.*?)\\)', s)))"
how can i make a read-only property mutable?,"class MyOwner(object):

    def __init__(self):
        self._what = MyValue(40)

@property
def what(self):
    pass"
"how do i specify custom comparator for the ""in"" keyword in python?","for item in NewList:
    pass"
append each line in file,t.write(line.rstrip() + 'No' + '\n')
add legends to linecollection plot,ax.legend()
tweaking axis labels and names orientation for 3d plots in matplotlib,from mpl_toolkits.mplot3d import Axes3D
python: how to get rid of spaces in str(dict)?,"import json
json.dumps(dct, separators=(',', ':'))"
reportlab. floating text with two columns,from reportlab.lib.styles import getSampleStyleSheet
django models - at least one in many to many,raise your_own_exception('Listing is required to have at least one image')
"how to pass through a list of queries to a pandas dataframe, and output the list of results?",df.Col1 == 'what'
insert static files literally into jinja templates without parsing them,env = jinja2.Environment(loader=loader)
selecting from multi-index pandas,"df.columns.names = ['A', 'B']
df
df.xs('a', level='A', axis=1)"
partial matching gae search api,"name = ','.join(tokenize_autocomplete(item.name))"
accepting a dictionary as an argument with argparse and python,"import json
my_dictionary = json.loads(args.my_dict)"
python regex negative lookbehind,"s = 'somestring.asp?1=123'
re.search('(?<!(asp|php|jsp))\\?.*', s)"
"using python to edit html, but lxml converts nice html entities to strange encoding","doc = lh.fromstring(html)
clean.clean(doc)"
"python/numpy: most efficient way to sum n elements of an array, so that each output element is the sum of the previous n input elements?","shifted_sum_arr = np.concatenate([[np.NaN] * (n - 1), [0], sum_arr[:-n]])"
python double colon with -1 as third parameter,"list(reversed(a[2:4]))
list(reversed(a))[1:3]"
pairwise circular python 'for' loop,"d = deque(l)
d.rotate(-1)
zip(l, d)"
preserving column order in python pandas dataframe,data2.to_csv(filename)
efficient way to apply multiple filters to pandas dataframe or series,"df = pd.DataFrame({'a': [1, 2, 3, 4, 5], 'b': [5, 4, 3, 2, 1]})
df.filt_spec('a', 2, 'ge')"
add a new column to an existing csv file,"for line in iter(fin.readline, ''):
    fout.write(line.replace('\n', ', ' + str(data[index]) + '\n'))
index += 1"
get output of python script from within python script,print(arg)
how to make subprocess called with call/popen inherit environment variables,"subprocess.call([filename])
os.unlink(filename)"
how to send a “multipart/related” with requests in python?,"document = MIMEText('text', 'plain')
document.set_payload(open('document.txt', 'rb').read())
related.attach(document)
body = related.as_string().split('\n\n', 1)[1]
headers = dict(list(related.items()))
r = requests.post(url, data=body, headers=headers)"
how to catch python stdout in c++ code,return 0
python example for reading multiple protobuf messages from a stream,break
"""freeze"" some variables/scopes in tensorflow: stop_gradient vs passing variables to minimize","optimizer = tf.train.AdamOptimizer(0.001)
train_W = optimizer.minimize(loss, var_list=[W])
train_C = optimizer.minimize(loss, var_list=[C])"
efficient way to create numpy arrays from binary files,"t_series = hstack((t_series, record_t))
x_series = hstack((x_series, record_x))"
how to pickle a python function with its dependencies?,"def bar(z):
    return foo(z) + 1"
open multiple filenames in tkinter and add the filesnames to a list,"import tkinter, tkinter.filedialog"
format a number containing a decimal point with leading zeroes,"print('Begin Loop {0}, {1:06.2f} Seconds Pause'.format(loop, pause))"
"(python) can i store the functions themselves, but not their value, in a list","foo_list.append(lambda : bar.func2([7, 7, 7, 9]))
foo_list.append(lambda : bar.func3('C:\\Users\\user\\desktop\\output'))"
how to extract frequency associated with fft values in python,data = [math.sin(2 * math.pi * freq * (x / frate)) for x in range(data_size)]
how do i get the definition order of class attributes in python?,"class OrderedTypeMeta(type):

    def __new__(mcls, clsname, bases, clsdict):
        attrs = clsdict.get('_attrs_', [])
attrnames = []
for name, value in attrs:
    clsdict[name] = value
attrnames.append(name)
clsdict['_attrs_'] = attrnames
return super(OrderedTypeMeta, mcls).__new__(mcls, clsname, bases, clsdict)


class User(DataStructure, metaclass=OrderedTypeMeta):
    pass"
reliable way to execute thousands of independent transaction?,ndb.delete_multi_async(Shard.query().fetch(keys_only=True))
match unicode emoji in python regex,"regex = re.compile('\\d+(.*?)[\\u263a-\\U0001f645]')
regex.findall(s)"
python generators: correct code recursing a tree,"for rn in node_recurse_generator(n):
    yield rn"
how to save a image file on a postgres database?,curs = conn.cursor()
how to override and extend basic django admin templates?,"'django.contrib.auth.context_processors.auth',"
behavior of object in set operations,"return hash((self.value, self.meta))"
access untranslated content of django's ugettext_lazy,content = str(the_string)
how to retrieve facebook friend's information with python-social-auth and django,"if social_user:
    pass"
reading and graphing data read from huge files,from collections import deque
optimized processing of very large files,"'BG2', 'ACS2', 'STD2', 'ERR2', 'CHI2', 'SNR2', 'SHARP2', 'ROUND2'"
"change saturation with imagekit, pil or pillow?",img2 = converter.enhance(0.5)
looping through multiple values in a column,"col2 = list(cytoolz.concat(c2))
np.stack([col1, col2]).ravel('F')"
python - access class variable from instance,"class RLCN:
    static_var = 5

def method1(self):
    RLCN.static_var += 1

def method2(self):
    pass"
pylons - how to get the current controller and action (current route)?,{url.environ['pylons.routes_dict']['action']}
preserving column order in python pandas dataframe,data = pd.read_csv(filename)
how to get names of all the variables defined in methods of a class,"['setUp', 'bar', 'baz', 'var1', 'var2', 'var3', 'var4']"
httperror 403 (forbidden) with django and python-social-auth connecting to google with oauth2,"SOCIAL_AUTH_GOOGLE_OAUTH2_IGNORE_DEFAULT_SCOPE = True
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile']
SOCIAL_AUTH_GOOGLE_PLUS_IGNORE_DEFAULT_SCOPE = True
SOCIAL_AUTH_GOOGLE_PLUS_SCOPE = ['https://www.googleapis.com/auth/plus.login',
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile']
SOCIAL_AUTH_GOOGLE_OAUTH2_USE_DEPRECATED_API = True
SOCIAL_AUTH_GOOGLE_PLUS_USE_DEPRECATED_API = True"
converting pil image to mimeimage,"im = Image.new('RGB', (200, 200))
memf = cStringIO.StringIO()
im.save(memf, 'JPEG')"
difficulty getting the item count for the combinations of list of items from python dictionary,"from functools import reduce
fs_cat = [{'cat': 66, 'count': 5, 'ids': [20, 21, 22, 23, 24]}, {'cat': 27,
    'count': 4, 'ids': [20, 22, 23, 24]}, {'cat': 29, 'count': 2, 'ids': [
    20, 24]}]
result = []
for n in range(1, len(fs_cat) + 1):
    for xs in itertools.combinations(fs_cat, n):
        cat = '&'.join(map(str, sorted(x['cat'] for x in xs)))
ids = sorted(reduce(operator.and_, (set(x['ids']) for x in xs)))
result.append({'cat': cat, 'count': len(ids), 'ids': ids})"
auto-creating related objects on model creation in django,"def save(self, *args, **kwargs):
    pass"
how do i iterate in a cascaded format (in a for loop) over a list of unknown length in python?,print(ii)
float must be a string or a number?,moneyx = float(money.read())
probability to z-score and vice versa in python,1.959963984540054
"a more complex version of ""how can i tell if a string repeats itself in python?""",regon = []
redirect user in python + google app engine,"class MainPage(webapp.RequestHandler):

    def get(self):
        ip = self.request.remote_addr"
best way to extract subset of key-value pairs from python dictionary object,"wanted_keys = ['l', 'm', 'n']
dict((k, bigdict[k]) for k in wanted_keys if k in bigdict)"
vectorizing a pandas dataframe for scikit-learn,df
scrapy from list to extract key or value,"images
list(map(lambda x: x['url'] + '/' + x['path'], images))
list(map(lambda x: x['checksum'], images))"
moving matplotlib legend outside of the axis makes it cutoff by the figure box,plt.draw()
what does double star followed by variable name mean in python?,"def foo(arg, **kwargs):
    pass"
how to straighten a rotated rectangle area of an image using opencv in python?,map_matrix_cv = cv.fromarray(mapping)
python custom iterator: close a file on stopiteration,"with open(self.path) as f:
    pass"
convert matplotlib data units to normalized units,"fig.add_axes(Bbox(fig_coords))
plt.show()"
matplotlib: contour plot with slider widget,"alpha_slider = Slider(alpha_axis, 'Amp', 0, 1, valinit=0.5)"
how to extract 128x128 icon bitmap data from exe in python,"libc.memcpy.argtypes = [ctypes.c_void_p, ctypes.c_void_p, ctypes.c_size_t]"
how to open this xml file to create dataframe in python?,"fast_iter(context, process_series)
with open(path, 'rb') as f:
    context = ET.iterparse(f, events=('end',), tag=
        '{http://www.federalreserve.gov/structure/compact/common}DataSet')
fast_iter(context, process_dataset)
df = pd.DataFrame(data, columns=columns)"
add new key value pair to existing firebase,"fireRef.child(1).set({'name': 'user2', 'age': '34'})"
fast queue of read only numpy arrays,"self.array_pool[i] = np.frombuffer(buf, dtype=self.dtype).reshape(self.shape)"
how can i send a message from a flask route to a socket using flask-socketio,"def socketlisten(address):
    associate_address_with_sid(address, request.sid)"
python: print a variable in hex,my_hex = my_string.decode('hex')
image smoothing in python,"plt.subplot(2, 1, 2)"
python to parse non-standard xml file,filename = datasrc.split('/')[-1]
how to profile exception handling in python?,NUMBER_OF_EXCEPTIONS += 1
python matching words with same index in string,"word_pairs = zip(alligned1.split(), alligned2.split())
for k, v in itertools.groupby(word_pairs, key=lambda pair: pair[0] == pair[1]):
    if k:
        words = [pair[0] for pair in v]
results.append(' '.join(words))
print(results)"
how to extract data from sql query and assign it to odoo class columns?,{'column1': 'value_column1'}
where do things go when i ‘print’ them from my django app?,"hdlr = logging.handlers.SysLogHandler(facility=logging.handlers.
    SysLogHandler.LOG_DAEMON)"
"django, filter by specified month and year in date range",Departure_Date.objects.all()
generate uml sequence diagrams with python or perl,draw.draw()
getting output of pybrain prediction as array,"numpy.array([network.activate(x) for x, _ in train])"
how to turn a string of letters embedded in squared brackets into embedded lists,"a = '[[a b] [c d] [e g]]'
[i.split() for i in re.findall('\\[([^\\[\\]]+)\\]', a)]"
tunneling httplib through a proxy,"conn = httplib.HTTPConnection(proxyHost, proxyPort)"
trim big log file,"file.seek(sequence_start, 0)"
how does numpy's indexing work in this scenario,data[idx == 0].shape
fetching tweets with hashtag from twitter using python,"print(tweet['id_str'], '\n', tweet['text'], '\n\n\n')"
how to get a fast lambda function from an sympy expression in 3 dimensions?,import sympy as sp
how to customise pandas date time stamp @ x-axis,formatter = dates.DateFormatter(date_fmt)
python iterate over the two lists while comparing items,y.remove(item)
how to convert listof list into single list without import,from itertools import chain
python string format() with dict with integer keys,"my_string = 'hello there {spam:s}'
d = {'spam': 'you'}"
how to run python unit tests in google app engine,index.yaml
getting output of pybrain prediction as array,"n = buildNetwork(d.indim, 4, d.outdim, bias=True)"
how do i remove rows from a numpy array based on multiple conditions?,data.remove(row)
how to build python c extension modules with autotools,"PYTHON_LIBS = '-lpython$PYTHON_VERSION'
PYTHON_CFLAGS = '-I$PY_PREFIX/include/python$PYTHON_VERSION'"
english verbs processing ending with 'e',from nltk.corpus import wordnet as wn
python: how to make an histogram with equally *sized* bins,numin = 0
find subset with k elements that are closest to eachother,"cl = closeness(diff[ind:ind + K - 1], K)"
fill countries in python basemap,"print(country.attributes['name_long'], next(earth_colors))"
how do i parse a string representing a nested list into an actual list?,mylist
sorting by date with a db in django,"class Meta:
    ordering = 'anniversary__date',"
python: recursively access dict via attributes as well as index access?,"def __setitem__(self, key, value):
    if isinstance(value, dict) and not isinstance(value, dotdictify):
        value = dotdictify(value)"
how to hide username/password in python codes?,"return ''.join(chr(ord(a) ^ ord(b)) for a, b in zip(text, infkey))"
enclose a variable in single quotes in python,"term = urllib.parse.quote(""'%s'"" % (term,))"
add params to given url in python,print(urlparse.urlunparse(url_parts))
find an element in a list of tuples,[item for item in a if item[0] == 1]
setting plot background colour in seaborn,"import seaborn as sns
import pandas as pd"
how to add clipboard support to matplotlib figures?,"fig = oldfig(*args, **kwargs)"
print multiple arguments in python,"print('Total score for {} is {}'.format(name, score))"
efficient lookup by common words,querylist.union(wordlists[wordno])
django: how to automatically change a field's value at the time mentioned in the same object?,"super(RaceModel, self).save(*args, **kwargs)"
call python from c++,"PyEval_InitThreads()
Py_Initialize()
PyEval_ReleaseLock()"
metaclass multiple inheritance inconsistency,"class MyObject(object, Normal):
    pass"
using a c function in python,"import ctypes
zelib = ctypes.CDLL('testlib.so')
zelib.multiplier(2, 3)
zelib.multiplier.restype = ctypes.c_float
zelib.multiplier.argtypes = [ctypes.c_float, ctypes.c_float]
zelib.multiplier(2, 3)"
looking for a better oop approach,"def refresh(self):
    self.balance = self._balance()"
best way to find the months between two dates,"assert diff_month(datetime(2010, 10, 1), datetime(2010, 9, 1)) == 1
assert diff_month(datetime(2010, 10, 1), datetime(2009, 10, 1)) == 12
assert diff_month(datetime(2010, 10, 1), datetime(2009, 11, 1)) == 11
assert diff_month(datetime(2010, 10, 1), datetime(2009, 8, 1)) == 14"
how to extract a string between 2 other strings in python?,"def foo(s, leader, trailer):
    end_of_leader = s.index(leader) + len(leader)
start_of_trailer = s.index(trailer, end_of_leader)
return s[end_of_leader:start_of_trailer]"
str to time in python,from datetime import datetime
how to use python requests to fake a browser visit?,"response = requests.get(url, headers=headers)"
how can i make a class property in python,"class Bar(object):
    pass"
what's the pythonic way to unite all the intersecting sets in a list?,"for final_set in intersections:
    pass"
what's the most memory efficient way to generate the combinations of a set in python?,"for rest in combinations(input_list[1:], acc):
    yield rest
acc += next_val
for rest in combinations(input_list[1:], acc):
    yield rest"
in my date time value i want to use regex to strip out the slash and colon from time and replace it with underscore,strftime('%m_%d_%y_%H_%M_%S')
python multiple inheritance from different paths with same method name,"print('A.foo()')


class B(FooBase):

    def foo(self):
        super(B, self).foo()
print('B.foo()')


class C(A, B):

    def foo(self):
        super(C, self).foo()"
repetitive code in unittest testcase,"def test_input02(self):
    self.run_input_output('02')"
numpy method to do ndarray to vector mapping as in matlab's delsq demo?,plt.show()
how to autoimport module in flask-migrate migration,from alembic import op
how to filter a dictionary by value?,invert[value].append(key)
python - speed up an a star pathfinding algorithm,return retracePath(current)
randomizing integer behavior,float(x) / float(x)
is there a way to store python objects directly in mongodb without serializing them,coll.insert({'bin-data': Binary(thebytes)})
fractions in python,print(n ** (1 / 3))
python remove set from set,set([2]) in a
"functions, callable objects, and how both are created in python",type(foo1)
"recommended usage of python dictionary, functions as values","CONVERSION_DICT = {'kelvin': lambda x: x - 273.15, 'romer': lambda x: (x - 
    7.5) * 40 / 21}

def convert_to_celsius_lambda_once(temp, source):
    return CONVERSION_DICT[source](temp)"
converting string to int using try/except in python,pass
"using twython to send a tweet, twitter api error","twitter = Twython(APP_KEY, APP_SECRET, OAUTH_TOKEN, OAUTH_TOKEN_SECRET)
twitter.update_status(status='Hello from Python! :D')"
saving a video capture in python with opencv : empty video,"cap = cv2.VideoCapture(0)
if not cap.isOpened():
    pass"
set values on the diagonal of pandas.dataframe,stacked = df.stack(dropna=False)
finding all keys in a dictionary from a given list quickly,"def way7(theList, theDict):
    return list(theDict.keys() & theList)"
"setupterm could not find terminal, in python program using curses","curses.echo()
curses.endwin()"
stripping duplicate words from generated text in python script,last = None
assigning a value to python list doesn't work?,"chars = ['a', 'b', 'c']
chars[3]"
finding and substituting a list of words in a file using regex in python,output = ''
running a process in pythonw with popen without a console,"def launchWithoutConsole(command, args):
    """"""Launches 'command' windowless and waits until finished""""""
startupinfo = subprocess.STARTUPINFO()
startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW
return subprocess.Popen([command] + args, startupinfo=startupinfo).wait()
if __name__ == '__main__':
    pass"
parsing json python,"json_string = """"""
{
    ""pk"": 1, 
    ""fa"": ""cc.ee"", 
    ""fb"": {
        ""fc"": """", 
        ""fd_id"": ""12345""
    }
}""""""
import json
data = json.loads(json_string)
if data['fa'] == 'cc.ee':
    pass"
python - selenium phantomjs - json error,raise ValueError('No JSON object could be decoded')
python requests fetch a file from a local url,"class LocalFileAdapter(requests.adapters.HTTPAdapter):
    pass"
use of input/raw_input in python 2 and 3,"a = input('enter :- ')
type(a)
a = eval(input('enter :- '))
type(a)"
"how can i implement a c++ class in python, to be called by c++?",Py_XDECREF(cls)
draw graph in networkx,g1 = nx.petersen_graph()
python - creating two lists from one randomly,testing = data[5:]
an example of calling aws rekognition http api from python,request_parameters = json.dumps(request_dict)
adding custom django model validation,"super(BaseModel, self).clean(*args, **kwargs)"
radar chart with multiple scales on multiple axes,ax.grid('off')
convert .rrd file to json in python,sys.stdout.write(']')
download big files via ftp with python,"strftime('%d-%m-%Y %H.%M'), myerror, file_size, downloaded.tell()"
python opencv color tracking,"upper_white = np.array([180, 25, 255])"
solving polynomial equations in python,"solve_poly_system([y ** 2 - x ** 3 + 1, y * x], x, y)"
going from string to base ten in python,"s = '1,0,1,1,0,0,1,0'"
r style data-axis buffer in matplotlib,"ax.margins(0.04)
data = list(range(1, 11))"
error while using multiprocessing module in a python daemon,pass
error on windows using session from appengine-utilities,"if type(rawdata) == type(''):
    self.__ParseString(rawdata)
else:
    self.update(rawdata)"
how to calculate the axis of orientation?,"plot_bar(3, x_bar, y_bar, angle, ax, 'ro-')"
dynamic url with cherrypy methoddispatcher,"def OPTIONS(self):
    cherrypy.response.headers['Access-Control-Allow-Credentials'] = True
cherrypy.response.headers['Access-Control-Allow-Origin'
    ] = cherrypy.request.headers['ORIGIN']
cherrypy.response.headers['Access-Control-Allow-Methods'] = 'GET, PUT, DELETE'
cherrypy.response.headers['Access-Control-Allow-Headers'
    ] = cherrypy.request.headers['ACCESS-CONTROL-REQUEST-HEADERS']


class Root(object):
    pass"
google protocol buffers huge in python,print(asizeof(d))
django: how to make a form with custom templating?,"class MyForm(forms.Form):

    def as_foobar(self):
        pass"
determine if a list is in descending order,"for i in range(len(A) - 1):
    if A[i] < A[i + 1]:
        pass"
is there a library for image warping / image morphing for python with controlled points?,"y_min = np.min(new_grid[:, :, (1)])"
how to get the real cube root of a negative number in python3?,"def cube(x):
    if x >= 0:
        pass"
matplotlib 3d scatter plot with color gradient,"p3d = ax3D.scatter(x, y, z, s=30, c=col, marker='o')
plt.show()"
how to set attributes using property decorators?,"@property
def x(self):
    """"""I'm the 'x' property.""""""
return self._x

@x.setter
def x(self, value):
    self._x = value"
"pygame: detect joystick disconnect, and wait for it to be reconnected","pygame.joystick.init()
joystick_count = pygame.joystick.get_count()
for i in range(joystick_count):
    joystick = pygame.joystick.Joystick(i)
joystick.init()
if not joystick_count:
    if not discon:
        print('reconnect you meat bag')
discon = True
clock.tick(20)
check_pad()"
how to generate random colors in matplotlib?,"plt.show()
if __name__ == '__main__':
    main()"
python - how to pipe the output using popen?,"while True:
    pass"
python pandas how to assign groupby operation results back to columns in parent dataframe?,"df = pandas.DataFrame({'month': np.random.randint(0, 11, 100), 'A': np.
    random.randn(100), 'B': np.random.randn(100)})"
set and zip questions with python,"a = [1, 2]
b = [3, 4]"
"python: run a process with timeout and capture stdout, stderr and exit status","deadline = time.time() + timeout
while time.time() < deadline and proc.poll() == None:
    time.sleep(poll_seconds)
if proc.poll() == None:
    if float(sys.version[:3]) >= 2.6:
        proc.terminate()
raise Timeout()
stdout, stderr = proc.communicate()
return stdout, stderr, proc.returncode
if __name__ == '__main__':
    print(run(['ls', '-l']))
print(run(['find', '/'], timeout=3))"
python equivalent of mathematica's sow/reap,return output[-1]
"following links, scrapy web crawler framework","for itemLink in hxs.select('//a[@class=""title""]/@href').extract():
    itemLink = urlparse.urljoin(response.url, itemLink)"
how to make a private download area with django?,"response['Content-length'] = os.stat('debug.py').st_size
return response"
how can i see all packages that depend on a certain package with pip?,REQUIRES = django
two assignments in single python list comprehension,"return x, y

def f2(aRange):
    x, y = zip(*[(2 * i, 3 * i) for i in aRange])
return x, y

def f3(aRange):
    x, y = zip(*((2 * i, 3 * i) for i in aRange))
return x, y

def f4(aRange):
    x = []
y = []
for i in aRange:
    x.append(i * 2)"
string format with optional dict key-value,info['greetings'] = 'Hii'
capture keyboardinterrupt in python without try-except,eval(input())
how to make python class support item assignment?,"class ObjectChild(collections.MutableMapping):

    def __init__(self, name):
        self['name'] = name"
list all third party packages and theirselves functions used in a python file,"tree.body
tree.body[0].names[0].name"
vector assign in cython,"from Cython.Build import cythonize
setup(ext_modules=cythonize('test_vector.pyx'))"
is it possible to capture any traceback generated by a python application?,"sys.excepthook = custom_excepthook
raise RuntimeError('I want to report exception here...')"
cython: how to move large objects without copying them?,"memset(d, 0, sizeof(d))"
initialize all the classes in a module into nameless objects in a list,"import rule
rule_list = []"
getting a boundary of an item from another list,"upper, lower = t, tlist[i - 1]"
scrapy: how to manually insert a request from a spider_idle event callback?,"class FooSpider(BaseSpider):

    def __init__(self, *args, **kwargs):
        super(FooSpider, self).__init__(*args, **kwargs)
dispatcher.connect(self.dont_close_me, signals.spider_idle)

def dont_close_me(self, spider):
    if spider != self:
        return
self.crawler.engine.crawl(self.create_request(), spider)
raise DontCloseSpider('..I prefer live spiders.')"
python csv into dictionary,reader = csv.reader(open('copy-john.csv'))
merging two dictionaries of lists with the same keys in python,strings_and_Ns[skey] = [''.join(next(it) for it in itertools.cycle(iters))]
issues translating custom discrete fourier transform from matlab to python,"i = 1j
W = np.exp(-2 * math.pi * i * np.dot(f.reshape(N, 1), t.reshape(1, N)))
X = np.dot(W, x.reshape(N, 1))
out = X.reshape(f.shape).T
plt.plot(f, out, 'ro')"
increment counter for every access to a flask view,"app = Flask(__name__)

@app.route('/')
def index():
    with counter.get_lock():
        counter.value += 1"
pyqt4: create a custom dialog that returns parameters,self.setupUi(self)
trying to understand python with statement and context managers,"class Mgr(object):

    def __enter__(self):
        pass

def __exit__(self, ext, exv, trb):
    if ext is not None:
        print('no not possible')
print('OK I caught you')
return True
with Mgr():
    name = 'rubicon' / 2"
how do i calculate the numeric value of a string with unicode components in python?,val += cval
how to programmatically generate deploy.txt for caffe in python,"with open('net_deploy.prototxt', 'w') as f:
    pass"
replace commas enclosed in curly braces,"text = ""a,b,{'c','d','e','f'},g,h""
print(''.join(map(str, map(replace_comma_in_curly_brackets, text))))"
how to log in to a website using installed twill?,"self.a.fv('2', 'userlogin', '')
t = browser()
t.slashdot('username', 'password')"
python map list of strings to integer list,"k = [1, 1, 2, 3]"
how do i list all instantiated objects in python?,"[o for o in gc.get_objects() if isinstance(o, Foo)]"
selenium - click at certain position,"driver = webdriver.Firefox()
driver.get('http://www.google.com')
el = driver.find_elements_by_xpath(""//button[contains(string(), 'Lucky')]"")[0]"
how do i find out what key failed in python keyerror?,"def POIJSON2DOM(location_node, POI_JSON):
    man_JSON = POI_JSON.get('FastestMan', 'No Data for fastest man')"
pandas dataframe columns scaling with sklearn,"dfTest = pd.DataFrame({'A': [14.0, 90.2, 90.95, 96.27, 91.21], 'B': [103.02,
    107.26, 110.35, 114.23, 114.68], 'C': ['big', 'small', 'big', 'small',
    'small']})"
how to speed up one hot encoder code,"tpp.append(timeit('f(a)', number=100, globals={'f': pp, 'a': data}))"
how do i render jinja2 output to a file in python instead of a browser,"output_from_parsed_template = render_template('test.html', foo='Hello World!')
with open('some_new_file.html', 'wb') as f:
    f.write(output_from_parsed_template)
return output_from_parsed_template"
python: using namedtuple._replace with a variable as a fieldname,this_prize
numpy: delete column from very big memory mapped numpy array,"fp[(i), :] = fp[(i + 1), :]"
preferred file line by line read idiom in python,"def with_iter(iterable):
    pass"
get function callers' information in python,return a
access to variables from outside function,locals = {'y': 5}
can pyyaml parse iso8601 dates?,"import yaml

def timestamp_constructor(loader, node):
    return dateutil.parser.parse(node.value)"
sparse assignment list in python,"print(l[5])
l[4] = 22
l
len(l)
for i in l:
    pass"
tensorflow rnn with varying length sentences,"feed = {seq_length: 20}
sess.run(outputs, feed_dict=feed)"
shuffling a list of objects in python,"from random import shuffle
x = [[i] for i in range(10)]
shuffle(x)"
obtaining length of list as a value in dictionary in python 2.7,"lengths = {key: len(value) for key, value in d.items()}"
python parallel execution - how to debug efficiently?,logging.exception(e)
elegant way of combining files - python,"form = ', '.join('{}' for f in files) + '\n'"
how to set some xlim and ylim in seaborn lmplot facetgrid,"axes[0, 1].set_ylim(0)"
matlab-style find() function in python,"array([14, 13, 1, 15, 8, 0, 17, 11, 19, 13])"
get root domain of link,"hostname = urlparse.urlparse(url).hostname.split('.')
hostname = '.'.join(len(hostname[-2]) < 4 and hostname[-3:] or hostname[-2:])"
python : compare two files with different line endings,"l2 = f2.readline()
if l1 != l2:
    return False
return True"
"parsing ""from"" addresses from email text","from email.utils import parseaddr
parseaddr('From: vg@m.com')
parseaddr('From: Van Gale <vg@m.com>')
parseaddr('    From: Van Gale <vg@m.com>   ')
parseaddr('blah abdf    From: Van Gale <vg@m.com>   and this')"
setup_requires with cython?,"try:
    from Cython.Build import cythonize
except ImportError:
    pass"
how can i make this repeat forever?,"import time
while True:
    pass"
how would i specify a new line in python?,"file.write('\n')
file.write(line3)
file.write('\n')"
storing pure python datetime.datetime in pandas dataframe,import matplotlib.pyplot as plt
pandas: how do i assign values based on multiple conditions for existing columns?,"def f(x):
    if x['gender'] == 'male' and x['pet1'] == x['pet2']:
        pass"
uploading a csv file with a fixed format,"csvfile = open('example.csv', 'rb')
dialect = csv.Sniffer().sniff(csvfile.read(1024))"
unable to use google-cloud in a gae app,"class MainPage(webapp2.RequestHandler):

    def get(self):
        self.response.headers['Content-Type'] = 'text/plain'"
binning data in python with scipy/numpy,import numpy as np
"histogram in matplotlib, time on x-axis","ax.hist(mpl_data, bins=50, color='lightblue')
ax.xaxis.set_major_locator(mdates.YearLocator())
ax.xaxis.set_major_formatter(mdates.DateFormatter('%d.%m.%y'))
plt.show()"
python: lambda function in list comprehensions,"a = [(lambda x: x * i) for i in (1, 2)]"
"python sqlalchemy - ""mysql server has gone away""","db_engine = create_engine(DATABASE_CONNECTION_INFO, pool_size=100,
    pool_recycle=3600)"
method to uniformly randomly populate a disk with points in python,"points.append((x, y))"
how to select observations of df using datetime index atributes in pandas?,df.loc[df[1:][df.index.month[:-1] != df.index.month[1:]].index]
manually validate a django session id is currently authenticated,engine = import_module(settings.SESSION_ENGINE)
retry celery tasks with exponential back off,import random
python trying to place keyword arguments after *args,"kwargs['bar'] = kwargs.get('bar', 'foo')"
adding a 1-d array to a 3-d array in numpy,"np.zeros((6, 9, 20)) + np.array([1, 2, 3, 4, 5, 6, 7, 8, 9]).reshape((1, 9, 1))"
pandas: aggregate based on filter on another column,"df.groupby(['Month', 'Fruit']).sum().unstack(level=0)"
"how can i find all the subsets of a set, with exactly n elements?","xs = list(iterable)
return chain.from_iterable(combinations(xs, n) for n in range(len(xs) + 1))"
how to create multidimensional array with numpy.mgrid,"n_bins = 100 * np.ones(D)
bounds = np.repeat([(0, 1)], D, axis=0)"
"python, want logging with log rotation and compression",f_out.close()
how can i use a list comprehension to extend a list in python?,"accumulationList = []
for x in originalList:
    accumulationList.extend(doSomething(x))"
django: get current user in model save,"_requests = {}

def get_username():
    t = current_thread()
if t not in _requests:
    return None
return _requests[t]


class RequestMiddleware(object):

    def process_request(self, request):
        _requests[current_thread()] = request"
"how to show continuous real time updates like facebook ticker, meetup.com home page does?","def open(self):
    pass"
python tkinter: make any output appear in a text box on gui not in the shell,top.mainloop()
"how to create a composite strategy, using multiple instruments, in pyalgotrade?","def onBars(self, bars):
    pass"
how to calculate a partial area under the curve (auc),"auc_from_fpr_tpr(fpr, tpr), auc_from_fpr_tpr(fpr, tpr, True)"
how to get rows which match a list of 3-tuples conditions with sqlalchemy,"id = Column(Integer(), primary_key=True)"
set partition with constraints in python,C = [x for x in range(10) if x not in B1 + B2]
attribute error when extracting data from a url with a zip file,"my_url = 'http://www.bankofcanada.ca/stats/results/csv'
data = urllib.parse.urlencode({'lookupPage': 'lookup_yield_curve.php',
    'startRange': '1986-01-01', 'searchRange': 'all'})"
python - calling a function from within itself,"if n == 1:
    return n
else:
    return n * recur_factorial(n - 1)"
encoding in python with lxml - complex solution,"from lxml import html
content = urllib.request.urlopen(url).read()"
how to update mysql with python where fields and entries are from a dictionary?,"cur.execute(sql, list(d.values()))"
python plot: how to remove grid lines not within the circle?,"circle = plt.Circle((15, 15), radius=15, fc='w')"
finding index of maximum element from python list,"from functools import reduce
maxValue, maxIndex = reduce(lambda p1, p2: max(p1, p2), ((x, i) for i, x in
    enumerate(yourList)))"
how to sort multidimensional array by column?,"lst = [['John', 2], ['Jim', 9], ['Jason', 1]]
lst.sort(key=itemgetter(1))"
setting matplotlib colorbar range,"self.cbar = self.fig.colorbar(CS1, cax=self.fig.axes[1])
self.cbar.set_clim(self.zmin, self.zmax)"
how to specify local destination folder when retrieving files from ftp,print('*** Logged in successfully')
drawing a graph with networkx on a basemap,plt.title('How to get from point a to point b')
python - find incremental numbered sequences with a list comprehension,"for s in seq:
    if not result or s != result[-1][-1] + 1:
        pass"
"in python's pil, how do i change the quality of an image?","from PIL import Image
im = Image.open('C:\\Users\\Public\\Pictures\\Sample Pictures\\Jellyfish.jpg')"
python : how to find accuracy result in svm text classifier algorithm for multilabel class,from sklearn.metrics import accuracy_score
passing a list through python to c++,"import get_dir_list
import os
get_dir_list.get_dir_list(os.listdir('.'))"
sympy: generate figure with multiple subplots,sympy_p1 = sympy.plot(foo)
send and receive messages via (libpurple) messenger protocols,"print('Connected to the pidgin DBus.')
for conv in purple.PurpleGetIms():
    purple.PurpleConvImSend(purple.PurpleConvIm(conv), 'Ignore this message.')
else:
    print('Could not find piding DBus service, make sure Pidgin is running.')"
count the frequency that a value occurs in a dataframe column,a
how to adress data imported with pandas?,"df = pd.DataFrame({'a': [1]})
for col in df.columns:
    locals().update({col: df[col]})
print(a)"
python - pyqt - qtable widget - adding rows,"with open('data') as input:
    for line in input:
        entries.append(line.strip().split('\t'))
tableWidget.setRowCount(len(entries))
tableWidget.setColumnCount(len(entries[0]))
for i, row in enumerate(entries):
    for j, col in enumerate(row):
        pass"
"django, updating a user profile with a modelform","def user_profile(request):
    success = False
user = User.objects.get(pk=request.user.id)"
pyside how to get qwebinspector same window,layout = QtGui.QVBoxLayout(self)
convert a number to a list of integers,"num = 123
lst = map(int, str(num))"
making a matrix square and padding it with desired value in numpy,"padded[0:m.shape[0], 0:m.shape[1]] = m"
how to join list of strings?,"def joinList(l, c):
    return c.join(l)"
python fails to open 11gb csv in r+ mode but opens in r mode,"f
f.buffer"
"in python, how to list all characters matched by posix extended regex `[:space:]`?","import re
re.findall('\\s', s)"
jinja2: how to make it fail silently like djangotemplate,"class UndefinedSilently(Undefined):
    __unicode__ = silently"
sort a list of tuples depending on two elements,"sorted(unsorted, key=lambda element: (element[1], element[2]))"
geojson data not displaying in python folium map,m.choropleth(open('census_tracts_2010.geojson'))
logging from django under uwsgi,logger.debug('The Great Ragu has taken ill!')
"weighted average, grouped by day, of 2 columns based on criteria in 3rd column of pandas dataframe","d1 = df.query('Col1 != ""A""').drop('Col1', 1)
d2 = d1.assign(Prod=d1.prod(1)).groupby(pd.TimeGrouper('D'))['Col2', 'Prod'
    ].sum()"
define a class with optional argument in python,"class class1:

    def setdata(self, value1, value2=456):
        self.data = value1 + value2

def display(self):
    pass"
issues trying to ssh into a fresh ec2 instance with paramiko,"counter = 0
while counter < 70:
    time.sleep(1)
conn.close()
conn = boto.ec2.connection.EC2Connection(ec2auth.access_key, ec2auth.
    private_key)
startedinstance = conn.get_all_instances(instance_ids=str(newinstance.
    instances[0].id))[0]
counter = counter + 1
if str(startedinstance.instances[0].state) == 'running':
    break
if counter == 69:
    print('Timed out waiting for instance to start.')
print('Added: ' + startedinstance.instances[0].tags['Name'
    ] + ' ' + startedinstance.instances[0].public_dns_name)"
beautifulsoup: find the n-th element's sibling,tag.findNextSibling(text=None)
listing all permutations of a string/integer,"GetPer(list, k + 1, m)"
how to inflate a partial zlib file,decompressor.decompress(part)
querystring array parameters in python using requests,print(r.url)
python: building an lru cache,"for c in 'abcdecaeaa':
    pass"
"converting a list into comma-separated string with ""and"" before the last item - python 2.7","def coma(lst):
    pass"
subset sum recursively in python,"if sum(subset) == target:
    pass"
pointers and arrays in python ctypes,ptr
extract usercertificate from pkcs7 envelop in python,"output = check_output(cmd, shell=True, stderr=STDOUT).lower()"
how to use virtualenvwrapper in supervisor?,"startsecs = 5
stopwaitsecs = 10"
python - conversion of list of arrays to 2d array,"A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
A = np.array(A)"
"django, how to generate an admin panel without models?",objects = QuerysetMock()
"in python, when should i use a function instead of a method?","if o is duck:
    o.die()"
declaring members only in constructor,"B = MyClass()
A.my_member.append(1)"
anyone know a great sparse one dimensional array library in python?,"x.append(5)
y = x[4:-234234]"
python: how to random shuffle a list where each variable will end up in a new place,"random.shuffle(new_lst)
for old, new in zip(lst, new_lst):
    pass"
how to suppress console output in python?,"with open(os.devnull, 'w') as devnull:
    pass"
how to draw images in tkinter window,"can = tkinter.Canvas(tk)
can.pack()
img = tkinter.PhotoImg('<path/to/image_file>.gif')
can.create_image((x_coordinate, y_coordinate), img)"
how to convert this confusing line of python into r,"def func(x):
    if x['workingday'] == 1 and x['humidity'] >= 60:
        return 1"
python code for counting number of zero crossings in an array,"my_list = [80.6, 120.8, -115.6, -76.1, 131.3, 105.1, 138.4, -81.3, -95.3, 
    89.2, -154.1, 121.4, -85.1, 96.8, 68.2]
(np.diff(np.sign(my_list)) != 0).sum()"
overriding __bases__ in a metaclass,"def __bases__(cls, value):
    print('Setting __bases__ via Meta.__bases__')"
getting github individual file contributors,"cmd = 'git shortlog -s -n'
os.chdir('C:\\Users\\DhruvOhri\\Documents\\COMP 6411\\pygithub3-0.3')
os.system('git clone https://github.com/poise/python.git')"
high-speed alternatives to replace byte array processing bottlenecks,"return np.unpackbits(ProcessedMatrix[13::14]).reshape(256, 256)"
how can i get the executable's current directory in py2exe?,"print('using sys.argv[0]:', repr(os.path.dirname(os.path.realpath(sys.argv[0]))
    ))"
all possible permutations of a set of lists in python,"list(itertools.product(*l))
l = [[1, 2, 3], [4], [5, 6], [7, 8]]
list(itertools.product(*l))"
how can i format strings to query with mysqldb in python?,"cur = conn.cursor()
cur.execute(query, (limit1, limit2))"
how to add index into a dict,d[x].append(i)
xlrd/python: reading excel file into dict with for-loops,"yield dict(zip(header, row_cell))"
how do i find largest valid sequence of parentheses and brackets in a string?,"def longest_valid(s):
    match = [0] * (len(s) + 1)"
access low and high settings of an ets range attribute?,foo.traits()['bar'].trait_type
correct comment scanning with pyparsing,--Commentasfkjaskfj
combine multiple time-series rows into one row with pandas,print(df1)
matplotlib animations - how to export them to a format to use in a presentation?,import matplotlib.pyplot as plt
fast way to read from stringio until some byte is encountered,datalist.append(chunk[:i + 1])
'isomorphic' comparison of networkx graph objects instead of the default 'address' comparison,"class myGraph(nx.Graph):

    def __eq__(self, other):
        return nx.is_isomorphic(self, other)

def __hash__(self):
    return hash(tuple(sorted(self.degree().values())))
if __name__ == '__main__':
    G1 = myGraph([(1, 2)])
G2 = myGraph([(2, 3)])
G3 = myGraph([(1, 2), (2, 3)])
print(G1.__hash__(), G1.edges())"
how to create multiple series scatter plot with connected points using seaborn?,"g.map(plt.plot, 'x', 'y')"
create a 100 % stacked area chart with matplotlib,"ax.margins(0, 0)"
(python) how to get diagonal(a*b) without having to perform a*b?,"a = np.random.randint(0, 10, (3, 3))
b = np.random.randint(0, 10, (3, 3))
a
b
a.dot(b)
np.diagonal(a.dot(b))
np.einsum('ij,ji->i', a, b)"
check if a function is a method of some object,"hasmethod(bstr, 'decode')"
python - running a program increasingly faster,"import numpy as np
print(0)"
how to retrieve subset in partitioning algorithm?,list_A.append(arr[current_set])
how to split a python module into multiple files?,from modA2 import A2
data frame of tfidf with python,"X = vect.fit_transform(df.pop('Phrase')).toarray()
r = df[['Sentiment']].copy()
del df
df = pd.DataFrame(X, columns=vect.get_feature_names())
del X
del vect
r.join(df)"
matrix multiplication in python?,cols_A = len(A[0])
plotting a line over several graphs,fig = plt.figure()
efficiently build a graph of words with given hamming distance,"for j in range(len(word)):
    pass"
how can i implement a posix file descriptor in python 3?,"logging.basicConfig(filename=LOG_FILENAME, level=logging.DEBUG)"
"how can i parse html with html5lib, and query the parsed html with xpath?",tree = html.fromstring(text)
intersection of two linestrings geopandas,"columns_data.append((n, el))"
how can i use the django orm in my tornado application?,messages = Message.objects.all()
change database (postgresql) in python using psycopg2 dynamically,"for row in cur.fetchall():
    pass"
is there a way to find out the name of the file stdout is redirected to in python,import os
remove rows from data: overlapping time intervals?,"machine = machine[1],"
how to change the datetime format in pandas,DOB
python example of joe's erlang websocket example,return client.send(str)
pandas dataframe performance,"25.5416321754
value = df.loc[5]
5.68071913719"
"find the maximum x,y value fromn a series of images","max_ = np.zeros((4000, 4000))"
writing to csv with python adds blank lines,"with open('test1.csv', 'wb') as testfile:
    csv_writer = csv.writer(testfile)
for y in range(length):
    csv_writer.writerow([x[y] for x in hello])"
how to locate a function in a python module tree?,"if hasattr(package, name):
    return package"
calculating cumulative minimum with numpy arrays,"nums = np.array([5.0, 3.0, 4.0, 2.0, 1.0, 1.0, 2.0, 0.0])
oneSquare = np.ones((nums.size, nums.size))
A = nums * np.tril(oneSquare)"
cx_oracle: how do i iterate over a result set?,"row = curs.fetchone()
while row:
    print(row)
row = curs.fetchone()"
how to get the red channel color space of an image?,"im_color = cv2.applyColorMap(img, cv2.COLORMAP_HSV)
cv2.imshow('mapped_image', im_color)
cv2.waitKey(0)"
is this a valid use case for a context manager?,"t.setMessage('Doing something')
for x in range(100):
    do_something()
t.setProgress(x + 1)"
"numpy, mapping one array to parts of another","a = np.arange(8 * 6 * 3).reshape((8, 6, 3))
l = np.array([[0, 0], [0, 1], [1, 1]])
b = np.array([[0, 0, 5], [0, 1, 0], [1, 1, 3]])
a[tuple(l.T)] = b
print(a[0, 0])
print(a[0, 1])
print(a[1, 1])"
how to check in python that at least one of the default parameters of the function specified,"f(arg_a=0)
f(arg_b=0)"
how should i plot a scatterplot with categorical data using bokeh and pandas?,"df = pd.DataFrame(data)
merchant_chats_made = list(df[df['Merchant'] == 1]['Num of Chats Made'])"
preserving column order in the pandas to_csv method,print(pd.DataFrame(d))
how to split strings into text and number?,r = re.compile('([a-zA-Z]+)([0-9]+)')
how to find the smallest number in a text file (python 2.5),num = int(next(data_file))
tensorflow gradients: without automatic implicit sum,"import tensorflow as tf

def twodtensor2list(tensor, m, n):
    s = [[tf.slice(tensor, [j, i], [1, 1]) for i in range(n)] for j in range(m)
        ]
fs = []
for l in s:
    fs.extend(l)
return fs

def grads_all_comp(y, shapey, x, shapex):
    yl = twodtensor2list(y, shapey[0], shapey[1])
grads = [tf.gradients(yle, x)[0] for yle in yl]
gradsp = tf.pack(grads)
gradst = tf.reshape(gradsp, shape=(shapey[0], shapey[1], shapex[0], shapex[1]))
return gradst"
is there a pythonic way to skip decoration on a subclass' method?,"def login_required(self, f):
    pass"
how to add a location filter to tweepy module,"sapi = tweepy.streaming.Stream(auth, CustomStreamListener())
sapi.filter(locations=[-6.38, 49.87, 1.77, 55.81])"
make sphinx generate rst class documentation from pydoc,"self.directive.result.append(self.indent + line, source, *lineno)"
make os open directory in python,os.startfile(filename)
django parsing templates to extract variables,"template_source = template_source.replace('\\}\\}', '{{')
t = Template(template_source)"
estimate phonemic similarity between two words,"s2nospaces = map(lambda x: x.replace(' ', ''), s2)"
matplotlib cursor value with two axes,"self.dot.set_offsets((x, y))"
"get email unread content, without affecting unread state","for num in data[0].split():
    typ, data = M.fetch(num, '(BODY.PEEK[])')
print('Message %s\n%s\n' % (num, data[0][5]))
M.close()
M.logout()"
remove transparency/alpha from any image using pil,"bg = Image.new('RGBA', im.size, bg_colour + (255,))
bg.paste(im, mask=alpha)"
how to access external object within event handler?,frame.pack()
encrypting a file with rsa in python,"output.write(str(len(encrypted_secret_key)) + '\n')
output.write(encrypted_secret_key)"
logging training and validation loss in tensorboard,"for step in range(NUM_STEPS):
    if step % LOG_PERIOD == 0:
        train_acc, train_summ = sess.run([accuracy, training_summary],
            feed_dict={images: training_set.images, labels: training_set.
            labels})
writer.add_summary(train_summ, step)"
remove more than one key from python dict,"x = {'a': 5, 'b': 2, 'c': 3}"
how to capture a traceback in gevent,gl = gevent.spawn(fail)
merge 2 dataframes with same values in a column,print(df1.date.dtypes)
jinja2: change the value of a variable inside a loop,"def set_foo_is_true(local_vars):
    pass"
writing/parsing a fixed width file using python,"fmt % (1, 'ONE', 2)"
how to randomly assign values row-wise in a numpy array,"arr2d = np.zeros((10, 10))
idx = np.random.rand(10, 10).argsort(1)[:, :3]
arr2d[np.arange(10)[:, (None)], idx] = 1
arr2d
arr2d.sum(1)"
"finding unusual value in an array, list",std = np.std(stats)
how to break nested for loop in python?,break
initialise numpy array of unknown length,a.append(x)
pyserial problem with arduino - works with the python shell but not in a program,ser.write('H')
how to use classes derived from python's list class,"l.add(1, 2, 'test')
l"
python logging with context,"class MyClass:
    account_name = 'bob'"
finding multiple repetitions of smaller lists in a large cumulative list,indices.append(idx)
count repeated occurence of a substring in string,"print(len(list(group)), key)"
python: divide each row of a dataframe by another dataframe vector,"df_a = pd.DataFrame(np.random.rand(3, 5), index=['x', 'y', 't'])
df_b = pd.DataFrame(np.random.rand(2, 5), index=['z', 't'])
df_a.div(df_b)"
break values of one column into two columns,writer.close()
using custom methods in filter with django-rest-framework,return queryset
python: how do you store a sparse matrix using python?,"arr = list(arr)
mat = lil_matrix((len(arr), len(arr)))"
python lists with scandinavic letters,"with open('example.txt', 'r') as f:
    pass"
django: how to use settings in templates?,"class YourView(DetailView):

    def get_context_data(self, **kwargs):
        context = super(YourView, self).get_context_data(**kwargs)"
how can i convert a binary to a float number,return s[:-1].lstrip('0') + s[0]
attempting to control shift register with nodejs lib gpio doesnt work on raspberry pi,console.log('setting latch')
how to fill  specific positional arguments with partial in python?,list(gargs[self.max_gindex + 1:])
efficiently find the range of an array in python?,"themin = arr[0]
themax = arr[0]"
multi nested dictionary from tuples in python,"return {self.name: d}
list_of_tuples = [('0', '1'), ('1', '1.1'), ('1', '1.2'), ('1', '1.3'), (
    '1', '1.4'), ('0', '3'), ('3', '3.1'), ('3', '3.2'), ('3', '3.3'), ('3',
    '3.4'), ('3', '3.5'), ('0', '4'), ('4', '4.1'), ('4', '4.2'), ('4',
    '4.3'), ('4', '4.4'), ('4', '4.5'), ('4', '4.6'), ('4', '4.7'), ('4',
    '4.8'), ('4', '4.9'), ('0', '5'), ('5', '5.1'), ('5', '5.2'), ('5',
    '5.3'), ('5', '5.4'), ('0', '6'), ('6', '6.1'), ('6', '6.2'), ('6',
    '6.3'), ('6', '6.4'), ('6', '6.5'), ('0', '7'), ('7', '7.1'), ('7',
    '7.2'), ('7', '7.3'), ('7.3', '7.3.1'), ('7.3', '7.3.2'), ('7.3',
    '7.3.3'), ('0', '8'), ('8', '8.1.1'), ('8', '8.1.2'), ('8', '8.2'), (
    '0', '9'), ('9', '9.1'), ('9', '9.2'), ('0', '10'), ('10', '10.1'), (
    '10', '10.2'), ('10', '10.3'), ('10.3', '10.3.2'), ('10.3', '10.3.3'),
    ('10.3', '10.3.4'), ('10.3', '10.3.5'), ('10.3', '10.3.6')]
root = Tree('0')
curr = root
for parent, child in list_of_tuples:
    curr = curr.add(parent, child)
print(root.dictify())"
arrow animation in python,"'alpha', 'hatch', 'axes', 'lw', 'path_effects', 'visible', 'label'"
"issues with try/except, attempting to convert strings to integers in pandas data frame where possible",df[col] = column
pythonic way of comparing all adjacent elements in a list,"while found1:
    found1 = False
for i, j in enumerate(range(1, len(A))):
    if A[i] < A[j]:
        A[i], A[j] = A[j], A[i]
found1 = True
print(A)"
pass a 2d numpy array to c using ctypes,printf('\n')
escape string python for mysql,print('item: ' + elements[0])
"python current time in a city and state, or country","utc_dt = datetime.datetime(2002, 10, 27, 6, 0, 0, tzinfo=utc)
eastern = pytz.timezone('US/Eastern')
loc_dt = utc_dt.astimezone(eastern)
fmt = '%Y-%m-%d %H:%M:%S %Z%z'
loc_dt.strftime(fmt)"
defining relationships across multiple models - django,"results = Result.objects.all()
for result in results:
    pass"
concurrency control in django model,"class ConcurrentModel(models.Model):
    _change = models.IntegerField(default=0)"
excluding primary key in django dumpdata with natural keys,"some_objects = MyClass.objects.all()
s = serializers.serialize('json', some_objects, use_natural_keys=True)"
"python script to loop through all files in directory, delete any that are less than 200 kb in size",os.remove(fullpath)
scroll backwards and forwards through matplotlib plots,fig = plt.figure()
how to create a manhattan plot with matplotlib in python?,"for i in range(1, 11):
    plt.plot(g[abs(g - i) < 1], p[abs(g - i) < 1], ls='', marker='.')
plt.show()"
retrieving current url from firefox with python,import telnetscript
missing scheme in request url,"item['header'] = sel.xpath('//td[@valign=""center""]/h1/text()')"
pandas date_parser function for year:doy:sod format,"def date_parser(date_string):
    date = dt.datetime.strptime(date_string[:6], '%y:%j')
seconds = dt.timedelta(seconds=int(date_string[7:]))
return date + seconds"
how to maintain state in python without classes?,try_match = re.compile('sldkjlsdjf').match
retrieving all cookies in python,"for cookie in cj:
    pass"
"with python's optparse module, how do you create an option that takes a variable number of arguments?",del parser.rargs[:len(args)]
how would you translate this from perl to python?,print(uniqify(2))
"how to change the user and group permissions for a directory, by name?","def chown(path, user=None, group=None):
    """"""Change owner user and group of the given path.
    user and group can be the uid/gid or the user/group names, and in that case,
    they are converted to their respective uid/gid.
    """"""
if user is None and group is None:
    raise ValueError('user and/or group must be set')
_user = user
_group = group
if user is None:
    _user = -1
elif isinstance(user, str):
    _user = _get_uid(user)
if _user is None:
    raise LookupError('no such user: {!r}'.format(user))
if group is None:
    _group = -1
elif not isinstance(group, int):
    _group = _get_gid(group)
if _group is None:
    raise LookupError('no such group: {!r}'.format(group))
os.chown(path, _user, _group)"
how to overload print function to expand its functionality?,"self.f = open(f, 'w')"
reportlab: how to add a footer to a pdf file,self.setLineWidth(0.5)
python re: storing multiple matches in variables,"match = regex.match('bunch(oranges, bananas, apples)')"
string identity comparison in cpython,"y = np.array(['s'], dtype='|S1')"
how to paginate in flask-sqlalchemy for db.session joined queries?,"if not items and page != 1 and error_out:
    abort(404)"
how can i import r dataframes into pandas?,"DF = pd.DataFrame({'val': [1, 1, 1, 2, 2, 3, 3]})
r_DF = com.convert_to_r_dataframe(DF)
print(pd.DataFrame(com.convert_robj(r_DF)))"
pivot irregular dictionary of lists into pandas dataframe,yield [row] + [(col in values) for col in cols]
halftone images in python,cmyk = []
using r soap (ssoap) to retrieve data / scrape,library(SSOAP)
how to monitor events from workers in a celery-django application?,time.sleep(self.interval)
excel solver in python,"def readCsvFile(fname):
    with open(fname, 'r') as inf:
        return list(csv.reader(inf))"
how to calculate gradients in a numerically stable fashion,"@function.Defun(tf.float32, tf.float32, tf.float32)
def newDivGrad(x, y, grad):
    return tf.reciprocal(y) * grad, -tf.div(tf.div(x, y), y) * grad

@function.Defun(tf.float32, tf.float32, grad_func=newDivGrad)
def newDiv(x, y):
    return tf.div(x, y)"
how to prevent python requests from percent encoding my urls?,"s.get(""http://somesite.com/an,url,with,commas,that,won't,be,encoded."")"
how to reverse tuples in python?,"y = reversed(x)
tuple(y)"
how to read a big binary file and split its content by some marker,result = []
parsing web page in python using beautiful soup,': Francja'.lstrip(': ')
get all global variables/local variables in gdb's python interface,"print('{} = {}'.format(name, symbol.value(frame)))"
getting next variable in a for loop,it = iter(it)
split filenames with python,os.path.dirname(f)
python how to scan string and and use upper() between two characters?,"re.sub('(<[^>]*>)', upper_repl, '<span> <hey <annoy!>> </span>')
""""""<SPAN> <HEY <ANNOY!>> </SPAN>"""""""
python closure with side-effects,"def closureMaker():
    x = [0]

def closure():
    x[0] += 1"
python: windows equivalent of sigalrm,"def __init__(self, interval):
    pass"
python timedelta in years,from dateutil.relativedelta import relativedelta
how do i access my webcam in python?,"key = cv2.waitKey(20)
if key == 27:
    break
cv2.destroyWindow('preview')"
"tuple assignment in python, is this a bug in python?","demo += AddIDemo([3, 4])"
make sphinx generate rst class documentation from pydoc,"print(line, file=f)"
instantiating objects in python,"params = {'param1': 'foo', 'param2': 'bar', 'param3': 'hello'}"
interprocess communication in python,"socket.bind('tcp://127.0.0.1:5555')
while True:
    msg = socket.recv()
if msg == 'zeromq':
    socket.send('ah ha!')
else:
    socket.send('...nah')"
defining a list of functions in python,dis.dis(lis[2])
searching for a string in a large text file - profiling various methods in python,"print(search('Some test string\n', table, f))"
how do i select a window from a numpy array with periodic boundary conditions?,"def neighbors(arr, x, y, n=3):
    """""" Given a 2D-array, returns an nxn array whose ""center"" element is arr[x,y]"""""""
how to do re.compile() with a list in python,"fruit_list = ['apple', 'banana', 'peach', 'plum', 'pineapple', 'kiwi']
fruit = re.compile('|'.join(fruit_list))"
python watchdog monitoring file for changes,observer.start()
preserve dataframe column data type after outer merge,"df2 = pd.DataFrame({'e': [1, 1], 'd': [1, 2]})"
"find all columns of dataframe in pandas whose type is float, or a particular type?","df.loc[:, (df.dtypes == object)]"
nginx + uwsgi + flask - disabling custom error pages,app = Flask(__name__)
matplotlib boxplot show only max and min fliers,"fly.set_data([fdata[0][0], fdata[0][-1]], [fdata[1][0], fdata[1][-1]])"
efficient python array with 100 million zeros?,i
using sudo with python script,"from subprocess import Popen, PIPE
sudo_password = 'mypass'
command = 'mount -t vboxsf myfolder /home/myuser/myfolder'.split()"
"count number of ""true"" values in boolean tensor","myOtherTensor = tf.constant([[True, True], [False, True]])
myTensor = tf.where(myOtherTensor)"
how do i copy a row from one pandas dataframe to another pandas dataframe?,"df1 = pd.DataFrame(np.random.randn(100, 3), columns='A B C'.split(), index=
    date_rng[:100])"
how to install zbar for 64-bit windows and python 2.7?,import subprocess
"python, forcing a list to a fixed size",l.append('orange')
how does python know a block of code is in a loop?,print('Done!')
changing values in multiple columns of a pandas dataframe using known column values,"new_cols = pd.get_dummies(df['Knownvalue'] // 10).loc[:, (list(range(8)))].fillna(0)
new_cols.columns = list(string.ascii_uppercase)[:len(new_cols.columns)]"
grammatical list join in python,"my_join(['x', 'y', 'z'])"
networkx add_node with specific position,X.add_nodes_from(list(pos.keys()))
break string into list elements based on keywords,"print(re.findall('[A-Z][a-z]*|\\d+', re.sub('[A-Z][a-z]*(?![\\da-z])',
    '\\g<0>1', molecule)))"
how to lowercase a python dataframe string column if it has missing values?,print(example.py)
python: how do i write a list to file and then pull it back into memory (dict represented as a string convert to dict) later?,"cPickle.dump(obj, open('save.p', 'wb'))
obj = cPickle.load(open('save.p', 'rb'))"
how should i use durationfield in my model?,"durations = MyModel.objects.filter(duration__lte=datetime.timedelta(*args,
    **kwargs))"
how to cleanly capture from an infinite generator?,pool = []
"rendering vectors in a sphere, with better perception","u, v, w = gradients.T"
how to download to a specific directory with python?,"import urllib.request, urllib.parse, urllib.error
urllib.request.urlretrieve('http://example.com/file.ext', '/path/to/dir/filename.ext')"
"merge values of same key, in list of dicts","temp = {}
for d in data:
    temp[d['id1']] = temp.get(d['id1'], 0) + int(d['price'])
temp"
choosing which figures to show on-screen and which to save to a file using python's matplotlib,plt.figure()
symbol table in python,"print_d('  has children:', str(st.has_children()))
print_d('  identifiers:', str(list(st.get_identifiers())))"
delete final line in file with python,"file = open(sys.argv[1], 'r+', encoding='utf-8')
file.seek(0, os.SEEK_END)
pos = file.tell() - 1"
how to add dvd drive to vm in xenserver using python,vbdrecord.empty = true
dynamic class with inheritance in python,parent = Parent()
python 2.7 - write and read a list from file,data = in_file.read().split('\n')
implement a classic martingale using python and pandas,bets = 2 ** np.cumsum(toss2)
python procedure return values,"for f in function_stack:
    pass"
add value to each element in array python,"a
val"
python framework for visualising/animating particles in cartesian space,"import matplotlib.pyplot as plt
x = np.random.randn(100)
y = np.random.randn(100)
plt.figure()
plt.plot(x, y, '.')
plt.savefig('frame0000.png')"
plot color nan values,"array = np.random.rand(4, 10)
array[array < 0.5] = np.nan
m = np.ma.masked_where(np.isnan(array), array)
plt.pcolor(m)
plt.colorbar(orientation='horizontal')"
how do i modify the last line of a file?,"open(MYFILE, 'w').writelines(lines)"
comparing list comprehensions and explicit loops (3 array generators faster than 1 for loop),random.shuffle(A)
what is the proper way of sending a large amount of data over sockets in python?,server_socket.close()
disable dtr in pyserial from code,"ser = serial.Serial('/dev/ttyUSB0', 115200, timeout=1)"
how to run selenium web driver behind a proxy server which needs authentication in python,chrome_options.add_extension('proxy.zip')
python: comparing two csv files and searching for similar items,results_row.append('FOUND in master list (row ' + str(row) + ')')
how to mock a tornado coroutine function using mock framework for unit testing?,from tornado.testing import AsyncTestCase
how to delete existing file when user uploads a new one,"asset_image = models.ImageField(upload_to='images/temp', max_length=255,
    null=True, blank=True)

def save(self, *args, **kwargs):
    pass"
how can i get a specific field of a csv file?,print(r[0])
get output of python script from within python script,"proc = subprocess.Popen('python myScript.py --alpha=arg1 -b arg2 arg3',
    stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=True)"
how do i get 'real-time' information back from a subprocess.popen in python (2.5),print(line)
convert a list of strings to either int or float,"s = ['1', '2', '3.4', '5.6', '7.8']"
format floats with standard json module,print(json.dumps(23.67))
shared-memory objects in python multiprocessing,return self.shared_arrays[i]
how to extract subjects in a sentence and their respective dependent phrases?,"def findSVAOs(tokens):
    svos = []"
case-insensitive string startswith in python,prefix = 'he'
python pil - all areas of png with opacity > 0 have their opacity set to 1,Image.Image.load = patched_load
how to apply outer product for tensors without unnecessary increase of dimensions?,"a = b = np.arange(8).reshape([2, 4])
a[:, (None), :] * b[:, :, (None)]"
gtk treeview: place image buttons on rows,"self.set_property('mode', gtk.CELL_RENDERER_MODE_ACTIVATABLE)"
is something wrong with python shell (google app)?,a += 3
taking and skipping groups of strings?,import re
match unicode emoji in python regex,regex = re.compile('\\d+(.*?)[\\u263a-\\U0001f645]')
search for a file using a wildcard,import sys
stumped by one line of python,"f1(f2(f3(x)))
f1(f2(f3(f4(x))))"
the pythonic way of validating a long chain of conditions in python,"if site.getId() == site_listing.getId():
    return site_listing"
fastest way of checking for word in huge list of keywords - python performance,subscriptions = filters.get(word)
send an xmpp message using a python library,"msg = 'hello :)'
client = xmpp.Client('gmail.com')
client.connect(server=('talk.google.com', 5223))
client.auth(username, passwd, 'botty')
client.sendInitPresence()
message = xmpp.Message(to, msg)
message.setAttr('type', 'chat')
client.send(message)"
how to rotate x-axis tick labels in pandas barplot,"df.set_index(['celltype'], inplace=True)
df.plot(kind='bar', alpha=0.75, rot=0)
plt.xlabel('')
plt.show()"
how to traverse through the files in a directory?,"import os.path

def print_it(x, dir_name, files):
    print(dir_name)"
why do i get only one parameter from a statsmodels ols fit,import numpy
storing json into database in python,import json
is there any library to deserialize with python which is serialized with java,h = lambda s: ' '.join('%.2X' % ord(x) for x in s)
multiple inheritance in scrapy spiders,"def parse_product(self, response):
    loader = FlipkartItemLoader(response=response)
loader.add_value('pid', 'value of pid')"
object reuse in python doctest,print('hello')
how to check if n can be expressed as sum of two other numbers in specific list,return True
is it possible to run only a single step of the asyncio event loop,"loop = asyncio.get_event_loop()
for i in range(100):
    pass"
how do i change the range of the x-axis with datetimes in matplotlib?,"ax.plot_date(x, y, markerfacecolor='CornflowerBlue', markeredgecolor='white')
fig.autofmt_xdate()
ax.set_xlim([datetime.date(2014, 1, 26), datetime.date(2014, 2, 1)])"
how does one read bytes from file in python,s = '\x00\x02'
how can i retrieve the signal strength of nearby wireless lan networks on windows using python?,WlanEnumInterfaces = wlanapi.WlanEnumInterfaces
convert timestamps with offset to datetime obj using strptime,"time_obj = datetime.datetime.strptime(time_str[:19], '%Y-%m-%dT%H:%M:%S')"
random number from histogram,plt.show()
how to reverse sklearn.onehotencoder transform to recover original data?,column_indices = (X + indices[:-1]).ravel()
how to add more headers in websocket python client,"class WebSocketApp(object):
    """"""
     Higher level of APIs are provided.
     The interface is like JavaScript WebSocket object.
     """""""
numpy argmax with max less than some number,"idx = np.where(m.any(1), idx0, np.nan)"
escape special html characters in python,"escaped_string = cgi.escape(original_string, True)"
little assistance with my tic-tac-toe program,"for i in range(4):
    while True:
        pass"
how to send username:password to unittest's app.get() request?,"headers = {'Authorization': 'Basic %s' % b64encode('username:password').
    decode('ascii')}
self.app.get('foo/', headers=headers)"
how can i return system information in python?,"import sys
if sys.platform == 'win32':
    pass"
python - mapping strings onto a boolean array,"import numpy as np
x = np.array([True, True, False])"
average numpy array but retain shape,"b = np.average(a, axis=2)
b
c = np.dstack((b, b, b))"
how to get english tweets alone using python?,"for i in range(0, 1000):
    pass"
how to get an utc date string in python?,from datetime import datetime
how to split a string on whitespace and retain offsets and lengths of words,"for match in re.finditer('\\S+', s):
    pass"
argparse argument order,"setattr(namespace, 'ordered_args', previous)
parser = argparse.ArgumentParser()
parser.add_argument('--test1', action=CustomAction)
parser.add_argument('--test2', action=CustomAction)"
remove redundant ticker in x-axis shared plot in matplotlib,"gs1 = gridspec.GridSpec(8, 4)"
what is this kind of assignment in python called? a = b = true,import dis
get timer ticks in python,"class Timer:

    def __enter__(self):
        self.begin = now()

def __exit__(self, type, value, traceback):
    print(format_delta(self.begin, now()))"
how do i get str.translate to work with unicode strings?,"tabout = '\u0442\u0435\u0432\u0438\u0440\u043f'
tabin = [ord(char) for char in tabin]
translate_table = dict(zip(tabin, tabout))
return to_translate.translate(translate_table)"
variable scope outside of classes,"def run(self, args):
    pass"
how to accept both filenames and file-like objects in python functions?,"if not hasattr(obj, 'read'):
    obj = StringIO(str(obj))"
python: how to normalize a confusion matrix?,"C = confusion_matrix(y_true, y_pred)"
"palindromic numbers in two bases, project euler #36","sum(1 for i in range(1000000) if str(i) == str(i)[::-1])
sum(1 for i in range(1000000) if format(i, 'b') == format(i, 'b')[::-1])"
storing huge hash table in a file in python,d.close()
how to add permissions in django to models and test it using the shell,emp = Employer.objects.create(blablabla)
how to use docker-py (official docker client) to start a bash shell?,"container = client.create_container(image='busybox:latest', stdin_open=True,
    tty=True, command='/bin/sh')
client.start(container)"
how to detect if the console does support ansi escape codes in python?,return False
twisted network client with multiprocessing workers?,"class MultiprocessingService(Service):

    def startService(self):
        self.pool = multiprocessing.Pool(processes=processes)
MultiprocessingService().setServiceParent(application)"
"regex, how to remove all non-alphanumeric except colon in a 12/24 hour timestamp?","for item in s.split():
    pass"
ruby version of to string method,"[1, 23, 4].inspect
p[1, 23, 4]"
python-getting data from an asp.net ajax application,"year.get(label='2005').selected = True
src = b.submit().read()
print(src)"
python pandas replacing strings in dataframe with numbers,"mapping = {'set': 1, 'test': 2}
df.replace({'set': mapping, 'tesst': mapping})"
"get u, sigma, v* matrix from truncated svd in scikit-learn","U = SVD.fit_transform(X)
Sigma = SVD.explained_variance_ratio_
VT = SVD.components_"
delete the last input row in python,"a = input('What a: ')
a = a.strip()"
python 3.4.4 how to verify if a string is only made of 0 and 1,bit = len(binary)
how to temporary hide stdout or stderr while running a unittest in python,sys.stdout = _stdout
printing to stdout in ipython parallel processes,print(x)
python manager dict in multiprocessing,"from multiprocessing import Process, Manager"
matplotlib: save figure as file from ipython notebook,"fig = plt.figure()
ax = fig.add_axes([1, 1, 1, 1])
plt.plot([1, 2])
savefig('test.png', bbox_inches='tight')"
how to profile exception handling in python?,"with profiler():
    pass"
"simple / smart, pythonic database solution, can use python types + syntax? (key / value dict, array, maybe ordered dict)",from django.db import models
remove more than one key from python dict,x
what is the simplest way to swap char in a string with python?,""""""""""""".join(t)"
"why does python let me define a variable in one scope, but use it in another?",x = 5
how to find and replace nth occurence of word in a sentence using python regular expression?,"re.sub('^((.*?cat.*?){1})cat', '\\1Bull', s)"
controlling python ply lexer states from parser,lexer.level += 1
typecasting pyarrayobject data to a c array,"ndX = PyArray_NDIM(X)
shapeX = PyArray_SHAPE(X)
dtype = PyArray_DescrFromType(NPY_DOUBLE)
iter = NpyIter_New(X, NPY_ITER_READONLY, NPY_KEEPORDER, NPY_NO_CASTING, dtype)"
distribution of number of digits of random numbers,7.411070483631654e-06
counting a group of extensions (images) in a directory in python,"sum([True, False, False, True, False])"
global scope inside if/else for a running median,return (heapq.heappop(leftHeap) + curMedian) / 2
using cumsum in pandas on group(),"data1.groupby(['Bool', 'Dir', 'Date']).sum().groupby(level=[0, 1]).cumsum()"
how to change separation between tick labels and axis labels in matplotlib,"fig = plt.figure(figsize=(paperwidth - 2 * margin, paperheight - 2 * margin))
fig.tight_layout()"
"pyqt4,how to add a batch of widget (qpushbutton) at one time and lets them to execute on slot","class MyPushButton(QPushButton):

    def __init__(self, text='', parent=None):
        QPushButton.__init__(self, text, parent)
self.clicked.connect(self._handle_click)
my_click = QtCore.pyqtSignal(QObject)

def _handle_click(self):
    my_click.emit(self)

def btnclick(btn):
    pass"
regular expression matching first non-repeated character,"python
import regex
regex.search('(?<letter>.)(?!.*?\\g<letter>)(?<!\\g<letter>.+?)', 'tooth')"
numpy how to replace a single element in array1 with whole array2,"array2 = [[1, 2], [3, 4]]
for i in range(len(array1)):
    for j in range(len(array1[0])):
        array1[i][j] = array2
print(array1)"
store python requests session in persistent storage,"pickled = pickle.dumps(session)
restored = pickle.loads(pickled)"
how to plot bar graphs with same x coordinates side by side,"ax.legend((rects1[0], rects2[0]), ('Men', 'Women'))"
pandas pivot table of sales,"from io import StringIO
import pandas as pd
text = """"""    saleid                              upc
0   155_02127453_20090616_135212_0021   02317639000000
1   155_02127453_20090616_135212_0021   00000000000888
2   155_01605733_20090616_135221_0016   00264850000000
3   155_01072401_20090616_135224_0010   02316877000000
4   155_01072401_20090616_135224_0010   05051969277205""""""
df = pd.read_csv(StringIO(text), delim_whitespace=True, dtype=str)"
pandas convert strings to float for multiple columns in dataframe,"df = DataFrame('10.0%', index=list(range(100)), columns=list(range(10)))"
using an ordered dict as object dictionary in python,"def __getattr__(self, value):
    return self.__dict__['_odict'][value]"
https for localhost:8080,accept = 8001
access pixel values within a contour boundary using opencv in python,"for i in range(len(contours)):
    pass"
shorter version of this numpy array indexing,"X = np.random.randint(0, 99, (6, 5))
m, n = X.shape"
how to chain django querysets preserving individual order,"class ImportMinAttend(models.Model):
    country = models.CharField(max_length=2, blank=False, null=False)"
dynamic loading of uncompiled python plugins in py2exe compile code,"plugin = imp.load_module('plugin', f, filename, desc)
modules = []"
nltk convert tokenized sentence to synset format,from nltk.corpus import wordnet as wn
django return redirect() with parameters,"def element_info(request):
    element = Element.object.get(pk=1)
return redirect('element_update', pk=element.id)"
python: deleting a class attribute in a subclass,"class B(A):
    pass"
delete all objects in a list,del c[:]
an iterative algorithm for fibonacci numbers,return y
cross-platform way to get pids by process name in python,"WMI = GetObject('winmgmts:')
processes = WMI.InstancesOf('Win32_Process')
process_list = [(p.Properties_('ProcessID').Value, p.Properties_('Name').
    Value) for p in processes]"
loading and parsing a json file with multiple json objects in python,"import json
data = []
with open('file') as f:
    pass"
python: opening a folder in explorer/nautilus/mac-thingie,import os
foreign key relationship with peewee and python,name = value['name']
django create custom usercreationform,return user
defining a python class with lots of attributes - style,b = []
python: determine length of sequence of equal items in list,"return i
l = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2]
answer = []
for key, iter in itertools.groupby(l):
    answer.append((key, length(iter)))"
assign multiple shaders to imported .obj files in maya,"mat.hyperShade(assign=myArray[int(random.uniform(0, 3))])"
creating a diff array using lambda functions in python,"diff = [(a[i] - a[i + 1]) for i in range(len(a) - 1)]
diff"
python - start firefox with selenium in private mode,"from selenium import webdriver
firefox_profile = webdriver.FirefoxProfile()"
how can i convert string to dict or list?,"result = ast.literal_eval(""{'a': 1, 'b': 2}"")
assert type(result) is dict"
how can i sort a list of python classes by inheritance depth?,"class B(A, X):
    pass


class C(B):
    pass


class D(C):
    pass
sorted([B, C, A, D, X], key=lambda cls: len(cls.mro()))"
get smallest n values from numpy array ignoring inf and nan,a[4] = -np.inf
ipython notebook: how to combine html output and matplotlib figures?,"Gcf.destroy_fig(fig)
HTML(""Foo Bar <br> <img src='%s'> <br> Baz"" % image_data)"
python strange behavior with enumerate,"x = [1, 2, 3, 4, 5]
y = x"
how to make a combined set of fields unique in mongodb in python,timestamp = DateTimeField(default=datetime.now)
strip white spaces from file csv,"with open(self.filename, 'r') as f:
    reader = csv.reader(f, skipinitialspace=False, delimiter=',', quoting=
        csv.QUOTE_NONE)"
python string replace in a file without touching the file if no substitution was made,thefile.flush()
using gridsearchcv with adaboost and decisiontreeclassifier,"ABC = AdaBoostClassifier(base_estimator=DTC)
grid_search_ABC = GridSearchCV(ABC, param_grid=param_grid, scoring='roc_auc')"
how to reliably open a file in the same directory as a python script,paths()
python: unintentionally modifying parameters passed into a function,"def modi_list(alist):
    pass"
optimize django model save method for accessing to uploaded file path,"class MyModel(models.Model):
    myimg = models.ImageField(upload_to=img_file_path)

def save(self, *args, **kwargs):
    path_of_file = self.myimg.name
self.myimg.name = path_of_file.upper()
super(MyModel, self).save()"
how do i draw text at an angle using python's pil?,draw = ImageDraw.Draw(im)
how to mock users and requests in django,"class MockUser(object):

    def __call__(self, *args, **kwargs):
        return self

def __getattr__(Self, name):
    return self"
python bluetooth how to send a file to a phone,addr = sys.argv[1]
iterator selector in python,yield work_list[0][1]
nltk tagging spanish words using a corpus,cess_sents = cess.tagged_sents()
draw arrow outside plot in matplotlib,fg = plt.figure(1)
sorting all the sub dictionary using values of one of the sub dictionary,d = to_sort[0][1]
__sizeof__ str is larger than __sizeof__ a tuple containing that string,res = 0
tensorflow rnn with varying length sentences,seq_length = tf.placeholder(tf.int32)
problems implementing an xor gate with neural nets in tensorflow,"xTrain = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
yTrain = np.array([[1], [0], [0], [0]])"
how to implement curl -u in python?,"passmanager.add_password(None, baseurl, username, password)"
"regex with quotes, equal sign and dot for attribute/value pair",Feedback.color = green
perl: counting many words in many strings efficiently,from collections import Counter
what is a 'good practice' way to write a python gtk+ application?,gtk.Window.__init__(self)
remove list from list in python,"b = ['pineapple', 'apple', 'tomato']
new_list = []
for v in a:
    if v not in b:
        new_list.append(v)
print(new_list)"
how to stub python methods without mock,"def getDataLength(self):
    pass"
print letters in specific pattern in python,return st[ind:] * int(st[:ind])
twisted: how to silence certain log messages?,reactor.run()
patch over missing rows in csv file in python,"data.append(','.join(row))"
inner join with multiindex fails if no overlap,"import pandas as pd
d1 = pd.DataFrame({'i1': [1, 2, 2], 'i2': [1, 1, 2], 'a': [10, 20, 30]}
    ).set_index(['i1', 'i2'])
d2 = pd.DataFrame({'i1': [3, 3], 'i2': [1, 2], 'b': [40, 50]}).set_index([
    'i1', 'i2'])
try:
    d1.join(d2, how='inner')
except Exception as err:
    print(err)"
6th degree curve fitting with numpy/scipy,"plt.plot(x, yfit, label='fitted data')
plt.show()"
split string on commas but ignore commas within double-quotes?,"from csv import reader
infile = ['A,B,C,""D12121"",E,F,G,H,""I9,I8"",J,K']
for line in reader(infile):
    pass"
nonlinear colormap with matplotlib,self.monochrome = self.cmap.monochrome
using a java library from python,"gateway = JavaGateway()
java_object = gateway.jvm.mypackage.MyClass()
other_object = java_object.doThat()
other_object.doThis(1, 'abc')
gateway.jvm.java.lang.System.out.println('Hello World!')"
xml (.xsd) feed validation against a schema,"def validate(xmlparser, xmlfilename):
    pass"
"remove ""add another"" in django admin screen",author = form.base_fields['author']
"preventing django from appending ""_id"" to a foreign key field",b.a.save()
toggle a value in python,"A = [1, 2, 3]
B = [4, 5, 6]"
zipping dynamic files in app engine (python),"self.response.headers['Content-Type'] = 'multipart/x-zip'
self.response.headers['Content-Disposition'] = 'attachment; filename=test.zip'
self.response.out.write(output.getvalue())"
ssh module for python,"ssh = paramiko.SSHClient()
ssh.connect(remote, username=username, password=password)"
django: how to save original filename in filefield?,"filename = models.CharField(max_length=128)

def save(self, force_insert=False, force_update=False):
    super(FooModel, self).save(force_insert, force_update)"
print a variable selected by a random number,"for item in tmp:
    pass"
google data api authentication,session = True
pyramid: extend query string for every url constructed by route_url,"def add_route_with_query(*args, **kwargs):
    kwargs['pregenerator'] = add_query_pregen
config.add_route(*args, **kwargs)
add_route_with_query('login', '/login')
add_route_with_query('logout', '/logout')"
preventing exceptions from terminating python iterator,"yield 3
try:
    raise Exception('blarg!')
except Exception:
    pass"
how can i convert a string to an int in python?,"a = '123'
int(a)"
inverted glyph: bitmap > svg via autotrace > glyph via fontforge,"glyph = font.createMappedChar('A')
glyph.importOutlines('sourceimg.svg')
font.generate('testfont.ttf')"
how to pass more than one parameter to map function in panda,"def getTag(rangeAttribute, sliceDef):
    for sl in list(sliceDef.keys()):
        bounds = sliceDef[sl]
if float(rangeAttribute) >= float(bounds[0]) and float(rangeAttribute
    ) <= float(bounds[1]):
    return sl
sliceDef = {'tag1': [1, 4], 'tag2': [4, 6], 'tag3': [6, 9], 'tag4': [9, 99]}
sliceDef1 = {'100-150': [100000, 150000], '150-650': [150000, 650000],
    '650-5M': [650000, 5000000]}
mn = pd.DataFrame({'fld1': [2.23, 4.45, 7.87, 9.02, 8.85, 3.32, 5.55],
    'fld2': [125000, 350000, 700000, 800000, 200000, 600000, 500000],
    'lType': ['typ1', 'typ2', 'typ3', 'typ1', 'typ3', 'typ1', 'typ2'],
    'counter': [100, 200, 300, 400, 500, 600, 700]})"
check python string format?,"s = 'x/x/xxxx xx:xx'
if len(s) == 14:
    if r.match(s):
        pass"
"how do i sort a list with ""nones last""","class Infinity:

    def __eq__(self, other):
        return type(other) == Infinity

def __lt__(self, other):
    pass"
csrf exempt failure - apiview csrf django rest framework,"class UnsafeLogin(APIView):
    permission_classes = AllowAny,
authentication_classes = UnsafeSessionAuthentication,

def post(self, request, *args, **kwargs):
    username = request.DATA.get('u')
password = request.DATA.get('p')
user = authenticate(username=username, password=password)
if user is not None:
    login(request, user)
return redirect('/')"
fetching tweets with hashtag from twitter using python,"search = t.search(q='#omg', count=100)"
line profiling inner function with cython,"prof.runcall(f, 5)"
bash alias to automatically detect arbitrarily named file sequences?,1 - test8.txt
has anyone used sphinx to document a c++ project?,Requirements
python: send a list/dict over network,"import json
a = (1, 2), (11, 22), (111, 222)
print(a)
message = json.dumps(a)
message
b = json.loads(message)
b"
an efficient way to calculate the mean of each column or row of non-zero elements,"a = np.array([[8.0, 9, 7, 0], [0, 0, 5, 6]])"
check requirements for python 3 support,mysql - python
implementing pointwise arithmetic with implicit type conversion,"def __truediv__(self, other):
    if callable(other):
        return Function(lambda x: self(x) / other(x))"
how can i find all subclasses of a class given its name?,"def get_all_subclasses(cls):
    all_subclasses = []
for subclass in cls.__subclasses__():
    all_subclasses.append(subclass)
all_subclasses.extend(get_all_subclasses(subclass))
return all_subclasses"
how do i compare dates from twitter data stored in mongodb via pymongo?,"connection = pymongo.Connection('mymongohostname.com')
connection.my_database.my_collection.insert({'created_at': dt}, safe=True)"
fastest way to fill numpy array with distances from a point,"x, y, z = (x * scale_x + offset_x, y * scale_y + offset_y, z * scale_z +
    offset_z)"
nargout in python,"def f(a, nargout=1):
    if nargout == 1:
        pass"
how do i create documentation with pydoc?,"def __init__(self, name, age):
    pass"
blocks of code in python,return x + y
how to get data recieved in flask request,"search = request.args.get('search')
page = request.args.get('page')"
simulating a neuron spike train in python,from scipy.integrate import odeint
how do i calculate the numeric value of a string with unicode components in python?,cval = int(c)
how i do convert from timestamp to date in python?,"import date_converter
converted_date = date_converter.string_to_string('2015-04-08T07:52:00Z',
    '%Y-%m-%dT%H:%M:%SZ', '%d/%m/%Y')"
use nltk without installing,chunk
how to find degenerate rows/columns in a covariance matrix,B = independent_columns(A)
multi-index sorting in pandas,g
using django settings in templates,from django.conf import settings
how to break time.sleep() in a python concurrent.futures,"T = f.ThreadPoolExecutor(1)

def block5():
    time.sleep(5)
return 1
q = T.submit(block5)
m = T.submit(block5)
print(q.cancel())
print(m.cancel())"
matplotlib color gradient in patches?,"fis = np.concatenate((np.linspace(-np.pi, np.pi, 100), [np.nan]))
cmap = plt.cm.gray"
"cython - use of ""from"" keyword in for loop",pass
check if string matches pattern,print('not matched')
python: print only the message on warnings,import warnings
how to set class names dynamically?,"type('NewA', (object,), {})"
matplotlib - 3d surface from a rectangular array of heights,"fig.colorbar(surf, shrink=0.5, aspect=5)"
storing python dictionaries,"pickle.dump(data, fp)"
how to map a django model field to some user defined value,"class Resource(ModelResource):
    angular_t = fields.CharField(attributes='angular_t', null=True)"
mixed types of elements in dataframe's column,"map(type, df2[1])"
creating a mock web service from a wsdl file in python,from mock import patch
"python logging (function name, file name, line number) using a single file",import logging
"many-to-many, self-referential, non-symmetrical relationship (twitter model) via association object in sqlalchemy",sess.commit()
interpolation of sparse grid using python (preferably scipy),"x, y = index[0], index[1]"
how to extract top-level domain name (tld) from url,"def get_domain(url, tlds):
    url_elements = urlparse(url)[1].split('.')
for i in range(-len(url_elements), 0):
    last_i_elements = url_elements[i:]
candidate = '.'.join(last_i_elements)
wildcard_candidate = '.'.join(['*'] + last_i_elements[1:])
exception_candidate = '!' + candidate
if exception_candidate in tlds:
    return '.'.join(url_elements[i:])
if candidate in tlds or wildcard_candidate in tlds:
    return '.'.join(url_elements[i - 1:])
raise ValueError('Domain not in global list of TLDs')
print(get_domain('http://abcde.co.uk', tlds))"
"in python, how do i split a string and keep the separators?","test_strings = ['<Hello>', 'Hi', '<Hi> <Planet>', '<', '']

def split_and_keep(s, sep):
    if not s:
        return ['']
p = chr(ord(max(s)) + 1)
return s.replace(sep, sep + p).split(p)
for s in test_strings:
    print(split_and_keep(s, '<'))
unicode_max_char = chr(1114111)
ridiculous_string = '<Hello>' + unicode_max_char + '<World>'
print(split_and_keep(ridiculous_string, '<'))"
efficiently solving a letter/number problem in python,print(int('8' + str(x)) == 8 * int(str(x) + '8'))
"best way to change the value of ""settings"" from within a python test case?","""""""[{""pk"": 1, ""model"": ""test_app.userprofile"", ""fields"": {""url"": ""http://www.google.com"", ""user"": 1, ""description"": ""Old description""}}]"""""""
using list as a data type in a column (sqlalchemy),session.add(feed)
how to detect with python if the string contains html code?,parser.feed(text)
calling types via their name as a string in python,"getattr(__builtin__, 'int')"
bokeh: implementing custom javascript in an image plot,bokeh.io.save(layout)
"how do i remove lines from a big file in python, within limited environment",file.write(line + '\n')
easiest way to rm -rf in python,shutil.rmtree(path)
how to solve several independent time series at the same time using scikit linear regression model,"X_mean = np.average(X, axis=1)"
python(or numpy) equivalent of match in r,"match
match(a, b)"
creating a list of dictionaries in python,"for col in range(1, len(ll[0])):
    pass"
plotting 2d kernel density estimation with python,"ax.set_xlabel('Y1')
ax.set_ylabel('Y0')"
how to extract dependencies information from a setup.py,__import__(module_name)
pandas dataframe stored list as string: how to convert back to list?,"df['a'][0], type(df['a'][0])"
validating the value of several variables,"inputs = [1, 1, 0, 2]"
how to serialize sympy lambdified function?,"a, b = sym.symbols('a, b')"
how to start ipython notebook server at boot as daemon,"[Install]
WantedBy = multi - user.target"
unable to remove objects from a list in another object,"d.cards.append(Card(1, 1))"
create multiple columns in pandas dataframe from one function,"data = df.loc[(mask), :]"
how to make wx.textentrydialog larger and resizable,self.input.SetValue(value)
python integer partitioning with given k partitions,"if k == 1:
    if n >= l:
        yield n,
raise StopIteration
for i in range(l, n + 1):
    for result in partitionfunc(n - i, k - 1, i):
        yield (i,) + result"
making a histogram of string values in python,"data = ['32', '22', '12', '32', '22', '12', '31', '21', '11']
sm = {i: (0) for i in ['32', '22', '12', '31', '21', '11']}
for i in data:
    pass"
dot product with dictionaries,"for key in dict_1:
    pass"
how do i extend python with c?,"libadd = ctypes.cdll.LoadLibrary('libadd.so')
libadd.Add.argtypes = [ctypes.c_int, ctypes.c_int]
libadd.Add.restype = ctypes.c_int
print(libadd.Add(42, 1))"
converting from local to utc timezone,"utc_time, offset = convert_to_utc(time, 'America/Chicago')"
syntaxerror when trying to use backslash for windows file path,os.path.isfile('C:\\Users\\xxx\\Desktop\\xxx')
find the subset of a set of integers that has the maximum product,"def max_product(A):
    pass"
python logging to multiple files,logger1.addHandler(logging.FileHandler('/tmp/logger1'))
building a covariance matrix in python,x = np.random.random(num)
"in python using flask, how can i write out an object for download?","from flask import Response

@app.route('/get-file')
def get_file():
    results = generate_file_data()"
wagtail: display a list of child pages inside a parent page,{{page.title}}
using pipes to capture things printed to stderr into python variable from jupyter,os.system('cat 1mbfile.txt')
how do i compare rpm versions in python,import sys
using different versions of python with virtualenvwrapper,source / path / to / bin / virtualenvwrapper.sh
python : operator overloading a specific type,a = Mynum(1)
case insensitive python string split() method,"import re
regex = re.compile('\\s*feat\\.\\s*', flags=re.I)
regex.split('abc feat. def')"
terminating qthread gracefully on qdialog reject(),self.layout.addWidget(self.btn_cancel)
how to get client ip address using python bottle framework,"def hello():
    pass"
(pseudo) random number generation in python without using modules and clock,rng = random.WichmannHill(8675309)
eliminating all data over a given percentile,cols = list('abc')
pyside show / hide layouts,QWidget.__init__(self)
"how do i read a midi file, change its instrument, and write it back?","for p in s.parts:
    p.insert(0, instrument.Violin())"
generating a remapped numpy array as a view.,"def __array__(self):
    return self._array[self._index]

def __getitem__(self, index):
    return self._array[self._index[index]]
b = FancyView(a, p)"
duplicate a tensorflow graph,"with tf.Session(graph=graphA) as sess:
    sess.run(init)"
throttling with urllib2,t.join()
multi-indexing - accessing the last time in every day,"df['DateTime'] = pd.to_datetime(df['DateTime'])
idx = df.groupby(df['DateTime'].dt.date)['DateTime'].idxmax()"
python convert csv to xlsx,reader = csv.reader(f)
how to define free-variable in python?,"def baz():
    pass"
connecting to a remote ipython instance,print('succeeded!')
overiding __mul__ in two dimensional vector class to preserve commutivity,"y = Point(1, 3)"
update dynamodb atomic counter with python / boto,"c = boto.connect_dynamodb()
t = c.get_table('counter')"
unpacking more than one list as argument for a function,pass
parsing an equation with custom functions in python,"debug('not defined function', node.func.id)"
how to access a superclass's class attributes in python?,"class B(A):
    pass"
python sha1 integer,hashlib.sha1('\xd2\x04\x00\x00').hexdigest()
python : how to convert markdown formatted text to text,from BeautifulSoup import BeautifulSoup
how can i convert unicode to uppercase to print it?,_harden_stdout()
convert string into date type on python,"date = datetime.datetime.strptime('2012-02-11', '%Y-%m-%d')
if date.isoweekday() == 6:
    date += datetime.timedelta(days=2)
date
date.strftime('%Y-%m-%d')"
how to import or include data structures (e.g. a dict) into a python file from a separate file,eval(open('myDict').read())
matplotlib: how to decrease density of tick labels in subplots?,"import matplotlib.pyplot as plt
fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)
max_yticks = 100
yloc = plt.MaxNLocator(max_yticks)
ax.yaxis.set_major_locator(yloc)
plt.show()"
"python image library (pil), how to compress image into desired file size?",image.file = open(image.file.name)
catching an exception while using a python 'with' statement,"print('IOError:', err)"
how to show the last message of each user to user conversations to keep a chat history?,"print(user.last_message_time)
print(user.message)"
"python - get process names,cpu,mem usage and peak mem usage in windows","if seekitem in str1:
    print('Requested process is running')
processcheck('System')"
python decorator with flask,"def my_function(*takes_multiple_arguments):
    pass
my_function = decorator(my_function)"
how to visualize descriptor matching using opencv module in python,"bf = cv2.BFMatcher(cv2.NORM_HAMMING, crossCheck=True)"
most pythonic way of counting matching elements in something iterable,"for e in iterable:
    for i, p in enumerate(predicates):
        if p(e):
            pass"
python's implementation of permutation test with permutation number as input,"def exact_mc_perm_test(xs, ys, nmc):
    n, k = len(xs), 0
diff = np.abs(np.mean(xs) - np.mean(ys))
zs = np.concatenate([xs, ys])
for j in range(nmc):
    np.random.shuffle(zs)
k += diff < np.abs(np.mean(zs[:n]) - np.mean(zs[n:]))
return k / nmc"
"""for loop"" with two variables?",return list(set(t1).intersection(set(t2)))
how to show pil image in ipython notebook,from PIL import Image
"sparkstreaming, rabbitmq and mqtt in python using pika",ssc.awaitTermination()
python dealing with nonetype before cast\addition,"def non_null(*fields):
    for f in fields:
        if f is not None:
            pass"
"python: get twitter trends in tweepy, and parse json","names = [trend['name'] for trend in trends]
trendsName = ' '.join(names)
print(trendsName)"
scrapy set depth limit per allowed_domains,return (r for r in result or () if _filter(r))
import local function from a module housed in another directory with relative imports in jupyter notebook using python3,"import os
import sys
module_path = os.path.abspath(os.path.join('..'))
if module_path not in sys.path:
    sys.path.append(module_path)"
"genetic cellular automata with pycuda, how to efficiently pass a lot of data per cell to cuda kernel?","Mk = 64
Tk = 1000
emit_gpu = ElementwiseKernel('int4 *cells, int w, int h, int cn',
    """"""
    int x = i / h;
    int y = i % h;
    int4 cell = cells[i];
    int Fc = cell.x;
    int Mc = cell.y;
    int Tc = cell.z;
    float M = (float) Mc;
    float T = (float) Tc;
    int Mi = (int) (fmin(1, T / Tk) * M);
    cells[i] = make_int4(Fc, Mc - Mi, Tc - (int) (T * fmin(1, T / Tk)), 0);
    int Mbase = Mi / 8;
    int Mpart = Mi % 8;
    int Madd;
    int ii;
    int xo, yo;
    int cnn = 0;
    for (int dx = -1; dx < 2; dx++) {
      xo = x + dx;
      if (xo < 0) xo = w + xo; else if (xo >= w) xo = xo - w;
      for (int dy = -1; dy < 2; dy++) {
        if (dx == 0 && dy == 0) continue;
        cnn += cn;
        yo = y + dy;
        if (yo < 0) yo = h + yo; else if (yo >= h) yo = yo - h;
        if (Mpart > 0) { Madd = 1; Mpart--;} else Madd = 0;
        ii = (xo * h + yo) + cnn;
        cells[ii] = make_int4(Fc, Mbase + Madd, Tc, 0);
      }
    } 
""""""
    , 'ca_emit', preamble='\n' % (Tk, CELL_LEN))
absorb_gpu = ElementwiseKernel('int4 *cells, int *img, int w, int h, int cn',
    """"""
    int ii = i;
    int4 cell = cells[i];
    int Fc = cell.x;
    int Mc = cell.y;
    int Tc = cell.z;
    for (int c=0; c < 8; c++){
      ii += cn;
      cell = cells[ii];
      int Fi = cell.x;
      int Mi = cell.y;
      int Ti = cell.z;
      int dF = Fi - Fc;
      if (dF > 180) Fc += 360;
      if (dF < -180) Fc -= 360;
      float sM = Mi + Mc;
      if (sM != 0) sM = Mi / sM; else sM = 0;
      dF = (int) (Fi - Fc) * sM;
      int dM = Mi;
      int dT = fabs((float) (Fi - Fc)) * fmin((float) Mc, (float) Mi) / Mk + (Ti - Tc) * sM;
      Fc += dF;
      Mc += dM;
      Tc += dT;
      Fc = Fc % 360;
      if (Fc < 0) Fc += 360;
      if (Tc > Tk) Tc = Tk;
    }      
    cells[i] = make_int4(Fc, Mc, Tc, 0);
    img[i] = hsv2rgb(Fc, Tc, Mc);
""""""
    , 'ca_absorb', preamble=
    """"""
__device__ uint hsv2rgb(int hue, int sat, int val) {
    // skipped for brevity
}
""""""
     % (Mk, Tk))"
remove the newline character in a list read from a file,"with open('grades.dat') as input:
    grades = [line.split(',') for line in input.read().splitlines()]"
"""online"" monkey patching of a function","def handle_default(x):
    print('handle_default: {0!r}'.format(x))
handler = {int: handle_default, str: handle_default}"
python udisks - enumerating device information,"print(device_props.Get('org.freedesktop.UDisks.Device', 'DriveVendor'))"
python opening and reading files one liner,return file_handle.write_to(text)
numpy - weird behavior with plus equal with slicing,a
finding the current active window in mac os x using python,"from AppKit import NSWorkspace
active_app_name = NSWorkspace.sharedWorkspace().frontmostApplication(
    ).localizedName()
print(active_app_name)"
how to send an array over a socket in python,"s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(1)
conn, addr = s.accept()
print('Connected by', addr)
while 1:
    data = conn.recv(4096)
if not data:
    break
conn.send(data)
conn.close()"
drop all namespaces in lxml?,"print('=====================================================================')
print(etree.tostring(root, pretty_print=True))
print('=====================================================================')
dropns(root)
print(etree.tostring(root, pretty_print=True))
print('=====================================================================')"
how can i create a list containing another list's elements in the middle in python?,list_c = []
normalize numpy array columns in python,import numpy as np
scipy normaltest how is it used?,stats.normaltest(x)
image aspect ratio using reportlab in python,"story.append(get_image('stack.png', width=4 * cm))
story.append(get_image('stack.png', width=8 * cm))"
how to add different graphs (as an inset) in another python graph,"import matplotlib.pyplot as plt
fig, ax1 = plt.subplots()"
how do i require https for this django view?,from django.contrib.auth.views import login
making an asynchronous task in flask,"@app.route('/render/<id>', methods=['POST'])
def render_script(id=None):
    pass"
calculating angle between two lines in python,"def get_angle(p0, p1=np.array([0, 0]), p2=None):
    pass"
"in python, is there a setdefault() equivalent for getting object attributes?",return value
holiday files for g20 countries,"from workalendar.europe import France
cal = France()"
case-insensitive string startswith in python,"ch1 = s[1]
substr = ch0 == 'h' or ch0 == 'H' and ch1 == 'e' or ch1 == 'E'"
python pil image in label auto resize,"self.configure(width=imagesize[0], height=imagesize[1])"
how to match a string of a certain length with a regex,s = ''
python datatype for a fixed-length fifo,"d.appendleft('new.com')
print(d)"
puzzled on how to slice a numpy array,"a = np.arange(9).reshape(3, 3)
a"
how to pass member function as argument in python?,"def greet(f, name):
    pass"
how can i make python 2.6 my default in mac os x lion?,python - V
how can i ignore zeros when i take the median on columns of an array?,"x = np.array([[10, 0, 10, 0], [1, 1, 0, 0], [9, 9, 9, 0], [0, 10, 1, 0]])
y = np.ma.masked_where(x == 0, x)
x
y
np.median(x, axis=0)
np.ma.median(y, axis=0).filled(0)"
"how can i pass null to an external library, using ctypes, with an argument declared with ctypeslib.ndpointer?",return _ComplexArrayTypeBase.from_param(obj)
how do i do a f-test in python,import scipy.stats as stats
how to print the full traceback without halting the program?,"try:
    try:
        raise TypeError('Again !?!')
    except:
        pass
finally:
    pass"
ordering a many-to-many field in django admin,"class Meta:
    model = Product"
encapsulating retries into `with` block,"def __exit__(self, exc_type, exc_val, traceback):
    pass"
"interpolate unstructured x,y,z data on best grid based on nearest neighbour distance for each points",n_repr = 1000
print javascript exceptions in a qwebview to the console,url = 'http://localhost/test.html'
calling a non python program from python?,"import subprocess
cwd = os.getcwd()"
changing values of a list of namedtuples,"for i in range(len(books)):
    books[i] = books[i]._replace(price=books[i].price * 1.1)"
how to plot cdf in matplotlib in python?,"plot(X, CY, 'r--')
show()"
"make subset of array, based on values of two other arrays in python",1 == 1 & 2 == 2
how to implement an invite flow using django allauth for signup/signin?,del session['invite_key']
can't get django-star-ratings to display to template,"def __str__(self):
    pass"
adding a column of zeroes to a csr_matrix,"B2 = vstack((B, C))
hstack((B2, D))"
python - increase efficiency of large-file search by readlines(size),"words = list(map(process_group, groups))"
how to open an ssh tunnel using python?,"self.remoteuser = remoteuser
self.remotehost = remotehost
self.daemon = True

def run(self):
    if subprocess.call(['ssh', '-N', '-L', str(self.localport) + ':' + self
        .remotehost + ':' + str(self.remoteport), self.remoteuser + '@' +
        self.remotehost]):
        raise Exception('ssh tunnel setup failed')
if __name__ == '__main__':
    tunnel = SshTunnel(2222, 80, 'karel', 'localhost')
tunnel.start()
time.sleep(1)
subprocess.call(['curl', 'http://localhost:2222'])"
with sqlalchemy how to dynamically bind to database engine on a per-request basis,"binds.update(dict.fromkeys([Employee, Customer, Invoice], finance_engine))"
working with statistical expressions in sympy without specifying distribution,"Y = Normal('Y', 1, 2)"
if statements for panda dataframes in python,"for col in df.columns:
    df.loc[df[col] < 0, col] += 360
df.loc[df[col] > 360, col] -= 360"
detecting a specific watermark in a photo with python (without scipy),"watermark.train((data, 'negative'))"
getting values from functions that run as asyncio tasks,return 'saad'
compare two columns using pandas,"C = np.where(cond, A, B)"
pip build option to use multicore,from pip.basecommand import Command
how to show query parameter options in django rest framework - swagger,"return Response({'hello': 'world'}, status.HTTP_200_OK)"
how to shorten this if and elif code in python,"for b in (-1, 1):
    pass"
how to flatten axes of a multidimensional array without making copies in numpy?,"b = a.reshape((9, 3))
b[0] = 55"
what's wrong with this webcam face detection?,print('Number of faces detected: {}'.format(len(dets)))
how to change file system encoding via python?,import sys
what is the best method to read a double from a binary file created in c?,"filename = 'tmp.bin'
file = open(filename, mode='rb')"
how can i filter emoji characters from my input so i can save in mysql <5.5?,emoji_emoticons = re.compile('[\U0001f600-\U0001f64f]')
how to create a trie in python,current_dict = current_dict[letter]
validating a yaml document in python,"schema = """"""
type: object
properties:
  testing:
    type: array
    items:
      enum:
        - this
        - is
        - a
        - test
"""""""
how to make print statement one line in python?,"""""""If a hippo ways 2000 pounds, gives birth to a 100 pound calf and then eats a 50 pound meal how much does she weigh?"""""""
can't make standalone binary scrapy spider with cx_freeze,"from cx_Freeze import setup, Executable"
how to fix this script so that it won't peg the cpu?,print('OHAI')
matrix inversion without numpy,"b30 = A[1, 0] * A[2, 2] * A[3, 1] + A[1, 1] * A[2, 0] * A[3, 2] + A[1, 2] * A[
    2, 1] * A[3, 0] - A[1, 0] * A[2, 1] * A[3, 2] - A[1, 1] * A[2, 2] * A[3, 0
    ] - A[1, 2] * A[2, 0] * A[3, 1]
b31 = A[0, 0] * A[2, 1] * A[3, 2] + A[0, 1] * A[2, 2] * A[3, 0] + A[0, 2] * A[
    2, 0] * A[3, 1] - A[0, 0] * A[2, 2] * A[3, 1] - A[0, 1] * A[2, 0] * A[3, 2
    ] - A[0, 2] * A[2, 1] * A[3, 0]
b32 = A[0, 0] * A[1, 2] * A[3, 1] + A[0, 1] * A[1, 0] * A[3, 2] + A[0, 2] * A[
    1, 1] * A[3, 0] - A[0, 0] * A[1, 1] * A[3, 2] - A[0, 1] * A[1, 2] * A[3, 0
    ] - A[0, 2] * A[1, 0] * A[3, 1]
b33 = A[0, 0] * A[1, 1] * A[2, 2] + A[0, 1] * A[1, 2] * A[2, 0] + A[0, 2] * A[
    1, 0] * A[2, 1] - A[0, 0] * A[1, 2] * A[2, 1] - A[0, 1] * A[1, 0] * A[2, 2
    ] - A[0, 2] * A[1, 1] * A[2, 0]
Ainv = np.array([[b00, b01, b02, b03], [b10, b11, b12, b13], [b20, b21, b22,
    b23], [b30, b31, b32, b33]]) / detA
return Ainv"
splitting a python list by a character in each element,"a, b, c = [list(g) for k, g in it.groupby(mylist, keyfunc)]"
even numbers python list,"def even_only(iter):
    pass"
randomly select x number of items from class list in python,"sample_size = random.randint(3, 20)
sample = random.sample(yourlist, sample_size)
for item in sample:
    pass"
can numpy einsum() perform a cross-product between segments of a trajectory,"p4 = xy[2 * s:size + 2 * s]
return np.cross(p1 - p2, p4 - p3)"
emulating pass-by-value behaviour in python,"def func1():
    pass"
copy using the windows copy dialog,"from win32com.shell import shell, shellcon"
"with python's optparse module, how do you create an option that takes a variable number of arguments?","if getattr(parser.values, option.dest):
    args.extend(getattr(parser.values, option.dest))
setattr(parser.values, option.dest, args)
parser = OptionParser()
parser.add_option('-q', '--quiet', action='store_false', dest='verbose',
    help=""be vewwy quiet (I'm hunting wabbits)"")
parser.add_option('-f', '--filename', action='callback', callback=cb, dest=
    'file')
options, args = parser.parse_args()
print(options.file)
print(args)"
how to run a script on all *.txt files in current directory?,"yield G % (dirpath, path.basename(fn), sepm, sepm.join(found))"
convert python strings into floats explicitly using the comma or the point as separators,"def read_float_with_comma(num):
    return locale.atof(num)"
twisted: tcp server with push producer example?,"""""""This is just about the simplest possible protocol"""""""
python equivalent of scala partition,"for n in items:
    pass"
using generator send() within a for loop,"return getattr(self.gen, attr)"
connect to mssql server 2008 on linux,ServerName = mssql
timing block of code in python without putting it in a function,import time
python gzip: is there a way to decompress from a string?,"decompressed_data = zlib.decompress(gz_data, 16 + zlib.MAX_WBITS)"
"finding contiguous, non-unique slices in pandas series without iterating",ser_orig[start:end] = new_manual_mode_text.format(i)
sorting one list to match another in python,"for i, id in enumerate(ids):
    pass"
implement lookahead iterator for strings in python,"def lookahead(it):
    it1, it2 = tee(iter(it))"
how to exit a multithreaded program?,threading.Thread.__init__(self)
is there some kind of expression evaluation within list/tuple slicing syntax within python?,[x for x in lis if x > 2]
what's the best way to format a phone number in python?,"def phone_format(phone_number):
    clean_phone_number = re.sub('[^0-9]+', '', phone_number)
formatted_phone_number = re.sub('(\\d)(?=(\\d{3})+(?!\\d))', '\\1-', '%d' %
    int(clean_phone_number[:-1])) + clean_phone_number[-1]"
python file upload from url using requests library,urlsrc = 'http://example.com/source'
python: find and replace numbers < 1 in text file,"float_numbers = map(float, string_numbers)"
how do i get rid of a circular dependency error while creating a database in sqlalchemy?,__tablename__ = 'answer'
python: loop doing the same thing to one item n-times as opposed doing it once to n-items,"grab_data(year, rc)"
how to store a dictionary on a django model?,"class Dicty(models.Model):
    name = models.CharField(max_length=50)


class KeyVal(models.Model):
    container = models.ForeignKey(Dicty, db_index=True)
key = models.CharField(max_length=240, db_index=True)"
how to limit function parameter as array of fixed-size?,"def func(array):
    if len(array) != 2:
        raise ValueError('array with length 2 was expected')"
how to remove stop words using nltk or python,"filtered_word_list = word_list[:]
for word in word_list:
    if word in stopwords.words('english'):
        filtered_word_list.remove(word)"
sqlalchemy equivalent of pyodbc connect string using freetds,"""""""PWD=;"""""""
from list of indices to one-hot matrix,"f = theano.function([idx], one_hot)"
how to generate a predictable shuffling of a sequence without generating the whole sequence in advance?,"seq = [str(x) for x in seq]
print('try %s: %s...' % (trynum + 1, ', '.join(seq)))"
disable logging for a particular package,"handlers = nullHandler
qualname = qpid
propagate = 0"
disable plotly in python from communicating with the network in any form,"path = os.path.join('offline', 'plotly.min.js')"
"tail -f log on server, process data, then serve to client via twisted","def connectionMade(self):
    pass"
generative recursion to find the sublist with the maximum sum,"def find_max(L):
    length = len(L)"
filling wtforms formfield fieldlist with data results in html in fields,"studentform.student_id = student_id
studentform.student_name = name"
upload file with python mechanize,print(commands.formfile.__doc__)
how to crawl a website/extract data into database with python?,"from BeautifulSoup import BeautifulSoup
import urllib.request, urllib.parse, urllib.error"
psycopg2: writing json objects using copy_from. how to format the json string?,"import io, psycopg2, json
json_to_write = json.dumps(myobject).replace('\\', '\\\\')
buffer = io.StringIO(json_to_write)"
how to drag and drop from one qlistwidget to another,"self.setIconSize(QtCore.QSize(124, 124))"
python - how to find all intersections of two strings?,"def longest_common_substring(s1, s2):
    pass"
edges between two subgraphs in pydot,callgraph.add_subgraph(cluster_bar)
is there a python version for the jvm based metrics library,method_name = method.__name__
how to plot and annotate hierarchical clustering dendrograms in scipy/matplotlib,plt.title('fake data')
ftpes - ftp over explicit tls/ssl in python,filename = 'remote_filename.bin'
easy pretty printing of floats in python?,print([('%0.2f' % i) for i in a])
kwargs in python executables,"if __name__ == '__main__':
    kwargs = dict(x.split('=', 1) for x in sys.argv[1:])
read(**kwargs)"
how to read strange csv files in pandas?,import pandas as pd
how can i plot a confusion matrix?,"fig = plt.figure()
plt.clf()"
"scheduling algorithm, finding all non overlapping intervals of set length",result[hit].append(user)
log in to a website with python,"browser.get('http://www.example.com')
browser.find_element_by_name('username').send_keys('myusername')
browser.find_element_by_name('password').send_keys('mypassword')
browser.find_element_by_class_name('welcomeLoginButton').click()
cookies = browser.get_cookies()"
match set of dictionaries. most elegant solution. python,"old = {item['id']: item for item in list_old}
created = set(new.keys()) - set(old.keys())
deleted = set(old.keys()) - set(new.keys())
intersect = set(new.keys()).intersection(set(old.keys()))
diff = {id: dict(set(new[id].items()) - set(old[id].items())) for id in
    intersect}
diff.update({id: new[id] for id in created})
list_diff = [dict(data, **{'id': id}) for id, data in list(diff.items())]"
python loops with multiple lists?,"listA = ['A', 'B', 'C', 'D', 'E']
listB = ['a', 'b', 'c', 'd', 'e']"
converting integer to list in python,print('--')
how can this very long if-statement be simplified?,"[0, 0, 0, 0, 0],
[0, 0, 0, 1, 0],
[0, 0, 1, 1, 1],"
ipdb with python unittest module,import ipdb
how to change the layout of a gtk application on fullscreen?,"win.connect('delete-event', gtk.main_quit)"
stop nosetests from printing logging information?,"TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'
NOSE_ARGS = ['--with-doctest']"
drawing polygons in numpy arrays,"points = [(1, 1), (1, 10), (10, 10), (10, 1)]"
django - how to save modified form without overriding original entry,"user = models.ForeignKey(User)
unapproved = models.Charfield(max_length=1000, default=None, Blank=True)"
get values from matplotlib axessubplot,"0.0, -64.0, 208.0, 0.0, -90.0, 0.0, -80.0, 0.0, 0.0, -80.0, -48.0"
parallelizing multiplication of vectors-like computation in python,"b = p.map(func, a)"
"shorten a number of lists based on a collective max length, moving excess to new lists",overflows[index] = new_lists[index][maxLength:]
find previous calendar day in python,print(datetime.date.today() - datetime.timedelta(1))
"setting selenium to use custom profile, but it keeps opening with default","profile.set_preference('browser.download.folderList', 2)"
how to expand all the subsections on the sidebar toctree in sphinx,"html_theme = 'customized_readable'
html_sidebars = {'**': ['fulltoc.html', 'relations.html', 'sourcelink.html',
    'searchbox.html']}"
quantile-quantile plot using scipy,"import numpy as np
import pylab
import scipy.stats as stats
measurements = np.random.normal(loc=20, scale=5, size=100)
stats.probplot(measurements, dist='norm', plot=pylab)
pylab.show()"
how can i turn django model objects into a dictionary and still have their foreign keys?,"model_to_dict(instance, fields=[field.name for field in instance._meta.fields])"
create a list of default objects of a class in python?,"if children is None:
    pass"
group similar items in a master list and create new lists based on grouped items,"{'Bus04': ['Bus04_00_00_IB_pts_Line', 'Bus04_00_00_OB_pts_Line'],
    'Bus15': ['Bus15_00_00_IB_pts_Line', 'Bus15_00_00_OB_pts_Line']}"
factorial of a large number in python,"def treefactorial(n):
    pass"
couchdb-python change notifications,doc['priority'] = 'high'
python dictionary get method in assignment,from collections import Counter
skipping execution of -with- block,print('Executing block of code ... ')
numpy unique without sort,uniq = OrderedDict()
groupby returning full row for max occurs,"df['b'] = df.groupby('a')['b'].transform('max')
df"
affine transformation between contours in opencv,"gray2b = cv2.warpAffine(gray2, Minv, shape(gray2.T))
figure(figsize=(10, 10))"
how to sort a list by checking values in a sublist in python?,"from operator import itemgetter
L = [['a', [10]], ['b', [1]], ['c', [5, 10]], ['d', [5, 1, -10]], ['e', [5,
    1, -1]]]
sorted(L, key=itemgetter(1), reverse=True)"
what's the meaning of %r in python,"def __init__(self, foo):
    self.foo = foo"
is there a list of all ascii characters in python's standard library?,curses.ascii.isascii()
how to count the total minutes and seconds in python,"s += timedelta(minutes=minutes, seconds=seconds * 100)
print(s.seconds / 60)"
best way to generate xml?,child.text = 'I am a child'
twisted server for multiple clients,"reactor.connectTCP(HOST, PORT, factory)"
animate a rotating 3d graph in matplotlib,from mpl_toolkits.mplot3d import Axes3D
changing the letters of a string,"for letter in cipher:
    pass"
how to open files given as command line arguments in python?,"import sys
with open(sys.argv[1], 'r') as my_file:
    pass"
algorithm to generate spanning set,"for i in range(len(cc)):
    pass"
data frame of tfidf with python,"[['wooow', 'is', 'it', 'very', 'good'], 'positive'],"
porting pymc2 bayesian a/b testing example to pymc3,"with pm.Model() as model:
    pass"
"insert a list into another list, without brackets and by replacing the current item in that index","x = [6, 8, 7, 9, 6]"
merging data frame columns of strings into one single column in pandas,df
how do i split models.py into different files for different models in pyramid?,"Base = declarative_base()
DBSession = scoped_session(sessionmaker(extension=ZopeTransactionExtension))"
is there a chain calling method in python?,"if len(funcs) > 0:
    return chainCalling(funcs[0](arg), funcs[1:])"
grouping items by a key?,lookup = collections.defaultdict(list)
remove duplicates from nested dictionaries in list,"{'value4': 'sdlsld', 'value3': 'ldlsld', 'value2': 'dskksks', 'value1':
    'asdasd'}"
remove all inline styles using beautifulsoup,"for tag in soup():
    pass"
sleep for exact time in python,"kernel32.SetWaitableTimer(timer, ctypes.byref(delay), 0, ctypes.c_void_p(),
    ctypes.c_void_p(), False)
kernel32.WaitForSingleObject(timer, 4294967295)"
alternative use patterns for python multiprocessing avoiding proliferation of global state?,"def main():
    src = np.ones((100, 100))
p = RowProcessor(src)
pool = Pool(processes=16)
rows = pool.map(p, list(range(100)))
print(rows)
if __name__ == '__main__':
    main()"
python and xml: how to place two documents into a single document,"for s in [XML1, XML2]:
    elem = minidom.parseString(s).firstChild
doc.firstChild.appendChild(elem)
print(doc.toxml())"
factory design pattern,print(button_obj.create_button(b).get_html())
get sql query count during a django shell session,"from django.db import connection
Model.objects.count()
print(len(connection.queries))"
making sure a python script with subprocesses dies on sigint,"print('subproc returncode', p.returncode)"
fuzzy matching a string within a large body of text in python (url),"for c in '-?\'""/{}[]()&!,.`':
    pass"
code for line of best fit of a scatter plot in python,return Rsqr
packet sniffing in python (windows),"p.open_live(dev, 1600, 0, 100)"
case insensitive python string split() method,regex = re.compile('\\s*[Ff]eat\\.\\s*')
how to format xy points for undistortpoints with the python cv2 api?,"xy_undistorted = cv2.undistortPoints(test, camera_matrix, dist_coeffs)
print(xy_undistorted)"
fastest way to find which of two lists of columns of each row is true in a pandas dataframe,"highs = ['High{:d}'.format(x) for x in range(0, 4)]"
preventing multiple matches in list iteration,"for star in list1:
    for s in list2:
        if np.logical_and(np.isclose(s['RA'], star['RA'], atol=0.000277778) ==
            True, np.isclose(s['DEC'], star['DEC'], atol=0.000277778) == True):
            if star not in newlist1:
                newlist1.append(s)
if s not in newlist2:
    newlist2.append(s)
break"
python web framework with low barrier to entry,"def GET(self, name):
    if not name:
        name = 'world'"
"determine if an image exists within a larger image, and if so, find it, using python","h, w = tpl.shape[:2]"
sort a big file with python heapq.merge,"with open('input.txt') as input_file:
    for chunk_number in count(1):
        sorted_chunk = sorted(islice(input_file, 50000))
if not sorted_chunk:
    break
chunk_name = 'chunk_{}.chk'.format(chunk_number)
chunk_names.append(chunk_name)
with open(chunk_name, 'w') as chunk_file:
    chunk_file.writelines(sorted_chunk)
with ExitStack() as stack:
    pass"
using map on every other list item python,"list_ = [1, 2, 3, 4]
double = (2).__mul__
map(double, list_[1::2])"
inclusion of external documentation into a sphinx project,required_arguments = 1
how to use __del__ in a reliable way?,foo.do_interesting_stuff()
"django-rest-framework, multitable model inheritance, modelserializers and nested serializers","first_name = models.CharField(max_length=40, blank=False, null=False)"
how to use a wtforms fieldlist of formfields?,"for entry in form.locations.entries:
    pass"
functools.wraps won't let me wrap a function with a class in python 3,"exit = getattr(self.file, 'close', None)"
edit configuration file through python,"f.seek(0, 0)"
python: optimal way of adding to dictionary with list values,self.d[index] = [value]
algorithmic / coding help for a pyspark markov model,"bits = line.split(', ')"
want to plot pandas dataframe as multiple histograms with log10 scale x-axis,"axs = data.hist(bins=bins)
for ax in axs.ravel():
    ax.set_xscale('log')
plt.gcf().tight_layout()
plt.show()"
changing file permission in python,"""""""Remove write permissions from this path, while keeping all other permissions intact.
Params:
    path:  The path whose permissions to alter.
"""""""
controlling django modelform output,"class Department(models.Model):
    pass"
how do i modify a text file in python?,"with open('foo.txt', 'a') as f:
    f.write('new line\n')"
splitting a string into an iterator,"for character in s:
    print(character)
for word in s.split(' '):
    pass"
how can i step to use the python debugger to break at every function call?,main(3)
python: estimate pi with trig functions as efficiently as possible,s = psum(n)
joining manytomany fields with prefetch_related in django,"areas = Area.objects.filter(id__in=[1, 2, 3]).order_by('name'
    ).prefetch_related('role_set')
for area in areas:
    roles = area.role_set.all()
for role in roles:
    pass"
convert string representation of list to list in python,"x = '[ ""A"",""B"",""C"" , "" D""]'"
python gui login program,"def LogIn():
    name = input('Please enter your name: ').lower()
usernames = pickle.load('data.pickle')
for userdata in usernames:
    if userdata['name'] == name:
        return userdata
print('could not find ' + name + ' in data.pickle')"
delete final line in file with python,"file.seek(0, os.SEEK_END)
pos = file.tell() - 1
while pos > 0 and file.read(1) != '\n':
    pos -= 1
file.seek(pos, os.SEEK_SET)
if pos > 0:
    file.seek(pos, os.SEEK_SET)
file.truncate()
file.close()"
how to make random n-dimensions by using numpy?,fitness_landscape.shape
unexpected behaviour when indexing a 2d np.array with two boolean arrays,"two_d[[0, 1], [3, 4]]"
drop row in pandas dataframe if any value in the row equals zero,"df = pd.DataFrame([[1, 0, 2], [1, 2, 3], [0, 1, 2], [4, 5, 6]])
df
df == 0"
runtimeerror: module compiled against api version a but this version of numpy is 9,print(numpy.__path__)
windows 7: how to bring a window to the front no matter what other window has focus?,"win32gui.SetWindowPos(HWND, win32con.HWND_NOTOPMOST, 0, 0, 0, 0, win32con.
    SWP_NOMOVE + win32con.SWP_NOSIZE)"
read an xml file in python,ntxt.write(rline)
proper indentation for python multiline strings,"def foo():
    string = """"""line one
             line two
             line three"""""""
securely storing passwords for use in python script,"salt = bcrypt.gensalt()
combo_password = raw_password + salt + master_secret_key
hashed_password = bcrypt.hashpw(combo_password, salt)"
how do you create a weak reference to an object in python?,"import weakref


class Object:
    pass
o = Object()"
count vowels in string python,counts[char] += 1
opening multiple (an unspecified number) of files at once and ensuring they are correctly closed,"for f in files:
    fs.append(open(f, 'rb'))"
unicode fonts in pygame,pygame.display.flip()
getting smallest of coordinates that differ by n or more in python,dataset[0].intersection(*dataset[1:])
how do i reliably split a string in python?,a = some_string
numpy array with dtype decimal?,"d = decimal.Decimal('1.1')
a = numpy.array([d, d, d], dtype=numpy.dtype(decimal.Decimal))
type(a[1])"
draw a map of a specific country with cartopy?,ax.coastlines(resolution='10m')
"in django, how to determine if translation for a given text is available?","def translation_available(msg):
    pass"
setting values with pandas.dataframe,"dates2 = pandas.date_range('2016-01-14', periods=6, freq='H')"
uploading and downloading files with flask,"response.headers['Content-Disposition'] = 'attachment; filename=result.csv'
return response"
how to make julia code more efficient? currently it is performing even worse than python,"s[t], s[j] = s[j], s[t]"
setting different bar color in matplotlib python,ax = plt.gca()
inefficient multiprocessing of numpy-based calculations,shared = np.arange(n)
how to obtain values of request variables using python and flask,myvar = request.args['myvar']
xlwt multiple styles,"style.borders = borders
worksheet.write(0, 0, 'test value', style=style)
workbook.save('test.xls')"
how are debug consoles implemented in python?,"while True:
    pass"
quickly alphabetize a large file via python,"lst = open('appendedFile', 'rt').readlines()"
"produce pdf files, draw polygons with rounded corners","return np.arctan2(y, x)"
work with github wiki repository using python,repo.index.commit('your message to the world')
how to apply a function to a column in pandas depending on the value in another column?,condition = df.Conflict != 'Match Conflict'
python: find out whether a list of integers is coherent,"sorted_list = sorted(my_list)
return sorted_list == list(range(sorted_list[0], sorted_list[-1] + 1))"
which is the efficient way to convert a float into an int in python?,return int(n)
convert list of strings to int,"lst.append(map(int, z))"
using list with python multiprocessing,"p.start()
p.join()"
"convert list of positions [4, 1, 2] of arbitrary length to an index for a nested list","nli.insert(['c', ['o', 'w']])"
python: pass a generic dictionary as a command line arguments,"print(filename)
print(args)"
calculating average of list of data from sqlite3 in python,age_list = [int(a[0]) for a in ages_iterator]
how to take two lists and combine them excluding any duplicates?,list(set(first) | set(second))
wrap c struct with array member for access in python: swig? cython? ctypes?,"double * weight
double * l"
reliable way to execute thousands of independent transaction?,ndb.delete_multi_async(Counter.query().fetch(keys_only=True))
change locale for django-admin-tools,"class AdminLocaleMiddleware:

    def process_request(self, request):
        pass"
how to convert numbers in a string without using lists?,return float(s)
most efficient way to build list of highest prices from queryset?,"most_expensive_cars = []
for company in companies:
    most_expensive_cars.append(list(company.cars_by_price.all())[0])"
regarding install scipy from pycharm,"""""""path/to/scipy"""""""
keeping track of indices change in numpy.reshape,import numpy as np
how can i plot separate pandas dataframes as subplots?,"df1.plot(ax=axes[0, 0])"
python. manipulation with a list of dictionaries,get_superdicts(a)
using lxml to parse namepaced html?,"""""""http://www.ncbi.nlm.nih.gov/pubmed/?term=The%20cost-effectiveness%20of%20mirtazapine%20versus%20paroxetine%20in%20treating%20people%20with%20depression%20in%20primary%20care"""""""
python xml minidom get element by tag in child node,doc = ET.parse(xmlfile).getroot()
get all documents of a collection using pymongo,"for document in cursor:
    pass"
how to create a python decorator that can be used either with or without parameters?,"assert f2(2, 5) == 30"
python opening and reading files one liner,"def write_to(self, text):
    return self.write(text)"
need to avoid subprocess deadlock without communicate,"p = Popen(cmd, bufsize=1, stdin=open(os.devnull), stdout=PIPE, stderr=STDOUT)
for line in iter(p.stdout.readline, ''):
    pass"
how can i force cherrypy to accept a variable number of get parameters?,pass
a qwidget like qtextedit that wraps its height automatically to its contents?,"self.resize(600, 400)"
django custom file storage system,self.delete(name)
function that accepts both expanded arguments and tuple,"def my_f(a, *b):

    def whatever(my_tuple):
        print(my_tuple)
return
if hasattr(a, '__iter__'):
    whatever(a)
elif b:
    whatever((a,) + b)
else:
    raise TypeError('malformed input')
return"
python fuzzy matching (fuzzywuzzy) - keep only best match,"Digi_Results = [row, score, found]
writer.writerow(Digi_Results)"
computing the nth 6 character permutation of an alphabet,"def factorial(n):
    if n == 0:
        return 1
return n * factorial(n - 1)

def unrank(S, k, i):
    n = len(S)
nb = factorial(n) // factorial(n - k)
if i >= nb:
    raise IndexError
res = []
while k > 0:
    nb = nb // n
pos = i // nb
i = i % nb
res.append(S[pos])
del S[pos]
k = k - 1
n = n - 1
return res"
matplotlib - grids and plotting color coded y values/data ranges,"colors = [(25, '#FF69B4'), (20, '#F08228'), (15, '#E6AF2D'), (10, '#E6DC32'
    ), (5, '#A0E632'), (0, '#00DC00')]
x = np.linspace(times[0], times[-1], 300)
maxt = np.interp(x, times, maxtemps)
mint = np.interp(x, times, mintemps)
last_level = np.inf
for level, color in colors:
    tmp_min = np.clip(mint, level, last_level)
tmp_max = np.clip(maxt, level, last_level)
pl.fill_between(x, tmp_min, tmp_max, lw=0, color=color)
last_level = level
pl.grid(True)
pl.show()"
generate matlab code from python,"tr, yr = e.eval('ode45(@(t,y) 2*t, tspan, y0)', nargout=2)
plt.plot(tr, yr)"
print string as hex literal python,"x = '\\x01\\x41\\x42\\x43'
x"
python head and tail in one line,"l = deque([1, 2, 3, 4, 5, 6, 7, 8, 9])"
python select random date in current year,"from datetime import date, timedelta"
how to suppress noisy factory started/stopped log messages from twisted?,"myQuietPool._factory = QuietHTTP11ClientFactory
agent = client.Agent(reactor, pool=myQuietPool)"
python: split list of integers based on step between them,"from itertools import groupby, count"
remove multiple elements from a list of index with python,"def remove_abnormalities(values, indices):
    list = []
for i in range(len(values)):
    if i not in indices:
        list.append(values[i])"
any python support vector machine library around that allows online learning?,"samples = [[0, 0], [0, 1], [1, 0], [1, 1]]"
calling a function from string inside the same module in python?,"if __name__ == '__main__':
    funcnames = {'bar': bar}"
how to get the symbolic path instead of real path?,"import os
print(os.path.realpath('test/link/file'))"
what's the most efficient way to find factors in a list?,"for x in numbers:
    for y in numbers:
        if x != y and y % x == 0:
            multiples[x].append(y)
for x in numbers:
    pass"
"python, fix broken npy file. valueerror: total size of new array must be unchanged","np.save('foo.npy', a)"
using '/' as greater than less than in python?,"bool(5 / 6)
6 / 5"
how to read json files in tensorflow?,init_op = tf.initialize_all_variables()
generate unique id for python object based on its attributes,"unique_hash1 == unique_hash2
unique_hash2 == unique_hash3"
how can a python 2 doctest fail and yet have no difference in the values in the failure message?,"def test_func():
    ""\n    >>> test_func()\n    u'\\u2603'\n    """
how to count all elements in a nested dictionary?,l[1]
"google protocol buffers, hdf5, numpy comparison (transferring data)","x = np.zeros(10, dtype=np.object)
x[3] = {'pants', 10}"
how to make scripts auto-delete at the end of execution?,"import sys, subprocess
subprocess.Popen(
    'python -c ""import os, time; time.sleep(1); os.remove(\'{}\');""'.format
    (sys.argv[0]))"
deleting multiple slices from a numpy array,r = np.random.randint(n_data - 1000)
how to concatenate two html file bodies with beautifulsoup?,"import copy
document2.body.append(copy.copy(element))"
how to rearrange pandas column sequence?,"for x in dataframe.columns:
    if x not in cols:
        if front:
            pass"
how do i extract the names from a simple function?,tree = ast.parse(source)
update labels in a separate worker (process instance),self.worker.start()
"pandas, matplotlib, use dataframe index as axis tick labels",ax.set_yticks(arange(df.shape[0]))
how to pass kwargs from save to post_save signal,"if commit:
    user.save()"
access an arbitrary element in a dictionary in python,list(dict.keys())
create new columns in pandas from python nested lists,"data = np.zeros((n, u.shape[0]), dtype=np.uint8)"
label encoding across multiple columns in scikit-learn,"output = X.copy()
if self.columns is not None:
    for col in self.columns:
        output[col] = LabelEncoder().fit_transform(output[col])
else:
    for colname, col in output.items():
        output[colname] = LabelEncoder().fit_transform(col)
return output

def fit_transform(self, X, y=None):
    return self.fit(X, y).transform(X)"
exclude module docstring in autodoc,"if what == 'module' and name == 'yourmodule':
    pass"
how to find all anchor tags inside a div using beautifulsoup in python,"for a in soup.select('div a[href]'):
    pass"
python: how to get local maxima values from 1d-array or list,y = sin(t)
c++11 regex slower than python,result.clear()
how can i suppress the newline after a print statement?,"""""""Pretty-print a Python object to a stream [default is sys.stdout] with a comma at the end."""""""
"python, running command line tools in parallel",main(sys.argv)
"given two lists of integers, find each pair within a distance of each other < o(n^2)","for a in l1:
    while b < len(l2) and a - l2[b] > dist:
        b += 1
while e < len(l2) and l2[e] - a <= dist:
    e += 1
ans.extend([(a, x) for x in l2[b:e]])
return ans"
python - read text file with weird utf-16 format,print(line.decode('utf-16-le').split())
how to specify py2app icon?,DATA_FILES = []
how to call a python script from php?,"pyscript = 'G:\\wamp\\www\\ll\test.py'
python = 'C:\\Python27\\python.exe'
cmd = '$pyscript $python'"
count all +1's in the file python,"s.split(None, 1)"
stop nosetests from printing logging information?,"if 'test' in sys.argv:
    INSTALLED_APPS = INSTALLED_APPS + ('django_nose',)
TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'
NOSE_ARGS = ['--with-doctest']
DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3'}
LOGGING['loggers'] = {}"
how to optimize image size using wand in python,img.save(filename=output_destination)
how do i find difference between times in different timezones in python?,from dateutil.relativedelta import *
registering multiple signals in django,"def post_save_category(sender, **kwargs):
    global all_categories
all_categories = []"
python - should all member variables be initialized in __init__,"class Mutant(object):
    """"""A mutant!"""""""
how to dynamically override __setitem__? (no subclass),"class Foo(object):

    def __setitem__(self, k, v):
        return self._instance_setitem(k, v)

def _instance_setitem(self, k, v):
    print('old setitem')

def new_setitem(self, k, v):
    print('new setitem')
f[0] = 0
f._instance_setitem = types.MethodType(new_setitem, f, Foo)"
py2neo how to retrieve a node based on node's property?,"results = [r for r in genNodes(l, k, v)]"
how to add bi-directional manytomanyfields in django admin?,report = models.ForeignKey(Report)
executing a python script in apache2,"print ()
print('Hello World!')"
get legend as a separate picture in matplotlib,legend_fig.canvas.draw()
how to import large number of global variables without listing each one? (python),"g = globals()
for key in dir(file_one):
    pass"
how to add a line parallel to y axis in matplotlib?,plt.axvline(x=0.5)
how to cpickle dump and load separate dictionaries to the same file?,d2 = pickle.load(fp)
how to join links in python to get a cycle?,"G.add_edges_from([[0, 3], [1, 0], [3, 1]])"
using django-rest-interface with http put,load_put_and_files(request)
printing a tree data structure in python,"for child in self.children:
    pass"
pythonic way to functions/methods with a lot of arguments,pass
what is the proper way to split a python module into submodules?,"class A(object):

    def __init__(self, value):
        self.value = value
a = A(1)
print(a.value)
a.value = 5
print(a.value)"
selenium open pop up window [python],"baseurl = 'http://www.globalrph.com/davescripts/popup.htm'
dr = webdriver.Firefox()
dr.get(baseurl)"
how to create list field in django,mylist = ListField()
best way to add an environment variable in fabric?,"with shell_env(FOO1='BAR1', FOO2='BAR2', FOO3='BAR3'):
    run('env | grep BAR')"
how do i access template cache? - django,"hash = md5_constructor(':'.join([urlquote(var) for var in variables]))
cache_key = 'template.cache.%s.%s' % ('table', hash.hexdigest())"
rolling average pairwise correlation in python,"def tril_sum(df):
    pass"
slicing pandas dataframe according to number of lines,"import collections
groups = list({k for k, v in list(collections.Counter(df.Group).items()) if v > 3})
groups"
django: how to filter model field values with out space?,"def insert_whitespace(string):
    s = []
for i in range(0, len(string)):
    s.append(string[i:i + 1])
return '\\s*'.join(s)"
python clean way to wrap individual statements in a try except block,"if Weight is not None:
    pass"
how to put a title on each scatter_matrix in jupyter + pandas,plt.suptitle(date)
python - tuple unpacking in dict comprehension,"s = 'A=5, b=7'"
how to pull out css attributes from inline styles with beautifulsoup,"soup = BeautifulSoup(
    '<html><body><img style=""background:url(/theRealImage.jpg) no-repate 0 0; height:90px; width:92px;"") src=""notTheRealImage.jpg""/></body></html>'
    )
style = soup.find('img')['style']
urls = re.findall('url\\((.*?)\\)', style)
urls"
effective keyboard input handling,"def handle_left():
    curpiece.shift(-1, 0)"
how to run django unit-tests on production database?,"class TestChronology(unittest.TestCase):

    def setUp(self):
        print('Write your pre-test prerequisites here')

def test_equality(self):
    """"""
        Tests that 1 + 1 always equals 2.
        """""""
how can i find a process by name and kill using ctypes?,TerminateProcess.restype = ctypes.wintypes.BOOL
array-based numpy 3d array assignment,"mat.reshape(m, -1)[:, (np.arange(r) * (r + 1))] = np.nan"
matplotlib - change marker color along plot line,"y = np.sin(2 * np.pi * x)
cmap = cm.jet
fig = plt.figure(1)
fig.clf()
ax = fig.add_subplot(1, 1, 1)
c = np.linspace(0, 10, 1000)
ax.scatter(x, y, c=c, cmap=cmap)"
replacing values in a python list/dictionary?,"for datadict in datalist:
    for key, value in list(datadict.items()):
        if value == 'AAA':
            datadict[key] = 'XXX'"
getting next variable in a for loop,"zip(s, s[1:], s[2:])"
count how many elements in a numpy array are within delta of every other element,"x = np.random.randint(1000000, size=i)"
networkx : convert multigraph into simple graph with weighted edges,G2 = nx.Graph(G)
python pandas how to combine the pandas with the same column value,"df = df.groupby('A')['B'].apply(','.join).reset_index()
print(df)"
adding each item in list to end of specific lines in fasta file,"with open(infile, 'r') as fh:
    pass"
how to organize a data base access layer?,"updated_obj = mock.updates.pop()
assert updated_obj.attr == 'foobar'"
how to pre-populate checkboxes with flask/wtforms,"def __init__(self, *args, **kwargs):
    super(GroceryListForm, self).__init__(*args, **kwargs)"
strip html from strings in python,print(repr(html_to_text(html)))
pyqt: getting file name for file dropped in app,"if event.mimeData().hasUrls():
    pass"
3d contour plot from data using mayavi / python,ds = mlab.pipeline.add_dataset(ug)
django password reset email subject,from django.contrib.sites.models import Site
how to add capital to django-cities-light country model?,"class Country(AbstractCountry):
    capital = models.CharField(max_length=50)"
how should i structure and access a table of data so that i can compare subsets easily in python 3.5?,"for mindex in range(len(months) - 1):
    m1 = months[mindex]"
how to fix an encoding migrating python subprocess to unicode_literals?,"from subprocess import Popen, PIPE"
remove <br> tags from a parsed beautiful soup list?,text = ''
how to get the size of a string in python?,"print(getsizeof('\xd0\xb9\xd1\x86\xd1\x8b'))
print(getsizeof('\xd0\xb9\xd1\x86\xd1\x8b'.decode('utf8')))"
how to render to response?,"return render_to_response('my_template.html', my_data_dictionary,
    context_instance=RequestContext(request))"
regular expression matching all but a string,"exclude = set(['aa', 'bb'])"
fixing code to make a triangle,"chr = input('Please enter the drawing character: ')
row = 1
while row <= size:
    col = 1
while col < row:
    print(' ', end=' ')
col = col + 1
col = 1
while col < size - row + 1:
    print(chr, end=' ')
col = col + 1
print(chr)
row = row + 1
print('')"
read file line by line with asyncio,"def readline(f):
    pass"
how to dynamically set the queryset of a models.modelchoicefield on a forms.form subclass,from assets.models import Asset
opencv find coloured in circle and position value python,import matplotlib.pyplot as plt
"is there an easy way to make a script to mimic the functionality of the python executable exactly, for use in a pyinstaller deploy?","import subprocess
import sys"
how to custom-sort a list of dict to use in json.dumps,"allsites = [{'A5': 'G', 'A10': 'G', 'site': 'example1.com', 'A1': 'G'}, {
    'A5': 'R', 'A10': 'Y', 'site': 'example2.com', 'A1': 'G'}]
sort_order = ['site', 'A1', 'A5', 'A10']"
sort argparse help alphabetically,"p = argparse.ArgumentParser()
for g in p._action_groups:
    pass"
use frozenset as a pair in python,"pair = frozenset([element1, element2])"
how do you get the name of the program using argparse in python?,"print('parser.prog:', parser.prog)"
get document doctype with beautifulsoup,"for child in soup.contents:
    if isinstance(child, BS.Declaration):
        declaration_type = child.string.split()[0]
if declaration_type.upper() == 'DOCTYPE':
    pass"
using an iterator to print integers,print('Iteration done.')
adding a string in front of a string for each item in a list in python,"for i, p in enumerate(n):
    if not p.startswith('h'):
        n[i] = 'http' + p"
detecting consecutive integers in a list,"nums = [1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14]
ranges = sum((list(t) for t in zip(nums, nums[1:]) if t[0] + 1 != t[1]), [])
iranges = iter(nums[0:1] + ranges + nums[-1:])
print(', '.join([(str(n) + '-' + str(next(iranges))) for n in iranges]))"
how to pack and unpack using ctypes (structure <-> str),"g = open('foo', 'rb')
q = Example()
g.readinto(q)"
find hyperlinks in text using python (twitter related),r = re.compile('(http://[^ ]+)')
why can i use the same name for iterator and sequence in a python for loop?,"dis(""""""x = [1,2,3,4,5]
for x in x:
    print(x)
print(x)"""""")"
how to determine if a black-box is polynomial or exponential,"n = np.linspace(lo, hi, num=N)"
how to create list of 3 or 4 columns of dataframe in pandas when we have 20 to 50 colums?,print(df[df.columns[2:5]])
improving pure python prime sieve by recurrence formula,"rem = (rem << 2) + (a >> 30)
a <<= 2"
enumeration of all possible two-member group constellations,"(1, 4), (2, 5), (3, 6)"
"download file, parse it and serve in flask","@app.route('/transform-file', methods=['POST'])
def transform():
    data = inbound_file.read()
data = data.replace('A', 'Z')"
python statsmodels ols: how to save learned model to file,results.save('longley_results.pickle')
how to preview a part of a large pandas dataframe?,"df.ix[:5, :10]"
timedelta multiply with float in python,"def timedelta_total_seconds(td):
    pass"
negative zero in python,"b * d
a * c == b * d"
tensorflow: how to get a tensor by name?,test = sess.run(e)
append multiple values for one key in python dictionary,years_dict[line[0]].append(line[1])
wait for a request to complete - python scrapy,"def get_ad(self, response):
    temp_dict = AppextItem()"
"compare two group string,return different results","S1 = 'Hello World'
S2 = 'Hello World'"
unpickling a function into a different context in python,"def __getstate__(self):
    """"""Returns everything needed to pickle _View instance."""""""
how to check if type of a variable is string?,"if PY3:
    string_types = str,
else:
    string_types = str,"
sqlalchemy json as blob/text,"class MyTable(Entity):
    using_options(tablename='my_table')
foo = Field(String, primary_key=True)"
matplotlib: how to annotate point on a scatter automatically placed arrow?,"ax.plot(x, y, 'bo')
ax.annotate('Something', xy=(x[0], y[0]), xytext=(-20, 20), textcoords=
    'offset points', ha='center', va='bottom', bbox=dict(boxstyle=
    'round,pad=0.2', fc='yellow', alpha=0.3), arrowprops=dict(arrowstyle=
    '->', connectionstyle='arc3,rad=0.5', color='red'))"
"create new list by taking first item from first list, and last item from second list","[value for pair in zip(a, b[::-1]) for value in pair]"
implementing the factory design pattern using metaclasses in python,"class FactoryMetaclassObject(type):

    def __init__(cls, name, bases, attrs):
        pass"
"proper way to clean up a python service -- atexit, signal, try/finally",give_high_fives()
matplotlib: saved files in a loop aren't the same as in show(),"for i in range(0, int(files)):
    pass"
python: how to count overlapping occurrences of a substring,"len([_ for s in re.finditer('(?=aa)', 'aaa')])"
can i make django querydict preserve ordering?,"class MyQueryDict(QueryDict):
    pass"
python logging: how to represent newlines in the format string in a logging config file?,"s = self._fmt.replace('\\n', '\n') % record.__dict__"
nltk tagging spanish words using a corpus,cess_sents = cess.tagged_sents()
flask sqlalchemy many-to-many insert data,db.session.add(c)
hotelling's t^2 scores in python,print('latent:' + ' %9.4f' * len(latent) % tuple(latent))
python dynamic function creation with custom names,o.two()
how to extract sheet from *.xlsm and save it as *.csv in python?,"with open('{}.csv'.format(sheet.name), 'wb') as f:
    writer = csv.writer(f)"
numpy object array of numerical arrays,"a = np.array([1, 2, 3])
b = np.array([None, a, a, a])[1:]
print(b.dtype, b[0].dtype, b[1].dtype)"
how to use different view for django-registration?,"class RegistrationViewUniqueEmail(RegistrationView):
    pass"
how can i get the ip address of eth0 in python?,ni.interfaces()
use rfc2217 network serial ports with twisted python?,"class SerialPort(serialport.SerialPort):

    def _serialFactory(self, dev, *args, **kwargs):
        """""" pyserial recommends the following for supporting serial urls """"""
try:
    return serial.serial_for_url(dev)
except AttributeError:
    pass"
python animation without globals,game = play_game(initial)
dropping root permissions in python,drop_privileges()
how to set tcp_nodelay flag when loading url with urllib2?,"pageContent = urllib.request.urlopen(httpRequest)
pageContent.readline()"
"convert python sequence to numpy array, filling missing values","array([[1, 0], [1, 2]])"
deferred evaluation with lambda in python,"[2, 2, 2]"
"does filter,map, and reduce in python create a new copy of list?","def processItemsNotTwo_case1(list_of_nums):
    list_of_nums[:] = [x for x in list_of_nums if x != 2]"
"is there a way to simplify this ""n-way merge"" in python","with open('temp0-sorted.txt', 'r') as f1:
    pass"
display a webcam stream in pyqt4 using opencv camera capture,"camcapture = cv.CaptureFromCAM(0)
cv.SetCaptureProperty(camcapture, cv.CV_CAP_PROP_FRAME_WIDTH, 1280)
cv.SetCaptureProperty(camcapture, cv.CV_CAP_PROP_FRAME_HEIGHT, 720)"
how to read unicode input and compare unicode strings in python?,"ud.normalize('NFC', a2)
ud.normalize('NFC', a1) == ud.normalize('NFC', a2)"
optimization of importing modules in python,"def second():
    import collections
x = collections.defaultdict(list)

def secondwithout():
    x = collections.defaultdict(list)
print('first with import', timeit.timeit('first()',
    'from __main__ import first'))
print('second with import', timeit.timeit('second()',
    'from __main__ import second'))
print('first without import', timeit.timeit('firstwithout()',
    'from __main__ import firstwithout'))
print('second without import', timeit.timeit('secondwithout()',
    'from __main__ import secondwithout'))"
python regex alternative for join,import re
how to do url path check in prepare method of tornado requesthandler?,"class MyRequestHandler(tornado.web.RequestHandler):

    def initialize(self):
        pass"
assert that a method was called with one argument out of several,return Any()
how can i run python source from stdin that itself reads from stdin?,"import sys, os
tty_path = os.popen('tty', 'r').read().strip()"
creating acronyms in python,print(''.join(e[0] for e in x.split()))
how do i set custom html attributes in django forms?,"from django.forms import ModelForm, Textarea
from myapp.models import Author


class AuthorForm(ModelForm):


    class Meta:
        model = Author
fields = 'name', 'title', 'birth_date'
widgets = {'name': Textarea(attrs={'cols': 80, 'rows': 20})}"
how did numpy implement multi-dimensional broadcasting?,"A = np.arange(6).reshape(2, 3)
B = np.array([[1], [2]])"
can't access parent member variable in python,"def print_haircolor(self):
    pass"
getting readline to block on a fifo,"fetchlistfile = file('tofetch', 'r')"
call a shell command containing a 'pipe' from python and capture stdout,print(p_stdout)
is there a ipython notebook api?,"def show(self):
    print(self.x)"
change unix password from command line over python/fabric,"from getpass import getpass
from fabric.api import *

def change_password(user):
    password = getpass('Enter a new password for user %s:' % user)"
check database schema matches sqlalchemy models on application startup,"""""""See database sanity check completes when tables and columns are created."""""""
how to make a qinputdialog trigger the virtual keyboard to show up?,"msg = QtDBus.QDBusMessage.createMethodCall('org.onboard.Onboard',
    '/org/onboard/Onboard/Keyboard',
    'org.onboard.Onboard.Keyboardorg.onboard.Onboard.Keyboard.Show')
QtDBus.QDBusConnection.sessionBus().send(msg)
text, ok = QtGui.QInputDialog.getText(self, 'Input Dialog', 'Enter your name:')
msg2 = QtDBus.QDBusMessage.createMethodCall('org.onboard.Onboard',
    '/org/onboard/Onboard/Keyboard',
    'org.onboard.Onboard.Keyboardorg.onboard.Onboard.Keyboard.Hide')"
suds over https with cert,self.addcredentials(request)
removing nan values from a python list,"119.63673757, 19712.43294378, 0.0, 20052.36456133
19846.4815936, 20041.86766194, 19921.81269442, 0.0"
python copy files by wildcards,"if os.path.isfile(filename4):
    pass"
how to send cookies in a post request with the python requests library?,"cookie = {'enwiki_session': '17ab96bd8ffbe8ca58a78657a918558'}
r = requests.post('http://wikipedia.org', cookies=cookie)"
abort a list comprehension,[(x ** 2) for x in range(10)]
"python, deleting all files in a folder older than x days","now = time.time()
cutoff = now - 10 * 86400
files = os.listdir(os.path.join(get_file_directory(__file__), 'logs'))
file_path = os.path.join(get_file_directory(__file__), 'logs/')
for xfile in files:
    if os.path.isfile(str(file_path) + xfile):
        t = os.stat(str(file_path) + xfile)
c = t.st_ctime
if c < cutoff:
    os.remove(str(file_path) + xfile)"
how do i create a webpage with buttons that invoke various python scripts on the system serving the webpage?,"print() 
print('<TITLE>CGI script output</TITLE>')
print('<H1>This is my first CGI script</H1>')"
gevent pool with nested web requests,links + soup.find_all('a')
how to locate a function in a python module tree?,"for result in find_name(submodule, name):
    yield result"
multiprocessing process terminate fails on linux,"signal.signal(signal.SIGTERM, lambda signum, stack_frame: sys.exit(1))"
how to remove the legend in a seaborn stripplot? attributeerror: unknown property legend,"tips = sns.load_dataset('tips')
ax = sns.stripplot(x='sex', y='total_bill', hue='day', data=tips, jitter=True)
ax.legend_.remove()
plt.show()"
opencv - apply mask to a color image,"cv2.circle(mask, (i[0], i[1]), i[2], (255, 255, 255), -1)"
autocorrelation of a multidimensional array in numpy,"padding = numpy.zeros((5, 3))
dataPadded = numpy.concatenate((data, padding), axis=1)
print(dataPadded)"
in python - the operator which a set uses for test if an object is in the set,"return cmp(self.s, other.s)"
upload a large xml file with python requests library,headers = {'content-type': 'application/xml'}
python: create dictionary from text/file that's in dictionary format,"dict_from_file = eval(inf.read())
inf.close()"
how to do a polynomial fit with fixed points,"p1, _ = optimize.curve_fit(f, x, y, (0, 0, 0, 0, 0), sigma=sigma)"
installing python3 in a python2 virtual environment,deactivate
scrape websites with infinite scrolling,driver.find_element_by_link_text('All').click()
how to generate rest/sphinx source from python?,printer.setOutputFileName('sample.pdf')
using multiple web pages in a web scraper,"br.set_handle_redirect(True)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)"
efficient simulation of arbitrary dynamical system in python via numba?,import numba
python with embedded call to mpirun,"args = shlex.split(RunCprogram)
env = os.environ
new_env = {k: v for k, v in env.items() if 'MPI' not in k}
p = subprocess.Popen(RunCprogram, shell=True, env=new_env, stdout=
    subprocess.PIPE, stdin=subprocess.PIPE)
p.wait()
result = 'process myrank ' + str(myrank) + ' got ' + p.stdout.read()
print(result)"
putting a `cookie` in a `cookiejar`,"URL = '...whatever...'
jar = cookielib.CookieJar()
r = requests.get(URL, cookies=jar)
r = requests.get(URL, cookies=jar)"
in python use of hierarchy for findcontours,"contours, hierarchy = cv2.findContours(edges, cv2.RETR_EXTERNAL, cv2.
    CHAIN_APPROX_SIMPLE)"
using tkinter in python to edit the title bar,"root.wm_title('Hello, world')"
how do i find difference between times in different timezones in python?,date_one = datetime.now(pytz.timezone('US/Eastern'))
how can i get nose to find class attributes defined on a base test class?,"for class_ in cls.__mro__:
    pass"
connect to an uri in postgres,hostname = result.hostname
google calendar api v3 - how to obtain a refresh token (python),"self.flow = OAuth2WebServerFlow(client_id=self.client_id, client_secret=
    self.client_secret, scope=self.SCOPE, user_agent=user_agent,
    redirect_uri='urn:ietf:wg:oauth:2.0:oob', access_type='offline',
    approval_prompt='force')"
how to get files from directories in python,"result = zip(sorted(glob.glob('/dir/*stringA*')), sorted(glob.glob(
    '/dir/*stringB*')))"
multiple files for one argument in argparse python 2.7,"for f in args.file:
    for line in f:
        pass"
installing pil with pip,ln - s / usr / lib / i386 - linux - gnu / libjpeg.so / usr / lib
how do i encrypt and decrypt a string in python?,"obj = AES.new('This is a key123', AES.MODE_CBC, 'This is an IV456')
message = 'The answer is no'
ciphertext = obj.encrypt(message)
ciphertext
obj2 = AES.new('This is a key123', AES.MODE_CBC, 'This is an IV456')
obj2.decrypt(ciphertext)"
retrieve number of times lists overlap by index,"list1 = [1, 0, 0, 1, 0, 0]
list2 = [1, 0, 1, 0, 0, 0]
num_overlap = 0
for i in range(len(list1)):
    for n in range(len(list2)):
        if i - 1 == n - 1 and list1[i - 1] == list2[n - 1]:
            num_overlap += 1
print(num_overlap)"
"how do i get the ""visible"" length of a combining unicode string in python?",wcswidth('\xe1\x84\x80\xe1\x85\xa1\xe1\x86\xa8')
how to plot the lines first and points last in matplotlib,"plt.plot(R, P, color='0.2', lw=1.5, zorder=1)
plt.scatter(R, P, s=150, color=c, zorder=2)"
python3/classes/oop/ how do you change a objects self values with a method?,"@property
def hours(self):
    return self.totalsecs // 3600

@property
def minutes(self):
    return self._get_leftoversecs() // 60

@property
def seconds(self):
    return self._get_leftoversecs() % 60

def _get_leftoversecs(self):
    return self.totalsecs % 3600

def increment(self, t):
    self.totalsecs += t"
django caching for authenticated users only,return render_user(request)
construct sparse matrix using categorical data,"users, I = np.unique(user_item[:, (0)], return_inverse=True)"
how to do a less than or equal to filter in django queryset?,User.objects.filter(userprofile__level__gte=0)
finding the best combination of lists with maximum function value,return -sys.maxsize
multiple assigments with a comma in python,a = b
how can i count each udp packet sent out by subprocesses?,print(s.recvfrom(65565))
reading unicode file data with bom chars in python,encoding = result['encoding']
assign output of os.system to a variable and prevent it from being displayed on the screen,"out, err = proc.communicate()"
matplotlib: plot numpy arrays with none as values,"test = np.array([None])
k = k[k != test].reshape(-1, 2).astype(float)"
how do i determine the size of an object in python?,"getsize({'foo': 'bar', 'baz': 'bar'})"
pandas dataframe as field in django,"class MyModel(models.Model):
    dfjson = JSONField()"
how to add osx menu bar icon with wxpython,self.frame.Raise()
how to properly iterate with re.sub() in python,"def __call__(self, match):
    self.count += 1"
print greeting message when entering python interpreter,"foo = 'Hello'
bar = 12.4123"
fizzbuzz (turning my output to a string?),"if num % 3 == 0 and num % 5 == 0:
    pass"
two different submit buttons in same form in django,"if form.is_valid():
    pass"
is there a clean way to get the n-th column of an html table using beautifulsoup?,doc = parse('http://python.org').getroot()
how to create dropdown with value and text node - wxpython,"self.cb = wx.ComboBox(panel, size=wx.DefaultSize, choices=sampleList)"
using openpyxl to read file from memory,wb = openpyxl.load_workbook(filename=file)
creating your own contour in opencv using python,"contours = [numpy.array([[1, 1], [10, 50], [50, 50]], dtype=numpy.int32),
    numpy.array([[99, 99], [99, 60], [60, 99]], dtype=numpy.int32)]
drawing = numpy.zeros([100, 100], numpy.uint8)
for cnt in contours:
    cv2.drawContours(drawing, [cnt], 0, (255, 255, 255), 2)
cv2.imshow('output', drawing)
cv2.waitKey(0)"
"how to upload file ( picture ) with selenium, python","drv.find_element_by_id('IdOfInputTypeFile').send_keys(os.getcwd() +
    '/image.png')"
python - split sentence after words but with maximum of n characters in result,from textwrap import TextWrapper
django proxy model to different database,return False
how to calculate difference between two dates in weeks in python,"from datetime import datetime, timedelta
monday1 = d1 - timedelta(days=d1.weekday())
monday2 = d2 - timedelta(days=d2.weekday())
print('Weeks:', (monday2 - monday1).days / 7)"
convert zero-padded bytes to utf-8 string,"i = data.find('\x00')
if i == -1:
    return data
return data[:i]"
python regex findall into output file,"out_str = ','.join(output)
with open('output.txt', 'w') as outp:
    outp.write(out_str)"
fetching inherited model objects in django,obj = obj.b or obj.c or obj
sort at various levels in python,"top_n.sort(key=lambda t: (-t[1], t[0]))"
how to access members of an rdf list with rdflib (or plain sparql),"for y in g.triples((author_bnode[2], FOAF['givenname'], None)):
    author_name = y[2]"
dump json into yaml,import json
tkinter - making a second canvas display the contents of another,"tk.Canvas.itemconfigure(self, *args, **kwargs)"
python unzipping stream of bytes?,"def stream_gzip_decompress(stream):
    pass"
pandas interpolate data with units,value = output[col].ffill()
"python regex stops after first ""|"" match","import re
p = re.compile('[AG].{2}(?:ATG|ATA|AAG).G')"
schedule python script - windows 7,"def doit():
    print('doing useful things here')"
add excel file attachment when sending python email,smtp.starttls()
"how to create a composite strategy, using multiple instruments, in pyalgotrade?","if self.__PPO[-1] is None:
    pass"
how do i add fields to a namedtuple?,"result = namedtuple('Result', ['x', 'y'])"
automatic detection of display availability with matplotlib,"fig = plt.figure()
fig.savefig('myfig.png')"
how to get feature names selected by feature elimination in sklearn pipeline?,"LinearSVC1 = LinearSVC(tol=0.0001, C=0.1)"
python: remove duplicate tuples from list if they are exactly the same including order of items,"x = [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5]
y = list(set(itertools.combinations(x, 3)))"
adding custom action to usermodel's admin page,queryset.update(is_active=True)
"in python, is there a way to make threads that die when there is no longer a reference to them?",time.sleep(1)
reload (update) a module file in the interpreter,"import script
for mod in set(sys.modules.keys()).difference(oldmods):
    pass"
django inheritance: how to have one method for all subclasses?,"module, cls_name = self.class_name.rsplit('.', 1)"
how can i profile a sqlalchemy powered application?,logging.basicConfig()
using a session cookie from selenium in urllib2,f_opener = opener.open(url_that_requires_a_logged_in_user)
what's the shortest way to count the number of items in a generator/iterator?,"from itertools import count

def ilen(it):
    cnt = count()"
getting user input while running a python script in atom,"""""""{FileName}"""""""
pythonic way to assign the parameter into attribute?,help(Assignment)
comparing two urls in python,"def __init__(self, url):
    parts = urlparse(url)
_query = frozenset(parse_qsl(parts.query))
_path = unquote_plus(parts.path)
parts = parts._replace(query=_query, path=_path)
self.parts = parts

def __eq__(self, other):
    return self.parts == other.parts

def __hash__(self):
    return hash(self.parts)"
"python, remove all non-alphabet chars from string","re.sub('[^a-zA-Z]+', '', 'ABC12abc345def')"
scipy linkage format,"[4.0, 6.0, 0.5, 2.0],"
replacing all numeric value to formatted string,return 'INT_%i' % len(m.group(2))
python . how to get rid of '\r' in string?,"open('test_newlines.txt', 'rb').read()"
dynamically updating a bar plot in matplotlib,"fig, ax = plt.subplots()"
python pandas series of datetimes to seconds since the epoch,"s = df['date'] + timedelta(hours=2) - datetime.datetime(1970, 1, 1)"
how can i hide a django label in a custom django form?,{{form.as_table}}
getting model attributes from scikit-learn pipeline,pipeline.named_steps['pca']
"formatting ""yesterday's"" date in python",yesterday = datetime.now() - timedelta(days=1)
python numpy roll with padding,import numpy as np
received 'can't find '__main__' module in '<packagename>' with python package,"import etltest
dir(etltest)"
implicit conversions in python,"class A(object):

    def __init__(self, value):
        self.value = value

def __repr__(self):
    pass"
python: comparing specific columns in two csv files,r1 = next(file1)
python argparse: is there a way to specify a range in nargs?,parser = argparse.ArgumentParser(prog='PROG')
convert xml/html entities into unicode string in python,"return re.sub('&#?\\w+;', fixup, text)"
how to make an external database query iterable?,"class SQLRow(object):

    def __init__(self, cursor, row):
        for attr, val in zip((d[0] for d in cursor.description), row):
            setattr(self, attr, val)"
simulate autofit column in xslxwriter,"worksheet.write(r, c, x)
c += 1"
how to detect whether a python variable is a function?,"def f():
    pass
isinstance(f, types.FunctionType)"
defining python decorators for a complete module,"if isinstance(v, types.FunctionType):
    globals()[k] = my_decorator(v)"
byte array to hex string,"array_alpha = [133, 53, 234, 241]
print(''.join('{:02x}'.format(x) for x in array_alpha))"
how can i capture isight frames with python in snow leopard?,"frame = np.asarray(cam.grab_next_frame_blocking())
print('grabbed frame with shape %s' % (frame.shape,))"
dataframe merge in pandas,"datalines_str = DataFrame({'rsparid': map(str, [1400, 634, 1508, 96, 161, 
    1011, 1007, 518, 1955, 678])})
datalines_int
datalines_str
datalines_int.info()"
determine cluster size of file system in python,"import ctypes
sectorsPerCluster = ctypes.c_ulonglong(0)
bytesPerSector = ctypes.c_ulonglong(0)
rootPathName = ctypes.c_wchar_p('C:\\')
ctypes.windll.kernel32.GetDiskFreeSpaceW(rootPathName, ctypes.pointer(
    sectorsPerCluster), ctypes.pointer(bytesPerSector), None, None)
print((sectorsPerCluster.value, bytesPerSector.value))"
displaying a cvmatrix containing complex numbers (cv_64fc2),"cvSplit(dft_A, image_Re, image_Im, 0, 0)"
convert a date string into yyyymmdd,mydate = '30th November 2009'
match letter in any language,import re
most pythonic way to iteratively build up a list?,"list(iterateFinitely(lambda x: [x / 2] if x else [], 20))"
how do i clone a django model instance object and save it to the database?,new_instance.save()
take a screenshot via a python script. [linux],im.show()
best way to store python datetime.time in a sqlite3 column?,"print(cur.fetchall())
con.commit()"
python - comparing a list of characters to a list of words?,"print('word contains at least 1 character in ran_let', intersection)"
what is the pythonic way to detect the last element in a python 'for' loop?,"for i, line in enumerate(data_list):
    if i > 0:
        between_items()
item()"
python - capture popen stdout and display on console?,"child = pexpect.spawn('/bin/bash -c ""echo ba; sleep 1; echo bu""', logfile=
    sys.stdout)
x = child.expect(pexpect.EOF)"
numpy unique without sort,uniq[i] = 1
how to make beautifulsoup encode and decode the contents of a script tag,doc = LH.fromstring(htmlData)
2d interpolation of large irregular grid to regular grid,"yr = y + randn(2048, 2048)"
how does __slots__ avoid a dictionary lookup?,Foo.ham = 'eggs'
get a list of all installed applications in django and their attributes,"from django.conf import settings
print(settings.INSTALLED_APPS)"
python check if a string end with a number in a range valid,"check_range('/api_vod_asset/v0/assets/1', [0, 3])"
tag generation from a text content,from nltk.collocations import *
trying to create a dictionary but do not know how to deal with \n,"subject_dic = {}
inputFile = open(filename)
inputData = inputFile.read().splitlines()
for line in inputData:
    mykey, myval1, myval2 = line.split(',')
subject_dic[mykey] = myval1, myval2
print(subject_dic)"
assigning a value to python list doesn't work?,print(l)
how to replace values from json with those found by regex in a file using python?,"fp = open(destination_file, 'w')"
what is the python way of doing a \g anchored parsing loop?,"matcher = re.compile(
    """"""
    (.+?)
    (?:               
        (?=[^a-zA-Z0-9])       
    |   (?=[A-Z][a-z])         
    |   (?<=[a-z])(?=[A-Z])    
    |   (?<=[a-zA-Z])(?=[0-9]) 
    |   (?<=^1[sS][tT])         
    |   (?<=[^1][1][sS][tT])    
    |   (?<=^2[nN][dD])         
    |   (?<=[^1]2[nN][dD])      
    |   (?<=^3[rR][dD])         
    |   (?<=[^1]3[rR][dD])      
    |   (?<=1[123][tT][hH])     
    |   (?<=[04-9][tT][hH])     
    |   (?<=^1)(?=[a-zA-Z])(?![sS][tT])       
    |   (?<=[^1]1)(?=[a-zA-Z])(?![sS][tT])    
    |   (?<=^2)(?=[a-zA-Z])(?![nN][dD])       
    |   (?<=[^1]2)(?=[a-zA-Z])(?![nN][dD])    
    |   (?<=^3)(?=[a-zA-Z])(?![rR][dD])       
    |   (?<=[^1]3)(?=[a-zA-Z])(?![rR][dD])    
    |   (?<=1[123])(?=[a-zA-Z])(?![tT][hH])   
    |   (?<=[04-9])(?=[a-zA-Z])(?![tT][hH])   
    |   (?=$)                               
    )
""""""
    , re.X)"
"add two lists of different lengths in python, start from the right","L1 = [3, 0, 2, 1]"
seaborn heatmap y-axis reverse order,"uniform_data = np.random.rand(10, 12)"
how to code bar charts with patterns along with colours in python?,"barlist[1].set_hatch('.')
barlist[2].set_hatch('*')"
how can i normalize a url in python,quoted_url = urllib.parse.quote('http://www.example.com/foo goo/bar.html')
need to create a layered dict from a flat one,"subdict = dict.get(k[:k.find('/')], {})"
how to detect motion between two pil images? (wxpython webcam integration example included),"return -sum([(p * math.log(p, 2)) for p in samples_probability if p != 0])"
pca analysis in pyspark,"rdd = sc.parallelize([Vectors.dense([1, 2, 0]), Vectors.dense([2, 0, 1]),
    Vectors.dense([0, 1, 0])])
model = PCAmllib(2).fit(rdd)"
google app engine: how to send html using send_mail,"mail_html_body = '<h1>Hello!</h1>'
mail_to = str(self.request.POST.get('to'))
mail_from = str(self.request.POST.get('from'))"
how to properly convert list of one element to a tuple with one element,"a = 'Hello'
print(type(a))"
how to accumulate an array by index in numpy?,"a = np.array([0, 0, 0, 0, 0, 0])
for i, ix in enumerate(indices):
    pass"
python - initializing multiple lists/line,"alist, blist, clist, dlist, elist = ([] for i in range(5))"
interactive selection of series in a matplotlib plot,"sl = matplotlib.widgets.Slider(slax, 'Trace #', 0, len(plotlist), valinit=0.0)"
writing pandas dataframe to excel with different formats for different columns,"workbook = writer.book
worksheet = writer.sheets['Sheet1']
format1 = workbook.add_format({'num_format': '#,##0.00'})
format2 = workbook.add_format({'num_format': '0%'})
format3 = workbook.add_format({'num_format': 'h:mm:ss AM/PM'})
worksheet.set_column('B:B', 18, format1)
worksheet.set_column('C:C', None, format2)
worksheet.set_column('D:D', 16, format3)
writer.save()"
why is my 2d interpolant generating a matrix with swapped axes in scipy?,"ax3.plot_surface(xi, ti, u_int, cmap=cm.coolwarm)"
how to multiply functions in python?,"def __init__(self, function):
    self.function = function"
how can i: generate 40/64 bit wep key in python?,"def pass_to_key(passphrase):
    pass"
using tweepy to sort tweets by location,lng = status.coordinates['coordinates'][0]
how to create 0x0 numpy array?,"a = NP.empty(shape=(0, 0))"
python optional parameter,"def opt_fun(x1, x2, *positional_parameters, **keyword_parameters):
    if 'optional' in keyword_parameters:
        print('optional parameter found, it is ', keyword_parameters['optional'
            ])"
python filter list of dictionaries based on key value,"exampleSet = [{'type': 'type1'}, {'type': 'type2'}, {'type': 'type2'}, {
    'type': 'type3'}]
keyValList = ['type2', 'type3']
expectedResult = [d for d in exampleSet if d['type'] in keyValList]
expectedResult"
urllib2 to open https,conn.request()
pandas handling missing values when going from data frame to pivot table,"df1 = pd.pivot_table(df, rows=['A', 'B'], cols='C', aggfunc=np.sum)
df1"
is there a way to set multiple defaults on a python dict using another dict?,"mydict2['b']
mydict2"
inserting rows of zeros at specific places along the rows of a numpy array,"[2.86, 133.55]"
python: getting a reference to a function from inside itself,g.r = 4
most efficient way to filter a long time series python,"""""""A single coupled Roessler oscillators"""""""
python - insert numbers in string between quotes,words = 'This is number 1 and this is number 22'
variables declared outside function,"def fn_2():
    global_var += 2"
what's going on with this python syntax? (c == c in s),"def foo(x):
    print('Called foo(%d)' % x)
return x"
probability tree for sentences in nltk employing both lookahead and lookback dependencies,return tokens[index - left:index] + tokens[index + 1:index + right + 1]
sending the same type multiple times in a soap request using suds,"arrayoftagList.tag_list = [malloc, anothertag]"
reshaping array into a square array python,"x.reshape(2, 2, 5)"
json schema: validate a number-or-null value,"schema = json.loads(
    """"""{
  ""$schema"": ""http://json-schema.org/schema#"",
  ""description"": ""Schemas for heading: either a number within [0, 360) or null."",
  ""title"": ""Tester for number-or-null schema"",
  ""properties"": {
    ""heading"": {
      ""type"": [""number"", ""null""],
      ""exclusiveMinimum"": false,
      ""exclusiveMaximum"": true,
      ""minimum"": 0,
      ""maximum"": 360
    }
  }
}""""""
    )
inputs = [{'heading': 5}, {'heading': 0}, {'heading': 360}, {'heading': 
    360.1}, {'heading': -5}, {'heading': None}, {'heading': False}, {
    'heading': 'X'}, json.loads('{""heading"":12}'), json.loads(
    '{""heading"":120}'), json.loads('{""heading"":1200}'), json.loads(
    '{""heading"":false}'), json.loads('{""heading"":null}')]"
memory dump formatted like xxd from gdb,HexDump()
how do i get back the option string using argparse?,"parser.add_argument('-p', dpass_1, help='Pass me on')"
"select adjacent couples (or triads, etc ) from a list","for i, iterator in enumerate(iterators):
    for j in range(i):
        pass"
putting many python pandas dataframes to one excel worksheet,"new_df = pd.concat([df, another_df], axis=1)
new_df.to_excel(writer, sheet_name='Validation', startrow=0, startcol=0)"
can sqlalchemy events be used to update a denormalized data cache?,"@event.listens_for(Comment.message, 'set')
def set(target, value, oldvalue, initiator):
    if target.thread is not None:
        target.thread.word_count += _word_count(value) - _word_count(oldvalue)

@event.listens_for(Comment.thread, 'set')
def set(target, value, oldvalue, initiator):
    if value is not None:
        value.word_count += _word_count(target.message)
if oldvalue is not None:
    oldvalue.word_count -= _word_count(target.message)"
how to add clipboard support to matplotlib figures?,"def add_clipboard_to_figures():
    oldfig = plt.figure

def newfig(*args, **kwargs):
    fig = oldfig(*args, **kwargs)

def clipboard_handler(event):
    if event.key == 'ctrl+c':
        buf = io.BytesIO()
fig.savefig(buf)
QApplication.clipboard().setImage(QImage.fromData(buf.getvalue()))
buf.close()
fig.canvas.mpl_connect('key_press_event', clipboard_handler)
return fig
plt.figure = newfig
add_clipboard_to_figures()"
"how to overcome ""datetime.datetime not json serializable"" in python?","def json_serial(obj):
    """"""JSON serializer for objects not serializable by default json code""""""
if isinstance(obj, datetime):
    serial = obj.isoformat()
return serial
raise TypeError('Type not serializable')"
numpy vectorization of sliding-window operation,out = arr_1 * arr_2[idx]
figure out if element is present in multi-dimensional array in python,"names = {}
while parsing:
    nick = nick_on_current_line"
python configuration file: any file format recommendation? ini format still appropriate? seems quite old school,"value3 = 'A plain string value'
value4 = ['lists', 'are', 'handy']
value5 = {'and': 'so', 'are': 'dictionaries'}"
how to delete items from a dictionary while iterating over it?,del mydict[k]
how do i simulate an ajax request with flask test client?,"headers = {'Content-Type': 'application/json'}
response = client.post('/', data=data, headers=headers)"
packing 4 integers as one byte?,return a | b << 1 | c << 2 | d << 5
making figure transparent with colored background,"ax1.set_xlim(-5, 5)"
python glob multiple filetypes,import glob
in-place quicksort in python,raise ValueError('idx pivot must be between start and end')
syntax for creating a dictionary into another dictionary in python,"d['dict4'] = {}
d['dict4']['king'] = 7
d['dict4']['queen'] = 8"
context managers and multiprocessing pools,util._finalizer_registry.clear()
"in python, how can i test if i'm in google app engine sdk?","def isLocal():
    pass"
high performance mass short string search in python,"ls = 'my long string of stuff'
x = set([ls[p:y] for p in range(0, len(ls) + 1) for y in range(p + 1, len(
    ls) + 1)])
result = []
for word in A:
    if word in x:
        result.append(word)"
getting correct string length in python for strings with ansi color codes,from pyparsing import *
how to add an auth_id with webapp2?,auser = self.auth.get_user_by_session()
"extract zipfile using python, display progress percentage?",offset += len(b)
python mysqldb: get the result of fetchall in a list,"cursor.execute('select id from bs')
list_of_ids = list(itertools.chain.from_iterable(cursor))"
how to quickly find first multiple of 2 of list element in list of large integers?,s = len(l)
any python library produces publication style regression tables,"reg1 = sm.OLS(p['p2'], p[['const', 'exmkt', 'smb', 'hml']]).fit()"
inserting line at specified position of a text file,"for line in fileinput.input('1.txt', inplace=1):
    if line.startswith('foo1'):
        processing_foo1s = True
else:
    if processing_foo1s:
        print('foo bar')
processing_foo1s = False
print(line, end=' ')"
python equivalent of zip for dictionaries,"yield (i,) + tuple(d[i] for d in dcts)"
is twisted's deferred the same as a promise in javascript?,"if errback is None:
    pass"
how to transform numpy.matrix or array to scipy sparse matrix,import numpy as np
python write string directly to tarfile,"string.seek(0)
info = tarfile.TarInfo(name='foo')
info.size = len(string.buf)
tar.addfile(tarinfo=info, fileobj=string)
tar.close()"
removing axes margins in 3d plot,ax.set_zlabel('Z')
how to print over raw_input's line in python?,answer = stdscr.getstr()
how to pass command-line arguments as a string to an embedded python script executed from c++?,"++ok
r += buf"
how do i print the content of a .txt file in python?,"with open('path/to/file') as f:
    pass"
suds over https with cert,logging.getLogger('suds.client').setLevel(logging.DEBUG)
traversing a sequence of generators,"def izip_longest_nofill(*args):
    pass"
where's my json data in my incoming django request?,"def save_events_json(request):
    if request.is_ajax():
        if request.method == 'POST':
            print('Raw Data: ""%s""' % request.body)
return HttpResponse('OK')"
how to use python to calculate time,"t = datetime.time(13, 5)"
optimizing access on numpy arrays for numba,"res = np.zeros(reslen, dtype=a.dtype)
for i in range(len(accmap)):
    pass"
equivelant to rindex for lists in python,i = -1
how to create range of numbers in python like in matlab,"print(np.linspace(1, 3, num=5))"
how to append to multilevel pandas dataframe using iteration?,"data = None
for stock_name in stocks:
    stock_data = data.DataReader(stock_name, 'yahoo', '2004-01-01')
del stock_data['Close']
stock_data.rename(columns={'Adj Close': 'Close'}, inplace=True)
stock_data.columns = pd.MultiIndex.from_product([[stock_name], stock_data.
    columns])
if data is None:
    data = stock_data
else:
    data = pd.concat([data, stock_data], axis=1)"
python read formatted string,range = values[1].split('-')
using variables in python regular expression,user = 'heinz'
"how to find out if a lazy relation isn't loaded yet, with sqlalchemy?","from sqlalchemy import inspect
from sqlalchemy.orm import lazyload
user = session.query(User).options(lazyload(User.articles)).first()
ins = inspect(user)"
numpy: calculate averages with nans removed,"dat = np.array([[1, 2, 3], [4, 5, nan], [nan, 6, nan], [nan, nan, nan]])
mdat = np.ma.masked_array(dat, np.isnan(dat))
mm = np.mean(mdat, axis=1)
print(mm.filled(np.nan))"
sorting a dictionary by a split key,"('10-16', 'content'),
('17', '['),"
creating dataframe from elasticsearch results,"kwargs = dict({'index': self.index, 'doc_type': self.doc_type}, **kwargs)"
tk grid won't resize properly,"self.pack(fill=X, expand=True)"
fitting a line in 3d,data += np.random.normal(size=data.shape) * 0.4
matplotlib : comma separated number format for axis,import matplotlib.pyplot as plt
initialize variable depending on another variables type,a_type = type(a)
wxpython: making something expand,self.SetSizer(sizer)
python sql query string formatting,print(' '.join([line.strip() for line in sql.splitlines()]).strip())
sine wave that exponentialy changes between frequencies f1 and f2 at given time/amount of samples,g_t = a * exp(b * t)
in-place way to apply a permutation to a list? (inverse of sorting-by-key),"return self.list1[i], self.list2[i]"
mapping a range of values to another,float(m(400))
celery - programmatically list workers,"{'broker': {'alternates': [], 'connect_timeout': 4, 'heartbeat': 0,
    'hostname': 'mypcisdabom', 'insist': False, 'login_method':
    'AMQPLAIN', 'port': 5672, 'ssl': False, 'transport': 'amqp',
    'transport_options': {}, 'uri_prefix': None, 'userid':
    'celeryabuser', 'virtual_host': 'celeryvhost'}, 'clock': '182309',
    'pid': 1660, 'pool': {'max-concurrency': 1, 'max-tasks-per-child':
    'N/A', 'processes': [2496], 'put-guarded-by-semaphore': True,
    'timeouts': [0, 0], 'writes': 'N/A'}, 'prefetch_count': 4,
    'rusage': 'N/A', 'total': {'mymodule.my_func': 8}},"
implementing the factory design pattern using metaclasses in python,"class FactoryMetaclassObject(type):
    pass"
python: read and split files in to list of dictionaries,"entries = (line.strip().split('#') for line in open('infile.txt', 'r'))
output = [dict(zip(('dns', 'ip', 'description'), e)) for e in entries]
print(output)"
non invertible of a arima model,aic.append(x)
what is the definition of mean in pandas data frame?,1.5
long polling in django,"return itertools.chain(do_something(), do_something_else())"
pythonic way to only do work first time a variable is called,"class myclass(object):

    def __init__(self):
        self.__age = None

@property
def age(self):
    if self.__age is None:
        self.__age = 21
return self.__age"
sum all columns with a wildcard name search using python pandas,P1Sum = P1Channels.sum(axis=1).sum()
django static files results in 404,STATIC_URL = '/static/'
how to send an email with python?,"s.sendmail(me, family, msg.as_string())"
python - extract the body from a mail in plain text,return part.get_payload()
calculate rgb value for a range of values to create heat map,"i1, i2 = int(v), min(int(v) + 1, max_index)"
get output colored text with popen,"output = process.communicate()
stdout = output[0]"
"django, how to see session data in the admin interface","def _session_data(self, obj):
    pass"
creating restricted permutations of a list of items by category,"for x in combinate(items):
    pass"
compute a confidence interval from sample data,n = len(a)
matplotlib matshow with many string labels,plt.savefig('confusionmatrix.png')
append multiple values for one key in python dictionary,years_dict = dict()
django query using contains with a list as a source?,"from functools import reduce
clauses = (Q(address__icontains=p) for p in postcodes)
query = reduce(operator.or_, clauses)"
add a subdirectory to a python namespace,"from a import atlas
from b import binary"
get list of xml attribute values in python,"['a1', 'a2', 'a3']"
loop through dates except for weekends,delta = timedelta(days=1)
python - finding elements in a list efficiently,"nsmallest(4, list(range(len(values))), key=values.__getitem__)"
read a python variable in a shell script?,"for k in sys.argv[2:]:
    pass"
how to find documents that are in the same cluster with kmeans,"print(clusters.shape)
cluster_0 = np.where(clusters == 0)
X_cluster_0 = X_train_tfidf[cluster_0]"
django email app broken lines - maximum line length (and how to change it)?,"email = EmailMessage(subject='some_subject', body=the_text, from_email=
    'me@test.com', to=['me@test.com'], headers={'format': 'flowed'})"
fill holes with majority of surrounding values (python),mask = np.isnan(arr)
calculating a sha hash with a string + secret key in python,"import hmac
import hashlib
import base64
dig = hmac.new('1234567890', msg=your_bytes_string, digestmod=hashlib.sha256
    ).digest()
base64.b64encode(dig).decode()
""""""Nace+U3Az4OhN7tISqgs1vdLBHBEijWcBeCqL5xN9xg="""""""
how to add permissions in django to models and test it using the shell,content_type = ContentType.objects.get_for_model(Employer)
"sqlalchemy, turning a list of ids to a list of objects","class A(Base):
    __tablename__ = 'a'"
python: tell x to reserve screen space for application,"def __init__(self, windowID):
    self._display = Display()
self._window = self._display.create_resource_object('window', windowID)

def reserve_space(self, left=0, right=0, top=0, bottom=0):
    LEFT = left
RIGHT = right
TOP = top
BOTTOM = bottom
self._window.change_property(self._display.intern_atom('_NET_WM_STRUT'),
    self._display.intern_atom('CARDINAL'), 32, [LEFT, RIGHT, TOP, BOTTOM])
self._display.sync()"
how to remove tags from a string in python using regular expressions? (not in html),"re.sub('<[^>]*>', '', mystring)"
how do you check if a widget has focus in tkinter?,root = Tk()
python pandas/numpy quick way of replacing all values according to a mapping scheme,"params = pd.concat([start, stop], axis=1, keys=['start', 'stop'])"
choosing multicast network interface in python,"def joinMcast(mcast_addr, port, if_ip):
    """"""
    Returns a live multicast socket
    mcast_addr is a dotted string format of the multicast group
    port is an integer of the UDP port you want to receive
    if_ip is a dotted string format of the interface you will use
    """"""
mcastsock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
mcastsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)"
force unpacking of certain egg directories,"html_path = resource_filename(sphinx.__name__, os.path.join('build', 'html'))"
excel like formulas with pandas,"df2 = df.copy()
for i in range(1, len(df.columns)):
    df2.iloc[:, (i)] = df.iloc[:, (i)].notnull() & df.iloc[:, i + 1:i + 4
        ].apply(lambda x: all(x.isnull()), axis=1)"
elegant format for a mac address in python 3.2,"'ae:fd:7e',"
how to get the current port number in flask?,"sock.close()
app.run(port=port)"
c++ python api : second call of pyimport_import results in sigsegv,return 0
ignore nan in numpy bincount in python,"x = numpy.array([0, 1, 1, 2, 2, 2])
numpy.bincount(x, weights=w)"
how do i create an animated gif in python using wand?,"from wand.image import Image
with Image() as wand:
    with Image(filename='1.png') as one:
        wand.sequence.append(one)
with Image(filename='2.png') as two:
    wand.sequence.append(two)
with Image(filename='3.png') as three:
    wand.sequence.append(three)
for cursor in range(3):
    with wand.sequence[cursor] as frame:
        frame.delay = 10 * (cursor + 1)
wand.type = 'optimize'
wand.save(filename='animated.gif')"
find nearest value in numpy array,"value = 0.5
print(find_nearest(array, value))"
"most efficient way to generate ""ordered subsets"" of a sequence","with_nones = zip(given, repeat(None))"
support vector machine in python using libsvm example of features,labels = list(set(train_labels))
setting up a learningratescheduler in keras,"def on_train_begin(self, logs={}):
    pass"
how can i make a discrete state markov model with pymc?,"def generate_timesteps(N, p_init, p_trans):
    timesteps = np.empty(N, dtype=object)
timesteps[0] = Bernoulli('T0', p_init)
for i in range(1, N):
    p_i = p_trans[1] * timesteps[i - 1] + p_trans[0] * (1 - timesteps[i - 1])
timesteps[i] = Bernoulli('T%d' % i, p_i)
return timesteps
timesteps = generate_timesteps(10, 0.8, [0.001, 0.5])
model = MCMC(timesteps)
model.sample(10000)
[np.mean(model.trace(t).gettrace()) for t in timesteps]"
how to use cursor() for pagination?,"cursor = self.request.get('cursor')
if cursor:
    query.with_cursor(cursor)
items = query.fetch(30)"
how to fetch more than 1000?,"query = cls.all().order('__key__')
while count % 1000 == 0:
    current_count = query.count()
if current_count == 0:
    break
count += current_count
if current_count == 1000:
    last_key = query.fetch(1, 999)[0].key()
query = query.filter('__key__ > ', last_key)
return count"
how do i create a deterministic random number generator with numpy seed?,"np.random.seed(seed=0)
np.random.rand(5) < 0.8"
finding a eulerian tour,return False
capture stdout and stderr from sas in windows?,logfile = '&logfile'
trace table for python programs,"if TRACING:
    t.close()"
how to create a temporary file that can be read by a subprocess?,f.write(DATA)
how to get the average of dataframe column values,"df
df.mean(axis=1)"
fetching queryset data one by one,"def queryset_iterator(queryset, chunksize=1000):
    """"""''
    Iterate over a Django Queryset ordered by the primary key
    This method loads a maximum of chunksize (default: 1000) rows in it's
    memory at the same time while django normally would load all rows in it's
    memory. Using the iterator() method only causes it to not preload all the
    classes.
    Note that the implementation of the iterator does not support ordered query sets.
    """"""
pk = 0
last_pk = queryset.order_by('-pk')[0].pk
queryset = queryset.order_by('pk')
while pk < last_pk:
    for row in queryset.filter(pk__gt=pk)[:chunksize]:
        pk = row.pk
yield row
gc.collect()"
fastest way to populate a 1d numpy array,list2.fill(lis)
numpy array cannot index within a single [],"b[([0, 1, 3]), :, (some_mask == 1)]
b[:, :, (some_mask == 1)]
b[[0, 1, 3], [2, 4], some_mask == 1]"
how to design a program with many configuration options?,"myconf = configparser.ConfigParser()
myconf.read('myconf.ini')
what_to_do = myconf['section']['option']"
how to do dependency injection python-way?,"def request(self, user, password, action):
    pass"
how do i format axis number format to thousands with a comma in matplotlib?,"xlabels = [format(label, ',.0f') for label in ax.get_xticks()]"
key corresponding to maximum value in python dictionary,"a = dict(((1, 3), (0, -1), (3, 21)))"
how to transfer a file to ssh server in an ssh-connection made by paramiko?,"s.set_missing_host_key_policy(paramiko.AutoAddPolicy())
s.connect('xxx.xxx.xxx.xxx', 22, username=xxx, password='', timeout=4)
sftp = s.open_sftp()"
"get new x,y coordinates of a point in a rotated image","yr = (x - xm) * sin(a) + (y - ym) * cos(a) + ym
return [xr, yr]"
django variable in base.html,return wraps(view_method)(_decorator)
batch renaming of files in a directory,"import glob, os"
how to parallel for-loop in python?,"Function = do_the_thing_function,"
ellipsoid equation containig numerous points,a = pa - p0
typeerror: only length-1 arrays can be converted to python scalars while trying to exponentially fit data,"b = np.array([4, 5, 6])
c = np.concatenate(a, b)
print(c)"
generate keyboard events,user32.SendInput.errcheck = _check_count
jinja2 + restructured markup,"def rst_filter(s):
    pass"
prevent python from caching the imported modules,package_name = root_module.__name__
moving from multiprocessing to threading,"class Worker(threading.Thread):

    def __init__(self):
        threading.Thread.__init__(self)

def run(self):
    poll = multiprocessing.dummy.Pool(5)
print(str(poll))"
"parsing huge, badly encoded xml files in python","newdata, count = invalid_xml.subn('', data)"
"python subprocess module, how do i give input to the first of series of piped commands?",first.stdout.close()
capturing output of python script run inside a docker container,print('f00')
"sum of difference of squares between each combination of rows of 17,000 by 300 matrix","distances = np.zeros((n, n))"
how do you dynamically identify unknown delimiters in a data file?,sniffer = csv.Sniffer()
how to get a variable name as a string in python?,"if v is a:
    a_as_str = k"
how to save big array so that it will take less memory in python?,"a = np.ones((43200, 4000))
x = pandas.HDFStore('some_file.hdf')
x.append('a', pandas.DataFrame(a))
x.close()
my_data = pandas.HDFStore('some_file.hdf')
usable_a_copy = my_data['a']
copy_as_nparray = usable_a_copy.values"
is there a way to extract a dict in python into the local namespace?,"exec('\n'.join(""%s=d['%s']"" % (k, k) for k in d))
id(d['c'])"
running interactive python script from emacs,save - buffer
how to read the first byte of a subprocess's stdout and then discard the rest in python?,"p = subprocess.Popen(['python3.1', f.name], stdout=subprocess.PIPE, stdin=
    subprocess.PIPE)"
how do i plot multiple plots in a single rectangular grid in matplotlib?,"arr = [6, 4, 2, 1]
for i in range(len(arr)):
    if i < 2:
        pass"
efficient way to create a diagonal sparse matrix,"import numpy as np
import scipy as sp"
don't show long options twice in print_help() from argparse,"parser.add_argument('-v', '--version', action='version', version='%(prog)s 0.1'
    )
parser.print_help()"
how to plot 2d math vectors with matplotlib?,"ax.set_ylim([-1, 10])
plt.draw()
plt.show()"
read in all csv files from a directory using python,"for root, dirs, files in os.walk(directory):
    pass"
how to unzip a file with python 2.4?,import zipfile
python unit testing: make nose show failed assertions values,"def assert_eq(obt, exp):
    pass"
having trouble normalizing posterior distribution in python,sum(x ** 2)
how to convert webpage into pdf by using python,"import pdfkit
pdfkit.from_url('http://google.com', 'out.pdf')"
python: how to find if a path exists between 2 nodes in a graph?,"nx.path.bidirectional_dijkstra(G, 1, 4)"
django modelform for many-to-many fields,"def save(self):
    instance = forms.ModelForm.save(self)
instance.topping_set.clear()
for topping in self.cleaned_data['toppings']:
    instance.topping_set.add(topping)"
how to use subversion ctypes python bindings?,"proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=
    subprocess.PIPE)
stdout, stderr = proc.communicate()
return stdout, stderr, proc.returncode"
generating xml in python and lxml,"doc = etree.ElementTree(page)
pageElement = etree.SubElement(page, 'Country', name='Germany', Code='DE',
    Storage='Basic')
outFile = open('output.xml', 'w')
doc.write(outFile, xml_declaration=True, encoding='utf-16')"
create & read from tempfile,"f = tempfile.NamedTemporaryFile(delete=False)
f.write('oh hello there')
f.close()
res = commands.getoutput('%s %s' % (commandname, f.name))
print(res)
os.unlink(f.name)"
how to recognize histograms with a specific shape in opencv / python,"cv2.line(h, (x, 0), (x, y), (255, 255, 255))"
how to add extra object to tasty pie return json in python django,"return HttpResponse(data, content_type='application/json', status=200)"
subtract values from list of dictionaries from another list of dictionaries,b = dict([next(iter(x.items())) for x in bar])
skip a specified number of columns with numpy.genfromtxt(),"import numpy as np
with open(fname, 'r') as f:
    num_cols = len(f.readline().split())
f.seek(0)"
python list comprehension with lambdas,print([b(5) for b in bases])
too many if statements,"try:
    strategy = operation_dispatcher[operation]
except KeyError:
    strategy = default"
too many open files in python,"for fd in fds:
    names.append(os.readlink('/proc/self/fd/%d' % fd))
return names"
how can i add context to an exception in python,"def do_something(val):
    pass"
"how to do a ""tree walk"" recursively on an abstract syntax tree?","def walk(node):
    queue = deque([node])
while queue:
    node = queue.popleft()
if isinstance(node, tuple):
    pass"
excluding primary key in django dumpdata with natural keys,"class Serializer(JsonSerializer):

    def end_object(self, obj):
        pass"
loop through list with both content and index,"S = [1, 30, 20, 30, 2]
for index, elem in enumerate(S):
    pass"
3d interpolation of numpy arrays without scipy,z_indices = indices[2]
"encrypt data with python, decrypt in php","DecodeAES = lambda c, e: c.decrypt(base64.b64decode(e)).rstrip(PADDING)
secret = '332SECRETabc1234'
iv = 'HELLOWORLD123456'
cipher = AES.new(key=secret, mode=AES.MODE_CBC, IV=iv)
my_text_to_encode = 'password'
encoded = EncodeAES(cipher, my_text_to_encode)
print('Encrypted string:', encoded)"
piping postgres copy in python with psycopg2,"todb = psycopg2.connect('dbname=to_db')
r_fd, w_fd = os.pipe()

def copy_from():
    cur = todb.cursor()
cur.copy_from(os.fdopen(r_fd), 'table')
cur.close()
todb.commit()
to_thread = threading.Thread(target=copy_from)
to_thread.start()
cur = fromdb.cursor()
write_f = os.fdopen(w_fd, 'w')
cur.copy_to(write_f, 'table')
write_f.close()
to_thread.join()"
select first result from two coroutines in asyncio,print('got {}'.format(result))
lambdas python for loop,"list(filter(str.isalpha, strs))"
how can i prevent adding the same value (with another key) into a dictionary?,"if i != k:
    key = str(i) + ',' + str(k) if i < k else str(k) + ',' + str(i)
d['R' + key] = (Rk - Ri).mod"
fast way to get n min or max elements from a list in python,end = len(seq)
remove a tag using beautifulsoup but keep its contents,"invalid_tags = ['b', 'i', 'u']
print(strip_tags(html, invalid_tags))"
rgb to hsv conversion using pil,R = int(round(B * 255))
pyqt lineedit border color,le.setStyleSheet(ss)
python 3 asyncio - yield from vs asyncio.async stack usage,self._loop.call_soon(self._step)
waf: specify library name for python extensions,"conf.check_python_version((2, 4, 2))
conf.check_python_headers()

def build(bld):
    bld.shlib(features='pyext', source='mymodule.cpp', target='myfoo', use=
        'PYTHON BOOST_PYTHON')"
how to do byte pair encoding bigram counting and replacements efficiently in python?,"print(cons_2(cin, ('i', 's')))"
make model __unicode__ method return to multiple colums,"class SomeModel(models.Model):
    name = models.CharField(max_length=300)

def __unicode__(self):
    return str(self.name)

def something_else(self):
    pass"
how to get process status using pid?,"for line in open('/proc/%d/status' % pid).readlines():
    if line.startswith('State:'):
        pass"
django: how to mock file uploads while testing views,"'w', 'S', '\xde', '\x00', '\x00', '\x00', '\x06', 'b', 'K'"
how to reorder a python ordered dict based on array?,"ordered = OrderedDict()
for k in myorder:
    pass"
json string parsing error in python,"import re
import json
data = (
    """"""{""Reply"":{""Header"":{""Method"":""mGSSCBetHistory"",""ErrorCode"": ""0"",""MerchantID"":""BETSTARtest"",""MessageID"": ""H140201152657m6k3f""},""Param"":{""TotalRecord"":""1"",""BetDatas"":""[{""Column1"":""""}]"",""ErrorDesc"": """"}}}""""""
    )

def escape(match_obj):
    print(match_obj.group(1))
return match_obj.group(1).replace('""', '""')
REGEX = '(?<=""BetDatas"":"")(\\S+)(?="",)'
data = re.sub(REGEX, escape, data)
print(data)"
launch a completely independent process,"if pid == 0:
    pass"
shuffling in python,"def func3():
    pass
x = [func1, func2, func3]
random.shuffle(x)
for function in x:
    function()"
item frequency in a python list of dictionaries,"for d in LofD:
    for k, v in list(d.items()):
        r[k][v] += 1
return dict((k, dict(v)) for k, v in list(r.items()))
print(freqs(LofD))"
website to image,"webpage.mainFrame().load(QUrl('http://www.google.com'))
sys.exit(app.exec_())"
more efficient matplotlib stacked bar chart - how to calculate bottom values,"p4 = plt.bar(ind, d, 1, color='#33ffff', bottom=sum([a, b, c]))"
how to do unit test on autobahn applications using twisted trial?,"self.mocked_auth_user.assert_called_with(self.api.database, 'raito')"
canonical url compare in python?,"def canonical_url(u):
    u = u.lower()"
python https against azure service management api fails on windows,'GET /SUBSCRIPTION_ID/locations HTTP/1.1\r\nAccept-Encoding: identity\r\nX-Ms-Version: 2011-10-01\r\nHost: management.core.windows.net\r\nUser-Agent: Python-urllib/2.6\r\n\r\n'
python pandas drop columns based on max value of column,df.columns[df.max() > 0]
pandas: bar-plot with two bars and two y-axis,import matplotlib.pyplot as plt
argparse: how can i allow multiple values to override a default,"def new_parser(args):
    parser = argparse.ArgumentParser()"
using initspider with splash: only parsing the login page?,driver.find_element_by_id('username').send_keys('user')
how to delete the biggest emails from my gmail using a python script?,"MAXSIZE = 1000
MINSIZE = 1
m = imaplib.IMAP4_SSL('imap.gmail.com')
m.login('example@gmail.com', 'testPassword')
m.select()
typ, data = m.search(None, 'ALL')
typ, data = m.search(None, '(SMALLER %d) (LARGER %d)' % (MAXSIZE * 1000, 
    MINSIZE * 1000))
for num in data[0].split():
    typ, data = m.fetch(num, '(RFC822)')
print('Message %s\n%s\n' % (num, len(data[0][1])))
m.close()
m.logout()"
intersecting matplotlib graph with unsorted data,plt.xlabel('x')
determine arguments where two numpy arrays intersect in python,b_index = 0
fastest way to search 1gb+ a string of data for the first occurence of a pattern in python,return 'not found'
how to skip a unittest case in python 2.6,"def skipUnless(condition, reason):
    pass"
plotting dates with sharex=true leads to valueerror: ordinal must be >= 1,"fig, (ax1, ax2) = plt.subplots(nrows=2, sharex=True)
ax1.plot(x, y, 'b-')
ax2.plot(x, 1.0 / y, 'r-')
plt.show()"
efficient way to create strings from a list,"product(['Long', 'Med'], ['Yes', 'No'])"
pylint: can inherited public methods be exclude from statistics?,"for method in node.methods():
    pass"
how to sort only few values inside a list in python,from operator import itemgetter
pandas dataframe set value on boolean mask,"df = pd.DataFrame({'A': [1, 2, 3], 'B': ['a', 'b', 'f']})
mask = df.isin([1, 3, 12, 'a'])
df = df.where(mask, other=30)"
create file of single instances of account number,"with open(filename) as fin:
    pass"
how to add characters to filename using glob in python?,"for fname in glob.glob('*.shp'):
    pass"
general approach to developing an image classification algorithm for dilbert cartoons,"{'message': 'Model trained', 'result': [{'label': 'Dilbert', 'probability':
    0.97}, {'label': 'PHB', 'probability': 0.025}, {'label': 'Ratbert',
    'probability': 0.005}]}"
fast way to turn a labeled image into a dictionary of { label : [coordinates] },"nzvals = a[nz[0], nz[1]]"
how to shutdown a timed out http post using urlopen by urllib2 in python?,"data = urlencode({'fakerange': list(range(0, 2000000, 1))})"
creating a rdf file using a txt file as input,triple = line.split()
unload a module in python,"class test(object):

    def __del__(self):
        print('unloaded module1')
a = test()
print('loaded module1')"
how to upload a file to s3 from a file upload form after modifying it with pil?,"httplib.HTTPConnection.debuglevel = 1
conn = boto.connect_s3(aws_access_key_id='some', aws_secret_access_key='some')
b = conn.get_bucket('snappie.watermarks')
k = Key(b)
k.key = 'test.txt'
k.set_contents_from_string('12345')"
merge text into datetime column,df.col1
scrapy - how to crawl new pages based on links in scraped items,"new_request = Request(link, callback=self.parse_file_page)
new_request.meta['item'] = item
yield new_request"
integrate postfix mail into my (python)webapp,"sess = imaplib.IMAP4()
sess.login('superuser', 'password')
sess.select('INBOX/Luke')"
python removing non latin characters,"import re
import regex
text = 'aweerwq\u0645\u0631\u062d\u0628\u0627\u043c\u0438\u0440'
print(text)
regex.sub('[^\\p{Latin}]', '', text)
re.sub('[^\\x00-\\x7F\\x80-\\xFF\u0100-\u017f\u0180-\u024f\u1e00-\u1eff]',
    '', text)"
how can i quickly disable a try statement in python for testing?,print('bar')
python unittest testcase with inheritance,self.check_all()
python: escaping strings for use in xml,"from xml.dom.minidom import Text, Element
t = Text()
e = Element('p')
t.data = '<bar><a/><baz spam=""eggs""> & blabla &entity;</>'"
how to perform arithmetic operation on a date in python?,import datetime
count letters in a text file,"Counter({'a': 5, 'c': 5, 'b': 5})"
call a functor in python,cpy = copy.copy(self)
django admin shows escaped html even when allow_tags=true,"class QuestionAdmin(admin.ModelAdmin):
    list_display = 'question_id', 'formatqn'
list_per_page = 10"
construct a list of lists from command line,items.append(values)
setting up advanced python logging,fallback_handler = logging.StreamHandler(stream=sys.stdout)
changes to python since dive into python,"for i in range(len(sequence)):
    val = sequence[i]"
reading dbf files with pyodbc,"print('%s --> %s' % (rs.Fields.item(x).Name, rs.Fields.item(x).Value))"
emulating bash 'source' in python,"for line in proc.stdout:
    pass"
selecting the first index after a certain timestamp with a pandas timeseries,"ts[datetime(2011, 1, 8):][0]"
is it possible to get color gradients under curve in matplotlb?,"z[:, :, :3] = rgb"
how can i identify requests made via ajax in python's flask?,"from flask import request

@app.route('/', methods=['GET', 'POST'])
def home_page():
    if request.is_xhr:
        context = controllers.get_default_context()
return render_template('home.html', **context)"
how to avoid line color repetition in matplotlib.pyplot?,"ax1.set_color_cycle([colormap(i) for i in np.linspace(0, 1, number_of_plots)])
for i in range(1, number_of_plots + 1):
    ax1.plot(np.array([1, 5]) * i, label=i)
ax1.legend(loc=2)"
python verify url goes to a page,import http.client
how to make an integer larger than any other integer?,"def __repr__(self):
    return 'ReallyMaxInt()'"
"how can i include special characters (tab, newline) in a python doctest result string?","def dedupe_whitespace(s, spacechars='\t '):
    """"""Merge repeated whitespace characters.
    Example:
    >>> dedupe_whitespace('Black\\t\\tGround')  
    'Black\\tGround'
    """"""
for w in spacechars:
    s = re.sub('(' + w + '+)', w, s)
return s
if __name__ == '__main__':
    doctest.testmod()"
how can we riffle shuffle the elements of a list in python?,print(listD)
is sift algorithm invariant in color?,"img = cv2.imread('0.jpg', 0)"
how do i create a csv file from database in python?,"writer = csv.writer(open('out.csv', 'w'))"
django modelchoicefield has no plus button,"super(FeatureForm, self).__init__(*args, **kwargs)"
list of all available matplotlib backends,matplotlib.rcsetup.validate_backend(name)
in python how do i use list comprehensions to iterate through a list of lists?,"dotted = zip(list(range(1, 22, 2)), list(range(2, 23, 2)), '.' * 11)"
automatically shorten long strings when dumping with pretty print,"[0, 1, 2]"
minimizing a function with scipy.optimize parallely with ipython,"g = lambda a, b=b: f(a, b)"
can't get django-star-ratings to display to template,name = models.CharField(max_length=140)
iterate across lines in two files simultaneously in python,"for line1, line2 in zip(file1, file2):
    pass"
simple example of retrieving 500 items from dynamodb using python,r = key['RangeKeyElement']
python: downloading a large file to a local path and setting custom http headers,"urlretrieve(urllib.request.urlopen(request), '/tmp/del.html')"
how to create a group id based on 5 minutes interval in pandas timeseries?,"new = df.groupby(pd.TimeGrouper('5Min'), as_index=False).apply(lambda x: x[
    'val'])
df['period'] = new.index.get_level_values(0)
df"
building pluggable apps: how to include forks of popular libraries and prevent name conflicts?,"class WrappedEmailMessage(object):

    def __init__(self, message):
        pass"
find part of a string in csv and replace whole cell with new entry?,"id8, Video, moreinfo8"
python profiling using line_profiler - clever way to remove @profile statements on-the-fly?,"try:
    profile = __builtin__.profile
except AttributeError:

    def profile(func):
        return func"
overloaded __getitem__ accepting another argument,"t[2, t2]"
annotate several points with one text in matplotlib,"d = {}
try:
    d['xycoords'] = kwargs['xycoords']
except KeyError:
    pass
try:
    d['arrowprops'] = kwargs['arrowprops']
except KeyError:
    pass
for xy in xy_arr[1:]:
    an = ax.annotate(s, xy, alpha=0.0, xytext=(0, 0), textcoords=an, **d)
ans.append(an)
return ans
ax = plt.gca()
ax.plot([1, 2, 3, 4], [1, 4, 2, 6])
my_annotate(ax, 'Test', xy_arr=[(2, 4), (3, 2), (4, 6)], xycoords='data',
    xytext=(30, -80), textcoords='offset points', bbox=dict(boxstyle=
    'round,pad=0.2', fc='yellow', alpha=0.3), arrowprops=dict(arrowstyle=
    '-|>', connectionstyle='arc3,rad=0.2', fc='w'))
plt.show()"
how to print y axis label horizontally in a matplotlib / pylab chart?,plt.ion()
rotating a 5d array in the last 2 dimensions,"a.reshape(-1, np.prod(a.shape[-2:]))[:, ::-1].reshape(a.shape)"
how can i quantify difference between two images?,"diff = ImageChops.difference(im2, im1)"
"is the single underscore ""_"" a built-in variable in python?",_ + 5
how do you send at gsm commands using python?,"print('Loading profile...', end=' ')
sendatcmd('+npsda=0,2')"
remove a string from another string,"a = '""ONE"" # ""TWO"" # ""THREE"" # ""FOUR"" # ""FIVE""'"
moving x-axis to the top of a plot in matplotlib,"ax.set_yticklabels(row_labels, minor=False)"
get day name from weekday int,"import calendar
calendar.day_name[0]
""""""Monday"""""""
python enum - getting value of enum on string conversion,"def __str__(self):
    pass"
how code a image button in pyqt?,widget.setLayout(layout)
how to handle exceptions in python conceptually?,"class ParseError(Exception):
    pass"
matplotlib imshow fixed aspect and vertical colorbar matching master axis height,"ax = plt.gca()
im = ax.imshow(np.arange(100).reshape((10, 10)), aspect=0.5)
divider = make_axes_locatable(ax)
cax = divider.append_axes('right', size='5%', pad=0.05, aspect=10)
plt.colorbar(im, cax=cax)
plt.show()"
"django application deployed at suburl, redirect to home page after login","if current_app is not None:
    request.current_app = current_app"
how do i modify the last line of a file?,"lines = open(MYFILE, 'r').readlines()
new_last_line = lines[-1].rstrip() + ',90,100,50'"
how to write regex in python with (?(define))?,"rgx = regex.compile(p, regex.VERBOSE | regex.MULTILINE)
for m in rgx.finditer(s):
    pass"
getting number of elements in an iterator in python,iterator = gen(10)
how can i access a classmethod from inside a class in python,"class Test:
    pass"
cumulative addition/multiplication in numpy,n = a.shape[0]
how to install python opencv through conda?,cv2.VideoCapture('input_video.mp4')
how to pass an argument to event handler in tkinter?,"def callback(self, event):
    pass"
print first paragraph in python,"next(v, ''), next(v, '')
for line in v:
    if not line.strip():
        break
print(line)"
how to find all anchor tags inside a div using beautifulsoup in python,"for div in soup.select('.Special_Div_Name'):
    for a in div.find_all('a', href=re.compile('\\.mp3$')):
        pass"
split string on a number of different characters,"def split(string, divs):
    pass"
how to get the signed content from a pkcs7 envelop with m2crypto?,der.decode(cert_asn1)
how would you handle interpolation in a python game?,"class Projectile:

    def __init__(self):
        self.x = 0
self.y = 0
self.vel_x = 0
self.vel_y = 0

def tick(self, dt):
    self.x += dt * self.vel_x
self.y += dt * self.vel_y"
how convert a jpeg image into json file in google machine learning,"def decode_and_resize(image_str_tensor):
    pass"
how to assign items inside a model object with django?,"attr_name = 'title'
if my_model.is_changed:
    setattr(my_model, attr_name, 'something')"
get the first element of each tuple in a list in python,"[x for x, _ in lst]"
static member of a function in python ?,"class Foo(object):
    calls = 0"
how do i validate wtforms fields against one another?,result = True
loading modules by imp.load_source with same name resulting merger of the modules,"return m
m = PyModule_New(name)"
creating a png file in python,"return struct.pack('!B', value & 2 ** 8 - 1)"
plotting a 2d array with matplotlib,"ax = fig.add_subplot(111, projection='3d')"
efficient double sum of products,"@jit
def t2357112(arr1, arr2):
    s = 0
c = 0
for i in range(n - 2, -1, -1):
    c += arr2[i + 1]
s += arr1[i] * c
return s"
datetime unix timestamp contains milliseconds,"if len(unix_timestamp) == 13:
    milliseconds = int(unix_timestamp[-3:])"
display an image from a file in an ipython notebook,"from IPython.display import Image, display
listOfImageNames = ['/path/to/images/1.png', '/path/to/images/2.png']
for imageName in listOfImageNames:
    display(Image(filename=imageName))"
"detect script start up from command prompt or ""double click"" on windows","import os
print('Hello, world!')
if not 'PROMPT' in os.environ:
    input()"
python convert html to text and mimic formatting,"tag = re.compile('<.*?>', re.DOTALL)"
how can i use categorical one-hot labels for training with keras?,"model.add(LSTM(100, input_dim=num_features, return_sequences=True))"
can't change state of checkable qlistviewitem with custom widget,"from PyQt4 import QtGui, QtCore"
python convert args to kwargs,"params.update(zip(names[:], args))"
how can i slow down a loop in python?,time.sleep(-time.time() % 1)
python tkinter scrollbar for frame,canvas.config(width=interior.winfo_reqwidth())
read a python variable in a shell script?,"with open('the/file/path', 'r') as f:
    for line in f:
        pass"
how to get the function name as string in python?,test()
how to return a specific point after an error in 'while' loop,return answer != 'foo'
how to find names of all collections using pymongo?,cols = mon_db.collection_names()
django transaction managed block ended with pending commit/rollback,"transaction.commit()
return render_to_response('template.html', context_instance=RequestContext(
    request, my_ctx))"
sorting a list of tuples such that grouping by key is not desired,"[(1, 2), (3, 4), (1, 3), (2, 4), (1, 4), (2, 3)]"
python: how to check if a variable is equal to one string or another string,"if var == 'stringone' or var == 'stringtwo':
    pass"
how can i obtain the element-wise logical not of a pandas series?,"s = pd.Series([True, True, False, True])"
how would i check a string for a certain letter in python?,"""""""string to search"""""".find('needle')"
kivy objectproperty to update label text,"class DataModel(EventDispatcher):
    a = StringProperty('')
b = StringProperty('')
c = StringProperty('')

def __init__(self, *args, **kwargs):
    super(DataModel, self).__init__(*args, **kwargs)
self.a = 'This is a'
self.b = 'This is b'
self.bind(a=self.set_c)
self.bind(b=self.set_c)

def set_c(self, instance, value):
    self.c = self.a + ' and ' + self.b"
python module beautifulsoup extracting anchors href,"if 'href' in a.attrs:
    links.append(a['href'])"
how to do group by and take count of unique and count of some value as aggregate on same column in python pandas?,"g = df.groupby(['col1', 'col2'])
final_df = g.agg({'col3': 'size', 'col4': 'nunique'})
final_df.insert(1, 'result_col', g.col4.apply(lambda x: x.eq(3).sum()))"
kill a function after a certain time in windows,time.sleep(4)
making a flat list out of list of lists,list(itertools.chain(*list2d))
"importerror: no module named win32api, python, even when location of win32api is appended to path",print(process.Properties_('Name'))
extract number from string - python,"int(list(filter(str.isdigit, str1)))"
index and slice a generator in python,"it = Indexable(fib())
print(it[10])
print(it[2:12:2])"
how to print numpy arrays without any extra notation (square brackets [ ] and spaces between elements)?,"print(str(a).replace(' ', '').replace('.', '').replace('[', '').replace(']', ''
    ))"
get count of values associated with key in dict python,sum(d['success'] for d in s)
django: give custom filtering methods to `queryset` objects of a specific model,"def get_queryset(self):
    return MemberQuerySet(self.model, using=self._db)"
python introspection: get the argument list of a method_descriptor?,type(io.BytesIO.read)
how to compute weighted sum of all elements in a row in pandas?,df * weight
convert image from pil to opencv format,"pil_image = PIL.Image.open('Image.jpg').convert('RGB')
open_cv_image = numpy.array(pil_image)"
how about 'empty if statement' in python,"if not mostlyhappencondition:
    do_something()"
regex to match space and a string until a forward slash,"match = regexp.match(url)
if match:
    group = match.group('group')"
regex: matching several patterns derived from a simple string,tacag0123456789
get data out of a file without iterating through it multiple times,"from itertools import islice

def yield_specific_lines_from_file(filename, start, stop):
    with open(filename, 'rb') as ifile:
        for line in islice(ifile, start, stop):
            yield line
lines = list(yield_specific_lines_from_file('test.txt', 10, 20))"
update for big count of ndb entities fails,"def _migrate_users(curs=None):
    users, next_curs, more = User.query().fetch_page(50, start_cursor=curs)
for user in users:
    user.field1 = 'bla bla'
ndb.put_multi(users)
if more:
    deferred.defer(_migrate_users, next_curs, _queue='default')"
signal.alarm replacement in windows [python],time.sleep(2)
group items of a list with a step size python?,"print(grouplist(l, 3, 2))"
computing the combinations for presence or absence of a factor in a table,"[1, 1, 1, 1, 1],
[0, 1, 1, 1, 1],"
force bins with zero-height in matplotlib bar plot,"artists = pylab.bar(align='center', *zip(*enumerate(counts)))
lefts = [item.get_x() for item in artists]
rights = [(item.get_x() + item.get_width()) for item in artists]
pylab.xlim([min(lefts), max(rights)])
pylab.show()"
"python, printing multiple times,","for i in range(3):
    pass"
python: normalizing some of the columns of a pandas dataframe,"def normalize_joints(df, from_joint):
    joint_names = set(joints) - set([from_joint])"
rsync over ssh - using channel created by paramiko in python,"client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())"
fuzzy string searching with whoosh in python,"class MyFuzzyTerm(FuzzyTerm):

    def __init__(self, fieldname, text, boost=1.0, maxdist=2, prefixlength=
        1, constantscore=True):
        super(MyFuzzyTerm, self).__init__(fieldname, text, boost, maxdist,
            prefixlength, constantscore)"
python: download returned zip file from url,"r = requests.get(zip_file_url, stream=True)
z = zipfile.ZipFile(StringIO.StringIO(r.content))
z.extractall()"
give the python terminal a persistent history,"if os.path.exists(historyPath):
    readline.read_history_file(historyPath)
atexit.register(save_history)
del os, atexit, readline, rlcompleter, save_history, historyPath"
merging sublists in python,"total = []
for i in [['a', 'b', 'c'], ['d', 'e', 'f']]:
    total += i"
not possible to set content-type to application/json using urllib2,"req = urllib.request.Request('http://localhost:8000', data=json.dumps({'a': 'b'}),
    headers={'Content-Type': 'application/json'})
response = opener.open(req)"
"calculating averages of multiple columns, ignoring nan pandas numpy",df
python matplotlib colorbar setting tick formator/locator changes tick labels,"tick_labels = ['-0.390', '-0.260', '-0.130', '0', '0.13', '0.26', '0.390']"
assigning method to object at runtime in python,"def method_of(instance):

    def method_adder(function):
        setattr(instance, function.__name__, function.__get__(instance))
return function
return method_adder

@method_of(a)
def new_func(self, arg1, arg2):
    stuff()"
indexing python array with a python array with redundant elements,"idx = numpy.bincount([0, 0, 0, 1, 1, 3, 3])"
reconstructing a pandas object versus copy(),df1 = df.copy()
how do i sort a key:list dictionary by values in list?,"for i, name in enumerate(mydict['name']):
    pass"
debugging in python: show last n executed lines,self.write_method(' '.join(msg))
convert date to number python,"t = datetime.now()
t1 = t.timetuple()"
how to delete qtreewidgetitem,"ui.show()
sys.exit(app.exec_())"
"how to format in numpy savetxt such that zeros are saved only as ""0""","matrix([[-0.5549, 0.0, 0.0], [0.0, 3.4356e-08, 0.0], [0.0, 0.0, 34.3422]])"
efficient way to add a singleton dimension to a numpy vector so that slice assignments work,"np.expand_dims(np.array([1, 2, 3, 4]), 1)"
moving django models into their own files,"__all__ = ['ModelA', 'ModelA1']


class ModelA(models.Model):
    pass"
convert string to integer using map(),"T1 = ['13', '17', '18', '21', '32']"
get first list index containing sub string in python,"for i in range(len(l)):
    pass"
what do i need to import to gain access to my models?,"transaction.enter_transaction_management()
try:
    transaction.commit()
finally:
    transaction.rollback()
pass
transaction.leave_transaction_management()"
how do i make bar plots automatically cycle across different colors?,import matplotlib.pyplot as plt
define aggfunc for each values column in pandas pivot table,"df2 = pd.pivot_table(df, values=['E'], rows=['B'], aggfunc=np.mean)
pd.concat((df1, df2), axis=1)"
how can i check if a python unicode string contains non-western letters?,only_roman_chars('russian: \u0433\u0430\u0433\u0430')
swapping columns with numpy arrays,"x = np.array([1, 2, 0, -2])
print(x)
x[2], x[1] = x[1], x[2]
print(x)"
plotting a histogram from pre-counted data in matplotlib,"min_bin = np.min(list(counted_data.keys()))
max_bin = np.max(list(counted_data.keys()))
bins = np.arange(min_bin, max_bin + 1)
vals = np.zeros(max_bin - min_bin + 1)
for k, v in list(counted_data.items()):
    pass"
reading registers with pymodbus,print(response.getRegister(2))
how to frame two for loops in list comprehension python,[entry for tag in tags for entry in entries if tag in entry]
how to fetch a non-ascii url with python urlopen?,"url[2] = urllib.parse.quote(url[2])
url = urllib.parse.urlunsplit(url)"
how to create uncollectable garbage in python?,"class Finalizable:

    def __del__(self):
        pass
a = Finalizable()
b = Finalizable()
a.x = b
b.x = a
del a
del b
import gc
gc.collect()
gc.garbage"
how to speed up 4 million set intersections?,"d = overlap.setdefault(l1, {})"
printing to stdout in ipython parallel processes,async.display_outputs()
remove all forms of urls from a given string in python,"URLless_string = re.sub(
    '(?i)\\b((?:https?://|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}     /)(?:[^\\s()<>]+|\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\))+(?:\\(([^\\s()<>]+|(\\([^\\s()<>]+\\)))*\\)|[^\\s`!()\\[\\]{};:\\\'"".,<>?\xc2\xab\xc2\xbb\xe2\x80\x9c\xe2\x80\x9d\xe2\x80\x98\xe2\x80\x99]))'
    , '', thestring)"
how to transform a key pressed into a different one in pygtk,"def do_key_press_event(self, event):
    if event.keyval == gtk.gdk.keyval_from_name('KP_Decimal'):
        pass"
"how to iterate over a timespan after days, hours, weeks and months in python?",print(dt)
python: print a generator expression?,"foo = (x * x for x in range(10))
[foo]"
"in pyqt, how can signals and slots be used to connect a dropdownlist to a function?","QtCore.QObject.connect(a, QtCore.SIGNAL('QtSig()'), pyClass.pyMethod)"
assertion test for program that checks if a list is a sublist from another list,"sublist = [1]
[given[i:i + len(sublist)] for i in range(0, len(given) - len(sublist))]"
django models - how to filter out duplicate values by pk after the fact?,q = Model.objects.filter(Q(field1=f1) | Q(field2=f2))
how to remove a key from a python dictionary?,pass
python/matplotlib - how to put text in the corner of equal aspect figure,"axes[0].plot(list(range(1, 4)))
axes[1].plot(list(range(10, 40, 10)), list(range(1, 4)))
for ax in axes:
    ax.annotate('Test', xy=(1, 0), xycoords='axes fraction', fontsize=16,
        xytext=(-5, 5), textcoords='offset points', ha='right', va='bottom')
plt.show()"
access index of last element in data frame,"df
df['date'].iloc[0]
df['date'].iloc[-1]"
exit a multiprocessing script,"for p in proc:
    while True:
        if not p.is_alive():
            break"
is there a java equivalent of python's 'enumerate' function?,"zip(list(range(len(mylist))), mylist)"
how to get access to error message from abort command when using custom error handler,response = jsonify({'message': message})
help with basic python function,"_user = 'username'
_pass = 'password'
_base = 'database'"
pyqt4 local directory view with option to select folders,"def flags(self, index):
    return QtGui.QDirModel.flags(self, index) | QtCore.Qt.ItemIsUserCheckable"
python check if all elements of a list are the same type,"all(isinstance(x, int) for x in lst)"
queens on chessboard solved randomly in python,counter += 1
efficient loop over numpy array,dupl = []
multiprocessing with numpy makes python quit unexpectedly on osx,p.close()
is there a consistent way to enumerate days/weeks/months between two dates?,"weeks = map(dt2d, drrule.rrule(drrule.WEEKLY, dtstart=start_week, until=
    end_week))
start_month = start.replace(day=1)
end_month = end.replace(day=1)
months = map(dt2d, drrule.rrule(drrule.MONTHLY, dtstart=start_month, until=
    end_month))
return days, weeks, months
if __name__ == '__main__':
    days, weeks, months = enumerate_dates(datetime.date(2010, 11, 28),
        datetime.date(2010, 12, 1))
print(""""""days: {d}
weeks: {w}
months: {m}"""""".format(d=map(str, days), w=map
    (str, weeks), m=map(str, months)))"
"pygame: detect joystick disconnect, and wait for it to be reconnected",discon = True
how can i programmatically find the list of codecs known to python?,"print(aliases - modnames)
codec_names = modnames.union(aliases)
print(codec_names)"
python: modeling one-to-one relationship in datastore,user.put()
passing image object as a button background in kivy,"Builder.load_string(
    """"""
<ButtonsApp>:
    orientation: ""vertical""
    Button:
        text: ""B1""
        Image:
            source: 'kivy.png'
            y: self.parent.y + self.parent.height - 250
            x: self.parent.x
            size: 250, 250
            allow_stretch: True
    Label:
        text: ""A label\""
""""""
    )


class ButtonsApp(App, BoxLayout):

    def build(self):
        return self"
how can i rename files with a python script?,"for i in context.objectIds():
    pass"
python string interpolation using dictionary and strings,"mydict = {'path': '/var/blah', 'curr': 1.1, 'prev': 1.0}
""""""path: {path} curr: {curr} prev: {prev}"""""".format(**mydict)"
multiplying polynomials in python,"convolve([1, 5, 2], [6, 1, 4, 3])"
combine or join numpy arrays,"b = np.array([[0.4776325, 0.73690098], [0.69181444, 0.672248], [0.7994111, 
    0.52273]])"
convert http headers (string) to a python dictionary,r1 = conn.getresponse()
python compute running sum of values in one-line,"{'date': '2016-02-09', 'value': 11},"
subprocess call in python to invoke java jar files with java_opts,"import os
import subprocess
env = dict(os.environ)
env['JAVA_OPTS'] = 'foo'
subprocess.call(['java', '-jar', 'temp.jar'], env=env)"
determining maximum valid setrecursionlimit value for python,"import sys, struct
maxint = 2 ** (struct.Struct('i').size * 8 - 1) - 1
sys.setrecursionlimit(maxint)

def goodbye_world():
    goodbye_world()"
"how to deal with ""partial"" dates (2010-00-00) from mysql in django?","datetime(2010, 4, 20) in the_year_2010
datetime(2011, 4, 20) in the_year_2010"
making errorbars not clipped in matplotlib with python,x = list(range(10))
how to set the tab order in a tkinter application?,"def __init__(self, *args, **kwargs):
    tk.Tk.__init__(self, *args, **kwargs)"
how to load a model from an hdf5 file in keras?,"model.add(Dense(output_dim, activation='softmax'))"
django multiple choice field / checkbox select multiple,"class ProfileForm(forms.ModelForm):
    pass"
installing a django site on godaddy,"import sys, os
sys.path.insert(0, '/must/be/full/path/to/code/yoursite')
os.environ['DJANGO_SETTINGS_MODULE'] = 'yoursite.settings'"
trouble with using iloc in pandas dataframe with hierarchical index,"tup = zip(*[['a', 'a', 'b', 'b'], ['x', 'y', 'x', 'y']])
index = pd.MultiIndex.from_tuples(tup, names=['f', 's'])"
python pandas drop columns based on max value of column,from pandas import DataFrame
send multiple data (text and images) to a server through a socket,s.send(l)
list database tables with sqlalchemy,m = MetaData()
how do i fix a dimension error in tensorflow?,"initial = tf.constant(0.1, shape=shape)"
append integer to beginning of list in python,"li = [1, 2, 3]"
viewing all defined variables,"for value in list(vars().values()):
    pass"
alternate way to do iterative name/variables in pythonic while loop,a = [(0) for x in range(y)]
django rest framework creating custom user,username = serializers.CharField(source='user.username')
how to read file in reverse order in python3.2 without reading the whole file to memory?,"w.seek(8)
w.readline()"
how do i write a 24-bit wav file in python?,"for data_bytes in data_as_bytes:
    wavwriter.writeframes(data_bytes[0:3])"
pandas dataframe to excel sheet,xlApp.Quit()
how to decorate a python object with a mutex,"def __init__(self, obj):
    pass"
how can i speed up reading multiple files and putting the data into a dataframe?,pool = Pool(4)
programmatically saving image to django imagefield,result = urllib.request.urlretrieve(image_url)
gdata python google apps authentication,token.get_access_token(code)
find value that partitions two numpy arrays equally,x1.sort()
extract the first paragraph from a wikipedia article (python),"data = resource.read()
resource.close()
soup = BeautifulSoup(data)
print(soup.find('div', id='bodyContent').p)"
how to remove duplicates from a dataframe?,print(pd.isnull(df['Originaldataindicator']))
igraph: how to use add_edges when there are attributes?,graph.es['weight'] = list(range(g.ecount()))
python: how to get number of mili seconds per jiffy,"class timespec(Structure):
    pass"
"issues with try/except, attempting to convert strings to integers in pandas data frame where possible","for col in list_of_columns:
    pass"
drawing histogram in opencv-python,"cv2.imshow('colorhist', h)
cv2.waitKey(0)"
understanding python object membership for sets,"class MyObject(object):

    def __init__(self, data):
        self.data = data

def __cmp__(self, other):
    return self.data - other.data

def __hash__(self):
    return hash(self.data)"
how to emit socketio event on the serverside,"pubsub.subscribe(chan)
while True:
    for i in pubsub.listen():
        self.send({'message_data': i}, json=True)

def recv_message(self, message):
    if is_message_to_subscribe(message):
        self.spawn(self.listener, get_your_channel_label(message))"
pyside how to get qwebinspector same window,self.inspector.setPage(self.view.page())
multiple xml namespaces in tag with lxml,xmlns = 'http://www.topografix.com/GPX/1/1'
how to create a timer using tkinter?,"class App:

    def __init__(self):
        self.root = tk.Tk()
self.label = tk.Label(text='')
self.label.pack()
self.update_clock()
self.root.mainloop()

def update_clock(self):
    now = time.strftime('%H:%M:%S')
self.label.configure(text=now)
self.root.after(1000, self.update_clock)
app = App()"
how to convert dictionary into string,""""""""""""".join('{}{}'.format(key, val) for key, val in sorted(adict.items()))"
how to put multiple  statements in one line?,"if foo == 'blah':
    do_blah_thing()
do_one()"
"camelcase every string, any standard library?","WORD_RE = re.compile('\\w+')

def capitalizeMatch(m):
    return m.group(0).capitalize()

def capitalizeWords(s):
    pass"
find all text files not containing some text string,"lst = [1, 2, 4, 6, 3, 8, 0, 5]
for n in lst:
    if n % 2 == 0:
        lst.remove(n)
lst"
show legend and label axes in plotly 3d scatter plots,"plot_url = py.plot(fig, filename='3d-scatter-with-axes-titles')"
how to generate many interaction terms in pandas?,import numpy as np
performance issues in burrows-wheeler in python,"bins.setdefault(key(value, step), []).append(value)"
using url_for across blueprints,g.project = Project.query.filter_by(name=project_name).first_or_404()
how to use python requests to fake a browser visit?,"import requests
url = 'http://www.ichangtou.com/#company:data_000008.html'
headers = {'User-Agent':
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'
    }
response = requests.get(url, headers=headers)
print(response.content)"
joining elements in a list without the join command,answer += str(number)
django: ordered list of model instances from different models?,MediaItem.objects.all().order_by('upload_date').select_subclasses()
removing characters from string python,"def anti_vowel(text):
    for vowel in 'aeiouAEIOU':
        text = text.replace(vowel, '')
return text
print(anti_vowel('Hello World'))"
"how do i sort a list with ""nones last""","@total_ordering
class Infinity:

    def __eq__(self, other):
        pass"
python 3 decimal rounding half down with round_half_up context,context.rounding = decimal.ROUND_HALF_UP
creating a postgresql db using psycopg2,"con = connect(dbname='postgres', user='nishant', host='localhost', password
    ='everything')"
permission change of files in python,"for dirpath, dirnames, filenames in os.walk('.'):
    for filename in filenames:
        pass"
is there a way to split a string by every nth separator in python?,words = 'this-is-a-string'.split('-')
dict of dicts of dicts to dataframe,"pd.concat(map(pd.DataFrame, iter(d.values())), keys=list(d.keys())).stack().unstack(0)"
pyqt - column of checkboxes in a qtableview,"model.setData(index, newValue, QtCore.Qt.EditRole)"
how to use python 3.4's enums without significant slowdown?,"class Result(enum.Enum):
    pass"
using selenium in the background,driver.get('https://ps.rsd.edu/public/')
best way to write a python function that integrates a gaussian?,"def f(x):
    return k * math.exp(s * (x - mu) * (x - mu))
return f"
how to print stuff in a py.test finalizer,"if hasattr(item, '_request'):
    pass"
"python looping combinations of 8 objects into 3 groups, 3-3-2","['12', '378', '456']"
xhtml2pdf importerror - django,"if not (reportlab.Version[0] == '2' and reportlab.Version[2] >= '1'):
    raise ImportError('Reportlab Version 2.1+ is needed!')
REPORTLAB22 = reportlab.Version[0] == '2' and reportlab.Version[2] >= '2'"
plotting confidence intervals for maximum likelihood estimate,"return t - len(np.unique(np.random.randint(0, N, size=t)))"
can super deal with multiple inheritance?,b.frob(1)
how do i set multiple cookies with cherrypy,setCookie.exposed = True
how can i disable logging while running unit tests in python django?,"class MyOwnTestRunner(DjangoTestSuiteRunner):

    def run_tests(self, test_labels, extra_tests=None, **kwargs):
        logging.disable(logging.CRITICAL)
return super(MyOwnTestRunner, self).run_tests(test_labels, extra_tests, **
    kwargs)"
freeze cells in excel using xlwt,"ws.set_panes_frozen(True)
ws.set_remove_splits(True)"
split a list into two sublists in all possible ways,"for i in range(len(l)):
    pass"
how to capture both lookahead lookbehind regex python,"p = re.compile(
    '(?=\\n(?:ADDITIONAL|Additional)\\n)[\\s\\S]+?(?<=\\n(?:Languages|LANGUAGES)\\b)'
    , re.MULTILINE)"
i need help writing a regular expression for detecting chords,"accidentals = '(?:#|##|b|bb)?'
chords = '(?:maj|min|m|sus|aug|dim)?'
additions = '[0-9]?'
return re.findall(notes + accidentals + chords + additions, line)"
numpy unique without sort,"def unique(array):
    pass"
how to do variable assignment inside a while(expression) loop in python?,names
how to pass a list of lists through a for loop in python?,"for element in sample:
    hets = []"
how to automate satellite image downloads?,dems < -readHTMLTable(demdir)[[1]]
using constants wisely in sympy,"b, c, t = symbols('b c t')"
fast iteration of numpy arrays,state = 0
python: how to remove values from 2 lists based on what's in 1 list,"xyFiltered = [(x, y) for x, y in xyVar if y <= 100]"
"if ram isn't a concern, is reading line by line faster or reading everything into ram and access it? - python","def first_read():
    codecs.open(file, 'r', 'utf8').readlines()

def line_by_line():
    for i in codecs.open(file, 'r', 'utf8'):
        pass

def at_once():
    for i in codecs.open(file, 'r', 'utf8').readlines():
        pass
first_read()"
python split at tag regex,"pattern = re.compile('(<[^>]*>)(.*)(</[^>]*>)')
print(re.findall(pattern, line))"
subclasses of pandas' object work differently from subclass of other object?,"def my_method(self):
    pass"
"create a random order of (x, y) pairs, without repeating/subsequent x's","ys = list(range(1, ny + 1))"
adding new key inside a new key and assigning value in python dictionary,dic['Test']['class'] = {'section': 5}
find the largest subset of a set of numbers such that the sum of any 2 numbers is not divisible by a given number,powerSet.add(tmp)
getting user in django-socketio,"from django.contrib.auth.models import User

def message(request, socket, context, message):
    pass"
how to hide a gtk+ filechooserdialog in python 3.4?,print(path)
how to map one list to another in python?,print(d)
how to get bookmark's page number,result = dict()
compare object instances for equality by their attributes in python,"def __init__(self, attr1, attr2):
    pass"
sum of every two columns in pandas dataframe,"def with_reduceat(df):
    df = pd.DataFrame(np.add.reduceat(df.values, np.arange(len(df.columns))
        [::2], axis=1))"
converting datetime.date to utc timestamp in python,"d = datetime.date(1970, 1, 1)"
python list order,"user_input = []
getting_text(input('Enter the first text '))
user_input"
how can a flask decorator have arguments?,return value
combinations of nested lists,"from itertools import product
list(product(x, flatten(y)))"
python - doing absolute imports from a subfolder,main.py
python 'x days ago' to datetime,dt = datetime.timedelta(**time_dict)
utf-8 character in user path prevents module from being imported,"if isinstance(path, bytes):
    userhome = userhome.encode(sys.getfilesystemencoding())"
function iterates with print but not with return,"x = writecode(5, 1, 0, 4)"
"in pandas, how to use fillna to fill the whole columns with string if the column is empty originally?",df
preserve exif data of image with pil when resize(create thumbnail),from PIL import Image
how to manage google api errors in python,"if err.resp.get('content-type', '').startswith('application/json'):
    reason = json.loads(e.content).reason"
add argparse arguments from external modules,"parser = argparse.ArgumentParser()
parser.add_argument(*args, **kwargs)"
how can i write my own aggregate functions with sqlalchemy?,"print('RESULT ROW: ', row)"
trying to write my own neural network in python,matplotlib.pyplot.close()
selenium testing without browser,driver = webdriver.Firefox()
how do i push new files to github?,"print(subprocess.check_output('git commit -m ""a commit""', shell=True))"
plot data against time on x axis and adjust it in real time using python,datatoplot = a1.pop()
converting timezone-aware datetime to local time in python,"aware_dt = iso8601.parse_date('2010-10-30T17:21:12Z')
naive_local_dt = aware_dt.astimezone(local_timezone).replace(tzinfo=None)"
"from: ""1 hour ago"", to: timedelta + accuracy","if timestamp[1] == 0:
    raise ValueError('Failed to parse datetime: %s' % datetime_string)"
how to write a twisted server that is also a client?,factory = protocol.ClientFactory()
is it safe to replace '==' with 'is' to compare boolean-values,bool('')
assignment inside lambda expression in python,output = [x for x in input if x.name]
python3 subprocess communicate example,s = eval(input())
python : how to get sum of all values until a specific key is reached in dictionary,from collections import OrderedDict
terminate a python script from another python script,"extProc = sp.Popen(['python', 'myPyScript.py'])"
how to split an array according to a condition in numpy?,"def split(arr, cond):
    return [arr[cond], arr[~cond]]
a = np.array([1, 3, 5, 7, 2, 4, 6, 8])
print(split(a, a < 5))
a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9], [2, 4, 7]])
print(split(a, a[:, (0)] < 3))"
scrolling down a page with selenium webdriver,"driver = webdriver.Firefox()
driver.get('https://twitter.com/BarackObama')
while True:
    driver.execute_script('window.scrollTo(0, document.body.scrollHeight);')"
summing values of 2d array on indices,"i = np.arange(M)[:, (np.newaxis)]"
convert a list to a dictionary in python,"b = {a[i]: a[i + 1] for i in range(0, len(a), 2)}"
writing a parallel loop,import multiprocessing as mp
parsing gps receiver output via regex in python,"for line in csv.reader(open('/var/tmp/sampledata')):
    pass"
how do i decompose a number into powers of 2?,"while 1:
    pass"
cannot get minor grid lines to appear in matplotlib figure,"plt.minorticks_on()
plt.show()"
cartesian product of a dictionary of lists,"import itertools

def dict_product(dicts):
    """"""
    >>> list(dict_product(dict(number=[1,2], character='ab')))
    [{'character': 'a', 'number': 1},
     {'character': 'a', 'number': 2},
     {'character': 'b', 'number': 1},
     {'character': 'b', 'number': 2}]
    """"""
return (dict(zip(dicts, x)) for x in itertools.product(*list(dicts.values())))"
python trying to place keyword arguments after *args,"def foo2(*args, **kwargs):
    kwargs['bar'] = kwargs.get('bar', 'foo')
print(args, kwargs)
foo2(1, 2, 3, bar='foo')"
pythonic way to merge two list of tuples into single list of dict,"for color_id, sku in skus:
    sku_dict[color_id].append(sku)
combined = [dict(colorString=color, skus=sku_dict.get(color_id)) for 
    color_id, color in colorStrings]"
convert a string to datetime object in python,"dateobj = datetime.datetime.strptime(datestr, '%Y-%m-%d').date()"
remove non-ascii characters from a string using python / django,"""""""1 < 4 & 4 > 1"""""""
writing a log file from python program,logging.info('Log Entry Here.')
"python, unittest: is there a way to pass command line options to the app","parser.add_argument('unittest_args', nargs='*')"
convert python sqlite db to hdf5,cnx = sqlite3.connect('mydbfile.sqlite')
filtering in django rest framework,"class TownList(generics.ListAPIView):
    queryset = Town.objects.all()
serializer_class = TownSerializer
filter_class = TownFilter(generics.ListAPIView)
serializer_class = PurchaseSerializer

def get_queryset(self):
    queryset = Town.objects.all()
search_param = self.request.QUERY_PARAMS.get('search', None)
if search_param is not None:
    """"""
            set queryset here or use your TownFilter 
            """"""
return queryset"
how to expose a property (virtual field) on a django model as a field in a tastypie modelresource,"class UserResource(ModelResource):
    fullname = fields.CharField(readonly=True)"
how to find elements by class,"soup.find_all('div', class_='stylelistrowone stylelistrowtwo')"
how to get file extension correctly?,return splitext(path)
stripping inline tags with python's lxml,"print(etree.tostring(tree, pretty_print=True))
etree.strip_elements(tree, 'y', with_tail=False)
print('-' * 72)
print(etree.tostring(tree, pretty_print=True))"
where is the default parameter in python function,"def f(a=[]):
    a.append(3)
print(f.__defaults__)
f()
print(f.__defaults__)"
draw images with canvas and use simpledoctemplate,"def draw(self):
    pass"
way to get a file list from a downloaded zip without loading entire zip file into memory?,"import zipfile
import urllib.request, urllib.parse, urllib.error
url = 'http://url.to/archive.zip'
urllib.request.urlretrieve(url, 'archive.zip')"
tensorflow strings: what they are and how to work with them,"x = tf.decode_raw(x, tf.uint8)
y = x[:4]
sess = tf.InteractiveSession()
print(y.eval())"
showing what twitter followers are followed by friends in python/django,"for f in friends:
    ff = api.GetFriendsIDs(f)['ids']
users = followers_not_friends.intersection(ff)
for user in users:
    followers_that_friends_follow[user].append(f)"
python - how to change values in a list of lists?,"output[[0, 'spam', 2, 3, 4], [5, 'spam', 7, 8, 9], [10, 'spam', 12, 13, 14]]"
use python xmlrpclib with unix domain sockets?,"super(UnixStreamTransport, self).__init__()"
python nested dict to csv with many columns,"writer = csv.DictWriter(csvfile, fieldnames)"
how to convert special characters into html entities?,text = text.decode('utf-8')
pandas dataset into an array for modelling in scikit-learn,"data = [(0.2, 10), (0.3, 12), (0.24, 14), (0.8, 30), (0.9, 32), (0.85, 33.3
    ), (0.91, 31), (0.1, 15), (-0.23, 45)]
p_df = pd.DataFrame(data)"
merging background with transparent image in pil,"mask = Image.new('L', (100, 100), 0)
draw = ImageDraw.Draw(mask)"
random decimal in python,"gen_random_decimal(9999, 999999)
gen_random_decimal(9999, 999999)
gen_random_decimal(99999999999, 999999999999)"
turning off logging in selenium (from python),"import logging
from selenium.webdriver.remote.remote_connection import LOGGER
LOGGER.setLevel(logging.WARNING)"
from nd to 1d arrays,"b = np.reshape(a, (np.product(a.shape),))
b"
fuzzy string comparison,"""""""It was a dark and stormy night. I was all alone sitting on a red chair. I was not completely alone as I had three cats."""""""
how to show the whole image when using opencv warpperspective,"Ht = array([[1, 0, t[0]], [0, 1, t[1]], [0, 0, 1]])"
trouble using python pil library to crop and save image,"top = 804
width = 300
height = 200
box = left, top, left + width, top + height
area = img.crop(box)"
how can i decorate a python unittest method to skip if a property i've previously evaluated isn't true?,print('A test')
simulate python keypresses for controlling a game,"time.sleep(1)
ReleaseKey(17)
time.sleep(1)"
how can i draw text with different stroke and fill colors on images with python?,"ctx.select_font_face(font, *args, **kwargs)"
cancel slow download in python,sys.stdout.flush()
get total number of running greenlets in gevent?,get_greenlet_status(greenlets)
django model inheritance and foreign keys,"class B(models.Model):
    a = model.ForeignKey(A, related_name='A')
b = models.CharField(max_length=5)


class D(models.Model):
    a = model.ForeignKey(A, related_name='A')
parent = model.ForeignKey(B, related_name='D')"
numpy binary matrix - get rows and columns of true elements,arr
how to round the minute of a datetime object python,"return dt + datetime.timedelta(0, rounding - seconds, -dt.microsecond)"
generate a sound file with a 15khz tone,"for i in range(nframes):
    sample = math.sin(2 * math.pi * frequency * (float(i) / framerate)
        ) * amplitude / 2
wav_file.writeframes(struct.pack('h', sample))
wav_file.close()"
creating a labelframe inside a tkinter canvas,label.pack()
python list with constant value,[z0] * len(seconds)
calling c from python: passing list of numpy pointers,"my_c_func(values.ctypes.data_as(c_void_p), c_long(values.size))"
how to shift a string to right and reverse it in python?,"def shift(sentence):
    words = sentence.split()
return ' '.join([words[-1]] + words[:-1])"
how to update yaml file using python,'    init_config: {}\n    instances:\n         - host: {{ IP }}\n           username: {{ username }}\n           password: {{ password }}\n'
how do i construct and populate a wx.grid with data from a database (python/wxpython),"mygrid.SetCellValue(row, col, databasevalue4rowcol)"
gevent pool with nested web requests,"for url in urls:
    pass"
force unpacking of certain egg directories,"def get_help_url(self):
    pass"
shuffle a large list of items without loading in memory,"def big_shuffle(file):
    pass"
strategy for being able to reverse a deletion using sqlalchemy,"assert s.query(A.id).order_by(A.id).all() == [(1,), (4,)]"
how can tornado serve a single static file at an arbitrary location?,import tornado.web
how to use grep in ipython?,"import os
import subprocess
os.system('grep one file_1.txt')
subprocess.call(['grep', 'one', 'file_1.txt'])"
how to download a file via ftp with python ftplib,"ftp = ftplib.FTP('IP')
ftp.login('USR Name', 'Pass')
ftp.cwd('/Dir')"
group similar items in a master list and create new lists based on grouped items,"lst = ['Bus04_00_00_IB_pts_Line', 'Bus04_00_00_OB_pts_Line',
    'Bus15_00_00_IB_pts_Line', 'Bus15_00_00_OB_pts_Line']
[(key, list(val)) for key, val in itertools.groupby(lst, lambda x: x[0:5])]"
convert list of floats into buffer in python?,"for i in range(0, 1024):
    pass"
represent a tree hierarchy using an excel spreadsheet to be easily parsed by python csv reader?,Electronics | Computers | Laptops
how to remove an extension to a blob caused by morphology,"plt.subplot(2, 2, i + 1), plt.imshow(images[i], 'gray')"
inserting and removing into/from sorted list in python,"print(list(skip))
for num in data[:N // 2]:
    skip.remove(num)
print(list(skip))"
django nameerror [app name] is not defined,"'^grappelli/', include('grappelli.urls')"
removing help_text from django usercreateform,from django import forms
best way to encode tuples with json,"simplejson.dumps(dict([('%d,%d' % k, v) for k, v in list(d.items())]))"
render html to pdf in django site,from django.http import HttpResponse
ranks within groupby in pandas,"return data
df_ranked = df.groupby('Date').apply(grouping)"
testing students' code in jupyter with a unittest,import unittest
how does one ignore unexpected keyword arguments passed to a function?,"def f(a='default_a', **kwargs):
    pass"
get description of an installed package without actual importing it,"if sys.getrefcount(module) > 1:
    pass"
"python: how to ""fork"" a session in django","def organization_wall_post(request, organization):
    organization = Organization.objects.get_object_or_404(organization)
if request.method == 'POST':
    form = MessageForm(request.POST)
if form.is_valid():
    post_on_organization_wall(request.user.subprofile, message, organisation)
else:
    form = MessageForm()
return render(request, 'organisation/wall_post.html', {'form': form})"
set value for particular cell in pandas dataframe with iloc,import numpy as np
does size of a file affects the performance of the write in python,"preallocate_file(fn, size)"
selenium with ghostdriver in python on windows,"browser.set_window_size(1400, 1000)
browser.get('http://stackoverflow.com/')
print(browser.title)"
turning off tick marks in bokeh,bokeh.io.output_file('remove_tick_marks.html')
show hidden option using argparse,parser._actions[0]
passing csrftoken with python requests,client = requests.session()
factory design pattern,"class Flash(Button):
    pass"
"python distutils, how to get a compiler that is going to be used?","if c in lopt:
    pass"
o(1) indexable deque of integers in python,self.left = []
simple async example with tornado python,self.write(str(i))
python regex -- extraneous matchings,"def tokenize(s):
    import re
pattern = re.compile('(\\-|\\+\\=|\\=\\=|\\=|\\+)|\\s+')"
amazon s3 boto - how to delete folder?,"for key in bucket.list(prefix='/your/directory/'):
    delete_key_list.append(key)"
deploying django application on webfaction,"-myproject.wsgi
-some_project2"
"using flask, how do i modify the cache-control header for all output?","app = Flask(__name__)
app.config['SEND_FILE_MAX_AGE_DEFAULT'] = 300"
flask python buttons,"if request.form['submit'] == 'Do Something':
    pass"
explanation needed regarding explanation of hashable objects,return self.id == other.id and self.name == other.name
how to map one list to another in python?,"{'a': 2, 'c': 3, 'b': 1}"
capture interactive python shell output along with input,"python3
exit"
"printing a list of lists, without brackets","for table in foo:
    pass"
generate fixed length hash in python for url parameter,"arr = []
radix = len(alphabet)
while num:
    arr.append(alphabet[num % radix])
num /= radix
arr.reverse()
return alphabet[0] * (max - len(arr)) + ''.join(arr)

def base62_to_int(str):
    radix = len(alphabet)
power = len(str) - 1
num = 0
for char in str:
    num += alphabet.index(char) * radix ** power
power -= 1
return num"
python securely remove file,"with open(path, 'ba+') as delfile:
    length = delfile.tell()"
how to show multiple images in one figure?,"a = fig.add_subplot(1, 2, 2)
imgplot = plt.imshow(lum_img)"
python: remove duplicate tuples from list if they are exactly the same including order of items,"x = [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5]"
bring the current python program to background,os.chdir(WORKDIR)
python: can i have a subclass return instances of its own type for operators defined in a superclass?,specialnames = [('__%s__' % s) for s in specials.split()]
how to redirect to a query string url containing non-ascii characters in django?,from django.http import HttpResponseRedirect
find root of path,path = '/foo/bar/baz'
python list controlled increment,abacus[index] = abacus[index] + 1
django app dependency cycle,"class MyModel(models.Model):
    pass"
given two python lists of same length. how to return the best matches of similar values?,"yield l1[row], l2[col]"
python check if all elements of a list are the same type,pass
extracting a url in python,pass
how can i pack numpy bool arrays into a string of bits?,xp = np.packbits(x)
django - string to date - date to unix timestamp,from time import strptime
filestorage for opencv python api,"yaml.add_constructor('tag:yaml.org,2002:opencv-matrix', opencv_matrix)"
python convert string literal to float,"total = sum(float(item) for item in s.split(','))"
remove nan values from dataframe without fillna or interpolate,s.dropna().plot()
outputting data from unit test in python,logging.getLogger('SomeTest.testSomething').setLevel(logging.DEBUG)
"in python, find item in list of dicts, using bisect","bisect.bisect(offset_values, 1900)"
simple python validation library which reports all validation errors instead of first failed?,print(e.errors)
is there any way to make simplejson less strict?,s = '{foo: 8}'
how can python observe changes to mongodb's oplog,db = MongoClient().local
pandas: selection with multiindex,df[pd.Series(df.index.get_level_values('A')).isin(vals[vals['values']].index)]
shuffle two list at once with same order,"['e', 'c', 'd', 'a', 'b']"
django: display values of the selected multiple choice field in a template,f = XForm(initial={'genders': ['female']})
"scrapy - logging to file and stdout simultaneously, with spider names","from scrapy.log import ScrapyFileLogObserver
logfile = open('testlog.log', 'w')
log_observer = ScrapyFileLogObserver(logfile, level=logging.DEBUG)
log_observer.start()"
convert python exception information to string for logging,"print(traceback.format_exception(type, value, tb))"
"savetxt two columns in python,numpy","phase = np.array([[-1.0, 1.0, -1.0], [-1.0, 1.0, 1.0], [1.0, 1.0, 1.0], [
    1.0, -1.0, 1.0], [-1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [1.0, -1.0, -1.0
    ], [-1.0, -1.0, 1.0]])"
scrape inner frame html,"driver.get('https://vine.co/v/i3pQ70vK3iv')
video = driver.find_element_by_tag_name('video')
print(video.get_attribute('src'))
driver.close()"
how to iterate over unicode characters in python 3?,"for c in s:
    pass"
controlling alpha value on 3d scatter plot using python and matplotlib,fig = plt.figure()
patterns for dealing with memcache caching in django,"def get_cached(model, **kwargs):
    pass"
is there a way to do more work after a return statement?,"def __exit__(self, exc_type, exc_value, traceback):
    if exc_type == MyCustomErrorType:
        return True"
"how to code a python function that accepts float, list or numpy.array?","if len(a) == len(b) == len(x):
    pass"
efficient use of python generators in a tight double for loop over numpy arrays,"xchunk_gen = (x[i:i + chunk_size] for i in range(0, len(x), chunk_size))"
how to combine django plus gevent the basics?,"from gevent import monkey
monkey.patch_all()
from gevent.wsgi import WSGIServer
from django.core.management import setup_environ
import settings
setup_environ(settings)
from django.core.handlers.wsgi import WSGIHandler as DjangoWSGIApp
application = DjangoWSGIApp()
server = WSGIServer(('127.0.0.1', 1234), application)
print('Starting server on http://127.0.0.1:1234')
server.serve_forever()"
yield multiple values,"for i in range(5):
    yield i, i + 1"
argv - string into integer,"int(argv[1])
int(argv[2])"
get the closest datetime from a list,"min(dates, key=lambda d: abs(d - date))"
python base64 data decode,"import base64
coded_string = 'Q5YACgA...'"
inserting a row at a specific location in a 2d array in numpy?,"a = np.zeros((2, 2))
a
np.insert(a, 1, np.array((1, 1)), 0)
np.insert(a, 1, np.array((1, 1)), 1)"
how to plot events on time on using matplotlib,"plot_events(x, y)"
how do i create a histogram from a hashmap in python?,"N = {(1): 12, (2): 15, (3): 8, (4): 4, (5): 1}"
python csv without header,"with open('data.csv') as f:
    cf = csv.reader(f)
for row in cf:
    pass"
python flask - serving static files,"from flask import url_for, redirect

@app.route('/')
def home():
    return redirect(url_for('static', filename='hi.html'))"
browse a windows directory gui using python 2.7,"import tkinter, tkinter.filedialog
root = tkinter.Tk()
dirname = tkinter.filedialog.askdirectory(parent=root, initialdir='/', title=
    'Please select a directory')
if len(dirname) > 0:
    print('You chose %s' % dirname)
import tkinter, tkinter.filedialog
root = tkinter.Tk()
file = tkinter.filedialog.askopenfile(parent=root, mode='rb', title='Choose a file')
if file != None:
    data = file.read()
file.close()
print('I got %d bytes from this file.' % len(data))
import tkinter, tkinter.filedialog
myFormats = [('Windows Bitmap', '*.bmp'), ('Portable Network Graphics',
    '*.png'), ('JPEG / JFIF', '*.jpg'), ('CompuServer GIF', '*.gif')]
root = tkinter.Tk()
fileName = tkinter.filedialog.asksaveasfilename(parent=root, filetypes=myFormats,
    title='Save the image as...')
if len(fileName) > 0:
    pass"
weakref list in python,return list(self).index(obj)
how can i make my python script faster?,"def sample():
    linesamples = set()
infile = open(args.infile, 'r')
outputfile = open(args.outputfile, 'w')
seqs = subprocess.check_output(['grep', '-c', '@', str(args.infile)])
seqsamples = random.sample(range(0, int(seqs)), int(args.n))
for i in seqsamples:
    linesamples.add(int(4 * i + 0))
linesamples.add(int(4 * i + 1))
linesamples.add(int(4 * i + 2))
linesamples.add(int(4 * i + 3))
line_num = 0
for line in infile:
    if line_num in linesamples:
        outputfile.write(line)
line_num += 1
outputfile.close()"
pulling data out of ms word with pywin32,"doc.SaveAs(txtpath, wdFormatUnicodeText)
doc.Close()
with open(txtpath, encoding='utf-16') as f:
    process_the_file(f)"
catch ctrl+c / sigint and exit multiprocesses gracefully in python,print('Starting 2 jobs of 5 seconds each')
how can one find class of calling function in python?,"def class_a_method(self):
    pass"
grouping / clustering numbers in python,print(doctest.testmod())
optional argument for each positional argument,"class PositionalAction(argparse.Action):
    pass"
sending a non-blocking http post request,ob_end_clean()
matplotlib in pyside with qt designer (pyside),sys.exit(app.exec_())
image library for python 3,g = QPainter(img)
python dictionary reference to neighbor dictionary element,"def __init__(self, d, key):
    self.d, self.key = d, key"
unpacking tuples/arrays/lists as indices for numpy arrays,"A[1, 2] == A[b]"
select first result from two coroutines in asyncio,return result.result()
overlay two same sized images in python,"background = background.convert('RGBA')
overlay = overlay.convert('RGBA')
new_img = Image.blend(background, overlay, 0.5)
new_img.save('new.png', 'PNG')"
parsing large (20gb) text file with python - reading in 2 lines as 1,"for row, line in enumerate(inputFileHandle):
    if line_meets_condition:
        outputFileHandle.write(line)"
how to access a specific start_url in a scrapy crawlspider?,"def parse_item(self, response):
    self.log('Hi, this is an item page! %s' % response.url)"
telling python to save a .txt file to a certain directory on windows and mac,"file1.write(toFile)
file1.close()"
python-order a list so that x follows y and y follows x,"data = [1, 2, 3, 4]
tweets = ['a', 'b', 'c', 'd']"
how can i remove carriage return from a text file with python?,"for line in inf:
    pass"
pandas rolling sum of last five minutes,"def using_apply():
    start_dates = df['Date'] - pd.Timedelta(minutes=5)
df['start_index'] = df['Date'].values.searchsorted(start_dates, side='right')
df['end_index'] = np.arange(len(df))

def sum_window(row):
    return df['A'].iloc[row['start_index']:row['end_index'] + 1].sum()
df['rolling_sum'] = df.apply(sum_window, axis=1)
return df[['Date', 'rolling_sum']]

def using_asfreq():
    result = pd.rolling_sum(df.set_index(['Date']).asfreq('1T').fillna(0),
        window=5, min_periods=1).reindex(df['Date'])
return result"
how do i compile pyparsing with cython on windows?,"def __init__(self, other, include_=False, ignore=None, failOn=None):
    super(SkipTo, self).__init__(other)
self.ignoreExpr = ignore
self.mayReturnEmpty = True
self.mayIndexError = False
self.includeMatch = include_
self.asList = False
if failOn is not None and isinstance(failOn, str):
    self.failOn = Literal(failOn)
else:
    self.failOn = failOn"
context manager for optionally redirected i/o,"output_file = stack.enter_context(open(args.output, 'w'))"
python: unintentionally modifying parameters passed into a function,print(some_list)
whoami in python,"import os
print(os.getuid())
import pwd"
how to get a list of matchable characters from a regex class,"import re
x = '123456789ABCDE'
pattern = '[\\dA-C]'
print(re.findall(pattern, x))"
how do i write a latex formula in the legend of a plot using matplotlib inside a .py file?,ax = plt.gca()
convert tab-delimited txt file into a csv file using python,"out_csv = csv.writer(open(csv_file, 'wb'))"
getting a python traceback without an exception,r = tracer.results()
python try/finally for flow control,raise
efficient way to convert string to ctypes.c_ubyte array in python,arr = np.asarray(str_bytes)
evaluate math equations from unsafe user input in python,"""""""Binary operations remove the top of the stack (TOS) and the second top-most stack item (TOS1) from the stack. They perform the operation, and put the result back on the stack."""""""
extract word from synset using wordnet in nltk 3.0,from nltk.corpus import wordnet as wn
tensorflow - read all examples from a tfrecords at once?,threads = tf.train.start_queue_runners(coord=coord)
python find highest row in a given column,"for i, col in enumerate(replaced):
    for j, val in enumerate(replaced[col]):
        pass"
finding inverted repeat pattern from a fasta sequence using python,n = len(data)
pydev console path for the active editor,"def runfile(file):
    curpath = os.path.dirname(os.path.abspath(file))
os.chdir(curpath)
__old_runfile(file)"
how do i sum tuples in a list where the first value is the same?,"p = [('AAPL', 50), ('AAPL', -50), ('RY', 100), ('RY', -43)]"
extracting all rows from pandas dataframe that have certain value in a specific column,data['Value'] == 'TRUE'
python print unicode character,"print('|    {:>2} |'.format(self.value))
print('\xe2\x94\x94\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x80\xe2\x94\x98')"
what is the scope of a defaulted parameter in python?,print(f.__defaults__)
how can strings with non-ascii characters be retrieved with optparse?,print(ord(currency))
verify a file exists over ssh,"import paramiko
client = paramiko.SSHClient()
client.load_system_host_keys()
client.connect('10.10.0.0', username='service', password='word')
_, stdout, _ = client.exec_command(
    '[ -f /opt/ad/bin/email_tidyup.sh ] && echo OK')
assert stdout.read()"
django model choice field - depend on other field's choice,"class AjaxField2View(generic.View):

    def get(self, request, *args, **kwargs):
        field_1 = get_object_or_404(MyModel1, pk=request.GET.get(
            'field1_id', ''))"
print new output on same line,"print('Hey Guys!', end=' ')"
django - get html output into a variable,"from django.template import Context, Template
t = Template('My name is {{ my_name }}.')
c = Context({'my_name': 'Adrian'})
output = t.render(c)"
is it possible to tune parameters with grid search for custom kernels in scikit-learn?,from sklearn.grid_search import GridSearchCV
getting the name of a variable as a string,"def retrieve_name(var):
    callers_local_vars = list(inspect.currentframe().f_back.f_locals.items())
return [var_name for var_name, var_val in callers_local_vars if var_val is var]"
how to concatenate string cell contents,"worksheet.write_column('C2', data[2])"
high performance all-to-all comparison of vectors in python,same_a_offset = np.cumsum(counts_a)
python and csv: find a row and give column value,"for row in csv.reader(file):
    pass"
processing a large .txt file in python efficiently,dq = collections.deque(maxlen=50000)
python - replace value of unknown key in json,return float(dirty_data)
two-way ssl authentication for flask,"return True
werkzeug.serving.BaseWSGIServer.verify_request = verify_request"
python: import tweet unicode data to pandas data frame object,"tweet_sample = [{'contributers': None, 'truncated': False, 'text': 'foo'},
    {'contributers': None, 'truncated': True, 'text': 'bar'}]
df = pd.DataFrame(tweet_sample)
df"
adding columns to matrix in python,[[1.0][1.0][1.0][1.0][1.0][1.0][1.0][1.0][1.0][1.0]]
suds ignoring cache setting?,"imp.filter.add('http://domain3.com/url')
imp.filter.add('http://domain4.com/url')"
efficient python implementation of numpy array comparisons,from scipy.spatial.distance import cdist
de-encode url parameters,urllib.parse.unquote(s)
python subtracting two date strings,"start_date = 'Sun Sep 16 16:05:15 +0000 2012'
end_date = 'Sun Sep 17 23:55:20 +0000 2012'"
get sorted combinations,A = sorted(set(A))
using variables for class names in python?,"klass = getattr(some_module, 'class_name')
some_object = klass()"
accessing a mysql connection pool from python multiprocessing,p.join()
how to extract a substring from inside a string in python?,"if m:
    found = m.group(1)"
parsing crontab-style lines,"cron.get_next(datetime.datetime)
cron.get_next(datetime.datetime)
cron.get_next(datetime.datetime)"
verifying signature on android in-app purchase message in python on google app engine,signature = base64.b64decode(signature.encode())
listing all permutations of a string/integer,a = b
python: how do i make a subclass from a superclass?,"return 'Clark Kent, Jr.'"
performing grouped average and standard deviation with numpy arrays,"std_y, _, _ = bstat(x=idx_range, values=sdata[:, (1)], statistic='std',
    bins=breaks)"
ranks within groupby in pandas,"def grouping(data):
    dec = pd.qcut(data['V1'], 10, labels=False)
data['ranks'] = dec
return data"
launch html code in browser (that is generated by beautifulsoup) straight from python,return '<html><body> ... generated html string ... </body></html>'
"plotting a list of (x, y) coordinates in python matplotlib","x = np.random.rand(N)
y = np.random.rand(N)
plt.scatter(x, y)"
descriptor 'getter' requires a 'property' object but received a 'function',"def fieldnames(self):
    with open(self.filename) as f:
        pass"
add 2 hours and 1 day onto a timestamp in django,"from datetime import timedelta
obj.starts += timedelta(days=1, hours=2)"
dictionary won't update with a string as key,"d.update(t())
d"
sending messages with telegram - apis or cli?,"import urllib.request, urllib.error, urllib.parse
bot_id = '{YOUR_BOT_ID}'
result = urllib.request.urlopen('https://api.telegram.org/bot' + bot_id +
    '/getUpdates').read()
print(result)
result = urllib.request.urlopen('https://api.telegram.org/bot' + bot_id +
    '/sendMessage', urllib.parse.urlencode({'chat_id': 0, 'text': 'my message'})
    ).read()
print(result)"
compute pairwise distance in a batch without replicating tensor in tensorflow?,sess = tf.Session()
how do i import from a file if i don't know the file name until run time?,from a import variableName
creating a python list comprehension with an if and break,"a = next((i for i in userInput if i in wordsTask), 42)"
why is __del__ called at the end of a with block?,del _bar
python instance variables as optional arguments,__default = object()
set font properties to tick labels with matplot lib,"params = {'backend': 'wxAgg', 'lines.markersize': 2, 'axes.labelsize':
    fontlabel_size, 'text.fontsize': fontlabel_size, 'legend.fontsize':
    fontlabel_size, 'xtick.labelsize': tick_size, 'ytick.labelsize':
    tick_size, 'text.usetex': True, 'figure.figsize': fig_size}
plt.rcParams.update(params)"
add attributes in networkx write_graphml before opening in gephi,"df.columns = ['A', 'B', 'weight', 'some_attribute']
G = nx.from_pandas_dataframe(df, 'A', 'B', ['weight', 'some_attribute'])
nx.write_graphml(G, 'my_graph.graphml')"
interactive _standalone_ output from matplotlib,InteractionStrength
python regex: matching a parenthesis within parenthesis,outer = re.compile('\\((.+)\\)')
nlp - information extraction in python (spacy),"doc = nlp(text)
for sent in doc.sents:
    subjects = [w for w in sent if w.dep_ == 'nsubj']
for subject in subjects:
    numbers = [w for w in subject.lefts if w.dep_ == 'nummod']
if len(numbers) == 1:
    pass"
"python minidom - how to iterate through attributes, and get their name and value","d = dict([('two', 2), ('one', 1), ('three', 3)])"
"given a latitude and longitude, and distance, i want to find a bounding box",radius = 6371
make python wait for stored procedure to finish executing,from tornado import gen
how to use terminal color palette with curses,curses.start_color()
download file as string in python,"url = 'http://www.google.se'
output = urllib.request.urlopen(url).read()
print(output)"
is it possible to map a discontiuous data on disk to an array with python?,"data2 = np.memmap('tmp', dtype='i', mode='r+', order='F', offset=offset,
    shape=size2)
offset += size1 * byte_size
data3 = np.memmap('tmp', dtype='i', mode='r+', order='F', offset=offset,
    shape=size3)"
how to stop all tests from inside a test or setup using unittest?,"def setup_function(func):
    global counter
counter += 1
if counter >= 3:
    pytest.exit('decided to stop the test run')

def test_one():
    pass

def test_two():
    pass

def test_three():
    pass"
joining pairs of elements of a list - python,list(pair_iter)
selecting fields from json output,"print(key, 'is:', value)"
python load json file with utf-8 bom header,"def lstrip_bom(str_, bom=BOM_UTF8):
    pass"
accessing json elements,wjdata = json.load(urllib.request.urlopen('url'))
"in pyqt, what is the best way to share data between the main window and a thread","super(Worker, self).__init__()"
how to quickly parse a list of strings,"for i, f in enumerate(fields):
    pass"
intersection of nd line with convex hull in python,"return np.multiply(unit_ray, closest_plane_distance)"
how to make twisted use python logging?,observer.start()
splitting a list of arbitrary size into only roughly n-equal parts,avg = len(seq) / float(num)
how to skip blank lines with read_fwf in pandas?,"with open(file_path, 'r') as f:
    lines = (line for line in f if line.strip())
data = pd.read_fwf(FileLike(lines), widths=widths, names=names, comment='#')
print(data)"
how to set elementtree element text field in the constructor,"if not parent == None:
    parent.append(self)"
faster way to remove outliers by group in large pandas dataframe,"df = pd.DataFrame(np.random.random((N, M)), index=dates)
df.index.names = ['DATE']
grouped = df.groupby(level='DATE')"
google-forms response with python?,"url = 'http://....Your google form'
values = {'entry.asdfsdfsdasd': 'asdfasdfsd', 'draftResponse':
    '[,,""-asdfasdasdf""]', 'pageHistory': '0', 'fbzx': '-asdfasdfsd'}
data = urllib.parse.urlencode(values)
urllib.request.Request(url, data, header)"
"python, transposing a list and writing to a csv file","item_length = len(lol[0])
with open('test.csv', 'wb') as test_file:
    file_writer = csv.writer(test_file)
for i in range(item_length):
    file_writer.writerow([x[i] for x in lol])"
how do i convert a currency string to a floating point number in python?,"money = '$6,150,593.22'
value = Decimal(sub('[^\\d.]', '', money))"
how to redirect stdout and stderr to logger in py,self.logger = logger
how can i obtain the full ast in python?,"py > ast.body[1].value._fields
'func', 'args', 'keywords', 'starargs', 'kwargs'"
how to read the date/time field from the csv file and plot a graph accordingly in python,now = dt.datetime.now()
image gradients become inaccurate when downscaling using a variety of different methods,"import skimage
import skimage.io"
moving to an arbitrary position in a file in python,inblock = nextnl + 1
how to recognize histograms with a specific shape in opencv / python,import numpy as np
ipdb commands obscured by variables,"ipdb > next
11"
fast lookup in list of intervals,"if value >= values[x][0] and value < values[x][1]:
    pass"
calculating a sha hash with a string + secret key in python,import base64
how to plot multiple histograms on same plot with seaborn,"fig, ax = plt.subplots()
for a in [x, y]:
    sns.distplot(a, bins=list(range(1, 110, 10)), ax=ax, kde=False)
ax.set_xlim([0, 100])"
"regex/code for removing ""fwd"", ""re"", etc, from email subject","import re
p = re.compile(
    '([\\[\\(] *)?(RE?S?|FYI|RIF|I|FS|VB|RV|ENC|ODP|PD|YNT|ILT|SV|VS|VL|AW|WG|\xce\x91\xce\xa0|\xce\xa3\xce\xa7\xce\x95\xce\xa4|\xce\xa0\xce\xa1\xce\x98|\xd7\xaa\xd7\x92\xd7\x95\xd7\x91\xd7\x94|\xd7\x94\xd7\x95\xd7\xa2\xd7\x91\xd7\xa8|\xe4\xb8\xbb\xe9\xa2\x98|\xe8\xbd\xac\xe5\x8f\x91|FWD?) *([-:;)\\]][ :;\\])-]*|$)|\\]+ *$'
    , re.IGNORECASE)"
"scrapy, scrapping data inside a javascript","class McDonaldSpider(BaseSpider):
    name = 'mcdonalds'
allowed_domains = ['mcdonalds.com.sg']
start_urls = ['https://www.mcdonalds.com.sg/locate-us/']

def parse(self, response):
    url = 'https://www.mcdonalds.com.sg/wp-admin/admin-ajax.php'
payload = {'action': 'ws_search_store_location', 'store_name': '0',
    'store_area': '0', 'store_type': '0'}
return FormRequest(url, formdata=payload, callback=self.parse_stores)

def parse_stores(self, response):
    pass"
getting the dtype of a result array in numpy,"def result_type(arr1, arr2):
    x1 = arr1.flat[0]
x2 = arr2.flat[0]"
"how to determine file, function and line number?","def PrintFrame():
    pass"
how to remove \n from a list element?,"l = ['Name1', '7.3', '6.9', '6.6', '6.6', '6.1', '6.4', '7.3\n']
for i, s in enumerate(l):
    l[i] = s.strip()
l"
pythonic way to efficiently handle variable number of return args,time.sleep(5)
how do i get a website's ip address using python 3.x?,import socket
detect 64bit os (windows) in python,"def is_python_64bit():
    return struct.calcsize('P') == 8"
inheriting methods' docstrings in python,"sys.argv.insert(1, '--verbose')"
how do i set color to rectangle in matplotlib?,"circle1 = matplotlib.patches.Circle((-200, -250), radius=90, color='#EB70AA')"
how can one replace an element with text in lxml?,print(ET.tostring(f))
stringio in python3,"try:
    from io import StringIO
except ImportError:
    pass"
how to validate ip address in python?,"IP('127.0.0.1')
IP('277.0.0.1')
IP('foobar')"
how to efficiently convert matlab engine arrays to numpy ndarray?,"print(timeit.timeit('np.array(x)', setup=setup_range, number=1000))
print('From matlab')
print(timeit.timeit('np.array(x)', setup=setup_matlab, number=1000))
print('From matlab_data')
print(timeit.timeit('np.array(x._data)', setup=setup_matlab, number=1000))"
how to load compiled python modules from memory?,mod = imp.new_module(name)
python: size of strings in memory,sys.getsizeof('ab')
how to know a generated sequence is at most a certain length,"if length is None:
    pass"
"eventhandler, event, delegate based programming in python any example would appreciate?","def do_work_and_notify(on_done):
    pass"
set products in python,"from itertools import product
s1 = set((0, 1))
set(product(s1, repeat=3))"
interpolating one time series onto another in pandas,"pd.concat([data, ts]).sort_index().interpolate().reindex(ts.index)"
how do i change the format of a python log message on a per-logger basis?,"formatter = logging.Formatter(
    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')
ch.setFormatter(formatter)
fh.setFormatter(formatter)
logger.addHandler(ch)
logger.addHandler(fh)
logger.debug('debug message')
logger.info('info message')
logger.warn('warn message')
logger.error('error message')
logger.critical('critical message')"
pypyodbc with parameters: [odbc microsoft access driver] too few parameters. expected 4,self.execdirect(query_string)
converting pil image to mimeimage,from email.mime.image import MIMEImage
convert json to csv using python (idle),"with open('test.csv', 'wb+') as f:
    dict_writer = csv.DictWriter(f, fieldnames=fieldnames)"
python algorithm of counting occurrence of specific word in csv,"with open('file.csv') as input_file:
    pass"
numpy - array vs asarray,"def asarray(a, dtype=None, order=None):
    return array(a, dtype, copy=False, order=order)"
plot smooth line with pyplot,"from scipy.interpolate import spline
xnew = np.linspace(T.min(), T.max(), 300)"
how to read lines from a file in python starting from the end,"for l in f:
    pass"
find following tag with pyparsing,"target = embedTag + pyparsing.Optional(aTag)
result = target.searchString(
    """""".....   
    <object....><embed>.....</embed></object><br /><a href=""blah"">blah</a>
    """"""
    )
print(result.dump())"
matching and combining multiple 2d lists in python,ret[l[1]].add(l[0])
google-forms response with python?,header = {'User-Agent': user_agent}
tuple unpacking in for loops,"for item in x:
    print('A tuple', item)
for a, b in x:
    pass"
prepopulating django m2m field based on another m2m,"def met(sender, instance, action, reverse, model, pk_set, **kwargs):
    if action == 'post_add':
        if instance.law:
            for law in instance.law.all():
                for category in law.categories.all():
                    pass"
is there a cake equivalent for python?,build_cscript()
dictionary of 4-d numpy array: how to optimize?,"nalpha, nmach, nbeta, nalt = 10, 20, 30, 40
numofc = len(cnames)
final_data = {}
for i in range(numofc):
    final_data[cnames[i]] = np.zeros((nalpha, nmach, nbeta, nalt))"
how to write python code that is able to properly require a minimal python version?,"import sys
if sys.hexversion < 33947648:
    sys.exit('Python 2.6 or newer is required to run this program.')
import module_requiring_26"
accessing post data in django form,data = args[0]
how can i read the rgb value of a given pixel in python?,"print(im.size)
print(pix[x, y])"
processing only non-blank lines,"def send(self, queue, fd):
    for line in fd:
        pass"
django request get parameters,"request.GET['section']
request.GET['MAINS']"
django: arbitrary number of unnamed urls.py parameters,"url('^browse/(?P<match>.+)/$', 'app.views.view', name='model_browse'),"
python: converting string into decimal number,"A2 = [float(x.strip('""')) for x in A1]"
how do i get the path of the current executed file in python?,"return hasattr(sys, 'frozen')"
keep matplotlib / pyplot windows open after code termination,"np.savez(filename, x=x, y=y)"
loading a simple qt designer form in to pyside,sys.exit(app.exec_())
how to create a dict from 2 dictionaries in python?,"for k, v in items.items():
    pass"
how to ensure list contains unique elements?,"def addToList(self, str_to_add):
    pass"
join two timelines / list of tuples,"s1 = pd.Series(dict(l1))
s2 = pd.Series(dict(l2))"
deleting all the file of certain size,"target_size = 63
import os
for dirpath, dirs, files in os.walk('.'):
    for file in files:
        path = os.path.join(dirpath, file)
if os.stat(path).st_size == target_size:
    os.remove(path)"
how to read line by line from stdin in python,"print(sum(iter(lambda : len(sys.stdin.read(4096)), 0)))"
how to extract urls from an html page in python,print(keywordlist)
python delegate pattern - how to avoid circular reference?,self.delegate = delegate
how to split numpy array and perform certain actions on split arrays [python],"b[np.arange(b.shape[0])[:, (None)], b.argsort(1)[:, :M]]"
finding local maxima/minima with numpy in a 1d numpy array,"x[argrelextrema(x, np.greater)[0]]"
passing data from django to d3,"def graph(request):
    pass"
can´t convert a list with sublists that have 2 elements in each of them to a single string,"from itertools import chain
lst = [['A', 'B'], ['C', 'D']]
"""""""""""".join(chain.from_iterable(lst))"
how can i extract only text in scrapy selector in python,"text = re.sub('<[^>]*?>', ' ', str(site[0].extract()))"
"how to create a userprofile form in django with first_name, last_name modifications?","super(ProfileForm, self).__init__(*args, **kwargs)"
how do i release memory used by a pandas dataframe?,df1.to_sparse().info()
removing letters from a list of both numbers and letters,""""""""""""".join([c for c in strs if c.isdigit()])"
how to convert data values into color information for matplotlib?,price_change = price_change ** 2 / (1 + price_change ** 2)
implementing a special type of multiprocessing queue in python,self._end = end
python: slicing a very large binary file,"def copypart(src, dest, start, length, bufsize=1024 * 1024):
    with open(src, 'rb') as f1:
        f1.seek(start)
with open(dest, 'wb') as f2:
    while length:
        chunk = min(bufsize, length)
data = f1.read(chunk)
f2.write(data)
length -= chunk
if __name__ == '__main__':
    GIG = 2 ** 30
copypart('test.bin', 'test2.bin', 1 * GIG, 8 * GIG)"
how do i make a single legend for many subplots with matplotlib?,"fig.legend(lines, labels, loc=(0.5, 0), ncol=5)"
cherrypy and relative path in wsgi app,cherrypy.tree.mount(root)
how do i run python script using arguments in windows command line,"print(""hello and that's your sum:"", a + b)"
"sigmoidal regression with scipy, numpy, python, etc","return arr
x = np.array([821, 576, 473, 377, 326], dtype='float')"
processing text from a non-flat file (to extract information as if it *were* a flat file),data = next(line_iter)
"python coverage badges, how to get them?",total = cov.report()
how to convert a multidict to nested dictionary,"for i in L:
    answer.append(tuple(i.split('=')))"
writing a __init__ function to be used in django model,"@classmethod
def create(cls, name, email):
    return cls(name=name, email=email)
p = User.create('Fred', 'fred@example.com')"
how can i suppress the newline after a print statement?,"def pprint(self, object):
    self._format(object, self._stream, 0, 0, {}, 0)"
how to handle keyboardinterrupt (ctrl-c) nicely with pycurl?,conn.perform()
nested json response to csv python,"headers = ['aircraft name', 'origin', 'origin name', 'destination']"
how to compose two functions whose outer function supplies arguments to the inner function,parse_code_1(*split_secret_code(secret_code_1))
keras callback earlystopping comparing training and validation loss,"def on_train_end(self, logs=None):
    if self.stopped_epoch > 0 and self.verbose > 0:
        pass"
using a global flag for python regexp compile,"re.compile = lambda pattern, flags: re.my_compile(pattern, flags | flag)"
what's the best way to format a phone number in python?,phone_format('18005555555')
controlling mouse with python,"win32api.mouse_event(win32con.MOUSEEVENTF_LEFTUP, x, y, 0, 0)
click(10, 10)"
retrieving subfolders names in s3 bucket from boto3,"prefix = 'prefix-name-with-slash/'
client = boto3.client('s3')"
how to read complete file with bitstring,pass
take screenshot in python on mac os x,import pyscreenshot
how to run custom code at login with flask-security,from flask.ext.login import user_logged_in
python multiprocessing - apply class method to a list of objects,"self.number = random.uniform(0.0, 10.0)"
python smallest range from multiple lists,"if len(lastvalues) == len(lists) and lastkey != key:
    minv = min(lastvalues.values())"
using pylint with django,"if re.match(pattern, node.attrname):
    return"
writing to a new directory in python without changing directory,"os.makedirs(dir_path)
output = open(os.path.join(dir_path, file_name), 'wb')"
reshaping pandas dataframe by months,"fr = df.groupby([df.index.year, df.index.month]).sum().unstack(fill_value=0)"
find the largest subset of a set of numbers such that the sum of any 2 numbers is not divisible by a given number,"g(arr, numbers, i + 1)
arr[i] = 0"
regex to get list of all words with specific letters (unicode graphemes),"print(' '.join(get_words(['\u0bae', '\u0baa', '\u0b9f', '\u0bae\u0bcd'])))"
declaring a multi dimensional dictionary in python,new_dic_defaultdict = defaultdict(dict)
range as dictionary key in python,"""""""You tip-toe through the crowd of walkers, while loudly calling them names."""""""
how to select specific columns in numpy array?,"Z = np.arange(2000).reshape(20, 100)"
how to check a string for specific characters?,s.find('$') != -1
how can i simplify this condition in python?,"color1 = eval(input('Color 1: '))
color2 = eval(input('Color 2: '))
mix = frozenset([color1, color2])
if mix in mixes:
    pass"
accessing bitfields while reading/writing binary data structures,return 0
"matplotlib share x axis but don't show x axis tick labels for both, just one","ax1 = fig.add_subplot(2, 1, 1)"
using regex to extract information from a string,import re
how to extract nested lists?,"li = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i', 'j']]
chained = []"
check_password() from a user again,raise forms.ValidationError('Password Incorrect')
django rest framework nested fields with multiple models,"class UserSerializer(serializers.ModelSerializer):
    phones = PhoneSerializer(required=False, many=True)


class Meta:
    model = User
fields = 'email', 'phone_number'

def create(self, validated_data):
    phones_data = validated_data.pop('phones', [])
user = super(UserSerializer, self).create(validated_data)
for phone_data in phones_data:
    pass"
python mixin for __str__and method resolution order,"return name + ', '.join(attrs)"
regex for managing escaped characters for items like string literals,"check('double escape', "" Example2: 'Foo \\\\' End. "", 'Foo \\\\')"
how to iterate through a list of coordinates and calculate distance between them in python,from itertools import repeat
emulating fixed precision in python,"from decimal import Decimal, localcontext
with localcontext() as ctx:
    ctx.prec = 4
print(Decimal(1) / Decimal(3))"
asynchronous subprocess on windows,outputqueue = Queue.Queue(50)
get coordinates from the contour in matplotlib?,dat0 = CS.allsegs[0][0]
python list controlled increment,print(abacus)
print list elements on new line,print()
python pickle - how does it break?,"def __init__(self, key):
    self.key = key"
perform varimax rotation in python using numpy,"from numpy import eye, asarray, dot, sum, diag"
"pythonic way to fetch all elements in a dictionary, falling between two keys?","def func(x):
    return 2 < x < 4
filter_func(parent_dict, func)"
how to dynamically build a json object with python?,"data.key = 'value'
json_data = data.dumps()"
algorithm to schedule jobs to minimise change,"for setups_comb in combinations(setups, num_setups):
    pass"
manual time loop control of funcanimation in matplotlib,plt.clf()
how to plot the rolling mean of stock data?,df.sort_index(inplace=True)
get matplotlib color cycle state,"x = np.linspace(0, 2 * np.pi)"
pandas hdfstore of multiindex dataframes: how to efficiently get all indexes,"store = pd.HDFStore('test.h5', mode='w')"
"adding information to pdf, pypdf2 merging too slow","contents = page.getContents()
if contents is None:
    stream = ContentStream(TEXT_STREAM, page.pdf)
else:
    contents.operations.extend(TEXT_STREAM)"
formula for calculating interest python,n = float(n)
making the labels of the scatterplot vertical and horizontal in pandas,"n = len(df.columns)
for x in range(n):
    for y in range(n):
        ax = axs[x, y]
ax.xaxis.label.set_rotation(90)
ax.yaxis.label.set_rotation(0)
ax.yaxis.labelpad = 50"
convert a string key to int in a dictionary,"for key, value in my_dict.items():
    output_dict[int(key)] = [int(item) for item in value]
output_dict"
how to code argparse combinational options in python,"def main():
    description = 'Package Compare/Verifier tool.'
parser = argparse.ArgumentParser(usage=None, description=description)
maingroup = parser.add_argument_group(title='required')
maingroup.add_argument('-f', '--file', nargs=1, dest='outFileName', help=
    'File Name where result is stored.', metavar='outFileName', required=True)
exgroup = parser.add_argument_group(title='one or the other')
group = exgroup.add_mutually_exclusive_group(required=True)
group.add_argument('-c', '--compare', nargs=2, dest='packageInfo', help=
    'Compare two packages.', metavar=('Package1', 'Package2'))
group.add_argument('-v', '--verify', nargs=1, dest='packageName', help=
    'Verify Content of package.', metavar='Package')
args = parser.parse_args()"
how to show the results of a program by entering something in input?,"while True:
    pass"
how to set my xlabel at the end of xaxis,"label = ax.set_xlabel('xlabel', ha='left', va='top')"
python implementation of viterbi algorithm,i = len(words) - 1
xml unicode strings with encoding declaration are not supported,from lxml import etree
subtract two times in python,"t2_secs = s2 + 60 * (m2 + 60 * h2)
return t2_secs - t1_secs
diff_times_in_seconds(datetime.datetime.strptime('13:23:34', '%H:%M:%S').
    time(), datetime.datetime.strptime('14:02:39', '%H:%M:%S').time())"
django create custom usercreationform,"def save(self, commit=True):
    user = super(RegisterForm, self).save(commit=False)"
python apply_along_axis of multiple arrays,result = np.empty_like(X)
"using django, how do i construct a proxy object instance from a superclass object instance?",animals = Animal.objects.all()
how can i read perl data structures from python?,"def __getitem__(self, key):
    if key in self:
        return super(PerlLikeDict, self).__getitem__(key)"
counting of adjacent cells in a numpy array,"a = numpy.zeros((6, 6), dtype=numpy.int)
a[2:4, 2:4] = 1"
how to get the names of the named variables from the python string,"class StringFormattingParser(object):
    __matcher = re.compile(
        '(?<!%)%\\(([^)]+)\\)[-# +0-9.hlL]*[diouxXeEfFgGcrs]')

@classmethod
def getKeyNames(klass, formatString):
    pass"
how to assign a local file to the filefield in django?,"from django.core.files import File
local_file = open('mytest.pdf')
djangofile = File(local_file)
pdfImage.myfile.save('new', djangofile)
local_file.close()"
pause/resume a python script in middle,"while True:
    pass"
"numpy quirk: apply function to all pairs of two 1d arrays, to get one 2d array","b = np.array([4, 5])"
very poor weakref performance in python/sql alchemy,"if len(buf == 20000):
    connection.session.execute(Fact.__table__.insert(), params=buf)
buf[:] = []
connection.session.execute(Fact.__table__.insert(), params=buf)
sys.stdout.write('All Done')"
pandas slow on data frame replace,"import pandas as pd
import numpy as np
from string import letters
media_frame = pd.DataFrame(pd.DataFrame(np.random.choice(list(letters), 
    9500 * 800 * 3).reshape(3, -1)).sum().values.reshape(9500, -1))
u = np.unique(media_frame.values)
from_filenames = pd.Series(u)
to_filenames = from_filenames.str[1:] + from_filenames.str[0]
m = pd.Series(to_filenames.values, from_filenames.values)"
looking for a more pythonic logical solution,"def lone_sum(*args):
    return sum(x for x, c in list(Counter(args).items()) if c == 1)"
how to catch the clipboard event (onchangeclipboard equivalent) from any application in python,"clip.connect('owner-change', callBack)
Gtk.main()"
using chrome's cookies in python-requests,"import requests
import browser_cookie
cj = browser_cookie.firefox()"
word wrap in pygtk treeview,"renderer.props.wrap_width = 100
renderer.props.wrap_mode = gtk.WRAP_WORD"
how to put timedelta in django model?,"class TimeModel(models.Model):
    pass"
python data scraping with scrapy,plans = self.driver.find_elements_by_class_name('plan-info')
what's the best way to split a string into fixed length chunks and work with them in python?,"def chunkstring(string, length):
    pass"
creating more than one data structure (dicts) in python,"for i in f:
    pass"
search and replace a line in a file in python,"with open(abs_path, 'w') as new_file:
    with open(file_path) as old_file:
        for line in old_file:
            new_file.write(line.replace(pattern, subst))"
is it possible to do bitwise operations on a string in python?,strint('abc'[::-1])
latin-1 to ascii,"specstd = {ord('\u2019'): ""'""}

def specials(error):
    return specstd.get(ord(error.object[error.start]), ''), error.end
codecs.register_error('specials', specials)

def bu():
    return unicodedata.normalize('NFKD', x).encode('ASCII', 'specials')"
can't pretty print json from python,"def get_pretty_print(json_object):
    pass"
how to create a triangle shaped drawing from my variables in python,"B = c, 0
hc = (2 * (a ** 2 * b ** 2 + b ** 2 * c ** 2 + c ** 2 * a ** 2) - (a ** 4 +
    b ** 4 + c ** 4)) ** 0.5 / (2.0 * c)
dx = (b ** 2 - hc ** 2) ** 0.5
if abs((c - dx) ** 2 + hc ** 2 - a ** 2) > 0.01:
    dx = -dx
C = dx, hc
coords = [int((x + 1) * 75) for x in A + B + C]
root = Tk()
canvas = Canvas(root, width=500, height=300)
canvas.create_polygon(*coords)
canvas.pack()
root.mainloop()
draw(2, 4, 5)"
extending numpy.digitize to multi-dimensional data,"cD = pd.cut(D, 23)"
making an android python service to run in suspend state,timer.start()
checking assertions in a lambda in python,"assertion_raiser = lambda : (_ for _ in ()).throw(AssertionError(
    'My Lambda CAN raise an assertion!'))"
easiest way to perform modular matrix inversion with python?,n = len(matrix)
regular expression that reference a match from earlier part of expression,"s = 'abcde+3fghijkl-1mnopqr+12abcdefghijklmnoprstuvwxyz'
import re"
making a charfield use a passwordinput in the admin,"class TwitterUserForm(ModelForm):
    password = forms.CharField(widget=PasswordInput())


class Meta:
    model = TwitterUser"
how to correctly modify the iterator of a loop in python from within the loop,index = 0
webdriver wait for ajax request in python,"ff = webdriver.Firefox()
ff.get('http://somedomain/url_that_delays_loading')
ff.find_element_by_xpath(""//div[@class='searchbox']/input"").send_keys('obama')
try:
    element = WebDriverWait(ff, 10).until(EC.presence_of_element_located((
        By.ID, 'keywordSuggestion')))
finally:
    ff.find_element_by_xpath(""//div[@class='searchbox']/input"").send_keys(Keys
        .RETURN)
ff.quit()"
how to change legend size with matplotlib.pyplot,"import pylab as plot
params = {'legend.fontsize': 20, 'legend.linewidth': 2}"
how do i access the sqlalchemy database from my flask extension?,"if app is not None and db is not None:
    pass"
calculate difference between multiples of two different numbers,current = 0
using python decorator with or without parentheses,someMethod = someDecorator(someMethod)
trying to create a pandas series within a dataframe with values based on whether or not keys are in another dataframe,"df1 = pd.DataFrame({'fruit_name': ['banana', 'lemon']})
df2 = pd.DataFrame({'fruit_name': ['strawberry', 'apple']})
df3 = pd.DataFrame({'fruit_name': ['lemon', 'rockmelon', 'apple']})
df3['color'] = 'unknown'
df3['color'][df3['fruit_name'].isin(df1['fruit_name'])] = 'yellow'
df3['color'][df3['fruit_name'].isin(df2['fruit_name'])] = 'red'
df3"
plotting grouped data in same plot using pandas,"fig, ax = plt.subplots(figsize=(8, 6))
for label, df in p_df.groupby('class'):
    df.vals.plot(kind='kde', ax=ax, label=label)"
"solving a system of equation with sympy, python2.7","x, y, z, w = sp.symbols('x, y, z, w')
rho, sigma, beta = sp.symbols('rho, sigma, beta')"
how to format a json text in python?,"for entry in json_data:
    pass"
numpy array indexing behavior,"arr = np.arange(10).reshape(5, 2)"
'super' object has no attribute '__getattr__' in python3,"self.attrs_to_override = ['attr1', 'foo', 'bar']"
how do you check when a file is done being copied in python?,"notifier = pyinotify.Notifier(wm)
wm.add_watch('/tmp', pyinotify.ALL_EVENTS)
notifier.loop()"
how to merge two landscape pdf pages using pypdf,"def mergeRotateAroundPointPage(page, page2, rotation, tx, ty):
    translation = [[1, 0, 0], [0, 1, 0], [-tx, -ty, 1]]
rotation = math.radians(rotation)
rotating = [[math.cos(rotation), math.sin(rotation), 0], [-math.sin(
    rotation), math.cos(rotation), 0], [0, 0, 1]]"
is there code out there to subclass set in python for big xranges?,"def __contains__(self, value):
    pass"
python twisted proxy - how to intercept packets,"class MyProxy(proxy.Proxy):

    def dataReceived(self, data):
        print(data)
return proxy.Proxy.dataReceived(self, data)


class ProxyFactory(http.HTTPFactory):
    protocol = MyProxy
factory = ProxyFactory()
reactor.listenTCP(8080, factory)
reactor.run()"
how to match a new line character in python raw string,"re.match('^cat$\\ndog', s, re.M).group(0)"
python have dictionary with same-name keys?,"def __setitem__(self, key, value):
    self[key].add(value)"
how to accept both filenames and file-like objects in python functions?,obj = StringIO(str(obj))
how to test coverage properly with django + nose,"cov = coverage.coverage(source=['package1', 'package2'], omit=['*/tests/*'])
cov.erase()"
python configparser getting and setting without exceptions,"dict.__init__(self, **kv)"
two combination lists from one list,"[2, 3][1, 4, 5, 6, 7, 8, 9, 10]"
how to properly fit a beta distribution in python?,"def betaNLL(param, *args):
    """"""
    Negative log likelihood function for beta
    <param>: list for parameters to be fitted.
    <args>: 1-element array containing the sample data.
    Return <nll>: negative log-likelihood to be minimized.
    """"""
a, b = param
data = args[0]
pdf = beta.pdf(data, a, b, loc=0, scale=1)
lg = np.log(pdf)
mask = np.isfinite(lg)
nll = -lg[mask].sum()
return nll"
how to save dictionaries and arrays in the same archive (with numpy.savez),"pickle.dump(saved_data, outfile, protocol=pickle.HIGHEST_PROTOCOL)"
sort array rows by another array in python,"arr1inds = arr1.argsort()
sorted_arr1 = arr1[arr1inds[::-1]]
sorted_arr2 = arr2[arr1inds[::-1]]"
lexicographically sort deeply nested lists of mixed data types in python 3,deep_annotate(a) > deep_annotate(b)
pyqt - simplest working example of a combobox inside qtableview,table.show()
orthogonal matching pursuit regression - am i using it wrong?,"clf2.fit(X, y)
print(numpy.linalg.norm(y - clf1.predict(X)))
print(numpy.linalg.norm(y - clf2.predict(X)))"
tkinter gui to read in csv file and generate buttons based on the entries in the first row,self.subMenu = Menu(self.menuBar)
binary list to png in python,import struct
add second axis to polar plot,ax2.yaxis.set_major_locator(MaxNLocator(nbins=len(ax1.get_yticks())))
python sqlite3 string variable in execute,"cur.execute('SELECT %s FROM Data where %s=?' % (column, goal), (constrain,))"
how to export list of arrays into csv in python?,"arr = [[1, 2, 3], [3, 4], [5, 6, 7, 8]]
df = pd.DataFrame(arr)"
python object attributes - methodology for access,"def getSingle(self):
    pass"
extracting only interesting columns from ascii table,"with open('filename.txt') as f:
    content = f.readlines()
data = []
for line in content:
    row = line.split()
row = [item.strip() for item in line.split('\t')]
data.append(row)
fout = open('output.txt', 'w')
for row in data:
    fout.write('{0} {1} {2} {3}'.format(row[0], row[1], row[7], row[8]))
row.pop(6)
row.pop(5)
row.pop(4)
fout.write(' '.join(row))"
n-queen backtracking in python: how to return solutions instead of printing them?,print(results)
rest api in google app engine + python?,"owner = ndb.KeyPropertyProperty(kind='User')


class RESTMeta:
    user_owner_property = 'owner'
include_output_properties = ['property1']
app = webapp2.WSGIApplication([RESTHandler('/api/mymodel', MyModel,
    permissions={'GET': PERMISSION_ANYONE, 'POST':
    PERMISSION_LOGGED_IN_USER, 'PUT': PERMISSION_OWNER_USER, 'DELETE':
    PERMISSION_ADMIN}, put_callback=lambda model, data: model),
    UserRESTHandler('/api/users', user_model=MyUser,
    user_details_permission=PERMISSION_OWNER_USER, verify_email_address=
    True, verification_email={'sender': 'John Doe <john@doe.com>',
    'subject': 'Verify your email address', 'body_text':
    'Click here {{ user.full_name }}: {{ verification_url }}', 'body_html':
    '<a href=""{{ verification_url }}"">Click here</a> {{ user.full_name }}'},
    verification_successful_url='/verification_successful',
    verification_failed_url='/verification_failed', reset_password_url=
    '/reset_password', reset_password_email={'sender':
    'John Doe <john@doe.com>', 'subject': 'Please reset your password',
    'body_text': 'Reset here: {{ verification_url }}', 'body_html':
    '<a href=""{{ verification_url }}"">Click here</a> to reset'})], debug=
    True, config=config)"
make requests using python over tor,print('New Tor connection processed')
how do you print words with a bit of time between letters? (python),"for x in array:
    pass"
how do i manipulate bits in python?,value = 3735928559
what's the meaning of '_' in python?,"a
_
list((3,))"
identify which iteration you are on in a loop in python,"d = {(1): 2, (3): 4, (5): 6, (7): 8, (9): 0}
for i, v in enumerate(d):
    pass"
using query string in python pyramid route configuration,"if action == 'edit':
    pass"
reading shoutcast/icecast metadata from a radio stream with python,"request.add_header('Icy-MetaData', 1)"
elegant expression for row-wise dot product of two matrices,"res2 = np.sum(a * b, axis=1)
print(res1)
print(np.allclose(res1, res2))"
rules of thumb for when to use operator overloading in python,return (self.map(x) for x in other if self.filter(x))
formatting text to be justified in python 3.3 with .format() method,"val_str = '${:.2f}'.format(val)
print('{:<18} {:>6}'.format(name + ':', val_str))"
using numpy repeat simultaneously on arrays with distinct multiplicities but same dimension,"tmp1 = np.array(['red', 'red', 'red', 'green'])
tmp2 = np.array(['white', 'black', 'blue', 'blue'])"
how to calculate all 24 rotations of 3d array?,"return m.swapaxes(0, 2)[::-1, :, :]"
assign pass to a function in python,"def stuff(n, f=None):
    f(n) if f is not None else None"
django admin file upload with current model id,"orig_save(self, *args, **kwargs)"
scipy.optimize.linprog unable to find a feasible starting point despite a feasible answer clearly exists,"return True, np.where(ma.mask == False)[0][0]"
how can i conduct a poll through an irc bot?,"if poll_list['channel_or_poll_name'].has_ended():
    send('You can no longer vote.')"
scale the real part of complex numpy array,from timeit import timeit
read a file in python starting with a particular string,import pandas as pd
a better way to accept multiple request types in a single view method?,"def create_file():
    n = request.args.get('n')"
authentication only via config file?,"auth = tweepy.OAuthHandler(secret['CONSUMER_KEY'], secret['CONSUMER_SECRET'])
auth.secure = True"
is there a library that does array equivalency for numpy.ma?,np.alltrue((a == b).compressed())
selecting columns from pandas.hdfstore table,"index = pd.date_range('1/1/2000', periods=8)
df = pd.DataFrame(np.random.randn(8, 3), index=index, columns=list('ABC'))
store = pd.HDFStore('mydata.h5')"
"design an algorithm, find the most frequently used word in a book","stmt1 = '\nstmt2='
t1 = timeit.Timer(stmt=stmt1)
t2 = timeit.Timer(stmt=stmt2)"
how to update yaml file using python,instances[0]['username'] = 'Username'
print 2 lines in the console concurrently in python,time.sleep(2.0)
combine multiple heatmaps in matplotlib,"contour(D1, cmap='Blues')"
sorting dictionary keys based on their values,"sorted(d, key=lambda k: d[k][1])"
interprogram communication in python on linux,"if action == '':
    print('No clients. Sleeping...')
time.sleep(1)"
psycopg2 : cursor already closed,print(e.message)
finding in elements in a tuple and filtering them,"l = [('text-1', 'xxx'), ('img-1', 'iii'), ('img-2', 'jjj'), ('text-2', 'xxx')]
(x for x in l if x[0].find('img') == 0)"
string contains any character in group?,"RE = re.compile('[\\\\/\\?%]')
RE.search('abc')"
best way to iterate through all rows in a db-table,"if not rows:
    break
for row in rows:
    yield row"
"using sqlalchemy session from flask raises ""sqlite objects created in a thread can only be used in that same thread""","session = scoped_session(sessionmaker(bind=engine))

@app.teardown_request
def remove_session(ex=None):
    pass"
datetime localization with python/django,"published_time = pytz.utc.localize(datetime.utcfromtimestamp(calendar.
    timegm(parsed_entry.published_parsed)))"
how to implement associative array (not dictionary) in python?,"print(Key, '=', Value)"
"submitting a form with mechanize (typeerror: listcontrol, must set a sequence)",br.form['type'] = '22'
"how to implement ""autoincrement"" on google appengine",results = []
"python regular expressions, find email domain in address",print('@' + words.split('@')[-1])
getting current date and current time only respectively,"showtime = strftime('%Y-%m-%d %H:%M:%S', gmtime())
print(showtime)"
how can i make a read-only property mutable?,owner.what = owner.what.__iadd__(2)
splitting a string into words and punctuation,"import re
re.findall(""[\\w']+|[.,!?;]"", ""Hello, I'm a string!"")"
python/numpy/scipy - converting string to mathematical function,"def make_func(expr):
    funcstr = """"""def f(x,p):
    return {e}
    """""""
monitor a cluster of nodes,"import pprint
import ansible.runner
import ansible.inventory
inventory_file = 'ansible_inventory'
inventory = ansible.inventory.Inventory(inventory_file)
runner = ansible.runner.Runner(module_name='setup', module_args='', pattern
    ='all', inventory=inventory)
cluster_facts = runner.run()
pprint.pprint(cluster_facts)"
how to stop pandas from making first row into column names,"import pandas as pd
from pandas.compat import StringIO
temp = 'a,b\n2,1\n1,1'
df = pd.read_csv(StringIO(temp), header=None)"
what is the simplest way to create a shaped window in wxpython?,self.bmp = wx.BitmapFromImage(image)
using numpy to build an array of all combinations of two arrays,"arrays = [np.asarray(x) for x in arrays]
dtype = arrays[0].dtype"
comparing two date strings in python,"a = dt.strptime('10/12/13', '%m/%d/%y')
b = dt.strptime('10/15/13', '%m/%d/%y')
a > b"
appengine fetch through a free proxy,"result = urlfetch.fetch(u, headers={'User-Agent': 'Mozilla/5.0'},
    allow_truncated=True)"
how to slice a deque?,"print('%5s\t%5s\t%10s\t%10s' % ('offset', 'length', 'islice', 'compr'))"
"difference between using commas, concatenation, and string formatters in python","y = 'World'
print('I am printing', end=' ')
print(x, end=' ')
print(y)"
how to add a python import path using a .pth file,import logger
enum converter in python,"France = 'FR'
Spain = 'ES'"
cartesian product of a dictionary of lists,"return (dict(zip(dicts, x)) for x in product(*iter(dicts.values())))"
how can i use an accumulator in a while loop,"condition = 100
number = eval(input('Enter your number: '))
number = int(number) * 10"
render jinja2 template without a flask context,template = JINJA_ENVIRONMENT.get_template('file_patch')
hachoir - retrieving data from a group,"if v.values:
    pass"
python calendar: day/month names in specific locale,"from calendar import TimeEncoding, month_name"
"python basic data references, list of same reference",m = [[None] * 2] * 3
how i do to update data on many-to-many with wtforms and sqlalchemy?,"form.permissions.choices = [(p.id, p.perm) for p in Permission.query.
    order_by('perm')]
form.permissions.data = [p.id for p in user.permissions]"
python string with space and without space at the end and immutability,"import sys
id(a) == id(b)
a = sys.intern('string ')"
setting referral url in python urllib.urlretrieve,"import urllib.request, urllib.error, urllib.parse
req = urllib.request.Request('http://www.example.com/')"
search before/after with pythons imaplib,"M.search(None, '(BEFORE ""01-Jan-2012"")')"
how do you make the linewidth of a single line change as a function of x in matplotlib?,"x = np.linspace(0, 10, 100)
y = np.cos(x)"
adding column in pandas dataframe containing the same value,"D = {'newcol1': 'a', 'newcol2': 2, 'newcol3': 1}
df = pd.DataFrame(np.random.rand(10000000, 5), columns=list('abcde'))"
python - integer factorization into primes,"[2, 499]"
o(1) indexable deque of integers in python,return self.right[i - len(self.left)]
missing can view page permission in django cms,"from django.db.models import get_apps
for app in get_apps():
    pass"
getting method parameter names in python,"def wrapper(*args, **kwargs):
    args_name = inspect.getargspec(f)[0]"
is there any way to kill a thread in python?,raise ValueError('invalid thread id')
ipython: redirecting output of a python script to a file (like bash >),self.sys_stdout = sys.stdout
getting a dictionary value where part of the key is in a string,"{k: get(get(d, k), 'a.b') for k in list(d.keys())}"
pythonic way to write a for loop that doesn't use the loop index,"def make_pat():
    pass"
how do i run twisted from the console?,"return 'I am request #' + str(self.numberRequests) + '\n'
endpoints.serverFromString(reactor, 'tcp:8080').listen(server.Site(Counter()))
reactor.run()"
twisted network client with multiprocessing workers?,"class MultiprocessingService(Service):

    def startService(self):
        pass"
fast iteration over columns of a matrix with ctypes,"A = np.array([[3.0, 1.0, 2.0, 0.0], [2.0, 1.0, 3.0, 1.0], [0.0, 2.0, 0.0, 
    3.0]], dtype='float64', order='F')"
how to make a histogram from a list of data,plt.title('Random Gaussian data (fixed number of bins)')
"python list comprehension, with unique items","from collections import OrderedDict
t = 'never gonna give you up'
list(OrderedDict.fromkeys(t).keys())"
need a thread-safe asynchronous message queue,"super(DispatcherThread, self).__init__(*args, **kwargs)"
is there a one line way of saying this?,truth = word.startswith('^') or word.startswith('@')
more elegant way to create a 2d matrix in python,row = []
python pandas rank by column,"s['Rank'] = s.groupby(['Year'])['Return'].rank(ascending=False)
print(s)"
changing the color of the offset in scientific notation in matplotlib,"ax1.legend(lines, [l.get_label() for l in lines], 'upper left')"
how to account for column-contiguous array when extending numpy with c,"d = mat.shape[1]
rowstride = mat.strides[0] // mat.itemsize"
how to split a word into letters in python,"outputStr += char + ','"
proportional venn diagram for more than 3 sets,"plt.bar(i, val, bottom=y, color=colors[key])"
what makes pythons append method of lists so fast?,dis.dis(func_2)
how do i line up text from python into columns in my terminal?,"maxn, maxp = 0, 0
for item in items:
    maxn = max(maxn, len(item.name))
maxp = max(maxp, len(str(item.price)))"
align columns in a text file,"for line in inputfile:
    pass"
accessing local variables inside a python generator,"def __iter__(self):
    return self"
key to maxima of dictionary in python,"key = max(scores, key=scores.get)"
python dryscrape scrape page with cookies,password.set('<password>')
combining two slicing operations,"def slice_combine(slice1, slice2, length):
    """"""
    returns a slice that is a combination of the two slices.
    As in 
      x[slice1][slice2]
    becomes
      combined_slice = slice_combine(slice1, slice2, len(x))
      x[combined_slice]
    :param slice1: The first slice
    :param slice2: The second slice
    :param length: The length of the first dimension of data being sliced. (eg len(x))
    """"""
slice1_step = slice1.step if slice1.step is not None else 1
slice2_step = slice2.step if slice2.step is not None else 1
step = slice1_step * slice2_step
slice1_indices = slice1.indices(length)
slice1_length = (abs(slice1_indices[1] - slice1_indices[0]) - 1) // abs(
    slice1_indices[2])
if (slice1_indices[1] - slice1_indices[0]) * slice1_step > 0:
    slice1_length += 1
else:
    return slice(0, 0, step)
slice2_indices = slice2.indices(slice1_length)
if not (slice2_indices[1] - slice2_indices[0]) * slice2_step > 0:
    return slice(0, 0, step)
start = slice1_indices[0] + slice2_indices[0] * slice1_step
stop = slice1_indices[0] + slice2_indices[1] * slice1_step
if start > stop:
    if stop < 0:
        stop = None
return slice(start, stop, step)"
parse multiple log files for strings,"for line in f:
    yield line"
"look up a tuple in a python dictionary matching (x,y) or (y,x)","sys.getsizeof(frozenset((1, 2)))"
in-place function to remove an item using index in python,a
use blocks from included files for parent in jinja2,"from jinja2 import Environment, FileSystemLoader
env = Environment(loader=FileSystemLoader(''))
t = env.get_template('t2.djhtml')"
finding the recurring pattern,"import re
p = re.compile('(.+?)\\1+')
test_str = '1234123412341234'"
pythonic way to import data from multiple files into an array,"data = []
for file_path in file_list:
    data.append(np.genfromtxt(file_path, delimiter=',', skip_header=3,
        skip_footer=18))
for d in data:
    pass"
maze solving with python,"tag = 'o'
maze[y, x] = tag
if self.solve(x + 1, y) == True:
    tag = '>'
elif self.solve(x, y + 1) == True:
    tag = 'v'
elif self.solve(x - 1, y) == True:
    tag = '<'
elif self.solve(x, y - 1) == True:
    tag = '^'
else:
    tag = ' '
maze[y, x] = tag
return tag != ' '"
kwargs in python executables,"if __name__ == '__main__':
    pass"
python function for capping a string to a maximum length,"return [(s + fill) for s in wrap(string, length - len(fill))]
s = ""Hello, world! I'm a string"""
"in python, how do i reference a class generically in a static way, like php's ""self"" keyword?","class C(object):
    my_var = 'a'

@classmethod
def t(cls):
    pass"
how can get ' usdjpy'(currency rates) with pandas and yahoo finance?,"quote_currency = quote_currency,
base_currency = base_currency"
regular expression to match function name and all arguments in python,"fn_match = re.match(
    '(?P<function>\\w+)\\s?\\((?P<arg>(?P<args>\\w+(,\\s?)?)+)\\)', s)
fn_dict = fn_match.groupdict()
del fn_dict['args']"
python: iterate through a list,"print(z, x, c, v)"
python regex - r prefix,"""""""
""""""
""""""\\n""""""
print('\n')
print('\\n')
""""""\\s""""""
""""""\\s""""""
print('\\s')
print('\\s')"
non-lazy evaluation version of map in python3?,"with open('output.csv', 'w') as f:
    writer = csv.writer(f)
collections.deque(map(writer.writerow, data), 0)"
default kwarg values for python's str.format() method,return kwds[key]
write recursive parser with pyparsing,package_name.parseString('java.lang.String')
"python list of named tuples, replacing attributes",from collections import namedtuple
zero padding slice past end of array in numpy,"all_in_slices.append(slice(start, stop))"
how to select a specific input device with pyaudio,numdevices = info.get('deviceCount')
get max keys of a list of dictionaries,"for d in dicts:
    pass"
how to have logarithmic bins in a python histogram,data = np.random.normal(size=10000)
how do i get a decimal value when using the division operator in python?,4 / 100
link to python with mingw,Py_Finalize()
"as a language, is python limited due to no end statement?","if len(bar) > 1:
    return bar"
how do i test a method that requires a file's presence?,"class ArchiveFileTesting(ArchiveFile):

    def get_helper(self):
        return FakeZipFile(self.file)"
how to serialize to json a list of model objects in django/python,"def as_json(self):
    pass"
how to count the number of time intervals that meet a boolean condition within a pandas dataframe?,return df
"how do i select a random integer from list, different from previous?","random.shuffle(order)
for i in order:
    yield some_list[i]
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
for item in random_order(my_list):
    pass"
"optimise comparison between two lists, giving indices that differ",ignore = set(ignore)
how do you get the next value in the floating-point sequence?,"if math.isnan(x):
    pass"
python multiple inheritance function overriding and listview in django,return context
pyinstaller seems not to find a data file,"resource_path('logging.conf')
resource_path('logging.conf')"
python-style generators in go,c < -x
splitting numpy array based on value,"array([10, 14, 15, 56]),
array([12, 23, 45, 23, 12, 45]),"
how to know if a paramiko ssh channel is disconnected?,"client = paramiko.SSHClient()
client.set_missing_host_key_policy(paramiko.AutoAddPolicy())"
how to flatten a list of tuples and remove the duplicates?,"for i in a:
    for j in i:
        if j not in b:
            b.append(j)
print(b)"
python not sending email to multiple addresses,msg['Subject'] = 'test'
multiple subset sum calculation,"A = [1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
    1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
    1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
    1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
    1048, 1049]
B = [5010, 5035, 5060, 5085, 5110, 5135, 5160, 5185, 5210, 5235]"
how do i extract all the values of a specific key from a list of dictionaries?,generator = (item['value'] for item in test_data)
using a dictionary as a switch statement in python,"try:
    dict[op]
except KeyError:
    default()"
"in python, how do you edit the values in a dictionary based on the frequency of its key?","if firstName in dict:
    dict[firstName] += 1"
splitting numpy array field values that are matrices into column vectors,"print(np.may_share_memory(x, xNewView))
print(xNewView)"
"convert ""unknown format"" strings to datetime objects?","parser.parse('10-09-2003')
parser.parse('10-09-2003', dayfirst=True)
parser.parse('10-09-03', yearfirst=True)"
"finding the ""best"" combination for a set",result.Add(list[i].words[0])
python sending dictionary throught tcp,"import pickle
dict = pickle.loads(tcp_recieve())"
parsing month year pairs into datetime,"return datetime.datetime.strptime(MmmYyyy, '%b-%Y').date()"
create a new list from two dictionaries,[dct for dct in listA if dictA.items() <= dct.items()]
python function local name binding from an outer scope,cheese = make_cheese(Goat().milk())
what's a good way to express hierarchical grouping of widgets in python?,"with self.container():
    for i in range(0, 8):
        pass"
use python to create compatible ldap password (md5crypt) on windows,ctx = sha.new('your_password')
how to create three separate lists of values from a python list of dictionaries where each dictionary has three keys,"price = [d['price'] for d in list_of_dicts]
itemnumber = [d['itemnumber'] for d in list_of_dicts]"
is there a faster way to clean out control characters in a file?,cc_re = re.compile('[%s]' % re.escape(control_chars))
how to create inline objects with properties in python?,"obj = type('obj', (object,), {'propertyName': 'propertyValue'})"
set last non-zero element of each row to zero - numpy,"A[np.arange(A.shape[0]), (A != 0).cumsum(1).argmax(1)] = 0"
processing malformed text data with machine learning or nlp,"self.regex = re.sub('\\s+', '\\\\s+', self.regex)"
get primary key after saving a modelform in django,"if form.is_valid():
    new_contact = form.save(commit=False)"
how to multiply numpy 2d array with numpy 1d array?,"print(b.shape)
print(a * b)"
python split url to find image name and extension,file_ext = '.' + picture_page.split('.')[-1]
in python how do you split a list into evenly sized chunks starting with the last element from the previous chunk?,"n = 4
values = arange(10, 26)
idx = arange(0, values.size, n)
idx = roll(idx, -1)
col = values[idx]"
python: using list comprehensions to filter a list by a list of substrings,[r for r in x if not yy.search(r)]
how to mock asyncio coroutines?,"self.assertEqual(mocked.yeah_im_not_going_to_run.call_count, 1)"
extract float/double value,"import re
re_float = re.compile(
    """"""(?x)
   ^
      [+-]?\\ *      
      (             
          \\d+       
          (
              \\.\\d* 
          )?        
         |\\.\\d+     
      )
      ([eE][+-]?\\d+)?  
   $""""""
    )
m = re_float.match('4.5')"
how to remove dates from a list in python,"list_of_words = ['08/20/2014', '10:04:27', 'pm', 'complet', 'vendor', 'per',
    'mfg/recommend', '08/20/2014', '10:04:27', 'pm', 'complet']"
downloading a image using python mechanize,browser.back()
voronoi tessellation in python,"nearest = min(sources, key=lambda s: distance(s, demand))"
google cloud storage signed urls with google app engine,"pkcs12 = crypto.load_pkcs12(private_key, 'notasecret')"
using gen.task with tornado for a simple function,"@gen.engine
def get(self):
    response = yield gen.Task(self.dosomething, 'argument')
self.write(response)
self.finish()"
how can i report the api of a class programmatically?,"def baz(world=None):
    return baz"
objects with no behavior,"Transaction = namedtuple('Transaction', ['account', 'amount'])"
dynamically change widget background color in tkinter,"button = Button(text='start', command=lambda : start(root))"
efficiently split a string using multiple separators and retaining each separator?,"s = 'One two  three    tab\ttabandspace\t end'
split_combined = [''.join(g) for k, g in groupby(s, lambda c: c in special)]"
explaining persistent data structures in simple terms,"list = [1, 2, 3]"
sqlalchemy integer column size,"class Job(Base):
    __tablename__ = 't_job'
id = Column(mysql.INTEGER(20), Sequence('%s_id_seq' % __tablename__),
    primary_key=True, nullable=False)"
python comprehension with multiple 'for' clauses and single 'if',"def sphere_points(radius=0, origin=(0, 0, 0), epsilon=sys.float_info.epsilon):
    pass"
"in python, why is a module implemented in c faster than a pure python module, and how do i write one?","map.__code__

def mymap():
    pass
mymap.__code__"
pyqt4 - creating a timer,app.setQuitOnLastWindowClosed(False)
"the value of an empty list in function parameter, example here","56512064
[1, 2, 1]"
passing numpy arrays to a c function for input and output,"lib = ctypes.cdll.LoadLibrary('./ctest.so')
fun = lib.cfun
fun.restype = None
fun.argtypes = [ndpointer(ctypes.c_double, flags='C_CONTIGUOUS'), ctypes.
    c_size_t, ndpointer(ctypes.c_double, flags='C_CONTIGUOUS')]"
how to detect mouse click in python 3 on linux?,"while True:
    a, b = b, a + b
yield b


class Clickonacci(PyMouseEvent):

    def __init__(self):
        PyMouseEvent.__init__(self)
self.fibo = fibo()

def click(self, x, y, button, press):
    """"""Print Fibonacci numbers when the left click is pressed.""""""
if button == 1:
    if press:
        print(next(self.fibo))
else:
    self.stop()
C = Clickonacci()
C.run()"
how to do bitwise exclusive or of two strings in python?,"for i in range(len(b1)):
    b[i] = b1[i] ^ b2[i]"
typeerror: a float is required,float(x)
how to connect python to db2,"connection = connect(
    'DATABASE=<database name>;HOSTNAME=<database ip>;PORT=<database port>;PROTOCOL=TCPIP;UID=<database username>;PWD=<username password>;'
    , '', '')"
"how to check which version of nltk, scikit learn installed?","import nltk
import sklearn"
python initializing a list of lists,x = [[]] * 4
why can functions in python print variables in enclosing scope but cannot use them in assignment?,A.x
using scrapy to to find and download pdf files from a website,"class pwc_tax(scrapy.Spider):
    name = 'pwc_tax'
allowed_domains = ['www.pwc.com']
start_urls = [
    'http://www.pwc.com/us/en/tax-services/publications/research-and-insights.html'
    ]

def parse(self, response):
    for href in response.css('div#all_results h3 a::attr(href)').extract():
        yield Request(url=response.urljoin(href), callback=self.parse_article)

def parse_article(self, response):
    for href in response.css('div.download_wrapper a[href$="".pdf""]::attr(href)'
        ).extract():
        yield Request(url=response.urljoin(href), callback=self.save_pdf)"
changing django-allauth render_authentication_error behavior,"if request.method == 'GET' and self.url_social.match(request.path):
    pass"
"how to print a list in python ""nicely""","['this', 'is', 'a', ['and', 'a', 'sublist', 'too'], 'list', 'including',
    'many', 'words', 'in', 'it']"
check string for numbers in python,val = None
getting values from json using python,ret = ''
how to keep comments while parsing xml using python / elementtree,"def handle_comment(self, data):
    pass"
better algorithm (than using a dict) for enumerating pairs with a given sum.,"if i < j:
    pass"
python: dynamic interval data structure,"result = []
while tree:
    result.append(tree.pop())"
python and closed variables,"def method_1_global():
    pass"
how to use pgdb.executemany?,import pgdb
reverse a list without using built-in functions,r = []
python - controlling tor,"if resp.startswith('250'):
    pass"
sqlalchemy inheritance filter on all columns,_col = prop.columns[0]
how to split a mixed string with numbers,"s = 'Test DATA_g004, Test DATA_g003, Test DATA_g001, Test DATA_g002, '
sorted(re.findall('g\\d+$', s))"
python file open/close everytime vs keeping it open until the process is finished,"for i in range(1000):
    f = open('test2.txt', 'a')
f.write('\n')"
python equivalent of perl/ruby ||=,v = 'bla bla'
project structure for google app engine,"class IndexHandler(webapp.RequestHandler):
    pass"
character detection in a text file in python using the universal encoding detector (chardet),"rawdata = open(infile, 'r').read()
result = chardet.detect(rawdata)
charenc = result['encoding']"
accessing variables from ipython interactive namespace in a script,"a = 5
import tst
tst.main(globals())"
trying to find a match in two strings - python,matcher.a[match.a:match.a + match.size]
pandas parse issue with missing zeros after thousands seperator in csv-file,"if len(l) > 1 and len(l[-1]) < 3:
    l[-1] = l[-1] + (3 - len(l[-1])) * '0'
return int(''.join(l))
df['actual'].apply(fix)"
how to determine the order of bars in a matplotlib bar chart,plt.show()
how can i make a simple counter with jinja2 templates?,doctest.testmod()
how can i get the full file path of an icon name?,"icon_theme = gtk.icon_theme_get_default()
icon_info = icon_theme.lookup_icon('my-icon-name', 48, 0)"
stop infinite page load in selenium webdriver - python,"firefoxProfile.set_preference('permissions.default.stylesheet', 2)"
pass dynamic javascript variable to django/python,pieFact *= 0.9
how does one monkey patch a function in python?,"def a_function():
    print(a_package.baz.do_something_expensive())"
zeromq: how to prioritise sockets in a .poll() method?,"LoPRIOpoller = zmq.Poller()
HiPRIOpoller.register(socket_0_pull, zmq.POLLIN)"
proper way to declare custom exceptions in modern python?,self.message = message
how to set xlim and ylim for a subplot in matplotlib,"ax2.set_xlim([0, 5])
ax2.set_ylim([0, 5])"
embedding a low performance scripting language in python,raise RuntimeError('script used too many resources')
how to retrieve the parent node using celementtree?,"parent_map = dict((c, p) for p in tree.getiterator() for c in p)
parent_map[el].remove(el)"
conditionally evaluated debug statements in python,"d = {'clientip': '192.168.0.1', 'user': 'fbloggs'}
debug('Protocol problem: %s', 'connection reset', extra=d)"
duck punching in a property in python,self._x = None
a pythonic way to read csv with row and column headers,"for line in reader:
    pass"
plotting a decision boundary separating 2 classes using matplotlib's pyplot,"ax.scatter(c=c1, s=40, *x1_samples.T)"
how to flatten a list of tuples and remove the duplicates?,"[2, 5, 3]"
python crashing while calculating sha-1 hashs for large files in windows os,SHA1Hash.update(buf)
printing a two dimensional array in python,"for row in A:
    pass"
how to add row in dataframe iteratively updating it after each for loop in python preferably in pandas,"df.columns = df.columns.str.replace('.1', '')
df = df.set_index('Choco_Type')
df = pd.concat([df.iloc[:, :4], df.iloc[:, 4:]]).reset_index()"
python make dictionary items accessible as object property,self.__dict__['a'] = 1
resampling with custom periods,"dtrange = pd.date_range(begin, end)
p1 = np.random.rand(len(dtrange)) + 5
p2 = np.random.rand(len(dtrange)) + 10
df = pd.DataFrame({'p1': p1, 'p2': p2}, index=dtrange)"
dissecting a line of (obfuscated?) python,[expression for var in enumerable if condition]
send anonymous mail from local pc,"class FakeSMTPServer(smtpd.SMTPServer):
    pass"
multiple negative lookbehind assertions in python regex?,sent_detector = nltk.data.load('tokenizers/punkt/english.pickle')
can a django formset that dynamically adds fields have persistent data?,"ParentFormSet = formset_factory(Parent, extra=1)"
django - how do i _not_ dispatch a signal?,from django.db.models.signals import post_save
is there a numpy builtin to reject outliers from a list,"def reject_outliers(sr, iq_range=0.5):
    pcnt = (1 - iq_range) / 2
qlow, median, qhigh = sr.dropna().quantile([pcnt, 0.5, 1 - pcnt])
iqr = qhigh - qlow
return sr[(sr - median).abs() <= iqr]"
how to break out of while loop in python?,print('Would you like to roll or quit?')
redirect subprocess stderr to stdout,"proc = subprocess.Popen(self.task['command'], shell=False, bufsize=1,
    stdout=subprocess.PIPE, stderr=subprocess.STDOUT)"
how can i write data in yaml format in a file?,"import yaml
data = dict(A='a', B=dict(C='c', D='d', E='e'))
with open('data.yml', 'w') as outfile:
    yaml.dump(data, outfile, default_flow_style=False)"
how can i make a script to recover my grooveshark playlists now that the service has been shut down?,"for p in playlists:
    pass"
generate n positive integers within a range adding up to a total in python,"""""""Computes C(n, k, 1, b) using binomial coefficients"""""""
how to tell if a string has exactly 8 1's and 0's in it in python,"def isItBinary(aString):
    seta = set(aString)
if seta.issubset('10') and len(aString) == 8:
    pass"
random access over all pair-wise combinations of large list in python,"(7)[2, 1](3, 4)"
handling many huge log files with python,"db.execute('insert into log_b values(?, ?)', (timestamp, uniq_id))"
elegant expression for row-wise dot product of two matrices,np.diag(A.dot(B.T))
how to make some filters mandatory in tastypie?,"return super(LinguistResource, self).build_filters(filters)"
simple digit recognition ocr in opencv-python,"cv2.imshow('out', out)"
python on win32: how to get absolute timing / cpu cycle-count,from ctypes import *
osx : defining a new url handler that points straight at a python script,action = path.strip('/')
getting all constants within a class in python,"class CommonNames(object):
    C1 = 'c1'"
how do you get default headers in a urllib2 request?,opener = urllib.request.OpenerDirector()
how to get/set logical directory path in python,"p = subprocess.Popen('pwd', stdout=subprocess.PIPE)
p.communicate()[0]"
reformat a column to only first 5 characters,line[1] = line[1][:6]
"python, pairwise 'distance', need a fast way to do it","print(distance.cdist(List_of_segments, List_of_segments, distance3d))"
make fullfilled hierarchy from data with levels,d = dummies.mask(dummies == 0).bfill(1).eq(1)
how to remove dates from a list in python,import re
determine if all the elements of a matrix are connected in python,"board2 = [[1, 0, 1], [1, 0, 1], [0, 1, 0]]
board3 = [[1, 0, 1], [1, 1, 1], [0, 1, 0]]"
how can i send a get request from my flask app to another site?,"@app.route('/proxy-example')
def proxy_example():
    pass"
multiple subprocesses with timeouts,"if __name__ == '__main__':
    example()"
"if ram isn't a concern, is reading line by line faster or reading everything into ram and access it? - python","def first_read():
    codecs.open(file, 'r', 'utf8').readlines()

def line_by_line():
    pass"
does pip handle extras_requires from setuptools/distribute based sources?,"""""""my_project"""""""
how do i split a string and rejoin it without creating an intermediate list in python?,dest = ''.join(line for line in buffer if line[:1] != '#')
create a field which value is a calculation of other fields' values,"cost = models.IntegerField(null=True)

@property
def total(self):
    return self.qty * self.cost"
flask-sqlalchemy integration tests can't find a way to rollback changes,db.session.rollback()
use subplots to zoom into timeseries or how i can draw lines outside of axis borders,"src = [2, 3]"
elegantly changing the color of a plot frame in matplotlib,plt.subplot(211)
listing files from a directory using glob python,"if not fnmatch.fnmatch(file, 'hello*.txt'):
    pass"
python configuration file: any file format recommendation? ini format still appropriate? seems quite old school,"value4 = ['lists', 'are', 'handy']
value5 = {'and': 'so', 'are': 'dictionaries'}"
simple flask application that reads its content from a .html file. external style sheet being blocked?,"from flask import Flask, render_template"
tensorflow queues - switching between train and validation data,"print('TRAIN.dequeue = ' + str(sess.run(data, {is_training: True})))"
sqlalchemy query where a column contains a substring,"if '*' in needle or '_' in needle:
    looking_for = needle.replace('_', '__').replace('*', '%').replace('?', '_')
else:
    looking_for = '%{0}%'.format(needle)
result = db.table.filter(db.table.column.ilike(looking_for))"
"getting a raw, unparsed http response","s = socket.socket()
s.connect(('www.example.com', 80))
s.send(CRLF.join(request))"
parsing data to create a json data object with python,"{'count': '674', 'year': '1603'}, {'count': '639', 'year': '1603'}"
logging infinite data on periodic intervals,"def past_times():
    for time in generate_times():
        while time > datetime.datetime.now() - datetime.timedelta(minute=1):
            time.sleep(1.0)
yield time"
regular expression matching all but a string,p = re.compile('-(?!(?:aa|bb)-)([^-]+)(?=-)')
json string indices must be integers,"import json
json_input = (
    """"""{ ""ar"": { ""articles"": { ""12345"": {""title"": ""first title"" } , ""67890"": {""title"": ""another title"" } } } } """"""
    )
data = json.loads(json_input)"
how can i get a specific field of a csv file?,r = list(csv.reader(file_obj))
removing leading 0 from matplotlib tick label formatting,"ax = plt.subplot(111)
ax.xaxis.set_major_formatter(major_formatter)
plt.show()"
how to convert efficiently a dataframe column of string type into datetime in python?,"df.head()
df.shape
len(df)"
grouping dates in django,"3, '2009-01-02 01:03:13'"
how to replace (or strip) an extension from a filename in python?,"prefix, sep, suffix = filename.rpartition('.')"
wxpython capture keyboard events in a wx.frame,self.panel.SetFocus()
interpreting wav data,sample_width = stream.getsampwidth()
python: how to make object attribute refer call a method,"x = property(get_x, set_x)"
how to avoid / prevent max redirects error with requests in python?,r.headers.get('location')
virtual serial device in python?,"s_name = os.ttyname(slave)
ser = serial.Serial(s_name)
ser.write('Your text')
os.read(master, 1000)"
python lambda expression,"f = (lambda a, b, c: lambda x: a + b * c - x)(a, b, c)"
python gcd calulation of rsa,"if d * e % z == 1:
    pass"
how to turn a list into nested dict in python,"X = [['A', 'B', 'C'], ['A', 'B', 'D'], ['W', 'X'], ['W', 'Y', 'Z']]"
is it possible to call exec so that it's compatible with both python 3 and python 2?,print(arg)
capture-and-yield in a list comprehension,"directories = []
generator_wrapper = (directories.append(foo['name']) or foo for foo in
    generator)"
how do i update fb status using python & graphapi?,"graph = GraphAPI(data['access_token'][0])
graph.post(path='me/feed', message='Your message here')"
how to disable sqlalchemy caching?,from flask.ext.sqlalchemy import SQLAlchemy
transfer layout from networkx to cytoscape,"G = nx.Graph()
G.add_edge(0, 1, weight=0.1, label='edge', graphics={'width': 1.0, 'fill':
    '""#0000ff""', 'type': '""line""', 'Line': [], 'source_arrow': 0,
    'target_arrow': 0})"
"how to find collocations in text, python","words = ['more', 'is', 'said', 'than', 'done', 'is', 'said']
words_iter = iter(words)"
python: get output from a command line which exits with nonzero exit code,"try:
    subprocess.check_output('python output.py', shell=True)
except subprocess.CalledProcessError as e:
    print('subproces CalledProcessError.output = ' + e.output)
try:
    check_output('python output.py')
except subprocess.CalledProcessError as e:
    print('native CalledProcessError.output = ' + e.output)"
how to apply column defaults before a commit in sqlalchemy,"super(User, self).__init__(**kwargs)
id = Column(Integer, primary_key=True)
money = Column(Integer, default=100)"
"how can i get the length of a single unit on an axis in matplotlib, in pixels?","ax.plot(x, y)
ax.transData.transform([(0, 1), (1, 0)]) - ax.transData.transform((0, 0))"
change one element of an array into two and then delete the original (cell division simulation),"for x in range(n):
    for y in range(n):
        pass"
python implementation of optics (clustering) algorithm,"def cluster(order, distance, points, threshold):
    """""" Given the output of the options algorithm,
    compute the clusters:
    @param order The order of the points
    @param distance The relative distances of the points
    @param points The actual points
    @param threshold The threshold value to cluster on
    @returns A list of cluster groups
    """"""
clusters = [[]]
points = sorted(zip(order, distance, points))"
splitting dictionary/list inside a pandas column into separate columns,"df
df['b'].apply(pd.Series)"
python dependency analyzer library,examined_modules.append(calling_module_name)
monitoring json wire protocol logs,driver.find_element_by_css_selector('input')
computing the combinations for presence or absence of a factor in a table,"print(value, '\t', key)"
how to test that variable is not equal to multiple things? python,"while True:
    pass"
getting the array as get query parameters in python,request.args.getlist(key)
group by operation for large dataset,"keys_df = pd.read_sql(sql='SELECT DISTINCT key FROM test_table', con=conn)"
python - something faster than 2 nested for loops,"matches = {}
for person in personlist:
    matches.setdefault(person['fname'], []).append(person)
matches"
how to version control an object?,path = chg.path.slice()
how to use classes in python when dealing with poker hands?,"def __init__(self):
    pass"
scons: how to call a self defined python function in scons script and make right dependency,"b = env.Replace('somefile', ['somefile.tmpl'], REPLST=[('A', 'b')])"
"python/scipy: find ""bounded"" min/max of a matrix","b[indices]
b[indices].shape"
how do you convert a pil `image` to a django `file`?,pillow_image = pill(request.FILES['image'])
compare (assert equality of) two complex data structures containing numpy arrays in unittest,"SaneEqualityArray(my_array.shape, my_array.dtype, my_array)"
opencv video saving in python,"out = cv2.VideoWriter('output.avi', -1, 20.0, (640, 480))"
how to mock a base class with python mock library,d = Derived()
python matplotlib buttons,ser.write('11'.encode())
python gzip: is there a way to decompress from a string?,"import gzip
try:
    content = gzip.GzipFile(fileobj=some_file).read()
except IOError:
    some_file.seek(0)
content = some_file.read()"
trying to implement oauth /token based login using stormpath,email = user_data['email']
how can i check if a python unicode string contains non-western letters?,only_roman_chars('123 \xe5ngstrom \xf0 \xe1\xdf')
python combine two for loops,"print(x, y)"
python copytree with negated ignore pattern,import shutil
pythonic way to ignore for loop control variable,header = [next(f) for _ in range(header_len)]
"how can i get the next string, in alphanumeric ordering, in python?","def next(s, minlen=0):
    return tostr(toval(s) + 1, minlen)"
"how to write a proxy pool server (when a request comes, choose a proxy to get url content) in python?",app.run()
how to generate a clean x and y axis for a numpy matrix?,"l.insert(0, y_axis[i])"
how to determine a running process given its pid in python on windows os?,"from ctypes import windll
SYNCHRONIZE = 1048576
INFINITE = 4294967295
process_handle = windll.kernel32.OpenProcess(SYNCHRONIZE, 1, pid)
windll.kernel32.WaitForSingleObject(process_handle, INFINITE)
windll.kernel32.CloseHandle(process_handle)"
how to convert python decimal to sqlite numeric?,"sqlite3.register_converter('decimal', convert_decimal)"
how to get domain of words using wordnet in python?,ssid = str(ss.offset).zfill(8) + '-' + ss.pos()
check if string ends with one of the strings from a list,"""""""test.mp3"""""".endswith(('.mp3', '.avi'))"
crunching xml with python,"from lxml import etree
parser = etree.XMLParser(remove_blank_text=True)
foo = """"""<node1>
    <node2>
        <node3>foo  </node3>
    </node2>
</node1>""""""
bar = etree.XML(foo, parser)
print(etree.tostring(bar, pretty_print=False, with_tail=True))"
how do i iterate over the html attributes of a beautiful soup element?,"from BeautifulSoup import BeautifulSoup
page = BeautifulSoup('<foo bar=""asdf"" blah=""123"">xyz</foo>')"
optionparser - supporting any option at the end of the command line,import subprocess
how to remove a object in a python list,"class point:

    def __init__(self, x=0, y=0):
        self.x = x
self.y = y

def __eq__(self, p):
    pass"
dynamically updating tkinter window based on serial data,Gui().run()
how do i dynamically add mixins as base classes without getting mro errors?,"""""""Another plugin"""""""
python 2.7 counting number of dictionary items with given value,sum(x == chosen_value for x in list(d.values()))
translating a declarative dsl into nested function calls,"def evaluate(node):
    params = [evaluate(child) for child in node]"
how do i print out the full url with tweepy?,"for url in status.entities['urls']:
    pass"
fast way of counting non-zero bits in python,"def CountBits(n):
    n = (n & 6148914691236517205) + ((n & 12297829382473034410) >> 1)"
need to improve accuracy in fsolve to find multiples roots,"[-c + log(1 / (b - sqrt(b * (b - 4)) - 2)) + log(2), -c + log(1 / (b + sqrt
    (b * (b - 4)) - 2)) + log(2)]"
fastest way to search 1gb+ a string of data for the first occurence of a pattern in python,"while b < len(haystack) - 1024:
    if H[b] != k:
        return 'not found'
if needle == haystack[b:b + 1024]:
    return 'found at', b
ib += 1"
split python tuple in subtuples with capacity limit in functional programming style,"class GroupBySum:

    def __init__(self, maxsum):
        self.maxsum = maxsum
self.index = 0
self.sum = 0

def __call__(self, value):
    self.sum += value
if self.sum > self.maxsum:
    self.index += 1
self.sum = value
return self.index
for _, l in groupby((3, 1, 4, 2, 2, 1, 1, 2), GroupBySum(5)):
    pass"
reading numpy arrays outside of python,"import json
import numpy as np"
how are basic data types (strings and integers) implemented in python and perl,"setup = 's = ""a"" * {0}'"
disable warnings originating from scipy,from numpy import pi
split queryset or get multiple querysets by field instead of just ordering by field,last_names = Person.objects.values('last_name').annotate(Count('last_name'))
get a unique id for worker in python multiprocessing pool,"print(p.map(f, list(range(6))))"
numpy object array of numerical arrays,"array = np.empty(len(args), dtype=np.object)"
topic distribution: how do we see which document belong to which topic after doing lda in python,print(cluster3)
load gui from a glade with gtksourceview in pygobject,GObject.type_register(GtkSource.View)
filtering string in python,"for c in domain:
    if (c not in
        'abcdefghijklmopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_.'):
        print('Invalid char', c, 'in e-mail')"
python sets are not json serializable,"return {'_python_object': pickle.dumps(obj)}

def as_python_object(dct):
    if '_python_object' in dct:
        return pickle.loads(str(dct['_python_object']))
return dct"
wxpython layout with sizers,"grid_1.AddMany(wx.StaticText(self.panel, label=str(i)) for i in range(24))"
how to predict tides using harmonic constants,return total
python ssl - the difference between two ways to set up a ssl connection,"def ssl(sock, keyfile=None, certfile=None):
    pass"
varying degree of shuffling using random module python,3882232320478489913492238974121913489402494344792853792893509877137984
custom dictionary lookup in python,"class ClosestDict(dict):

    def get(self, key):
        pass"
fast detection or simulation of wsaeconnrefused,"def main():
    s = socket.socket()"
how do i convert a tuple of tuples to a one-dimensional list using list comprehension?,timeit.timeit(lc)
"how to get min, seconds and milliseconds from datetime.now() in python?","import datetime
a = datetime.datetime.now()"
python - reading a utf-8 encoded string byte-by-byte,break
"how to print a list in python ""nicely""","'including',"
how to declare a static attribute in python?,"print(instance.Variable)
instance.Variable = 3"
how to add package data recursively in python setup.py?,"package_path = os.path.join(destination_path, __packagename__)"
how can i copy an immutable object like tuple in python?,"tup = 1, 2, []"
array allocation of swig c++ type from python,"LIBRARY_NAME = 'libjox.so'
c = cdll.LoadLibrary(LIBRARY_NAME)
WIDTH = 20
HEIGHT = 20


class JoxColor(Structure):
    _fields_ = [('r', c_float), ('g', c_float), ('b', c_float), ('a', c_float)]
ColorBlock = JoxColor * (WIDTH * HEIGHT)
data_array = ColorBlock()
color = JoxColor(0, 0, 1, 0)
for i in range(WIDTH * HEIGHT):
    data_array[i] = color
c._Z15writePixelsRectP8JoxColoriiii(data_array, 0, 0, WIDTH, HEIGHT)"
how do i refresh the values on an object in django?,"obj = MyModel.objects.create(val=1)
obj.refresh_from_db()"
how to substract multidimensional array in python?,"result = [[(e - 1) for e in i] for i in n]
print(result)"
"how can i, in python, iterate over multiple 2d lists at once, cleanly?","for j in range(len(alist[i])):
    pass"
celery parallel distributed task with multiprocessing,from celery import Celery
how to direct output into a txt file in python in windows,old_stdout = sys.stdout
how do i get rid of python tkinter root window?,"root = Tkinter.Tk()
root.iconify()"
equal-sized arrowheads in matplotlib,"y = math.radians(i) * math.sin(math.radians(i))
arr = pylab.Arrow(4, 6, x, y, fc='r', alpha=0.3)"
storing variables as single bits,"bitmasks = [(1 << j, (u - 1) // 2) for j, u in enumerate(prime_residues)]"
add to custom class in python,"def __add__(self, other):
    pass"
how to display an image with pylab from a script in a non blocking way,"pylab.ion()
img = pylab.imread('map.png')"
is there a way to configure a python logging formatter via config file to log time as unix timestamp?,"logging.getLogger().setLevel(logging.DEBUG)
logging.getLogger().addHandler(logChannel)"
python - convert very large (6.4gb) xml files to json,items = defaultdict(list)
"in python, how do you determine whether the kernel is running in 32-bit or 64-bit mode?","if os.name == 'nt' and sys.version_info[:2] < (2, 7):
    return os.environ.get('PROCESSOR_ARCHITEW6432', os.environ.get(
        'PROCESSOR_ARCHITECTURE', ''))
else:
    return platform.machine()

def os_bits(machine=machine()):
    """"""Return bitness of operating system, or None if unknown.""""""
machine2bits = {'AMD64': 64, 'x86_64': 64, 'i386': 32, 'x86': 32}
return machine2bits.get(machine, None)
print(os_bits())"
understanding fragments of a python/pulp code,from pulp import *
valueerror: object too deep for desired array,"def objective(b):
    b = np.matrix(b).T"
how to create/customize your own scorer function in scikit-learn?,"clf = DummyClassifier(strategy='most_frequent', random_state=0)"
crawling multiple sites with python scrapy with limited depth per site,"def __init__(self, urls_file, N=10, *a, **kw):
    data = open(urls_file, 'r').readlines()[:N]
self.allowed_domains = [urlparse(i).hostname.strip() for i in data]
self.start_urls = [('http://' + domain) for domain in self.allowed_domains]"
sum of squares in a list in one line?,"l = [1, 2, 3, 4, 5]
sum(i * i for i in l)"
recognize the characters of license plate,"cv2.rectangle(char_mask, (x, y), (x + w, y + h), 255, -1)"
retrieving subfolders names in s3 bucket from boto3,"bucket = 'my-bucket'
prefix = 'prefix-name-with-slash/'
client = boto3.client('s3')"
how to avoid explicit 'self' in python?,B.__init__ = B_init
adding a column of zeroes to a csr_matrix,"B = csr_matrix((5, 2), dtype=int)
C = csr_matrix((5, 2), dtype=int)"
extract field list from restructuredtext,print(d)
scrapy. how to change spider settings after start crawling?,"class MySpider(CrawlSpider):
    pass"
how to extract outer div contents without parsing inner div,"for element in infosoup:
    pass"
python/numpy - cross product of matching rows in two arrays,"c = np.cross(a, b)
c[0], np.cross(a[0], b[0])
c[1], np.cross(a[1], b[1])"
sort list with multiple criteria in python,print(s)
need help fnding the average of a set of numbers in python,"for number in Line.split(','):
    Total = Total + int(number)"
how to strip decorators from a function in python,"@with_connection
def spam(connection):
    pass"
python file upload from url using requests library,"rdst = requests.post(urldst, files={'file': rsrc.content})"
how do i create a file in python without overwriting an existing file,str(uuid.uuid1())
"pythonic way to fetch all elements in a dictionary, falling between two keys?",return 2 < x < 4
pythonic way to iterate through a file on something other than newlines,"for line in f:
    pass"
how to check if type of a variable is string?,"isinstance(s, str)"
'is' operator behaves differently when comparing strings with spaces,x is 'aa'
how to merge nested tuples,"def flatten_group(my_list):
    pass"
python: read configuration file with multiple lines per key,"sql = """"""
query         : ""SELECT * from cities
WHERE name='Unknown';""
count         : 0
level         : 1
name          : ""Check for cities whose name should be null""
suggested_fix : ""UPDATE cities SET name=NULL WHERE name='Unknown';\""
""""""
sql_dict = yaml.safe_load(sql)
print(sql_dict['query'])"
os.walk without digging into directories below,"outputList.append(os.path.join(root, f))"
lxml - sorting tag order,from lxml import etree
django: faking a field in the admin interface?,"obj.save()
admin.site.register(Foo, FooAdmin)"
python - py_initialize unresolved during compilation,return 0
how to make an menu bar (system tray) app for osx in python?,"super(AwesomeStatusBarApp, self).__init__('Awesome App')"
handle communication in multi layer application,"def handle_gui_stop(self):
    self.console_logger.debug('Facemovie is going to stop')"
best way to remove an item from a python dictionary?,"some_dict = {key: value for key, value in list(some_dict.items()) if value !=
    value_to_remove}"
is there an implementation of _rational_ interval arithmetic in python?,i4 = i1 + i3
"if i have the contents of a zipfile in a python string, can i decompress it without writing it to a file?",fp = StringIO('PK\x03\x04\x14')
scope for default parameter in python,2.0
celery worker: how to consume from all queues?,"def add_dynamic_queue(sender, instance, **kwargs):
    pass"
turn off caching of static files in django development server,"class NoCache(object):

    def process_response(self, request, response):
        """"""
        set the ""Cache-Control"" header to ""must-revalidate, no-cache""
        """"""
if request.path.startswith('/static/'):
    response['Cache-Control'] = 'must-revalidate, no-cache'
return response"
getting auth token from keystone in horizon,password = '1234'
"json.loads allows duplicate keys in a dictionary, overwriting the first value","for k, v in ordered_pairs:
    if k in d:
        raise ValueError('duplicate key: %r' % (k,))
else:
    pass"
how to animate 3d plot_surface in matplotlib,from mpl_toolkits.mplot3d import Axes3D
matplotlib remove axis label offset by default,"def __init__(self, useOffset=True, useMathText=None, useLocale=None):
    self.set_useOffset(useOffset)"
how could i print out the nth letter of the alphabet in python?,chr(ord('a') + 5)
apply function on groups of k elements of a pandas series,(s.iloc[::2].values + s.iloc[1::2]) / 2
fastest way to find which of two lists of columns of each row is true in a pandas dataframe,"df['IsFirst'] = np.where(out1 != out2, np.where(out1 > out2, 'Low', 'High'),
    None)"
python: ssh into cisco device and run show commands,output = device.send_command('enable')
implementing a custom counting system in python,201412
how can i disable clear of clipboard on exit of pyqt4 application?,"from PyQt4 import QtGui, QtCore"
looking for inverse of url_for in flask,url_rule = request_ctx.request.url_rule
does django have a way to open a http long poll connection?,"def trysock(request):
    pass"
combining job results in celery,"callback = tsum.subtask()
header = [add.subtask((i, i)) for i in range(100)]"
how do i integrate two 1-d data arrays in python?,"y_int = integrate.cumtrapz(y, x, initial=0)"
pyqt - how to detect and close ui if it's already running?,QtGui.QWidget.__init__(self)
testsuite with testsuites and testcases,TEST_SUITE = suite()
how can i use uuids in sqlalchemy?,"def __init__(self):
    self.impl.length = 16"
python: number sequence,"with open('path') as f:
    pass"
python adding element to an instance's list also adds it to another instance's list,self.children = children
sending nan in json,"import simplejson
response = df.to_dict('records')
simplejson.dumps(response, ignore_nan=True, default=datetime.datetime.isoformat
    )"
process finished with exit code -1073741571,thread.start()
how to convert an associative array in python?,"for key, value in item.items():
    pass"
argparse: map user input to defined constant,"parser.add_argument('--foo', choices=('A', 'B'))"
best way to generate day-of-week boxplots from a pandas timeseries,"n = 1000
df = pd.DataFrame(random.randn(n), pd.date_range('2010-01-01', periods=n),
    columns=['data'])"
using multiple genfromtxt on a single file,"up = np.genfromtxt(lines[4::4], dtype=str)"
scipy.sparse default value,"A = whatever_dok_matrix_minus_constant_term

def my_matvec(x):
    return A * x + constant_term * x.sum()"
merge xml files with nested elements without external libraries,return et.tostring(self.roots[0])
python: find principal value of an integral numerically,"from scipy import integrate, special
print(integrate.quad(lambda x: 1 + np.sin(x), -1, 1, weight='cauchy', wvar=0))"
make a blinking busy indicator on python shell,time.sleep(0.5)
caching functions in python to disk with expiration based on version,"def _read_from_cache(cache_key):
    cache_file = os.path.join(__cache_dir__, cache_key)"
list of objects with a unique attribute,unique = []
object of custom type as dictionary key,"return (self.name, self.location) == (other.name, other.location)"
how can i get the installed gdal/ogr version from python?,"import osgeo.gdal
print(osgeo.gdal.__version__)"
extract values between two strings in a text file using python,"if line.strip() == 'Start':
    copy = True"
combining lists into one,result.extend(sublist)
how to set any font in reportlab canvas in python?,"pdfmetrics.registerFont(TTFont('Vera', 'Vera.ttf'))"
setting labels manually in matplotlib contour-plot wrong,"yarray = np.linspace(0, 1, num=resolution)
x, y = np.meshgrid(xarray, yarray, copy=False)
A = fwp(x, y, a)
A[A <= 0] += 1
B = np.fliplr(A)
AB = np.hstack((B, A))"
pandas: normalizing a dataframe,"df1
df2 = df[['ItemId', 'ClientId', 'PriceQuoted']]"
nteventloghandler from a python executable,"import win32evtlogutil, win32evtlog"
python generator for paged api resource,"def get_all_people(name):
    page = 0
has_more = 1
while has_more:
    for person in get_people_page(name, page):
        yield person
page += 1"
how to get twitter followers using twython?,followers = twitter.get_followers_ids(screen_name='ryanmcgrath')
get the key correspond to max(value) in python dict,"dic = {'a': 10, 'x': 44, 'f': 34, 'h': 89, 'j': 90, 'd': 28, 'k': 90}
maxx = max(dic.values())
keys = [x for x, y in list(dic.items()) if y == maxx]
keys"
removing duplicates from nested list based on first 2 elements,seen = set()
how to make a serial port sniffer sniffing physical port using a python,"com_port1 = '/dev/tty1'
com_port1 = '/dev/tty2'
listener = serial.Serial(com_port1, baudrate)
forwarder = serial.Serial(com_port2, baudrate)
while 1:
    serial_out = listener.read(size=1)
print(serial_out)
forwarder.write(serial_out)"
how can i make start_url in scrapy to consume from a message queue?,"def start_requests(self):
    while True:
        yield self.make_requests_from_url(self._pop_queue())

def _pop_queue(self):
    while True:
        yield self.queue.read()"
is there a context manager for temporarily changing matplotlib settings?,"with plt.style.context('classic'):
    plt.plot([1, 2, 3, 4])
with plt.style.context('ggplot'):
    plt.plot([1, 2, 3, 4])"
passing results to depending on job - python rq,"def second_job():
    current_job = get_current_job(conn)
first_job_id = current_job.dependencies[0].id"
python: define a module by several files,"for module_name, module in list(sys.modules.items()):
    pass"
login hook on google appengine,"cooldown_memcache_key = 'login_cooldown_%s' % user.id
cooldown = memcache.get(cooldown_memcache_key)"
pysqlite's integrityerror: distinguish 'not null' from 'unique' violation,"con.execute('INSERT OR IGNORE INTO ABCD VALUES (?, ?, ?, ?)', (a, b, c, d))
con.close()"
peak detection in a 2d array,pp.imshow(paw)
search min value within a list of tuples,"def get_index(lst, num, index=0):
    if num in lst[index]:
        pass"
implementing log gabor filter bank,dc = costheta * math.cos(center_angle) + sintheta * math.sin(center_angle)
deriving an ssh fingerprint from a public key in python,"def lineToFingerprint(line):
    key = base64.b64decode(line.strip().split()[1].encode('ascii'))
fp_plain = hashlib.md5(key).hexdigest()
return ':'.join(a + b for a, b in zip(fp_plain[::2], fp_plain[1::2]))"
need a proper data structure or index for fast user lookup based on 3d points and importance factors,"def __repr__(self):
    return '<%s: %s, %0.2f>' % (self.person, [('%0.2f' % p) for p in self.
        point], self.factor)

def __iter__(self):
    return self.point

def __len__(self):
    return len(self.point)

def __getitem__(self, i):
    return self.point[i]
people = {}"
finding nearest items across two lists/arrays in python,idx = np.argmin(np.abs(y - xj))
python: how to inherite and override,self.__dict__.update(s)
checking contour area in opencv using python,"contour = numpy.array([[[0, 0]], [[10, 0]], [[10, 10]], [[5, 4]]])
area = cv2.contourArea(contour)"
how to send/receive sms using at commands?,self.ser.write(self.content + '\r')
make bokeh charts with interactive controls in django,"plot.line('x', 'y', source=source, line_width=3, line_alpha=0.6)"
how to show instance attributes in sphinx doc?,"class MyClass(object):
    """"""    
    Description for class
    :ivar var1: initial value: par1
    :ivar var2: initial value: par2
    """"""

def __init__(self, par1, par2):
    self.var1 = par1"
a nice way to find all combinations that give a sum of n?,"fixed_sum_digits(6, 20)"
install a python package into a different directory using pip?,[install]
regex text between two string python,"l.append((i[0][11:-1], i[1]))"
printing a formated numerical range strings from a list of numbers in python,"test(0, 10)"
split by comma and strip whitespace in python,import re
google app engine / drive sdk: catching a lot http deadline exceptions,"class ExtendedHandler(RequestHandler, metaclass=DecorateHttpVerbsMetaclass):
    pass

def handle_exception(self, exception, debug_mode):
    traceback_info = ''.join(format_exception(*sys.exc_info()))
email_admins(traceback_info, defer_now=True)
serve_500(self)"
convert python filenames to unicode,"list(os.walk('C:\\example'))
list(os.walk('C:\\example'))"
xgboost xgbclassifier defaults in python,"grid = {'max_depth': 10}
clf = XGBClassifier()
clf.max_depth
clf.set_params(**grid)
clf.max_depth"
decorator for many properties in python,"return getattr(self._ref1, name)"
how to find max value in a numpy array column?,"xmax, ymax = a.max(axis=0)"
how can i return system information in python?,"if sys.platform == 'win32':
    import win32_sysinfo as sysinfo
elif sys.platform == 'darwin':
    import mac_sysinfo as sysinfo
elif 'linux' in sys.platform:
    import linux_sysinfo as sysinfo"
relative import of submodule,from http import client
randomly select x number of items from class list in python,"import random
sample_size = random.randint(3, 20)
sample = random.sample(yourlist, sample_size)
for item in sample:
    pass"
python / pandas - gui for viewing a dataframe or matrix,"self.datatable.setRowCount(len(df.index))
for i in range(len(df.index)):
    pass"
can i count on order being preserved in a python tuple?,"dtg0, dtg1 = itertools.tee(mdtimes)
next(dtg0)
dtsegs = zip(dtg0, dtg1)"
python merging unsorted lists - algorithm analysis,"output_dict = {}
for key, value in itertools.chain(arr1, arr2):
    output_dict.setdefault(key, []).append(value)
output = [((key,) + tuple(values)) for key, values in list(output_dict.items()) if
    len(values) == 2]"
problem with list slice syntax in python,"def __getitem__(self, key):
    pass"
numpy: find elements within range,"import numpy as np
a = [1, 3, 5, 6, 9, 10, 14, 15, 56]
start = np.searchsorted(a, 6, 'left')
end = np.searchsorted(a, 10, 'right')
rng = np.arange(start, end)
rng"
how to run postgres locally,app = Flask(__name__)
how to make a python program get into a function and finish with ctrl+x while running?,frame.pack()
convert a pandas dataframe to a dictionary,df.set_index('ID').T.to_dict('list')
order a queryset by aggregate field value,return anObject.score()
feature extraction for butterfly images,"files = {'uploadfile': urllib.request.urlopen(url).read()}
url = 'http://demo.nanonets.ai/classify/?appId=' + model_name"
using python to run other programs,"print('Return code was', rc)"
how can i show a pyqt modal dialog and get data out of its controls once its closed?,buttons.rejected.connect(self.reject)
python subprocess: too many open files,"cmd = (
    'enerCHARMM.pl -par param=x,xtop=topology_modified.rtf,xpar=lipid27_modified.par,nobuildall -out vdwaals {0}'
    .format(cmtup[1]))"
combine pandas data frame column values into new column,"df[['ID_1', 'ID_2', 'ID_3']].apply(lambda_function)"
swap case of letters in string input parameter,"a = 'aBcD'
"""""""""""".join(map(str.swapcase, a))"
python: how to create a unique file name?,import uuid
"python utf-8, howto align printout","print(i.ljust(12), ':', j)"
how to speed up 4 million set intersections?,d[l2] = len(s1 & s2)
find specific link w/ beautifulsoup,"doc = (
    """"""<html><body><div><a href=""something"">yep</a></div><div><a href=""http://www.nhl.com/ice/boxscore.htm?id=3"">somelink</a></div><a href=""http://www.nhl.com/ice/boxscore.htm?id=7"">another</a></body></html>""""""
    )
soup = BeautifulSoup(doc)
print(soup.prettify())"
how to check version of python package if no __version__ variable is set,sys.stdout = sys.__stdout__
can't compare offset-naive and offset-aware datetimes - last_seen option,import pytz
python dictionary and default values,from collections import defaultdict
parsing html tables with beautifulsoup,data_sibs = label.findNextSiblings(attrs={'class': 'site_data'})
how to write a python script to keep trying a webpage until it opens,break
docopt + schema validation,"schema = Schema({'ID': Use(int, error='ID should be an int'), 'FILE': Or(
    None, Use(open, error='FILE should be readable')), object: object})"
how do i merge two lists into a single list?,temp.append(j)
how to skip or ignore python decorators,"def test():
    pass"
create a list of integers with duplicate values in python,"f(2, range(5))"
django admin inlines: get object from formfield_for_foreignkey,"def formfield_for_foreignkey(self, db_field, request, **kwargs):
    if db_field.name == 'group':
        pass"
fitting data to distributions?,library(MASS)
"custom arrow style for matplotlib, pyplot.annotate","xyB[:, (1)] *= widthB / (xyB[:, (1)].max() - xyB[:, (1)].min())"
split a list into two sublists in all possible ways,"[1, 4][2, 3]"
python split at tag regex,import re
how can i open a website with urllib via proxy in python?,import urllib.request
generate a random letter in python,import random
how to export figures to files from ipython notebook,"ylabel('bar')
legend(['myline'])"
how do you create a multidimensional numpy array from an iterable of tuples?,"rec_array['f0'], rec_array[0]
a = rec_array.view(np.int32).reshape(-1, 2)
a
rec_array[0][1] = 23
a"
connecting to a protected wifi from python on linux,"SEEKED_SSID = 'skynet'
SEEKED_PASSPHRASE = 'qwertyuiop'"
nesting a string inside a list n times ie list of a list of a list,"def nest(x, n):
    pass"
how to use pyramid i18n outside of views and templates?,"class MyModel(Base):
    pass"
in-place function to remove an item using index in python,"[x for i, x in enumerate(y) if i != 0 and i != 1]
[x for i, x in enumerate(y) if i != 0 and x != 6]"
applying pandas groupby for each index,"comb = list(product(df.X.unique(), df.Y.unique()))"
finding elements by attribute with lxml,"root = etree.fromstring(
    """"""
<root>
    <articles>
        <article type=""news"">
             <content>some text</content>
        </article>
        <article type=""info"">
             <content>some text</content>
        </article>
        <article type=""news"">
             <content>some text</content>
        </article>
    </articles>
</root>
""""""
    )
articles = root.find('articles')
article_list = articles.findall(""article[@type='news']/content"")
for a in article_list:
    pass"
using rsa in python,from Crypto.PublicKey import RSA
styling the popup of a qcompleter in pyqt,"c.setCompletionMode(QtGui.QCompleter.UnfilteredPopupCompletion)
c.popup().setStyleSheet('background-color: yellow')"
counting n-gram frequency in python nltk,"f = open('a_text_file')
raw = f.read()
tokens = nltk.word_tokenize(raw)
bgs = nltk.bigrams(tokens)
fdist = nltk.FreqDist(bgs)
for k, v in list(fdist.items()):
    pass"
checking for nan presence in a container,A() in [A()]
convert list to namedtuple,"A = ['1', '2', '3']"
probability density function from histogram in python to fit another histrogram,"pyplot.hist(a, 100)"
python app ouput to syslog server,"import logging
logger = logging.getLogger()"
python3 & pycharm - debug logging levels in run/debug,"logger = logging.getLogger('tipper')
logger.setLevel(logging.DEBUG)
logger.debug('debug message')
logger.info('info message')"
what's a good approach to managing the db connection in a google cloud sql (gae) python app?,"cursor.execute('SELECT guestName, content, entryID FROM entries')"
"python sqlalchemy - mocking a model attribute's ""desc"" method",session = sessionmaker(bind=engine)()
tell how an argument was received by a function?,"def tracker(*args, **kwargs):
    pass"
converting date string with timezone to epoch,from dateutil import parser
"in python, how do i take the highest occurrence of something in a list, and sort it that way?","for entry in set(data):
    pass"
setting path to firefox binary on windows with selenium webdriver,binary = FirefoxBinary('F:\\FirefoxPortable\\Firefox.exe')
loading a file into a numpy array with python,"print(', '.join(row))"
turn element of lxml.objectify back into xml,"r = lxml.objectify.fromstring('<root><item>1</item><item>2</item></root>')
lxml.etree.tostring(r.item)"
python dependency analyzer library,"for module in examined_modules:
    pass"
python - rgb matrix of an image,img = Image.open('lena.png')
time complexity of accessing a python dict,"for x in range(0, 50):
    pass"
"how can i find all the subsets of a set, with exactly n elements?","from itertools import chain, combinations"
simple cross-tabulation in pandas,"AB, 100.0
AB, 200.0
AC, 150.0
AD, 500.0"
output a changing ordereddict to csv,"import pandas as pd
data = ['Robie House, 5757 South Woodlawn Avenue, Chicago, IL 60637',
    'State & Lake, Chicago']
tagged_addresses = [usaddress.parse(line) for line in data]
address_df = pd.DataFrame(tagged_addresses)"
"extend numpy mask by n cells to the right for each bad value, efficiently",m = np.isnan(a)
unexpected behaviour when indexing a 2d np.array with two boolean arrays,"two_d[np.ix_(first, second)]"
translating function for finding all partitions of a set from python to ruby,"i >>= 1
end"
how to remove duplicates in set for objects?,return self.i
how to configparse a file keeping multiple values for identical keys?,"print(config.get('test', 'foo'))"
"plotting with scientific axis, changing the number of significant figures","fig, ax = plt.subplots()"
how to get the nth element of a python list or a default if not available,(list(range(5))[6:7] + [999])[0]
insert row into excel spreadsheet using openpyxl in python,"row = int(row.replace('$', ''))"
multiple output files for hadoop streaming with python mapper,import org.apache.hadoop.fs.Path
datetime to unix timestamp with millisecond precision,"from datetime import datetime, timezone, timedelta
(datetime.now(timezone.utc) + timedelta(days=3)).timestamp() * 1000.0"
filter a user list using a userprofile field in django admin,"return super(UserAdminManager, self).get_query_set().filter(userprofile__queue
    =True)"
how do i check out a file from perforce in python?,p4in.write('change: new\n')
running jar files from python,"for output_line in run_command('java -jar jarfile.jar'):
    pass"
how to create list of all possible lists with n elements consisting of integers between 1 and 10?,"for i in range(11):
    yield [0, i]"
"in python 2, creating a random question from shuffled numbers","if user_answer == answer:
    start()"
python access data in package subdirectory,print(open(DATA_PATH).read())
split a dictionary into 2 dictionaries,"d1 = dict(itertools.islice(i, n))"
how do i upgrade the sqlite version used by python's sqlite3 module on mac?,"""""""3.8.6"""""""
using rolling_apply on a dataframe object,window = 30
convert python 3 resourcewarnings into exception,unittest.main()
switch window on selenium,"driver.get('http://www.google.com.br')
handle = driver.execute_script(
    'return window.open(""http://www.pudim.com.br/"", ""any"", ""height = 450, width = 800, menubar=yes,scrollbars=yes,toolbar=yes,location=no,resizable=yes"");'
    )
driver.switch_to.window(driver.window_handles[1])"
how to create a number of empty nested lists in python,"a = 3
lst = [[] for _ in range(a)]
lst
a = 10
lst = [[] for _ in range(a)]
lst
lst[0].append(1)
lst"
how to group by date range,"s = df.set_index(['employer_key', 'account_id']).login_date
flag = s.between('2015-11-01', '2016-04-30').astype(np.uint8)
flag.groupby(level=[0, 1]).max().reset_index()"
count number of occurrences of an array without overlap in another array,"B
np.count_nonzero((viewW(A, B.shape) == B).all((2, 3)))
A
B"
"in python, how would i sort a list of strings where the location of the string comparison changes?","my_strings = ['Wednesday-Morning-Go bowling',
    'Sunday-Really late at night-Sleep', 'July-Noon-BBQ']"
how to get a max string length in nested lists,"max(sum(tableData, []))
max(sum(tableData, []), key=len)"
disabled field is considered for validation in wtforms and flask,"return redirect('/teams')
return render('edit_team.html')"
using pandas and numpy to parametrize stack overflow's number of users and reputation,"plt.figure(figsize=(18, 6))"
"eventhandler, event, delegate based programming in python any example would appreciate?","on_done()

def send_email_on_completion():
    email_send('joe@example.com', 'you are done')"
insert text into a text file following specific text using python,"re.sub('text', 'text here', c)"
what's the best way to return multiple values from a function in python?,"def f(in_str):
    out_str = in_str.upper()
return True, out_str"
post data to cgi file using xmlhttprequest causes badheader,"form = cgi.FieldStorage()
print('Content-Type: text/html;charset=utf-8')"
jmeter - run a python script before calling each http request sampler,"for i in range(16):
    randImageString = randImageString + chr(random.randint(ord('A'), ord('Z')))"
python - combining argsort with masking to get nearest values in moving window,pass
loading a pyspark ml model in a non-spark environment,sys.exit(1)
how do i assign a numerical value to each uppercase letter?,return ord(char) - 64
how to capture frames from apple isight using python and pyobjc?,frame = cam.snap_picture('test.jpg')
how to save an image using django imagefield?,up_file = request.FILES['image']
sending messages with telegram - apis or cli?,bot_id = '{YOUR_BOT_ID}'
zodb with tornado,conn.close()
joining two dataframes from the same source,"df_one = df.select('col1', 'col2')"
how to select a specific input device with pyaudio,p = pyaudio.PyAudio()
how can i get dict from sqlite query?,"for idx, col in enumerate(cursor.description):
    pass"
"python group by array a, and summarize array b - performance","b = [0.2, 0.1, 0.3, 0.1, 0.1, 0.2]"
python: finding an element in an array,'example' in li
convert svg to png in python,"import cairo
import rsvg
img = cairo.ImageSurface(cairo.FORMAT_ARGB32, 640, 480)"
how to create a dictionary with certain specific behaviour of values,"groups = itertools.groupby(l1, lambda x: x[1][0])"
how should i take the max of 2 columns in a dataframe and make it another column?,"df
df[['A', 'B']]
df[['A', 'B']].max(axis=1)"
how to loop through a html-table-dataset in python,"headline = el.find('td', {'class': 'headline'}).text"
how to find common elements in list of lists?,"[1, 9, 9],"
is it possible to define global variables in a function in python,"if p.primes_dict[i]:
    pass"
how do you send an http get web request in python?,content = urllib.request.urlopen(some_url).read()
"python: converting ('monday', 'tuesday', 'wednesday') to 'monday to wednesday'","def weekdays_to_string(days):
    day_indexes = {name: i for i, name in enumerate(calendar.day_name)}
indexes = [day_indexes[d] for d in days]
ends = [(i + 1) for i in range(len(indexes)) if indexes[(i + 1) % len(
    indexes)] % 7 != (indexes[i % len(indexes)] + 1) % 7]
split = ends[-1]
if split != len(days):
    days = days[split:] + days[:split]
ends = [(len(days) - split + end) for end in ends]
spans = [days[begin:end] for begin, end in zip([0] + ends, ends)]
words = []
for span in spans:
    if len(span) < 3:
        words.extend(span)
else:
    words.append('%s to %s' % (span[0], span[-1]))
if len(days) == 1:
    return words[0]
elif len(days) == 2:
    return '%s and %s' % tuple(words)
else:
    return ', '.join(words)"
convert pandas series from string to unique int ids,"s = pd.Series(['a', 'b', 'c'])"
load high-dimensional r dataset into pandas dataframe,import pandas.rpy.common as com
taking a string of numbers and inserting + and - operators,"def plus_minus(s):
    for t in itertools.product(['', '+', '-'], repeat=len(s) - 1):
        pass"
how to update djangoitem in scrapy,"for key, value in list(source_dict.items()):
    setattr(destination, key, value)"
making http post request,urllib.request.install_opener(opener)
how to tell process id within python,"if os.path.exists(tmp_filename):
    child_id = int(file(tmp_filename, 'r').read().strip())"
python: fastest way to write pandas dataframe to excel on multiple sheets,"style.font.height = 180
style.num_format_str = '#,##0'
ws0.write(row, col, value, style)"
numpy: extending arrays along a new axis?,"X = scipy.rand(9, 4)
Y = X.reshape(9, 4, 1).repeat(4096, 2)"
"pandas graphing a timeseries, with vertical lines at selected dates","ax = cum_edits.plot()
ymin, ymax = ax.get_ylim()"
group list-items by order of appearance in unsorted list,"def group_ordered(list_in):
    result = OrderedDict()
for value in list_in:
    pass"
python array with string indices,print(list(myDict.keys()))
opencv contour minimum dimension location in python,"top_bottom_y = min(y_t + h_t, y_b + h_b)"
compiling numpy with openblas integration,"[U, s, V] = np.linalg.svd(A, full_matrices=False)"
determining neighbours of cell two dimensional list,"def top(matrix, x, y):
    pass"
find number of columns in csv file,f.seek(0)
speed up for loop in convolution for numpy 3d array?,kernel_1d = kernel_1d / np.sum(kernel_1d)
python requests fetch a file from a local url,pass
applying limit and offset to all queries in sqlalchemy,"if page_size:
    pass"
how to perform a rolling sum along a matrix axis?,"import pandas as pd
Xcum = pd.rolling_sum(X, 10)[9:]"
counting consecutive 1's in numpy array,"idx = np.flatnonzero(a_ext[1:] != a_ext[:-1])
a_ext[1:][idx[1::2]] = idx[::2] - idx[1::2]"
using a simple python generator as a co-routine in a tornado async handler?,self.finish()
append list of python dictionaries to a file without loading it,"file.write(',{}]'.format(json.dumps(dictionary)))"
update and create a multi-dimensional dictionary in python,"d = {}
d['js'] = [{'foo': 'bar'}, {'other': 'thing'}]"
can params passed to pytest fixture be passed in as a variable?,return 2
class with changing __hash__ still works with dictionary access,"def __hash__(self):
    return self._hash
p = PhonyHash()
d = {p: 'val'}"
"python, https get with basic authentication","conn.setopt(pycurlHTTPHEADER, [('%s: %s' % t) for t in list(headers.items())])"
how to pass pointer back in ctypes?,lib = ctypes.cdll.TestDLL
minimizing python function that has numpy array as argument,"import scipy.optimize as optimize

def rosen(x):
    """"""The Rosenbrock function"""""""
drawing histogram in opencv-python,import cv2
algorithm to divide a list of numbers into 2 equal sum lists,"return solution[1], sum(oldmoves[solution[1]]), oldmoves[solution[1]]
for n in iterations:
    newmoves = {}
for total, roster in oldmoves.items():
    for p in roster:
        people_left = roster[:]
people_left.remove(p)
newtotal = total + p
if newtotal > halftotalscore:
    continue
newmoves[newtotal] = people_left
oldmoves = newmoves
solution = min(map(lambda i: (abs(float(i) - halftotalscore), i), list(oldmoves.
    keys())))
return solution[1], sum(oldmoves[solution[1]]), oldmoves[solution[1]]
print(team([90, 200, 100]))
print(team([2, 3, 10, 5, 8, 9, 7, 3, 5, 2]))
print(team([1, 1, 1, 1, 1, 1, 1, 1, 1, 9]))
print(team([87, 100, 28, 67, 68, 41, 67, 1]))
print(team([1, 1, 50, 50, 50, 1000]))"
python sending command over a socket,"print('Output:', output)"
how to limit the range of the x-axis with imshow()?,tick.set_markersize(6)
how do i dump a joblib or pickle file in bluemix object storage?,file = pickle.dumps(obj)
find uncertainty from polyfit,"p, cov = polyfit(x, y, 2, cov=True)
plot(x, y, 'b')"
"python - finding each occurrence of a value in a mixed array (integers, lists)","count += flatten_count(item, element)"
is there a generator version of `string.split()` in python?,sep = '\\s+'
capture stdout and stderr from sas in windows?,run
how to generate a pdf from an html / css (including images) source in python?,"filename = now.strftime('%Y-%m-%d') + '.pdf'
response = HttpResponse(mimetype='application/pdf')
response['Content-Disposition'] = 'attachment; filename=' + filename"
how to launch vim in python interpreter?,sh('vim ' + fname)
python - removing overlapping lists,"assert f([[0, 133], [78, 100], [25, 30]]) == [[25, 30], [78, 100]]"
accessing items in a ordereddict,items = list(d.items())
how to add values to existing dictionary key python,"aDict[name].append((int(startTime), int(endTime)))"
brokenpipeerror in python,4
how to get a hostname that contains a certain string from a group in ansible,some.staging.host
generate list of range tuples with given boundaries in python,"def gen_range(start, stop, step):
    pass"
opening a gzip file in python apache beam,yield data
compare values of two arrays in python,"{(2): 2, (3): 1, (4): 1}"
python - how to sort a list of numerical values in ascending order,"sorted(['10', '3', '2'], key=int)"
python | how to create complex dictionary,"dict['data'] = []
dict['data'].append({'type': 'poi', 'lat': 123})
dict['data'].append({'type': 'locale', 'lat': 321})"
how can you split a list every x elements and add those x amount of elements to an new list?,"l = ['-200', ' 0', ' 200', ' 400', ' green', '0', '0', '200', '400',
    ' yellow', '200', '0', '200', '400', ' red']
new = []"
are there best practices for extensible magic methods in python?,"def __add__(self, rhs):
    pass"
how to create a message box with tkinter?,"root = Tk().withdraw()
var = tkMessageBox.askyesno('Title', 'Your question goes here?')
filename = 'log.txt'
f = open(filename, 'w')
f.write(str(var))
print(str(var) + ' has been written to the file ' + filename)
f.close()"
python overloading multiple getitems / index requests,"def __getitem__(self, index):
    return self.list[index]"
"cat, grep and cut - translated to python","with open('filename') as origin_file:
    pass"
how to log in to a website using installed twill?,twill.shell.main()
python parsing,"s = 'Michael Schenker Group (House of Blues Dallas 3/26'
re.match('(.*) \\((.*) (\\d+/\\d+)', s).groups()"
does anyone know a way to scramble the elements in a list?,"thelist = ['a', 'b', 'c', 'd']
random.shuffle(thelist)
thelist"
use python glob to find a folder that is a 14 digit number,"import glob
glob.glob('./' + '[0-9]' * 14)"
how can i split a url string up into separate parts in python?,URL = 'http://example.com/random/folder/path.html'
"python 3 sort list of dictionaries by value, where values begin with string","def get_index(x):
    pass"
python--finding parent keys for a specific value in a nested dictionary,"reverse_dict = {value: keypath for keypath, value in keypaths(example_dict)}"
how can i check if a letter in a string is capitalized using python?,"test = 'asdfghjkl'
print('upper' if any(map(str.isupper, test)) else 'lower')"
executing python script from django shell,from django.conf import settings
upload a file to a python flask server using curl,test = request.form['name']
make facebook wall post in python,"if user:
    graph = facebook.GraphAPI(user['access_token'])"
matching tuple elements with list elements,"eagles_first_parts = [eagle[0] for eagle in eagles]
r = [item for item in Result if len(item) > 2 and item[2] in eagles_first_parts
    ]"
python - a way to learn and detect text patterns?,print(nb.classify(Document('A good movie!')))
"with python csv module, why does creating a list of identical values speed up creation of a list of rows?","import csv
from collections import Counter
r = csv.reader(open('foo.csv'))
a = [id(row) for row in r]
r = csv.reader(open('foo.csv'))
b = [row for row in r]
b_id = [id(row) for row in b]
c1 = Counter(a)
c2 = Counter(b_id)
print(c1)
print(c2)"
how to gracefully fallback to `nan` value while reading integers from a csv with pandas?,"df = pd.read_csv('my.csv', na_values=['n/a'])"
regular expression matching first non-repeated character,"class OrderedCounter(Counter, OrderedDict):
    pass
first = next
with open(sys.argv[1], 'r') as test_cases:
    pass"
how do i draw a grid onto a plot in python?,plt.grid(True)
plot cross section through heat map,"row, col = [np.linspace(item[0], item[1], num) for item in [row, col]]"
how to achieve assertdictequal with assertsequenceequal applied to values,"if __name__ == '__main__':
    unittest.main()"
how to label a line in python?,"plt.legend()
plt.show()"
"how to convert tab separated, pipe separated to csv file format in python",f.close()
how to count the occurrence of certain item in an ndarray in python?,num_zeros = (y == 0).sum()
python: getting text of a regex match,print(exp.match(var))
pandas column values to row values,"d.sort_values(['ANO', 'MNO']).reset_index(drop=True)"
pandas how to use groupby to group columns by date in the label?,"x.groupby(pd.PeriodIndex(x.columns, freq='Q'), axis=1).mean()"
efficiently calculating a euclidean distance matrix using numpy,"z = np.array([[complex(c.m_x, c.m_y) for c in cells]])"
finding element of numpy array that satisfies condition,selector = np.array([('.' in s) for s in x.flat]).reshape(x.shape)
converting from pst/pdt (facebook timestamp) to utc,pacificTime = int(pacificTime)
all tuesdays and wednesdays in a date range: is there a more pythonic way?,"pp(list(find_days(start, end, 1, 2)))"
how to print program working directory in python 2?,"time.sleep(1)
curses.endwin()"
python - finding date in a string,print('With overlapping:')
iterate over all lists with one duplicate,list(one_duplicate(3))
case-insensitive comparison of sets in python,"A, B = unify(iterableA), unify(iterableB)
return [(A[k], B[k]) for k in A if k in B]"
storing python dictionaries,"with open('data.json', 'r') as fp:
    data = json.load(fp)"
converting xml to dictionary using elementtree,"assert isinstance(d, dict) and len(d) == 1"
python winreg looping through sub-keys,print(asubkey)
how do i determine the size of an object in python?,B = rand(10000)
python unittest - asserting dictionary with lists,"self.assertDictEqual(a, b)"
flask-oauthlib server doesn't play well with requests-oauthlib client,"@oauth.token_handler
def access_token():
    return None"
how to detect lowercase letters in python?,lowercase_letters = [c for c in s if c.islower()]
fitting a circle to a binary image,img = feature.canny(img).astype(np.uint8)
python download all files from internet address?,f = urllib.request.urlopen(url)
numpy division with runtimewarning: invalid value encountered in double_scalars,"e = np.array([[1000, 4443]])
log_res = np.logaddexp(-3 * d[0, 0], -3 * d[0, 1]) - np.logaddexp(-3 * e[0,
    0], -3 * e[0, 1])
log_res
res = exp(log_res)
res"
programatically save draft in gmail drafts folder,msg['From'] = MY_EMAIL
does python's imaplib let you set a timeout?,"self.port = port
self.sock = socket.create_connection((host, port), timeout=self.timeout)"
can this be written as a python reduce function?,"sum(map(operator.mul, topo[:-1], topo[1:]))"
matplotlib how to start ticks leaving space from the axis origin,"ax.set_ylim(0.5, max(y))"
python - bulk select then insert from one db to another,cursor.execute('INSERT OR REPLACE INTO master.table1 SELECT * FROM table1')
easy openstreetmap tile displaying for python,import matplotlib.pyplot as plt
update pandas cells based on column values and other columns,"df = pd.DataFrame(data=matrix.toarray(), columns=names, index=raw)"
pandas dataframe - change values based on column heading,"DataFrame(foo, index=df.index)"
gtk label wrapping in a dialog,"table.attach(label, 0, 1, 0, 1, Gtk.AttachOptions.SHRINK | Gtk.
    AttachOptions.FILL)"
python regex to parse string and return tuple,match = pattern.match(s)
best way to turn word list into frequency dict,from collections import Counter
basemap with python 3.5 anaconda on windows,"m.drawparallels(np.arange(-90.0, 91.0, 30.0))"
python filter 2d array by a chunk of data,"goodIDs = np.flatnonzero(np.bincount(tags, data[:, (3)] == 1) >= 1)
out = data[np.in1d(tags, goodIDs)]"
add to custom class in python,"def __init__(self, x):
    pass"
integration testing multiple celery workers and a db backed django api,device - --worker1 - --worker2 - --django - --worker3 - --django
implementaion hmac-sha1 in python,"import hmac
key = 'CONSUMER_SECRET&TOKEN_SECRET'
raw = 'BASE_STRING'
hashed = hmac.new(key, raw, sha1)
return hashed.digest().encode('base64').rstrip('\n')"
how to cast tuple into namedtuple?,"tuplePi = 1, 3.14, 'pi'
Record(*tuplePi)
Record._make(tuplePi)"
how to avoid substrings,"mv = memoryview(data)
for i, j in huge_list_of_indices:
    process(mv[i:j])"
python (yield): all paths from leaves to root in a tree,"for path in child.paths([self.node] + acc):
    pass"
template in python,"tpl = ""<a href='mailto:%s'>%s</a>""
s = tpl % ('matt.rez@where.com', 'matt rez')"
json serialize django queryset with values being called. is there anything wrong with my approach?,from django.utils import simplejson
check if 2 arrays have at least one element in common?,return bool(set(array1) & set(array2))
find nearest value in numpy array,return array[idx]
check if path accessible by non-root user,"import os
os.seteuid(65534)
filename = '/etc/passwd-'
try:
    open(filename, 'r')
except IOError as err:
    pass"
looking for a more pythonic way to access the database,cursor.execute('delete from ...')
function to determine if two numbers are nearly equal when rounded to n significant decimal digits,from math import isclose
how to read multiple files and merge them into a single pandas data frame?,"dfs = [pd.read_csv(path.join('data', x)) for x in os.listdir('data') if
    path.isfile(path.join('data', x))]
df = pd.concat(dfs)"
wrong output in python string loop,"while i < len(s):
    if s[i] == ' ':
        pass"
encrypt / decrypt data in python with salt,"encrypted_data = rncryptor.encrypt(data, password)"
creating a dictionary from a list of  2-tuples,"l = [('a', 1), ('b', 2)]
d = dict(l)"
flask application get returning the same thing twice,cursor = connection.cursor()
cython: unsigned int indices for numpy arrays gives different result,import pyximport
python - getting list of numbers n to 0,"range(N, -1, -1)"
normalize histogram (brightness and contrast) of a set of images using python image library (pil),"r, g, b = img_file.getpixel((i, j))"
how to overload print function to expand its functionality?,sys.stdout.write(text)
import file using string as name,"sys.path.insert(0, mypath)
imported_module = __import__('string_module_name')"
how can i get the name of a drive in python,import win32api
how do i merge two lists into a single list?,"[j for i in zip(a, b) for j in i]"
postgresql - insert into where not exists using sqlalchemy's insert from select,"example_table = Table('example_table', m, Column('id', Integer), Column(
    'name', String))
sel = select([literal('1'), literal('John')]).where(~exists([example_table.
    c.id]).where(example_table.c.id == 1))
ins = example_table.insert().from_select(['id', 'name'], sel)"
python itertools permutations how to include repeating characters,"for p in itertools.product(seq, repeat=n):
    pass"
subsampling every nth entry in a numpy array,"a
b = a[::2]
b[:] = 0"
"how can i override standard handler404, handler403, handler500 in django?","if settings.DEBUG:
    pass"
extract single value from json response python,resp = json.loads(json_str)
python multiple assignment statements in one line,"foo, boo, moo = boo[0], moo[0], foo[0] = moo[0], foo[0], boo[0] = [0], [0], [0]
foo
foo[0] is boo
foo[0][0] is moo"
how to fit a double gaussian distribution in python?,"def double_gaussian(x, params):
    c1, mu1, sigma1, c2, mu2, sigma2 = params
res = c1 * np.exp(-(x - mu1) ** 2.0 / (2.0 * sigma1 ** 2.0)) + c2 * np.exp(
    -(x - mu2) ** 2.0 / (2.0 * sigma2 ** 2.0))
return res

def double_gaussian_fit(params):
    fit = double_gaussian(x, params)
return fit - y_proc
y_proc = np.copy(y)
y_proc[y_proc < 5] = 0.0
fit = leastsq(double_gaussian_fit, [13.0, -13.0, 1.0, 60.0, 3.0, 1.0])
plot(x, y, c='b')
plot(x, double_gaussian(x, fit[0]), c='r')"
freeze cells in excel using xlwt,ws.panes_frozen = True
cross platform hidden file detection,result = False
finding a set of indices that maps the rows of one numpy ndarray to another,print(np.all(B[b_to_a] == A))
scikit-learn cross validation scoring for regression,"from sklearn import cross_validation, linear_model
import numpy as np"
keep user and group in same section in django admin panel,"class MyUser(AbstractUser):
    pass


class Meta:
    app_label = 'auth'"
how to do re.compile() with a list in python,"list(compress(fruits, (f in s for f in fruits)))"
django - user permissions to certain views?,"class Meta:
    permissions = ('permission_code', 'Friendly permission description'),"
overflowerror: long int too large to convert to float in python,depart /= math.factorial(idx)
how to modify scikit-learn's eigenface face recognition example,"print(confusion_matrix(y_test, y_pred, labels=list(range(n_classes))))"
python: merge two lists of dictionaries,"[{'x': 'one', 'id': 1}, {'x': 'two', 'id': 2}, {'x': 'three', 'id': 3}]"
python class based decorator with parameters that can decorate a method or a function,return decorated
getting number of messages in a rabbitmq queue,channel.queueDeclarePassive(queueName).getMessageCount()
concatenate two one-dimensional to two columns array,import numpy as np
get max key in dictionary,"max(map(int, MyCount))"
find time difference in seconds as an integer with python,later = time.time()
split datetime64 column into a date and time column in pandas dataframe,"temp = pd.DatetimeIndex(nfp['DateTime'])
nfp['Date'] = temp.date
nfp['Time'] = temp.time
del nfp['DateTime']
print(nfp)"
decoding base64 from post to use in pil,import io
python : how to pretty print html into a file,"from lxml import etree, html
document_root = html.fromstring(
    '<html><body><h1>hello world</h1></body></html>')
print(etree.tostring(document_root, encoding='unicode', pretty_print=True))"
how to compare two lists of dicts in python?,"rhs = dict([(D[k], pop(D, k)) for D in rhs])"
changing iteration variable inside for loop in python,"while i < 10:
    print(i)
if i == 2:
    i = 4
else:
    i += 1"
modifying global variable with same name as local variable,my_func()
regex python match large list of strings,"'Cayenne', 'Chicago', 'Curacao', 'Detroit', 'Godthab', 'Grenada'"
extract a specific file from a zip archive without maintaining directory structure in python,"with zipfile.ZipFile(tDir + mainapk[0]) as z:
    with z.open(icon[1]) as zf:
        with open(os.path.join(tDir, os.path.basename(icon[1])), 'wb') as f:
            pass"
access a function variable outside the function without using `global`,"def hi():
    hi.bye = 5
sigh = 10
hi()
print(hi.bye)"
convert hex string to int,"int(s, 16)"
most efficient way to implement numpy.in1d for muliple arrays,"[array([2, 4], dtype=int32), array([1, 3], dtype=int32), array([2], dtype=
    int32), array([0, 1], dtype=int32)]"
converting ohlc stock data into a different timeframe with python and pandas,"return {'Open': df['Open'][0], 'High': df['High'].max(), 'Low': df['Low'].
    min(), 'Close': df['Close'][-1], 'Volume': df['Volume'].sum()}"
reliably scraping stock price tables,"""""""https://iqoption.com/en/historical-financial-quotes?active_id=1&tz_offset=120&date=2016-12-19-19-0"""""""
beautifulsoup: how to replace value in an element with an element tag?,"data = '<p>This text is my <a href=""#"">text</a><p>'
soup = BeautifulSoup(data)
original_string = soup.p.contents[0]
new_text = str(original_string).replace('text', '<a href=""#"">text</a>')
original_string.replaceWith(BeautifulSoup(text))"
return sql table as json in python,"def db(database_name='pepe'):
    return psycopg2.connect(database=database_name)"
how to define google endpoints api file download message endpoint,img = base64.b64decode(value)
how to slice list into contiguous groups of non-zero integers in python,"a
[i for i in a if i != [0]]"
split queryset or get multiple querysets by field instead of just ordering by field,person_dict = defaultdict(list)
packing python files into a single .py script,raise ValueError('Trailing newline required in both headers')
summing only the numbers contained in a list,"l1 = [1, 2, 3, 'A']
sum([i for i in l1 if isinstance(i, int)])"
load blob image data into qpixmap,image_data = cPickle.loads(str(s))
print a variable selected by a random number,tmp.append(item)
how to achieve inner join using sqlalchemy?,"player_id = Column(Integer, ForeignKey('chats.id'), nullable=False)
message = Column(String(2000), nullable=False)
time = Column(TIMESTAMP, server_default=func.now())"
tkinter - making a second canvas display the contents of another,self.canvas1.delete('all')
pytz - converting utc and timezone to local time,tz = pytz.timezone('America/St_Johns')
is it possible to force exponent or significand of a float to match another float (python)?,[1.0]
global variable declaration python,"def __init__(self):
    pass"
a set union find algorithm,self.leader[a] = self.leader[b] = a
using cython to link python to a shared library,from Cython.Distutils import build_ext
"pyqt, click action on qwidget","app = QApplication(sys.argv)
widget = MyWidget()"
python - visibility of global variables in imported modules,import sharedstuff as shared
xml header getting removed after processing with elementtree,from lxml import etree
django model api reverse lookup of many to many relationship through intermediary table,resident.ssa_set.all()
is there a way to specify the width of a rectangle in pil?,"bottom_right = 100, 100"
accessing kivy layout size in kvlang,"class TestApp(App):
    pass"
what's the best way of distinguishing bools from numbers in python?,stmt3 = 'a is True or a is False; b is True or b is False'
using django models in external python script,os.environ['DJANGO_SETTINGS_MODULE'] = 'openstack_dashboard.settings'
getting computer's utc offset in python,print(-time.timezone)
build a tree in python through recursion by taking in json object,"def __repr__(self):
    pass"
interleaving multiple iterables randomly while preserving their order in python,iters.remove(it)
how to annotate heatmap with text in matplotlib?,import matplotlib.pyplot as plt
python database without using django (for heroku),query = 'SELECT ....'
syntax to call random function from a list,"my_list = [func_test_1, func_test_2, func_test_3]
random.choice(my_list)()"
split python dictionary to result in all combinations of values,"{'a': 2, 'b': 3, 'c': {'e': 6, 'd': 4}}"
python json and unicode,"term = 'cat'
phrase = 'Learning string concatenation in Python'"
how to use a wtforms fieldlist of formfields?,"for entry in form.locations.entries:
    pass"
how to rearrange pandas column sequence?,"for x in dataframe.columns:
    if x not in cols:
        if front:
            cols.append(x)"
how to deal with time values over 24 hours in python?,"try:
    time = datetime.datetime.strptime(time, ' %H:%M:%S.%f')
except ValueError:
    time = time.replace(' 24', ' 23')"
only get the numbers from a variable,"brlxusd = brlxusd.split(' ')[0]
print('BRL x USD rate today: %s' % brlxusd)"
find clusters of bacteria,a = representatives[a]
making os.walk work in a non-standard way,print(i)
create dictionary from penn treebank corpus sample from nltk?,len(brown_tagged_sents)
multiprocessing.pool with maxtasksperchild produces equal pids,import multiprocessing
detect strings with non english characters in python,"""""""ގެ ފުރަތަމަ ދެ އަކުރު ކަ"""""""
"how can i make a numpy function that accepts a numpy array, an iterable, or a scalar?","def incrementElements(x):
    x = np.asarray(x)"
"in python, how do i take the highest occurrence of something in a list, and sort it that way?","data = [3, 4, 2, 3, 4, 3]
Counter(data).most_common()"
python creating a shared variable between threads,time.sleep(0.5)
how to take column-slices of dataframe in pandas,"df.ix[:, 'b':]"
python time objects with more than 24 hours,"import datetime
a = datetime.timedelta(hours=36)
b = datetime.timedelta(hours=4, minutes=46, seconds=23)
c = a - b"
using cpickle to serialize a large dictionary causes memoryerror,db_filename = os.path.abspath(DB_NAME)
finding all possible substrings within a string. python regex,import re
how do i get the raw representation of a string in python?,"def rawstr(s):
    pass"
how do i find out eigenvectors corresponding to a particular eigenvalue of a matrix?,"P = np.array([[2, 0, 0], [0, 1, 0], [0, 0, 3]])"
file upload with tornado,"with open(path, 'wb') as out:
    body = self.request.get_argument('data')"
python turtle stamp mysteriously disappears after turtle shape's image manipulation,turtle.shape(name)
how can i separate runs of my tensorflow code in tensorboard?,"folder = OSFS(FLAGS.test_dir)
test_n = len(list(n for n in folder.listdir() if n.startswith('test')))
this_test = FLAGS.test_dir + '/test' + str(test_n + 1)
test_writer = tf.train.SummaryWriter(this_test)"
how can i create a regex from a list of words?,"conjoined_endings = '|'.join(unique_endings)
print(conjoined_endings)"
accessing a xampp mysql via python,[client]
reversing lists of numbers in python,bids.append(int(bid))
numpy: comparing elements in two arrays,"a = np.array([1, 4, 5]).astype(np.float32)"
best way to implement a deck for a card game in python,"hand = [Card(1, 'spade'), Card(10, 'club')]"
create list with alternating values,new_inlist.sort(key=lambda x: x.split(separator)[1])
python timedelta in years,"def num_years(begin, end=None):
    pass"
how to write utf8 to standard output in a way that works with python2 and python3,sys.stdout.buffer.write(bytes(output.encode('utf-8')))
retrieving all cookies in python,"for cookie in cj:
    pass"
data type recognition/guessing of csv data in python,"data2 = 'NOT123.42GONNA31.4HAPPEN'
print(pattern.match(data2))"
generating unique and opaque user ids in google app engine,"email = 'user@host.com'
salt = 'SomeLongStringThatWillBeAppendedToEachEmail'
key = hashlib.sha1('%s$%s' % (email, salt)).hexdigest()
print(key)"
how to remove extra indentation of python triple quoted multi-line strings?,"def main2():
    """"""foo
    bar
    foo2""""""
pass"
sort and group a list of dictionaries,"for key, groups in groupby(sorted_permissions, permissions_key):
    key_result = {}"
python property change listener pattern,"def _wrap(method):

    def wrapper(self, *args, **kwargs):
        result = method(self, *args, **kwargs)
self.callback()"
how to decorate a method inside a class?,"@wraps(fn)
def wrapper(*args, **kw):
    pass"
apply function between subsequent rows in more efficient way with pandas,"def apply_func(df):
    mask = pd.isnull(df['D'][:-1])
df['D'][:-1][mask] = fun(df['B'][:-1].values, df['B'][:-1].values, df['B'][
    1:].values, df['B'][1:].values)
mask = pd.isnull(df['E'][1:])
df['E'][1:][mask] = fun(df['B'][1:].values, df['B'][1:].values, df['B'][:-1
    ].values, df['B'][:-1].values)
return df"
filling holes in image with opencv or skimage,"img = cv2.imread('mCOFl.png')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)"
add custom method to string object,"class string(str):
    pass"
how to pass dictionary items as function arguments in python?,"def my_function(my_data):
    my_data['schoolname'] = 'something'
print(my_data)"
multiple inheritance and using a method of one of the base classes,"def __init__(self):
    pass"
rank of a permutation,counts_copy[x] -= 1
change to sudo user within a python script,"if os.getuid() != 0:
    pass"
python: force two zeroes after dot when converting float to string,"format(150, '.2f')"
setting an item in nested dictionary with __setitem__,tmp['alpha'] = 'bbb'
construct sparse matrix using categorical data,"points = np.ones(len(user_item), int)
mat = sparse.coo_matrix(points, (I, J))"
is there an easy way to get next and prev values in a for-loop?,"a = [None] + a + [None]
for i, j, k in zip(a, a[1:], a[2:]):
    pass"
simplify svgs by applying transform - reduce size,"ns = {'svg': 'http://www.w3.org/2000/svg'}
doc.xpath('//svg:g/@transform', namespaces=ns)"
how to find parenthesis bound strings in python,"A = 'hello (world)'
A.find('(')"
split a string at a certain index,r = re.compile('(?:[^.(]|\\([^)]*\\))+')
coroutine based state machines,"sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)"
use of yield with a dict comprehension,"result[item] = yield ''.join([item, 's'])"
creating a hierarchical build with scons,"env.Program(target='foo', source='foo.c')"
how can i split a string and form a multi-level nested dictionary?,"from functools import reduce
reduce(lambda res, cur: {cur: res}, reversed('foo/bar/baz'.split('/')), 1)"
variable access weirdness in a qobject derivative,"@classmethod
def test(cls):
    print(cls.instance)
cls.instance = cls()
print(cls.__dict__['instance'])
print('still ok')
print(cls.instance)
print(""you won't see me"")
print(type.__getattribute__(cls, 'instance'))
A.test()"
make column width take up available space in wxpython listctrl,"listmix.ListCtrlAutoWidthMixin.__init__(self)
self.setResizeColumn(0)"
copy a file with a too long path to another directory in python,"moveTo, path = path.split(os.sep, 1)"
limiting memory use in a *large* django queryset,return self
python: how can i get a list of function names from within __getattr__ function?,"def foo():
    pass"
python - split string into smaller chunks and assign a variable,"step = 3
[x[i:i + step] for i in range(0, len(x), step)]
step = 5
[x[i:i + step] for i in range(0, len(x), step)]"
using regular expression substitution command to insert leading zeros in front of numbers less than 10 in a string of filenames,"text = 'file1, file2, file10, file20'
re.sub('(\\d+)', lambda m: m.group(1).zfill(2), text)
re.sub('([a-z]+)(\\d+)', lambda m: m.group(1) + m.group(2).zfill(2), text)"
find the subset of a set of integers that has the maximum product,"assert max_product([-2, -3]) == 6"
finding the most frequent character in a string,print(collections.Counter(s).most_common(1)[0])
using datetime to determine highest frequency event within a time interval,"""""""OTHER_OFFENSES"""""""
python list group by date,"for dt, val in lis:
    dt = dt.date()
dic[dt] = max(dic.get(dt, 0), val)"
how do i implement a null coalescing operator in sqlalchemy?,"@hybrid_property
def time_spent(self):
    return (self.end or datetime.now()) - self.start

@time_spent.expression
def time_spent(cls):
    pass"
is there a skip parameter in julia's range?,end
python logging - determine level number from name,logging.getLevelName(15)
how can i access a shared dictionary with multiprocessing?,d[x] = xx * xxx
importing classes from another directory - python,"import sys
from pprint import pprint"
writing a large hdf5 dataset using h5py,"with h5py.File('/tmp/test.h5', 'w') as f:
    maxshape = (None,) + chunk.shape[1:]"
how to set a timer & clear a timer in python?,"t.start()
sleep(5.0)"
recursively split strings that contains a defined set of prefixes - python,"for word in ['overachieve', 'reundo', 'empire', 'coprocessor']:
    pass"
using terminal command to search through files for a specific string within a python script,print('opened %s' % file)
interweaving two numpy arrays,"b = np.array([2, 4, 6])"
how to add an image in tkinter (python 2.7),"panel.pack(side='bottom', fill='both', expand='yes')"
read file line by line with asyncio,print('Got: {!r}'.format(line))
combine same function with different parameters - python,"def move(inp):
    board[inp - 1] = 'X'
show(board)"
"referencing list entries within a for loop without indexes, possible?","def nwise(iterable, n=2):
    """"""s->(s_0,s_1, ..., s_n), (s_1,s_2,..., s_n+1), ... """"""
ntup = itertools.tee(iterable, n)"
matplotlib animation movie: quality of movie decreasing with time,"plt.rcParams['animation.ffmpeg_path'] = 'C:/ffmpeg/bin/ffmpeg.exe'
writer = animation.FFMpegWriter(bitrate=500)"
pandas: can you access rolling window items,"rs = pd.Series(list(range(10)))
rs"
let a class behave like it's a list in python,pass
how can i add autocomplete to vim for non-standard python libraries?,"vim.command('set path-=%s' % p.replace(' ', '\\ '))"
how can i process a python dictionary with callables?,"a = CallablesDict({'key1': 'value1', 'key2': 42, 'key3': partial(foo, 20)})
print(a['key3'])"
create set of random jpgs,"for n in range(10):
    a = numpy.random.rand(30, 30, 3) * 255"
get last answer,"_1 + _2
_6"
how to construct a tarfile object in memory from byte buffer in python 3?,io_bytes = io.BytesIO(byte_array)
rate limit an infinite while loop in python,"while True:
    start = time.time()
some_long_process()
end = time.time()
remain = start + 10 * 60 - end
if remain > 0:
    pass"
calling one method from another within same class in python,self.dropbox_fn(filename)
making the stack levels in django html email reports collapsable,"if isinstance(exception, Http404):
    pass"
f2py -- prevent array reordering,a = np.zeros(nx * ny * nz)
how to pass tuple as argument in python?,"1,
1
1
1, 2
1, 2"
how to profile a jinja2 template?,"template = jinja2.Template(
    """"""
    {% for i in RANGE1 %}<h1>hello world {{ i}}</h1>{% endfor %}
    {% for i in RANGE2 %}<h1>foo bar {{ i}}</h1>{% endfor %}
    {{ SLOW() }}
        """"""
    )"
python sharing a dictionary between parallel processes,"if __name__ == '__main__':
    pool = mp.Pool()
inputs = list(range(10))
inputs = [('1**1', 1, 1), ('2**2', 2, 2), ('2**3', 2, 3), ('3**3', 3, 3)]"
nginx + uwsgi + flask - disabling custom error pages,"def handel_404(error):
    return render_template('404.html')"
redis key management,"user = users[1]
user[:name]
redis.set(user[:name], 'Foo')
user[:name].set('Foo')
user[:name].get"
avoid using global without confusing new programming students in python?,"class Location:
    name = 'a place'
description = 'A dark place.  there are exits to the North and East'
exits = 'North', 'East'

def __str__(self):
    return '%s\n%s' % (self.name, self.description)


class Player:
    current_location = 'Home'
inventory = ['Blue Key', 'Magic Thumbtacks']
health = 100
name = 'Unknown'

def __init__(self, name):
    self.name = name
player = Player('Player 1')
loc = Location()
print(loc)
x = eval(input('Input:'))"
how to generate a pdf from an html / css (including images) source in python?,"if pdf.err:
    pass"
sort list of strings by integer suffix in python,"return name, int(num)"
"missing data, insert rows in pandas and fill with nan","df['A'] = df['index']
df.drop(['A'], axis=1, inplace=True)
df.reset_index().drop(['level_0'], axis=1)"
using paired certificates with urllib2,urllib.request.HTTPSHandler.__init__(self)
get timezone from city in python/django,g = geocoders.GoogleV3()
parsing a multi-line data file with python,"('Received', ' 11/6/2012 1:34:06 AM\n'),"
"creating tuples of all possible combinations of items from two lists, without duplicating items within tuples","(0, 1, 2), (1, 2, 3), (2, 0, 4), (3, 4, 0), (4, 3, 1)"
django count of items in a field,"results = Result.objects.filter(event=myevent).select_related('category')
c = Counter(r.category for r in results)"
using pandas to pd.read_excel() for multiple worksheets of the same workbook,xls = pd.ExcelFile('path_to_file.xls')
compare date and datetime in django,"start_date = timezone.now().date()
end_date = start_date + timedelta(days=1)"
stripping inline tags with python's lxml,from lxml import etree
child_process spawnsync iterate python stdout results using for loop,"for x in os.listdir(sys.argv[1]):
    pass"
python: how to generate a vector with nonzero entries at random positions?,"a[:k] = np.random.randn(k)
np.random.shuffle(a)
a"
how it is possible to be a circle in python?,bob.hideturtle()
sqlalchemy: modification of detached object,session.flush()
lxml element equality with namespaces,"tree = lxml.etree.fromstring('<root xmlns:f=""foo""><f:test/></root>')
qn = QName(tree.nsmap['f'], 'test')
assert tree[0].tag == qn"
what is the most pythonic way to test for match with first item of tuple in sequence of 2-tuples?,"tups = ('a', 1), ('a', 5), ('b', 2), ('c', 3)
gen = (x[0] for x in tups)
'a' in gen"
count throws for sixes in rolling dice python,"dice = random.randint(1, 6)"
plotting 3d histogram/barplot in python matplotlib,"ax.set_zlabel('Shannon Index')
plt.show()"
how to use @pytest.mark with base classes?,"if 'TestLinuxOnly' in item.keywords and not sys.platform.startswith('linux'):
    skip_message = 'Skipped: Linux only test'"
how to add cookies to tornado httpclient,app.listen(8888)
n-queen backtracking in python: how to return solutions instead of printing them?,""""""" if no other queens threaten a queen at (row, queen) return True """""""
how can i efficiently search for many strings at once in many files?,"with open(eachcsv, 'r') as f:
    body = f.read()"
is it bad style to reassign long variables as a local abbreviation?,"[1, 2, 2]"
testing in python - how to use assertraises in testing using unittest?,ukol1.SummaryFormula()
unpacking into a list,"[x, y, z] = v
x, y, z
x, y, z = v"
python: deep appending to dictionary? - in a single expression,"result[outerKey] = inner
return result"
python: how can i know which exceptions might be thrown from a method call,"def __init__(self):
    pass"
plot dynamically changing graph using matplotlib in jupyter notebook,"m = 100
n = 100
matrix = np.random.normal(0, 1, m * n).reshape(m, n)
fig = plt.figure()
ax = fig.add_subplot(111)
plt.ion()
fig.show()
fig.canvas.draw()
for i in range(0, 100):
    ax.clear()
ax.plot(matrix[(i), :])
fig.canvas.draw()"
how to save a python interactive session?,readline.read_history_file(historyPath)
inheriting a tuple as a list,"print(Board([1, 2]))"
pandas split string into columns,"df = pd.concat([df['Track ID'], dfpart], axis=1)"
how can i find a table after a text string using beautifulsoup in python?,"foundtext = soup.find('p', text=searchtext)
table = foundtext.findNext('table')"
how to find the cumulative sum of numbers in a list?,"a = [4, 6, 12]
np.cumsum(a)"
split string and just get number in python?,import re
can you upload to s3 using a stream rather than a local file?,"writer.writerow(row)
fout.write(f.getvalue())"
programmatically detect system-proxy settings on windows xp with python,from winreg import *
is there a function to make scatterplot matrices in matplotlib?,ax.yaxis.set_ticks_position('right')
how to use numpy with 'none' value in python?,import MA
using tempfile to create a sub-directory for all of my tempfiles,print(tempdir)
how to refer to a parent method in python?,"def __init__(self):
    print('hello')"
strange behavior of datetime rounding between python 2 & 3,"def utcfromtimestamp(t):
    y, m, d, hh, mm, ss, weekday, jday, dst = time.gmtime(t)
us = int(t % 1.0 * 1000000)
ss = min(ss, 59)
return datetime.datetime(y, m, d, hh, mm, ss, us)"
clearing background in matplotlib using wxpython,"for i in range(3):
    ellip = Ellipse(xy=(0.5, 0.5), width=1, height=1, facecolor='red',
        alpha=0.5)
ax.add_patch(ellip)
ellipses.append(ellip)
for i in range(100):
    fig.canvas.restore_region(bg)
for ellip in ellipses:
    ellip.width, ellip.height, ellip.angle = np.random.random(3)
ellip.angle *= 180
ax.draw_artist(ellip)
fig.canvas.blit(ax.bbox)"
hide axis values in matplotlib,"ax.set_xlabel('t')
ax.set_yticklabels([])
ax.set_xticklabels([])
plt.show()"
creating a list in python with multiple copies of a given object in a single line,"L = [0] * 10
L = [['x', 'y']] * 10"
how do you print a function that returns a request in python?,"self.LastJson = json.loads(response.text)
return True"
how to get whois info by ip in python 3?,pprint(res)
rigid transformation - python - speedup,"return out

def indices_app(matrix, X, Y):
    coords_ext = np.empty((Y, X, 3))
coords_ext[..., ([1, 0])] = np.rollaxis(np.indices((Y, X)), 0, start=3)
coords_ext[..., (2)] = 1
result = np.matmul(coords_ext, matrix.T)
return result

def broadcasting_app(matrix, X, Y):
    ys = np.arange(Y)
xs = np.arange(X)
out = ys[:, (None), (None)] * matrix[:, (1)] + xs[:, (None)] * matrix[:, (0)
    ] + matrix[:, (2)]
return out"
execute a sql script file from cx_oracle?,print(error)
"python, functional programming, mapping to a higher level","map_level(double, data, 0)"
how do i capture sigint in python?,print('You pressed Ctrl+C!')
"add two lists of different lengths in python, start from the right","[(x + y) for x, y in zip_longest(reversed(P), reversed(Q), fillvalue=0)][::-1]"
proper way of building gtk3 applications in python,"window.connect('destroy', lambda w: Gtk.main_quit())"
nltk language model (ngram) calculate the prob of a word from context,"lm.prob('rain', ['the'])
lm.prob('spain', 'rain in')
lm.prob('spain', ['rain in'])
lm.prob('spain', ['rain', 'in'])"
give openid users additional information,user_db_qry = User.query(User.federated_id == federated_user.user_id())
what's a faster way to look up a value in a list of tuples?,return None
how to implement ssdp / upnp? trying to use sony's camera api,SSDP_PORT = 1900
efficiently calculate word frequency in a string,"from collections import Counter
test = 'abc def abc def zzz zzz'
Counter(test.split()).most_common()"
django: detecting changes of a set of fields when a model is saved,"super(Stop, self).save()"
how to check if my python has all required packages?,"from pkg_resources import DistributionNotFound, VersionConflict"
python: read several json files from a folder,print(jsons_data)
does size of a file affects the performance of the write in python,"fout.write('{}\n{}'.format(s, '\n'.join(results)))"
saving and loading of dataframe to csv results in unnamed columns,"1, a, a, c
2, a, a, c
3, a, a, c
4, a, a, c"
"subset of a matrix multiplication, fast, and sparse","x = np.random.rand(M, L)"
unpack a list to cycle tag in django,"def __init__(self, cyclevars):
    self.cyclevars = template.Variable(cyclevars)"
how to generate a human-readable string that represents a rrule object?,"if self.data.startswith('d'):
    pass"
django: how can you stop long queries from killing your database?,"logger_ec.error('%s; %s.' % (log_msg, traceback.format_exception(exc_type,
    exc_info, None)[0]))"
how to force the race condition in transaction in django tests?,"if __name__ == '__main__':
    pass"
how to delete a symbolic link in python?,"if os.path.isdir(targetLink):
    os.rmdir(targetLink)"
pass a string variable into a gql query,"q = GqlQuery('SELECT * FROM Song WHERE composer = :composer', composer=
    'Lennon, John')"
switch case in python doesn't work; need another pattern,"getattr(self, 'default')()"
"using an r-script in python, which was written for r","with open('quadro.R') as fh:
    rcode = fh.read()"
generating unique and opaque user ids in google app engine,"salt = 'SomeLongStringThatWillBeAppendedToEachEmail'
key = hashlib.sha1('%s$%s' % (email, salt)).hexdigest()
print(key)"
how to implement a watchdog timer in python?,print('Error')
"run a program from python, and have it continue to run after the script is killed","sys.exit(1)
func()
os._exit(os.EX_OK)"
pandas merge dataframe fill in missing values,"import pandas as pd
names = pd.DataFrame({'names': ['bob', 'frank', 'bob', 'bob', 'bob',
    'james', 'tim', 'ricardo', 'mike', 'mark', 'joan', 'joe'], 'position':
    ['dev', 'dev', 'dev', 'dev', 'dev', 'dev', 'sys', 'sys', 'sys', 'sup',
    'sup', 'sup']})
info = pd.DataFrame({'names': ['joe', 'mark', 'tim', 'frank', 'joe', 'bill'
    ], 'classification': ['thief', 'thief', 'good', 'thief', 'good', 'thief']})"
index entire array backwards in for loop,"length = len(x)
for i in range(length):
    pass"
where to save my custom scripts so that my python scripts can access the module in the default directory?,sys.path.append('/home/alvas/python/lib')
codility absolute distinct count from an array,s.add(Math.abs(n))
recursive version of 'reload',"import imp
imp.reload(b)"
python: how to get stringio.writelines to accept unicode string?,result.writelines(rows)
verbose mode in django template tags,"'text/html',
'text/xml',"
sort list in python by two other lists,"[List1[i] for i in sorted(list(range(len(List1))), key=lambda i: (List2[i], -
    List3[i]))]"
sqlalchemy: export table to new database,se2 = db2.Session()
django tastypie advanced filtering: how to do complex lookups with q objects,"orm_filters = super(MyResource, self).build_filters(filters)"
is there a programmatic way to transform a sequence of image files into a pdf?,from glob import glob
upload a large xml file with python requests library,"headers = {'content-type': 'application/xml'}
r = requests.put(url, data=xmlfile, headers=headers, auth=HTTPDigestAuth(
    '*', '*'))"
how to separate string from unformed string,"shlex.split(
    '2013-06-05T11:01:02.955 LASTNAME=Jone FIRSTNAME=Jason PERSONNELID=salalm QID=231412 READER_NAME=""CAZ.1 LOBBY LEFT TURNSTYLE OUT"" ACCESS_TYPE=""Access Granted"" EVENT_TIME_UTC=1370480141.000 REGION=UTAH'
    )"
zero padding slice past end of array in numpy,len(item)
is there a compact equivalent to python range() in c++/stl,2
"can i get a view of a numpy array at specified indexes? (a view from ""fancy indexing"")","def fancy_index_view(arr, inds):
    arr_copy = arr[inds]"
is it pythonic for a function to return multiple values?,"p = Point(x, y)"
python web scraping - how to get resources with beautiful soup when page loads contents via js?,soup = BeautifulSoup(content)
how to copy a file from a network share to local disk with variables?,dest_path = 'C:\\TEMP'
how to read formatted input in python?,"b = a.split(', ')
b
[s.strip() for s in input().split(',')]"
match set of dictionaries. most elegant solution. python,"def match_new(new_list, old_list):
    pass"
how do i raise a window that is minimized or covered with pygobject?,win.set_keep_above(False)
change a string of integers separated by spaces to a list of int,x = [int(i) for i in x.split()]
python regex for reading csv-like rows,"reader = csv.reader(open('file.csv'))
for line in reader:
    pass"
return value while using cprofile,"def wrapper(b):
    b.append(foo())"
zipping dynamic files in app engine (python),"my_data = '<html><body><p>Hello, world!</p></body></html>'
z.writestr('hello.html', my_data)
z.close()
self.response.headers['Content-Type'] = 'multipart/x-zip'
self.response.headers['Content-Disposition'] = 'attachment; filename=test.zip'
self.response.out.write(output.getvalue())"
python dict implementation details,hash(1)
how can i randomly place several non-colliding rects?,"imgx, imgy = REGION.max.x + 1, REGION.max.y + 1"
how to pickle an instance of a class which is written inside a function in python?,self.x = 123
how to find the average of previous sales at each time in python,cnct.to_csv('TotalAvg.csv')
pandas dataframe performance,"value = df.loc[5]
5.68071913719
value = df.iloc[5]
4.56006002426"
write data to hdf file using multiprocessing,"p = mp.Process(target=Simulation, args=(inqueue, output))"
finding integer distance between two intervals,"dist = min(y) - max(x)
if dist > 0:
    return dist
else:
    return 0"
python global variable with thread,"def f():
    global a
a += 1
a
f()
a"
non-global middleware in django,"def _shortcircuitmiddleware(*args, **kwargs):
    pass"
function with dictionaries as optional arguments - python,"for arg in args:
    pass"
unit testing elastic search inside django app,"class IntegrationTestCase(TestCase):
    pass"
what is the best way to create a string array in python?,"temp_list.append('two')
print(temp_list)
temp_list.append('three')
print(temp_list)"
how to make python script run as service?,autorestart = true
correct way to edit dictionary value python,from collections import defaultdict
how to workwith generators from file for tokenization rather than materializing a list of strings?,"with open('ref1.txt', 'r') as reffin:
    hyp = (h.split() for h in hypfin)"
python - way to recursively find and replace string in text files,"import os, fnmatch

def findReplace(directory, find, replace, filePattern):
    for path, dirs, files in os.walk(os.path.abspath(directory)):
        for filename in fnmatch.filter(files, filePattern):
            filepath = os.path.join(path, filename)
with open(filepath) as f:
    s = f.read()
s = s.replace(find, replace)
with open(filepath, 'w') as f:
    f.write(s)"
opening a gzip file in python apache beam,"import apache_beam as beam
from apache_beam.io.fileio import coders

def _TextFileReader__iter(self):
    data = self._file.read()
yield data
beam.io.fileio.TextFileReader.__iter__ = _TextFileReader__iter"
(python) how to get diagonal(a*b) without having to perform a*b?,"a.dot(b)
np.diagonal(a.dot(b))
np.einsum('ij,ji->i', a, b)"
python: find out whether a list of integers is coherent,"return my_list == list(range(my_list[0], my_list[-1] + 1))"
grammar rule extraction from parsed result,ptree.productions()
can't get code in shell to work as a program,print(myStr)
adding a legend to pyplot in matplotlib in the most simple manner possible,pylab.legend(loc='upper left')
efficiently row standardize a matrix,"cc
ccd = sparse.spdiags(1.0 / cc.sum(1).T, 0, *cc.shape)
ccn = ccd * cc"
asynchronous subprocess with timeout,"process = subprocess.Popen(cmd, shell=True)"
python string replacement with % character/**kwargs weirdness,"def __init__(self, url, **kwargs):
    pass"
increase celery retry time each retry cycle,"def add(x, y):
    pass"
beautiful soup using regex to find tags?,import re
concatenating sliced strings based on slice indices in csv file,"for row in csv.reader(f2):
    it = iter(map(int, [_f for _f in row[1:] if _f]))"
python regex: how can i have pattern searching for multiple pattern strings?,"pattern_strings = ['\xc2d', '\xa0', '\xe7', '\xc3\\ufffdd', '\xc2\xa0',
    '\xc3\xa7', '\xa0\xa0', '\xc2', '\xe9']
pattern_string = '|'.join(pattern_strings)"
using numpy to build an array of all combinations of two arrays,"def cartesian(arrays, out=None):
    pass"
how do i insert a list at the front of another list?,k.extend(a)
inline csv file editing with python,filename = 'tmpEmployeeDatabase.csv'
python - ip <-> subnet match?,a = int(ipaddress.ip_address('192.0.43.10'))
how to iterate over unicode characters in python 3?,"s = s.encode('utf-32-be')
struct.unpack('>{}L'.format(len(s) // 4), s)"
"how do i run ""dot"" as a command from python?","from subprocess import check_call
print(check_call(['dot', '-o9.png', '-Tpng', './6.dot']))"
cx_oracle: how do i iterate over a result set?,print(row)
lxml: insert tag at a given position,"subtag2 = etree.Element('subtag2', subattrib2='2')
subtext = etree.SubElement(subtag2, 'subtext')"
django: how do i create a generic url routing to views?,"mods = 'Project', 'Links', 'Profile', 'Contact'"
python 3: create a list of possible ip addresses from a cidr notation,revB = ''.join('1' if b == '0' else '0' for b in octets)
how do i run a python script from c#?,"start.Arguments = string.Format('{0} {1}', cmd, args)
start.UseShellExecute = false"
how to check for presence of a layer in a scapy packet?,"pkts = rdpcap('rogue_ospf_hello.pcap')
p = pkts[0]
p.haslayer(UDP)
p.haslayer(IP)"
example for accessing tcl functions from python,"tcl = Tcl()
tcl.eval('source foo.tcl')
tcl_str = tcl.eval('main %s' % MYFILE)"
file transfer with sockets on python,conn.close()
default buffer size for a file on linux,"printf('%d\n', BUFSIZ)
return 0"
matplotlib legend: how to assign multiple scatterpoints values,"pl.plot(x, np.random.standard_normal(len(x)), 'o', label='rand')"
python: histogram with area normalized to something other than 1,"plt.bar(bins[:-1], hist, widths)
plt.show()"
celery discover tasks in files with other filenames,"import os

def detect_tasks(project_root):
    tasks = []
file_path = os.path.join(project_root, 'apps')
for root, dirs, files in os.walk(file_path):
    for filename in files:
        if os.path.basename(root) == 'tasks':
            if filename != '__init__.py' and filename.endswith('.py'):
                task = os.path.join(root, filename).replace(os.path.dirname
                    (project_root) + '/', '').replace('/', '.').replace('.py',
                    '')
tasks.append(task)
return tuple(tasks)"
efficient loop over numpy array,"return np.sum(a), np.nonzero(np.any(a, axis=0))[0]"
finding n closest numbers,"ntoi = dict((x, []) for x in allnums)"
how do i run selenium in xvfb?,"browser.get('http://www.google.com')
print(browser.title)
browser.quit()"
pandas count consecutive date observations within groupby object,"start_date = datetime.date(2016, 11, 22)"
how to count the number of digits in numbers in different bases?,"while num:
    str += alpha[num % base]"
how do i pass large numpy arrays between python subprocesses without saving to disk?,"q.task_done()
if __name__ == '__main__':
    N = 10
arr = shm.zeros(N, dtype=np.uint8)
q = mp.JoinableQueue()
proc = mp.Process(target=worker, args=[q, arr])
proc.daemon = True
proc.start()
for i in range(3):
    q.put('data')
q.join()
print(arr.shape)
print(arr)
q.put('done')
proc.join()"
creating separate database connection for every celery worker,from django.db import connection
ignoring missing values in multiple ols regression with statsmodels,"results = smf.ols(formula='da ~ cfo + rm_proxy + cpi + year', data=df,
    missing='drop').fit()"
file access peek ahead,y.__next__()
solving linear system over integers with numpy,"b = np.array([1, 1, 0])
x = np.linalg.lstsq(a, b)[0]"
python read from fd directly into bytearray,"with io.FileIO(fd, closefd=False) as fio:
    pass"
how do you override basehttprequesthandler log_message() method to log to a file rather than to console (sys.stderr)?,"httpdkenlogger = logging.getLogger('httpd-ken')
fh = logging.FileHandler('/opt/python/dev/interim/httpd-kenserver.3.log')
fh.setLevel(logging.INFO)
frmt = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )
fh.setFormatter(frmt)
httpdkenlogger.addHandler(fh)"
"python: a resilient, actually working csv implementation for non-ascii?",return chardet_detector.result
how to correctly implement the mapping protocol in python?,"class MyMapping(collections.abc.Mapping):
    pass"
bash pipe to python,"while True:
    line = sys.stdin.readline()
if not line:
    break
print(line)"
does anyone know of a asynchronous mysql lib for python?,"def result(rows):
    for row in rows:
        pass"
python datetime strptime wildcard,"date1 = dateutil.parser.parse('December 12th, 2008')"
combine several dictionaries based on a common key value into one dictionary,from collections import OrderedDict
working with subdomain in google app engine,"if __name__ == '__main__':
    main()"
match specific pattern with regular expression,"""""""(?P<block>(?P<subject>[A-Z]{2,12})(?:(?P<operation>[*+])(?P<value>\\d+(?:\\.\\d{1,2})?))?)"""""""
counting entries in a csv file with python,pass
get intersecting rows across two 2d numpy arrays,"B = np.array([[1, 4], [3, 6], [7, 8]])
aset = set([tuple(x) for x in A])
bset = set([tuple(x) for x in B])
np.array([x for x in aset & bset])"
add column to sqlalchemy table,column_type = column.type.compile(engine.dialect)
can i redirect unicode output from the console directly into a file?,"import sys
import codecs
sys.stdout = codecs.getwriter('utf-8')(sys.stdout)"
getting pkcs7 signer chain in python,"smime_object = SMIME.PKCS7(m2.pkcs7_read_bio_der(bio._ptr()))
signers = smime_object.get0_signers(X509.X509_Stack())"
how to optimize image size using wand in python,"with Image(filename=filename) as img:
    img.resize(width=scaled_width, height=scaled_hight)
library.MagickSetCompressionQuality(img.wand, 75)"
check if the filename contains a string python,"for i in words:
    if i in filename:
        pass"
python: how to get the content-type of an url?,"import urllib.request
with urllib.request.urlopen('http://www.google.com') as response:
    info = response.info()
print(info.get_content_type())
print(info.get_content_maintype())
print(info.get_content_subtype())"
allow_none in twisted xml-rpc server,"from twisted.web.xmlrpc import Proxy
proxy = Proxy('http://localhost/xmlrpc', allowNone=True)"
robust endless loop for server written in python,"for i, j in excptDict.items():
    if i.startswith('__'):
        continue"
dry validation in bottle?,"def get_foo():
    return {'foo': 'bar'}"
remove last path component in a string,"head, tail = os.path.split('product/bin/client')
head
tail"
pandas multiple columns same name,import pandas as pd
python print key in all dictionaries,"dct = {'dict1': {'data1': 'a', 'data2': 'b', 'data3': 'c', 'data4': 'd',
    'data5': 'e'}, 'dict2': {'data1': 'f', 'data2': 'g', 'data3': 'h',
    'data4': 'i', 'data5': 'j'}}"
need an easy way to remove duplicates of nested tuples in python,"x = [((2, 1), (0, 1)), ((0, 1), (2, 1)), ((2, 1), (0, 1))]"
get a key from a dictionary inside a dictionary,"for value in list(d.values()):
    if isinstance(value, dict) and rec_search(value):
        return True
return False"
repeating elements in list comprehension,"m = 3
n = 2"
align tabs from right to left using ttk.notebook widget,"root.minsize(300, 300)
root.geometry('1000x700')
s = ttk.Style()
s.configure('TNotebook', tabposition='ne')
box = ttk.Notebook(root, width=1000, height=650)
tab1 = tk.Frame(root)
tab2 = tk.Frame(root)
tab3 = tk.Frame(root)
box.add(tab1, text='tab1')
box.add(tab2, text='tab2')
box.add(tab3, text='tab3')
box.pack(side=tk.TOP)
root.mainloop()"
python reversing an utf-8 string,a = '\xc4\x8d\xc5\xa1\xc5\xbe'
equivalent of template context in pyramid (pylons user),"def add_renderer_globals(event):
    event['c'] = request.tmpl_context"
how to split text without spaces into list of words?,"for line in f:
    words.add(line.strip())"
counting abecedarian words in a list: python,"while i < len(word) - 1:
    if word[i + 1] < word[i]:
        pass"
how can i query rows with unique values on a joined column?,"SimilarPostOption = aliased(PostOption)
post_popularity = db.session.query(func.count(SimilarPost.id)).select_from(
    PostOption).filter(PostOption.post_id == Post.id).correlate(Post
    ).outerjoin(SimilarPostOption, PostOption.val == SimilarPostOption.val
    ).join(SimilarPost, sql.and_(SimilarPost.id == SimilarPostOption.
    post_id, SimilarPost.place_id == Post.place_id)).as_scalar()
popular_post_id = db.session.query(Post.id).filter(Post.place_id == Place.id
    ).correlate(Place).order_by(post_popularity.desc()).limit(1).as_scalar()
deduped_posts = db.session.query(Post, post_popularity).join(Place).filter(
    Post.id == popular_post_id).order_by(post_popularity.desc(), Post.
    timestamp.desc()).all()"
converting expression involving tranpose of vector to numerical function with lambdify,"import sympy
import numpy as np
from sympy.utilities.lambdify import implemented_function
x = sympy.MatrixSymbol('x', 3, 1)
f = implemented_function(sympy.Function('f'), lambda x: x.T * x)"
how to capture events on tkinter child widgets?,"tk.bind_class('special', '<Button>', on_frame_click)"
how to drawimage a matplotlib figure in a reportlab canvas?,"plt.ylabel('some numbers')
imgdata = cStringIO.StringIO()
fig.savefig(imgdata, format='png')
imgdata.seek(0)
Image = ImageReader(imgdata)
c = canvas.Canvas('test.pdf')
c.drawImage(Image, cm, cm, inch, inch)
c.save()"
freezing all but one positional arguments,"def partial_k(f, k, seq):
    seq = tuple(seq)

def wrapper(x):
    return f(*(seq[:k] + (x,) + seq[k:]))
return wrapper
print(partial_k(f, 2, [0, 1])(10))
print(partial_k(f, 1, [0, 1])(10))"
python: how to plot one line in different colors,import matplotlib.pyplot as plt
"making a python user-defined class sortable, hashable","object.__ne__(self, other)
object.__gt__(self, other)
object.__ge__(self, other)"
find the longest common starting substring in a set of strings,from os.path import commonprefix
scons - running program after compilation,"Depends(test, main)"
how to handle empty values in config files with configparser?,"rb = parser.get('section', 'rb')"
how to mock a python class that is two imports deep?,"class Mocking_Test(TestCase):

    def test_mock(self):

        def return_response(a, b, c, *parms, **args):
            pass"
scikit-learn cross validation scoring for regression,regr = linear_model.LinearRegression()
matrix multiplication of a pandas dataframe and series,df.dot(s)
python read formatted string,"for key in format:
    pass"
initialization of unit-test in pydev?,"def test_forexceptions(self):
    pass"
how do i include a stacktrace in my django 500.html page?,raise Exception('Message')
how to loop through a html-table-dataset in python,"daterow = el.find('td', {'class': 'date'})"
catching terminal output in python,"p = subprocess.Popen(['ping', 'google.com'], stdout=subprocess.PIPE)"
"in python 2, can i get the real path of a file object after changing directories?","os.chdir('/tmp')
f = open('foo', 'w')"
deprecationwarning in sklearn minibatchkmeans,"with warnings.catch_warnings():
    warnings.simplefilter('ignore')"
best way to store python datetime.time in a sqlite3 column?,"cur.execute('select timecol from test where timecol < ?', [DT.time(4, 5, 6)])
print(cur.fetchall())
cur.execute('select timecol from test where timecol < ?', [DT.time(8, 0, 0)])
print(cur.fetchall())
con.commit()
cur.close()
con.close()"
how to reverse a dictionary that it has repeated values (python),"from collections import defaultdict
reversed_dict = defaultdict(list)
for key, value in mydict.items():
    reversed_dict[value].append(key)"
how to group items in an iterable object based on the first character of the item?,"GL = [list(v) for k, v in it.groupby(sorted(L, key=sorter), key=sorter)]"
maximum value for long integer,minval = a[i]
python inspect module: keyword only args,"max(arg1, arg2, arg3)"
"extract zipfile using python, display progress percentage?",i.close()
python pandas fuzzy merge/match with duplicates,d = d[d >= 75]
member variable string gets treated as tuple in python,"self.model = model,"
specifying a list as a command line argument in python,"import sys, ast"
how to redirect python warnings to a custom stream?,warnings._show_warning = my_warning_wrapper
reading huge file in python,"if key in targetKeys:
    pass"
turtle and draw a tree with transcrypt,myTurtle.left(90)
redirect prints to log file,sys.stdout = old_stdout
latin-1 to ascii,"xtd = {ord('\u2019'): ""'"", ord('\xe9'): 'e'}"
context managers and multiprocessing pools,pool.close()
get often occuring string patterns from column in r or python,seenstrings.add(s)
prevent textiowrapper from closing on gc in a py2/py3 compatible way,print('getting GCed!')
adding new key inside a new key and assigning value in python dictionary,dic['Test']['class'] = {'section': 5}
is there a standard approach to returning values from coroutine endpoints,processed_data = target.throw(FINISH_PROCESSING_SIGNAL)
bokeh hovertool in multiple_line plot,"colors = [('#%06x' % random.randint(0, 16777215)) for c in range(len(xscale))]
proc1 = 'Log'
proc2 = 'MazF2h'
expression1 = levelsdf2[proc1, 'Level']
expression2 = levelsdf2[proc2, 'Level']
source = ColumnDataSource(data=dict(start=[min(xscale[x]) for x in range(
    len(xscale))], stop=[max(xscale[x]) for x in range(len(xscale))],
    start2=[min(xscale2[x]) for x in range(len(xscale2))], stop2=[max(
    xscale2[x]) for x in range(len(xscale2))], gene=hover_tips, colors=
    colors, expression1=expression1, expression2=expression2))
p1 = figure(plot_width=900, plot_height=500, y_range=[8, 10.5], tools=TOOLS)
p1.quad(left='start', right='stop', top=[(9.211) for x in range(len(xscale)
    )], bottom=[(9.209) for x in range(len(xscale))], source=source, color=
    'colors')
p1.multi_line(xscale2, yscale2, source=source, color='colors', line_width=20)
hover = p1.select(dict(type=HoverTool))
hover.tooltips = OrderedDict([(proc1 + ' (start,stop, expression)',
    '(@start| @stop| @expression1)'), ('Gene', '@gene')])
show(p1)"
comparison of collections containing non-reflexive elements,"nan = float('NaN')
nan is nan"
python append dictionary to dictionary,"dest = dict(orig)
dest.update(extra)"
python: how to know the index when you randomly select an element from a sequence with random.choice(seq),"i = random.choice(list(range(len(l))))
print(i, l[i])"
read in file - change contents - write out to same file,"with open(filename, 'w') as f:
    pass"
glob search files in date order?,import os
how to add a new div tag in an existing html file after a h1 tag using python,a = soup.new_tag('a')
python file modes detail,flags |= O_CREAT
"in django, how do i select 100 random records from the database?","pool = list(Content.objects.all())
random.shuffle(pool)"
"in python, how do you use decimal module in a script rather than the interpreter?",from decimal import *
ellipsoid equation containig numerous points,pa = p[j]
making sure a python script with subprocesses dies on sigint,"with tempfile.TemporaryFile() as iofile:
    p = Popen(cmd, stdout=iofile, stderr=iofile)
while True:
    if p.poll() is not None:
        break
else:
    time.sleep(0.1)"
scripting inside a python application,m = __import__('external_module')
expected a character buffer object,"class GroupsAdmin(admin.ModelAdmin):
    pass"
how to perform element-wise multiplication of two lists in python?,a * b
caching functions in python to disk with expiration based on version,m = hashlib.md5()
how to create histogram from grouped data,"survival_by_age = titanic.groupby(['Age', 'Survived']).size().unstack(
    'Survived')
survival_by_age.columns = ['No', 'Yes']"
plot two histograms at the same time with matplotlib,pyplot.legend(loc='upper right')
regular expressions: match up to a word or a maximum number of words,moon
how to track the progress of individual tasks inside a group which forms the header to a chord in celery?,"class ProgressChord(chord):
    pass"
how many common english words of 4 letters or more can you make from the letters of a given word (each letter can only be used once),print(len(matching))
using categorical data as features in sklean logisticregression,"Indicator_cat = strcmp(animal_names, 'cat')
Indicator_dog = strcmp(animal_names, 'dog')"
python for loop get index,"chars = 0
for index, word in enumerate(loopme.split(' ')):
    pass"
flask logging - cannot get it to write to a file,app.run(host='0.0.0.0')
initialize/create/populate a dict of a dict of a dict in python,"for row in csv.DictReader(f, delimiter='\t'):
    pass"
python: argument parsing validation best practices,parsed_args = parser.parse_args()
how can a flask decorator have arguments?,"def view(value):
    return value"
creating a raw http request with sockets,"s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.connect((HOST, PORT))
s.send('GET / HTTP/1.0%s' % CRLF)"
"how to completely erase the duplicated lines by linux tools as grep, sort, sed, uniq?",uniq - u / tmp / uniques.txt
merge two dataframes with hierarchical columns,"A.columns = pd.MultiIndex.from_tuples(zip(cycle('A'), A.columns))"
string literal with triple quotes in function definitions,"""""""Another string literal"""""""
matplotlib savefig with a legend outside the plot,"ax.plot([1, 1, 1])"
python - extending properties like you'd extend a function,"b = B()
b.prop = dict((('a', 1), ('b', 2)))
print(b.prop)"
is there any available solution to provide xsrf/csrf support for google app engine?,self.csrf_token = str(uuid4())[:8]
"python writing binary files, bytes",b = f1.read(1)
sympy/scipy: solving a system of ordinary differential equations with different variables,"odeint(dX_dt, [1, 2], np.linspace(0, 1, 5))"
how can i find a list of all exceptions that a given library function throws in python?,"for name in exns:
    print('%s.%s is an exception type' % (str(mod), name))
return"
preferred way to remove whitespace from a string,"s = re.sub('\\s+', '', s)
s"
python socket accept blocks - prevents app from quitting,"self.quitting = False
self.serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)"
python: how can i replace full-width characters with half-width characters?,"for i, j in zip(src, dst):
    string = string.replace(i, j)"
unicodewarning fired only once,"'ab\xdf' == 'abc'
'ab\xdf' == 'abc'
if True:
    pass"
c python: running python code within a context,"code = """"""
myvar = 300
def func():
    return myvar
func()
""""""
d = {}
eval(compile(code, '<str>', 'exec'), d, d)"
python list initialization using multiple range statements,"new_list = list(range(1, 6)) + list(range(15, 20))"
position of the legend in a bokeh plot,y = np.sin(x)
python: handling a large set of data. scipy or rpy? and how?,"print(np.sum(data, axis=0))"
selenium (python): how to insert value on a hidden input?,"driver.get('http://jsfiddle.net/falsetru/mLGnB/show/')
elem = driver.find_element_by_css_selector('div.dijitReset>input[type=hidden]')"
how to sort the letters in a string alphabetically in python,"a = 'ZENOVW'
b = sorted(a)
print(b)"
python/numpy - quickly find the index in an array closest to some value,"t = np.arange(10, 100000)
x = np.random.uniform(10, 100000)
print(t.searchsorted(x))"
condensed matrix function to find pairs,j = index - d * (d - 1) / 2 + (d - i) * (d - i - 1) / 2 + i + 1
create a tree data using networkx in python,print(G.number_of_nodes())
is there a standard way to partition an interable into equivalence classes given a relation in python?,return list(d.values())
how to continue in nested loops in python,"for c, e in product(d, f):
    if somecondition:
        break"
printing file names,parent_dir = 'C:\\Test'
command line options with optional arguments in python,parser = ArgumentParser(prog='script.py')
top k columns with values in pandas dataframe for every row,"c[:, 0::2] = a"
python equivalent of zip for dictionaries,"def common_entries(*dcts):
    for i in set(dcts[0]).intersection(*dcts[1:]):
        yield (i,) + tuple(d[i] for d in dcts)"
relative importing modules from parent folder subfolder,from ...common import foo
create a sparse diagonal matrix from row of a sparse matrix,diag_indices = A.indices[idx_begin:idx_end]
issue scraping with beautiful soup,"opener = urllib.request.build_opener()
opener.addheaders = [('User-agent', 'Mozilla/5.0')]
url = (
    """"""http://www.weatheronline.co.uk/weather/maps/current?LANG=en&DATE=1354104000&CONT=euro&LAND=UK&KEY=UK&SORT=1&INT=06&TYP=sonne&ART=tabelle&RUBRIK=akt&R=310&CEL=C""""""
    )
response = opener.open(url)"
python optional parameters,return y
how can i check if an ip is in a network in python,"if IPAddress('192.168.0.1') in IPNetwork('192.168.0.0/24'):
    pass"
how do i send asynchronous http requests in python one at a time?,asyncore.dispatcher.__init__(self)
numpy arrays with mixed mutable and immutable values,"print('index   ' + str(timeit.timeit('A[C] += D[C]', setup, number=3)))"
passing sqlite variables in python,print(sqlite3.paramstyle)
stripping everything but alphanumeric chars from a string in python,"""""""import re, stringre.sub('[\\W_]+', '', string.printable)"""""""
how to configure sphinx auto flask to document flask-restful api?,"sys.path.insert(0, os.path.abspath('.'))"
python: sorting a dependency list,next_pending = []
asyncio create_connection protocol factory,return Protocol(self.a)
python: how to determine if a list of words exist in a string,words = words[:]
fastest way to sort each row in a pandas dataframe,a.sort(axis=1)
distutils: how to pass a user defined parameter to setup.py?,"assert self.foo in (None, 'myFoo', 'myFoo2'), 'Invalid foo!'"
django models / sqlalchemy are bloated! any truly pythonic db models out there?,from lustdb import *
multiply all elements of a list together (another list index out of range issue),"for i in range(len(input_list)):
    for j in range(i + 1, len(input_list)):
        result_list.append(input_list[i] * input_list[j])
print(result_list)"
open file from windows file dialog with python automatically,buff = ctypes.create_unicode_buffer(length + 1)
"python multiprocessing, pool map - cancel all running processes if one, returns the desired result",pool.close()
pyspark logging from the executor,YarnLogger.setup_logger()
forming bigrams of words in list of sentences with python,arr = line.split()
how to use python 3.5.1 with a mysql database,"""""""CREATE TABLE `users` (`id` int(11) NOT NULL AUTO_INCREMENT,`email` varchar(255) NOT NULL,`password` varchar(255) NOT NULL,PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;"""""""
push_back/emplace_back a shallow copy of an object into another vector,"collection1.emplace_back('white', 'BMW')"
how to join/merge two generators output using python,"g1 = (g[0] for g in g1)
g2 = (g[0] for g in g2)"
pythonic iteration over sliding window pairs in list?,"print(x, y)"
matplotlib 3d scatter color lost after redraw,"np.random.seed(101)
x = np.random.rand(30)
y = np.random.rand(30)
z = np.random.rand(30)
col = np.arange(30)
fig = plt.figure()
ax3D = fig.add_subplot(111, projection='3d')
scatCollection = ax3D.scatter(x, y, z, s=30, c=col, marker='o', cmap=cm)

def forceUpdate(event):
    global scatCollection
scatCollection.changed()
fig.canvas.mpl_connect('draw_event', forceUpdate)
plt.savefig('image1.png')
plt.savefig('image2.png')"
how can i tell if numpy creates a view or a copy?,"print(b.flags['OWNDATA'])
e = np.ravel(b[:, (2)])
print(e.flags['OWNDATA'])"
how to create a python dictionary with double quotes as default quote format?,"import json
print(json.dumps(pairs))"
python - get path of root project structure,ROOT_DIR = os.path.dirname(os.path.abspath(__file__))
equivelant to rindex for lists in python,"for index, item in enumerate(reversed(a)):
    pass"
multiple parameters in in flask approute,"from flask import request

@app.route('/createcm', methods=['GET'])
def foo():
    pass"
downloaded filename with google app engine blobstore,"self.send_blob(blob_info, save_as=True)"
"how do i go straight to template, in django's urls.py?",from django.views.generic import TemplateView
6th degree curve fitting with numpy/scipy,"plt.plot(x, y, label='Test data')
plt.plot(x, yfit, label='fitted data')
plt.show()"
formatting a pivot table in python,from collections import Counter
use a class in the context of a different module,"if hasattr(cls, '__dict__'):
    pass"
set font properties to tick labels with matplot lib,"for label in ax.get_xticklabels():
    label.set_fontproperties(ticks_font)"
convert dtype from int64 to int32,"x = np.array([1, 2, 3], dtype=np.int64)
x
x.dtype
y = x.astype(np.int32)
y"
"extracting a region from an image using slicing in python, opencv",cv2.destroyAllWindows()
programmatically specifying django model attributes,locals()['price_%s' % currency.lower()] = models.IntegerField()
valueerror when using strptime to get a datetime object,"dt_string = '2011-07-15 13:00:00+00:00'
new_dt = dt_string[:19]
dt = datetime.datetime.strptime(new_dt, '%Y-%m-%d %H:%M:%S')"
how to set some xlim and ylim in seaborn lmplot facetgrid,"g = sns.lmplot('X', 'Y', df, col='Z', sharex=False, sharey=False)
g.set(ylim=(0, None))"
concatenate lists in jinja2,"for i in z:
    pass"
opening a python thread in a new console window,pass
best way to log a python exception,"import logging
try:
    1 / 0
except Exception:
    logging.exception('Deliberate divide by zero traceback')"
remove (chomp) a newline,s.lstrip()
difference between all 1d points in array with python diff()?,"return np.subtract.outer(x, x)[np.tril_indices(x.shape[0], k=-1)]"
non-consuming regular expression split in python,"""""""Made up of more than once sentence?"""""""
attach a calculated column to an existing dataframe,df.index
"comparison of r, statmodels, sklearn for a classification task with logistic regression","Default['default'] = Default['default'].map({'No': 0, 'Yes': 1})"
how to add a reader macro to python?,"def __call__(self, value1, value2):
    return self.function(value1, value2)"
python arrays are automatically copying each other,"a = numpy.zeros(4)
b = a.copy()
c = numpy.copy(a)
d = numpy.array(a)
a[1] = 10
a
b
c
d"
"find index of first element in array close to float within tolerance, with numpy","a
val = 2"
"use regex and python to move city in address block, add ampersand","result = re.sub(rx, '\\1 & \\3 \\2', s)"
how do you extract feed urls from an opml file exported from google reader?,url = node.attrib.get('xmlUrl')
display listbox with columns using tkinter?,"self.tree.grid(column=0, row=0, sticky='nsew', in_=container)"
how to calculate percentage of sparsity for a numpy array/matrix?,np.prod(a.shape)
how to get ip address of the launched instance with boto,"while instance.update() != 'running':
    time.sleep(5)"
how can i profile a sqlalchemy powered application?,"cProfile.runctx(command, globals(), locals(), filename='output.profile')"
python watchdog monitoring file for changes,observer.join()
importing a 3-d list variable from a text file in python,"with open('param.txt') as f:
    file_text = ' '.join(f.readlines())"
dynamically assigning function implementation in python,self.name = 'Bob'
plotting points on the surface of a sphere in python's matplotlib,from mpl_toolkits.mplot3d import Axes3D
how to find median,data_dict = defaultdict(list)
python operator similar to %in% in r,"x = 'a', 'b', 'c'
y = 'a', 'd'
map(y.__contains__, x)"
"pydev unittesting: how to capture text logged to a logging.logger in ""captured output""","logger.level = logging.DEBUG
stream_handler = logging.StreamHandler(sys.stdout)
logger.addHandler(stream_handler)


class TestCase(unittest.TestCase):

    def testSimpleMsg(self):
        stream_handler.stream = sys.stdout
print('AA')
logging.getLogger().info('BB')"
split elements of a list in python,clist[i] = x[:x.index('\t')]
python parallel execution - how to debug efficiently?,"print('Args :', bugList[i]['args'])"
python: problem with raw_input reading a number,totPrimes = int(totPrimes)
python set decimal precision,width = Decimal('1.0')
how do you define config variables / constants in google app engine (python)?,"def get(name):
    pass"
"in python, how can i turn this format into a unix timestamp?",int(time.mktime(dt.timetuple()))
kenken puzzle addends: redux a (corrected) non-recursive algorithm,"1, 1, 4, 6"
fastest way to store large files in python,"import bz2, json, contextlib
hugeData = {'key': {'x': 1, 'y': 2}}
with contextlib.closing(bz2.BZ2File('data.json.bz2', 'wb')) as f:
    pass"
"how to print all variables values when debugging python with pdb, without specifying each variable?",y = 20
a better pattern for ajax loading with pyramid?,"def get_items(request):
    pass"
saltstack: properties (computed values) for data from sls files?,system['home'] = '/home/%s' % name
post-install script with python setuptools,"def run(self):
    install_data.run(self)"
split large files using python,"fout = open('output%d.txt' % (i / NUM_OF_LINES + 1), 'wb')
fout.close()"
convert integer to hex-string with specific format,"i.to_bytes((i.bit_length() + 7) // 8, 'big')"
python regular expression to match js or php url,"res = re.findall('(?:\\bhttps?:)?//\\S*\\.(?:js|php)\\b', s)
print(res)"
create a new rgb opencv image using python?,"import cv2
import numpy as np
blank_image = np.zeros((height, width, 3), np.uint8)"
getting rid of thin border at edge with transparency when antialiasing with python image library ,"im1 = im.resize((tilesize, tilesize), Image.BILINEAR)"
vlookup in pandas using join,"df.merge(df1, left_index=True, right_index=True, how='left')"
sqlalchemy default datetime,__tablename__ = 'test'
"python - create counter() from mapping, non-integer values","count_2
count_2.most_common()"
how to implement a python virtual filesystem using shelve,print('Usage: cd <directory>')
gzip a file in python,"content = 'Lots of content here'
f = gzip.open('/home/joe/file.txt.gz', 'wb')
f.write(content)
f.close()"
python code for counting number of zero crossings in an array,"import numpy as np
my_array = np.array([80.6, 120.8, -115.6, -76.1, 131.3, 105.1, 138.4, -81.3,
    -95.3, 89.2, -154.1, 121.4, -85.1, 96.8, 68.2])"
listing contents of a bucket with boto3,"conn = S3Connection()
bucket = conn.get_bucket('bucket_name')
for obj in bucket.get_all_keys():
    pass"
python image library produces a crappy quality jpeg when i resize a picture,"from PIL import Image
image = Image.open('2.jpg')
image.thumbnail((256, 256), Image.ANTIALIAS)"
"in python, how do you change an instantiated object after a reload?",newobjs._register(obj)
extracting attributes from images using scikit-image,"print('Bottom-Right pixel = {},{}'.format(max(rows), max(cols)))
print('---')"
number to ascii string converter,temp = '0' + temp if len(temp) % 3 == 1 else temp
pandas: how do i split text in a column into multiple rows?,"df = pd.DataFrame(['a b c'] * 100000, columns=['col'])"
how to pprint a tree data structure that is implemented using classes?,2
are md5-hashed passwords from php's crypt() portable to the django password field?,"'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',"
pyramid: check for permission given a route name,introspector = request.registry.introspector
inserting a row into a pandas dataframe based on row value?,arr = df.values
skip a behave step in the step implementation,"if depends_on_software(scenario):
    scenario.mark_skipped()"
how can i use pyparsing to parse nested expressions that have mutiple opener/closer types?,return s
python: urllib2 how to send cookie with urlopen request,"opener = urllib.request.build_opener()
opener.addheaders.append(('Cookie', 'cookiename=cookievalue'))"
validate a filename in python,safe_string = safe_string.lstrip('./')
fastest way to extract only certain fields from comma separated string in python,"indexer = itemgetter(4, 12, 123)
result = indexer(data.split(','))"
how to get unique rows and their occurrences for 2d array?,"unique_columns = npi.unique(a, axis=1)
non_unique_column_idx = npi.multiplicity(a, axis=1) > 1"
"how can i sort 1 million numbers, and only print the top 10 in python?","numbers = map(int, f.readlines())"
emit restructuredtext from sphinx autodoc?,txt.append(DIRECTIVES[name])
how do i make a dictionary with multiple keys to one value?,"mydict[1, 2] = [30, 20]"
"numpy array set ones between two values, fast","stop = np.append(stop, A.size - 1)"
logging training and validation loss in tensorboard,"writer.add_summary(train_summ, step)"
twisted - get os-chosen listen port,self._waitingForPort.addCallback(self.port_cb)
using pass on a non necessary else statement,"for i in foo:
    pass"
(python) algorithm to randomly select a key based on proportionality/weight,Test()
how to make a window jump to the front?,"""""""/usr/bin/osascript -e 'tell app ""Finder"" to set frontmost of process ""Python"" to true' """""""
how to convert 2d float numpy array to 2d int numpy array?,"np.asarray([1, 2, 3, 4], dtype=int)"
how to wrap a python dict?,"for key in wrapped_dictionary:
    pass"
python: find index of minimum item in list of floats,"val, idx = min((val, idx) for idx, val in enumerate(my_list))"
how to remove duplicates in a nested list of objects in python,"if sorted(item) not in unique_list:
    pass"
can python abstract base classes inherit from c extensions?,"class B(A, metaclass=abc.ABCMeta):
    pass

@abc.abstractmethod
def foo(self):
    pass"
tkinter button commands with lambda in python,"def callback(self):
    pass"
python date range generator over business days,"if nextDate.weekday() not in (5, 6):
    pass"
how can i remove all instances of an element from a list in python?,"from functools import partial
from operator import ne"
use a foreign key mapping to get data from the other table using python and sqlalchemy,self.item_id = item_id
finding inflection points in spline fitted 1d data,"d = (c[1:-1 - k] - c[:-2 - k]) * k / dt
t2 = t[1:-1]
d = np.r_[d, [0] * k]
new_spline_repr = t2, d, k - 1"
find in files using ruby or python,"fn = os.path.join(dir, name)"
python string slicing stride clarification,"""""""123456""""""[1::-2]"
creating a rest api for a django application,v1_api.register(UserResource())
using statements on either side of a python ternary conditional,y += 1
regular expression group capture with multiple matches,"l = re.findall(r, x)
l == ['a', 'b', 'c', 'd', 'e', 'f']"
how do i merge two python iterators?,"def imerge(a, b):
    pass"
matplotlib legend for scatter with custom colours,"pl2, = plot(x2, y2, '.', alpha=0.1, label='plot2')"
split integers in a list (python),"print([int(ch) for i in list1 for ch in str(i)])
[1, 8, 8]"
closing python comand subprocesses,"import os
from subprocess import Popen, PIPE
os.system('mkdir c:\\temp\\vhd')
p = Popen(['diskpart'], stdin=PIPE, stdout=PIPE, stderr=PIPE)
p.stdin.write(
    'create vdisk file=c:\\temp\\vhd\\test.vhd maximum=2000 type=expandable\n')
p.stdin.write('attach vdisk\n')
p.stdin.write('create partition primary size=10\n')
p.stdin.write('format fs=ntfs quick\n')
p.stdin.write('assign letter=r\n')
p.stdin.write('exit\n')
results, errors = p.communicate()
os.system('fsutil file createnew r:\\dummy.txt 6553600')"
"how to do an inverse `range`, i.e. create a compact range based on a set of numbers?",from itertools import groupby
how to make an optional value for argument using argparse?,import argparse
parsing table with beautifulsoup and write in text file,html = response.read()
getting a python traceback without an exception,"r = tracer.results()
r.write_results()"
checking if a number is a prime number in python,count(1)
efficiently keeping track of the top-k keys of a dictionary based on value,"self._update_existing(key, value)"
python respond to http request,"import socketserver
from http.server import BaseHTTPRequestHandler

def some_function():
    print('some_function got called')


class MyHandler(BaseHTTPRequestHandler):

    def do_GET(self):
        if self.path == '/captureImage':
            some_function()
self.send_response(200)
httpd = socketserver.TCPServer(('', 8080), MyHandler)
httpd.serve_forever()"
how to write to a file using non blocking io?,print('open at %s' % str(datetime.datetime.now()))
how to use gensim doc2vec with pre-trained word vectors?,id2token[token2id[onemap]] = onemap
argparse: map user input to defined constant,g = parser.add_mutually_exclusive_group()
finding tan inverse in python,"math.degrees(math.atan(1))
math.radians(45.0)"
how do i change emacs's font face for python docstrings?,pass
can django-tastypie display a different set of fields in the list and detail views of a single resource?,"for obj in to_be_serialized['objects']:
    pass"
python numpy: create 2d array of values based on coordinates,ax.margins(0.05)
scrollable listbox within a grid using tkinter,"self.stop = Button(self, text='stop')"
python unittest: how to satisfy nose coverage for importing packages,from django.db import models
get description of an installed package without actual importing it,"module = __import__(module_name)
h = help(module)
for modname in list(sys.modules):
    if modname not in modules_copy:
        del sys[modname]
if sys.getrefcount(module) > 1:
    warnings.warn('Module {} is likely not to be completely wiped'.format(
        module_name))
del module
return h"
how to convert numeric string ranges to a list in python,"if '-' in part:
    pass"
updating the feature names into scikit tfidfvectorizer,X_train = vectorizer.fit_transform(train_data1)
is is possible to read a file from s3 in google app engine using boto?,key = bucket.get_key('picture.jpg')
colored latex labels in plots,"""""""$x=\\frac{ \\text{\\color{red}{red text}} }{ \\text{\\color{blue}{blue text}} }$"""""""
python: passing a class name as a parameter to a function?,"class TestSpeedRetrieval(webapp.RequestHandler):
    """"""
  Test retrieval times of various important records in the BigTable database 
  """"""

def speedTestForRecordType(self, recordTypeClassname):
    beginTime = time()
itemList = recordTypeClassname.all().fetch(1000)
for item in itemList:
    pass
endTime = time()
self.response.out.write('<br/>%s count=%d Duration=%s' % (
    recordTypeClassname.__name__, len(itemList), duration(beginTime, endTime)))

def get(self):
    self.speedTestForRecordType(Subscriber)
self.speedTestForRecordType(_AppEngineUtilities_SessionData)
self.speedTestForRecordType(CustomLog)"
how to format print output into fixed width?,"""""""{0: <5}"""""".format('ssss')
""""""{0: <5}"""""".format('sssss')"
column filtering in pyspark,df.where(in_last_5_minutes(now)(col('datetime'))).show()
numpy: get 1d array as 2d array without reshape,"print(('reshape:', timeit.timeit(lambda : np.array(v).reshape(-1, 1))))"
classifiying a set of images into classes,Xtranspose = X.transpose()
adding value labels on a matplotlib bar chart,import matplotlib.pyplot as plt
"graphing multiple types of plots (line, scatter, bar etc) in the same window","time = mdates.drange(datetime.datetime(2010, 1, 1), datetime.datetime(2011,
    1, 1), datetime.timedelta(days=5))
y1 = np.cumsum(np.random.random(time.size) - 0.5)
y2 = np.cumsum(np.random.random(time.size) - 0.5)
y2 = y2 * 20 + 10
fig = plt.figure()
host = fig.add_subplot(111)
par = host.twinx()
host.set_ylabel('One Thing')
par.set_ylabel('Another')
line1, = host.plot(time, y1)
line2, = par.plot(time, y2, 'go')
host.legend([line1, line2], ['Item 1', 'Item 2'])
host.xaxis_date()
plt.show()"
how can i access the form submit button value in django?,'first_button' in request.POST
testing python c libraries - get build path,"import sys
sysconfig.get_platform()
sys.version_info[:3]"
is it safe to replace '==' with 'is' to compare boolean-values,bool('False')
how to print with inline if statement?,"marked = []
unmarked = []
mappend = marked.append
unmappend = unmarked.append
[(mappend(str(x)) if y else unmappend(str(x))) for x, y in d.items()]
print('Marked - %s\r\nUnmarked - %s' % (' '.join(marked), ' '.join(unmarked)))"
matplotlib axis label format,"from matplotlib import ticker
scale_pow = 2

def my_formatter_fun(x, p):
    return '%.2f' % (x * 10 ** scale_pow)"
python : how to detect device name/id on a serial com,s = serial.Serial('COM' + str(i))
how do i get the name of a function or method from within a python function or method?,"def funcname():
    return inspect.stack()[1][3]

def somefunc(a, b, c):
    print('My name is: %s' % funcname())"
how to move files between two amazon s3 buckets using boto?,"dst.copy_key(k.key.name, src, k.key.name)"
python/pandas: how to match list of strings with a dataframe column,X = vect.fit_transform(df['Description'])
how to use *args in a function to return a list of dictionaries?,"def Func(*args):
    return [{'This is a word': arg} for arg in args]
print(Func('word1'))
print(Func('word1', 'word2'))"
how to write an application for the system tray in linux,t.add(gtk.Label('Hello'))
iterate over lists with a particular sum,a[list(indices)] = -1
how to insert a small image on the corner of a plot with matplotlib?,height = im.size[1]
in python: how to remove an object from a list if it is only referenced in that list?,"def __init__(self):
    pass"
how to make python format floats with certain amount of significant digits?,5.565719
how to cleanly capture from an infinite generator?,"while True:
    yield i ** 2
i += 1"
instantiating objects in python,"params = {'param1': 'foo', 'param2': 'bar', 'param3': 'hello'}
my_a = A(**params)"
matching and combining multiple 2d lists in python,"result = []
for inner_list1 in list1:
    for inner_list2 in list2:
        set1 = set(inner_list1)
set2 = set(inner_list1)
if set1.intersection(set2):
    result.append(list(set1.union(set2)))"
what do i need to import to gain access to my models?,import sys
rotate text around its center in pycairo,"ctx.set_source_rgb(1, 1, 1)"
how to improve the performance of this tiny distance python function,"def dbscan_metric(a, b):
    diff = a - b
if a.shape[0] != NUM_FEATURES:
    to_calc = diff
else:
    to_calc = np.multiply(FTR_WEIGHTS, diff)"
jinja2: format + join the items of a list,"class FilterModule(object):
    pass"
finding non-numeric rows in dataframe in pandas?,num_df
how to get an app name using python in django,from django.core.urlresolvers import resolve
"string to datetime with fractional seconds, on google app engine",dt
matplotlib show multiple images with for loop,y = np.sin(x)
how do i write a single-file django application?,"""""""<dt>{{ comment.person_name }} said:</dt> <dd>{{ comment.comment }}</dd>"""""""
read large gzip files in python,"filtered = []
with gzip.open(f_name, 'r') as infile:
    for line in infile:
        for i in line.split(' '):
            if i.startswith('/bin/movie/tribune'):
                filtered.append(line)
break"
best way to generate xml?,print(doc.getvalue())
selecting random values from dictionary,"d = {'a': 100, 'b': 5, 'c': 150, 'd': 60}
random.choice(sorted(d, reverse=True, key=d.get)[:3])"
testing if all values in a numpy array are equal,"a = get_weights_array(5)
b = np.array([1.0, 0.9, 0.8, 0.7, 0.6])"
generating an evenly sampled array from unevenly sampled data in numpy,"seconds = np.arange(int(t[0]), int(t[-1]) + 1)
idx = np.searchsorted(t, seconds)
idx = np.unique(idx)"
saving dictionary of numpy arrays,data = {'N': N}
python sequence find function,"return x > 10
var = next(list(filter(test_it, list(range(20)))))"
why is a generator produced by yield faster than a generator produced by xrange?,"0.00285911560059
0.00137305259705"
change permissions via ftp in python,"print(ftp.sendcmd('SITE CHMOD 644 ' + filename))
ftp.quit()"
python selenium click nth element,element.click()
compare multiple columns in numpy array,return numpy.argsort(row)[-6:]
"python abundant, deficient, or perfect number","def get_divs(n):
    return [i for i in range(1, n) if n % i == 0]

def classify(num):
    divs_sum = sum(get_divs(num))
if divs_sum > num:
    print('{} is abundant number'.format(num))
elif divs_sum < num:
    pass"
python - pandas - dataframe: row specific conditional column offset,"for i in map(str, list(range(3, last_column))):
    pass"
flask: how to control the order that after_request handlers are executed?,response1 = after_request_compress(response)
how do i run twisted from the console?,"endpoints.serverFromString(reactor, 'tcp:8080').listen(server.Site(Counter()))
reactor.run()"
updating weight information depending on repeat of edges with networkx,"if G.has_edge(subject_id, object_id):
    pass"
how to create 0x0 numpy array?,a
python - pyqt - qtable widget - adding rows,"tableWidget.setColumnCount(len(entries[0]))
for i, row in enumerate(entries):
    for j, col in enumerate(row):
        item = QTableWidgetItem(col)
tableWidget.setItem(i, j, item)"
how to read a 6 gb csv file with pandas,"chunksize = 10 ** 6
for chunk in pd.read_csv(filename, chunksize=chunksize):
    process(chunk)"
how to save a previous command line argument,"def main():
    with open('CONFIG_FILE.JSON', 'rb') as f:
        config = json.load(f)
if sys.argv[0] == ['configure']:
    configure(config)
return
parser = OptionParser()
parser.add_option('-q', action='store_false', dest='verbose')
config_file['q'] = OPTION_VALUE"
simple way to encode a string according to a password?,"decoded = cipher.decrypt(base64.b64decode(encoded))
print(decoded.strip())"
create ntfs junction point in python,"import ctypes
kdll = ctypes.windll.LoadLibrary('kernel32.dll')
kdll.CreateSymbolicLinkA('d:\testdir', 'd:\testdir_link', 1)"
algorithm to divide a list of numbers into 2 equal sum lists,"return solution[1], sum(oldmoves[solution[1]]), oldmoves[solution[1]]
print(team([90, 200, 100]))
print(team([2, 3, 10, 5, 8, 9, 7, 3, 5, 2]))
print(team([1, 1, 1, 1, 1, 1, 1, 1, 1, 9]))
print(team([87, 100, 28, 67, 68, 41, 67, 1]))
print(team([1, 1, 50, 50, 50, 1000]))"
how to convert all decimals in a python data structure to string?,"def default(self, obj):
    if isinstance(obj, decimal.Decimal):
        return str(obj)"
"reading and parsing email from gmail using c#, c++ or python","def extract_body(payload):
    pass"
perform jira transition via python rest api,password = 'password'
dynamic list that automatically expands,a = DynamicList(iter(range(10)))
how to pythonically yield all values from a list?,"def foo():
    pass"
how to get the cumulative distribution function with numpy?,"hist, bin_edges = np.histogram(np.random.randint(0, 10, 100), normed=True)"
remove duplicate dict in list in python,new_l.append(d)
how to recognize histograms with a specific shape in opencv / python,"for x, y in enumerate(hist):
    cv2.line(h, (x, 0), (x, y), (255, 255, 255))
y = np.flipud(h)"
how can i plot nan values as a special color with imshow in matplotlib?,"cmap.set_bad('white', 1.0)"
pandas apply with list output gives valueerror once df contains timeseries,"df2[['D', 'E']] = df2.apply(function, axis=1)
df2"
numpy array in array resize,"c = np.vstack(b)
print(c.shape)"
slice assignment with a string in a list,"print(L1)
['muffins', 'brownies', 'cookies', 'cake']"
"of scraping data, headless browsers, and python","import contextlib
import selenium.webdriver as webdriver
import bs4 as bs"
pivoting a dataframe in pandas for output to csv,"'baz', -0.419181615269841, -0.658545964124229"
get a complete name of a directory in python,pass
python how to read and split a line to several integers,"with open('filename.txt', 'r') as f:
    pass"
passing on named variable arguments in python,"foo('argvalue', 5, myarg='value')"
"is this a ""pythonic"" method of executing functions as a python switch statement for tuple values?","switch[switch.get(49, default_value)]()"
difference in values of tf-idf matrix using scikit-learn and hand calculation,"df += int(self.smooth_idf)
n_samples += int(self.smooth_idf)"
postgresql on conflict in sqlalchemy,meta.reflect(bind=engine)
should i add a trailing comma after the last argument in a function call?,"a = 'abc',
b = 123,"
python: exit out of two loops,"for y in ys:
    pass"
how do i unit test a module that relies on urllib2?,my_opener = urllib.request.build_opener(MyHTTPHandler)
how to download large file in python with requests.py?,f.write(chunk)
how can i use python to transform mongodb's bsondump into json?,"jsondata = re.sub('ObjectId\\s*\\(\\s*\\""(\\S+)\\""\\s*\\)',
    '{""$oid"": ""\\1""}', bsondata)
jsondata = re.sub('Date\\s*\\(\\s*(\\S+)\\s*\\)', '{""$date"": \\1}', jsondata)
data = json.loads(jsondata, object_hook=json_util.object_hook)
print(data)
print(type(data))
print(json_util.dumps(data))"
"on windows, how to convert a timestamps before 1970 into something manageable?",import datetime as dt
how to use regular expressions do reverse search?,"s = '123456789 nn nn oo nn nn mlm nn203'
match = re.search('(nn)(?!.*nn.*)', s)
print((m.start() - len(s), m.end() - len(s)))"
using resample to align multiple timeseries in pandas,"df = df1.append([df2, df3]).sort_index()
print(df.resample('Q-APR', loffset='-1m').T)"
"getting a ""too many values to unpack"" value error","user = ['X', 'Y', 'Z']"
transform comma separated string into a list but ignore comma in quotes,"for row in csv_reader:
    pass"
day delta for dates >292 years apart,"dates.sort()
dateshift = dates.shift(1)
(dates - dateshift).fillna(0).dt.days.cumsum().describe()"
string formatting in python: can i use %s for all types?,"format(1)
format(1.1)
format('blah')"
"how to split but ignore separators in quoted strings, in python?","['a', 'b', 'c']"
python: logging typeerror: not all arguments converted during string formatting,"__ = BraceMessage
logging.info(__('date={}', date))"
how to check to see if a folder contains files using python 3,"for dirpath, dirnames, files in os.walk('.'):
    if files:
        pass"
groupby with user defined functions pandas,return 'Group2'
scatter plot with a huge amount of data,"idx = random.sample(list(range(N)), 1000)
plt.scatter(delta[idx], vf[idx], c=dS[idx], alpha=0.7, cmap=cm.Paired)
plt.show()"
how to create simple web site with python?,import tornado.web
cvxopt output suppression with mosek,"from cvxopt import matrix, solvers
from mosek import iparam"
how to open file using argparse?,import argparse
perfect forwarding - in python,"if len(newargs) < 2:
    pass"
python/psycopg2 where in statement,"data = 'UK', 'France'
sql = 'SELECT * from countries WHERE country IN %s'"
how to cast object in python,return res
"how can i listen for 'usb device inserted' events in linux, in python?","observer.connect('device-event', device_event)"
loop through all csv files in a folder,"import glob
glob.glob('/path/to/dir/*.csv')"
gpgpu programming in python,"@bind('local_work_size', 1)
def sum(a, b, ret):
    pass"
equivalent of objects.latest() in app engine,"class LatestMixin(object):
    """"""A mixin for db.Model objects that will add a `latest` method to the
    `Query` object returned by cls.all(). Requires that the ORDER_FIELD
    contain the name of the field by which to order the query to determine the
    latest object.""""""
ORDER_FIELD = None

@classmethod
def all(cls):
    q = super(LatestMixin, cls).all()

def latest():
    if cls.ORDER_FIELD is None:
        raise ValueError('ORDER_FIELD must be defined')
return q.order('-' + cls.ORDER_FIELD).get()
q.latest = latest
return q


class Foo(LatestMixin, db.Model):
    ORDER_FIELD = 'timestamp'
timestamp = db.DateTimeProperty(auto_now_add=True)
latest = Foo.all().latest()"
english verbs processing ending with 'e',new = new[:-1]
"python, set terminal type in pexpect","shell_cmd = 'ls -l | grep LOG > log_list.txt'
child = pexpect.spawn('/bin/bash', ['-c', shell_cmd])
child.expect(pexpect.EOF)"
how to test send_file flask,"img1StringIO.seek(0)
assert response.data == imgStringIO.read()"
valueerror: can only call with other periodindex-ed objects,"cols_saved = df1.columns
df1.columns = df1.columns.values.astype(str)"
python mysql escape special characters,"insert = db.execute(sql, msg=weird_string)"
"partially transparent scatter plot, but with a solid color bar","fig2 = pylab.figure()
ax1 = fig1.add_subplot(111)
ax2 = fig2.add_subplot(111)
ax1.scatter(list(range(10)), list(range(10)), c=list(range(10)), alpha=0.2)
im = ax2.scatter(list(range(10)), list(range(10)), c=list(range(10)), alpha=1.0)
fig1.colorbar(im, ax=ax1)
fig1.show()"
python regular expression only matches once,"[text, notes] = re.split('((?:\\r?\\n\\[\\*\\]:[^\\r\\n]*)+$)', s)[:-1]"
fft for spectrograms in python,"signal, fs, enc = wavread('test.wav')"
how to use python to lookup information at specific latitude/longitude in a esri shapefile?,"lyr.ResetReading()
point = ogr.CreateGeometryFromWkt('POINT(4 5)')
for feat in lyr:
    geom = feat.GetGeometryRef()
if geom.Contains(point):
    sm = feat.GetField(feat.GetFieldIndex('surface_material'))"
how to test template context variables with flask,"class MyViewTestCase(TestCase):

    def create_app(self):
        return create_app()

def test_get_success(self):
    response = self.client.get('/pgt/myview')"
scrapy - retrieve spider object in dupefilter,self._mqpush(request)
add horizontal lines to plot based on sort_values criteria,"plt.axhline(l['low'], color='b')
plt.show()"
telling python to save a .txt file to a certain directory on windows and mac,import os
post to tornado server,"class LoginHandler(tornado.web.RequestHandler):

    def post(self):
        email_address = self.get_argument('email', '')
password = self.get_argument('password', '')
if not email_address:
    login_response = {'error': True, 'msg': 'Please enter your email address.'}
elif not password:
    login_response = {'error': True, 'msg': 'Please enter your password.'}
else:
    login_response = {'error': True, 'msg': 'Thank You.'}"
read specific windows event log event,"def main():
    rval = 0"
how to monkeypatch builtin function datetime.datetime.now?,"class patched_datetime(datetime.datetime):
    pass
monkeypatch.setattr(patched_datetime, 'now', nowfunc)
datetime.datetime = patched_datetime"
how to build many-to-many relations using sqlalchemy: a good example,"name = Column(String(255))
description = Column(Text)
details = relationship('Detail', secondary=ItemDetail, backref='Item')


class Detail(Base):
    __tablename__ = 'Detail'
id = Column(Integer, primary_key=True)
name = Column(String)
value = Column(String)
items = relationship('Item', secondary=ItemDetail, backref='Detail')"
fast json serialization (and comparison with pickle) for cluster computing in python?,"def marsh():
    return marshal.dumps(d)

def pick():
    return pickle.dumps(d)

def pick1():
    return pickle.dumps(d, -1)

def cpick():
    return cPickle.dumps(d)

def cpick1():
    return cPickle.dumps(d, -1)

def jso():
    return json.dumps(d)

def rep():
    return repr(d)"
python finding index of maximum in list,"max((v, i) for i, v in enumerate(a))[1]"
import from subpackage or full path difference,"print('TestWithGlobals:', TestWithGlobals.global_string)
print('Script2.TestWithGlobals:', Script2.TestWithGlobals.global_string)"
how to send an email through gmail without enabling 'insecure access'?,from email.mime.text import MIMEText
return a function object with parameter binded?,"c = lambda : b(a, 10)"
python - splitting list that contains strings and integers,"return [n for n in list_to_test if isinstance(n, type_of)]"
how to get rid of punctuation using nltk tokenizer?,tokenizer = RegexpTokenizer('\\w+')
python argparse choices from an infinite set,"msg = _('invalid choice: %r (choose from %s)') % tup
raise ArgumentError(action, msg)"
parse xml with (x)html entities,self.handle_data(chr(name2codepoint[name]))
edit configuration file through python,"f.write(pat.sub(jojo, content))
f.truncate()"
how to use freebase to label a very large unlabeled nlp dataset?,"for t in f:
    t = t.strip()
q = [{'type': t, 'mid': None, 'name': None, '/common/topic/alias': [],
    'limit': 500}]
for r in freebase.mqlreaditer(q):
    print('\t'.join([t, r['mid'], r['name']] + r['/common/topic/alias']))
f.close()"
shuffling a list with restrictions in python,"zip(shapes, colors)
[('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')]"
how to put legend outside the plot with pandas,import pandas as pd
"reloading module, need to re-compile sub modules?","import imp
imp.reload(sm)"
fitting survival models in python from aggregate data,"pandas2ri.activate()
coxph_ = r('coxph')
model = coxph_(Formula('Surv(time, outcome) ~ f1 + f2'), data=df, weights=
    df.num_in_group)
base = importr('base')"
how to merge nested tuples,d[key].extend(flatten_group(preserve_path(value)))
python rectangle collision handling with pygame,"obj.update()
if obj.getRect().colliderect(world[ID].getRect()):
    obj.x -= obj.vx"
adding a variable into keras/tensorflow cnn dense layer,model.summary()
i want to embellish a class from a python module. how do i do this?,"class Extension(module.ModuleClass):
    pass"
styling long chains in python,"name = '-Tadek-'
name = name.strip('-')
name = name.lower()
name = name.replace('k', 'ck')"
making a c extension to python that requires another extension,"log(""Couldn't run pygame.pygame_function"")"
using dateadd in sqlalchemy,"from sqlalchemy import Table, Column, MetaData, DateTime"
"python newbie, equal to a string?","if '211.125.122.192' in theIp:
    print('You are OK')
else:
    print('BAAD')"
how to print utf-8 encoded text to the console in python < 3?,"import sys
sys.setdefaultencoding('utf-8')"
how do i validate the mx record for a domain in python?,"try:
    smtp.connect(mx[1])
except smtplib.SMTPConnectError:
    continue"
how to replace (or strip) an extension from a filename in python?,"import os
print(os.path.splitext('/home/user/somefile.txt')[0] + '.jpg')"
plotting mplot3d / axes3d xyz surface plot with log scale?,ax.yaxis.set_scale('log')
make python automations on current window,"for ch in event.changes:
    ch.highlight()
sleep(1)
for ch in event.changes:
    pass"
retrieve browser headers in python,self.protocol = proto
how specify column and row in dataframe,print(df1)
iterating through a list with an if statement,"do_something_with_i(i)
return True"
create new ttk widget from tkinter,"if __name__ == '__main__':
    root = tk.Tk()"
how i can get cartesian coordinate system in matplotlib?,"fig = plt.figure()
ax = fig.add_subplot(111)"
elegant way of convert a numpy array containing datetime.timedelta into seconds in python 2.7,"times = numpy.array([datetime.timedelta(0, 1, 36000)] * 100000)"
how can i escape latex special characters inside django templates,"regex = re.compile('|'.join(re.escape(str(key)) for key in sorted(list(conv.
    keys()), key=lambda item: -len(item))))"
python coinbase api prices as float,"response = client.get_spot_price()
data = json.loads(response)
amount = float(data['amount'])
print(amount)"
how do i use django groups and permissions?,"permissions = ('read_car', 'Can read Car'),"
how to get first element in a list of tuples?,new_list = [seq[0] for seq in yourlist]
find all text files not containing some text string,"fil = os.path.join(fol, fil)"
add new navigate modes in matplotlib,"self.SetMinSize((100, 100))"
slicing hex string by address range,mask = (1 << end - start + 1) - 1
is there a way to list all the available drive letters in python?,drives.append(letter)
python: parse stream title with mplayer,"out, err = proc.communicate()
exitcode = proc.returncode
return exitcode, out, err

def get_title():
    cmd = 'mplayer -endpos 1 -ao null {url}'.format(url=URL)
out = get_exitcode_stdout_stderr(cmd)[1]
for line in out.split('\n'):
    if line.startswith('ICY Info:'):
        match = re.search(""StreamTitle='(.*)';StreamUrl="", line)
title = match.group(1)
return title

def main():
    print(get_title())"
how can i use super() with one argument in python,super(Spam).__self_class__ is None
how to sort a dictionary having keys as a string of numbers in python,"print(k, a[k])"
some doubts modelling some features for the libsvm/scikit-learn library in python,"0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0"
python: convert multiple instances of the same key into multiple rows,"from collections import OrderedDict
a = OrderedDict({'id': ['1221AB12'], 's': ['Party!'], 'flag': ['urgent',
    'english'], 't': ['0523456789', '0301234567'], 'f': ['0412345678']})
res = product(*list(a.values()))
for line in res:
    pass"
how to make python autocompletion display matches?,mk
selenium webdriver example in python,self._driver = WebDriver()
append list of python dictionaries to a file without loading it,"a = np.memmap('mydict.dat', dtype=object, mode='r')"
how can i find the location of the source code of a built-in python method?,""""""" Two-dimensional size-mutable, potentially heterogeneous tabular data
structure with labeled axes (rows and columns). Arithmetic operations
align on both row and column labels. Can be thought of as a dict-like
container for Series objects. The primary pandas data structure
Parameters
----------
data : numpy ndarray (structured or homogeneous), dict, or DataFrame
    Dict can contain Series, arrays, constants, or list-like objects
index : Index or array-like
    Index to use for resulting frame. Will default to np.arange(n) if
    no indexing information part of input data and no index provided
columns : Index or array-like
    Column labels to use for resulting frame. Will default to
    np.arange(n) if no column labels are provided
dtype : dtype, default None
    Data type to force, otherwise infer
copy : boolean, default False
    Copy data from inputs. Only affects DataFrame / 2d ndarray input
Examples
--------
>>> d = {'col1': ts1, 'col2': ts2}
>>> df = DataFrame(data=d, index=index)
>>> df2 = DataFrame(np.random.randn(10, 5))
>>> df3 = DataFrame(np.random.randn(10, 5),
...                 columns=['a', 'b', 'c', 'd', 'e'])
See also
--------
DataFrame.from_records : constructor from tuples, also record arrays
DataFrame.from_dict : from dicts of Series, arrays, or dicts
DataFrame.from_items : from sequence of (key, value) pairs
pandas.read_csv, pandas.read_table, pandas.read_clipboard
"""""""
graphviz - drawing maximal cliques,"coords = nx.spring_layout(G)
cliques = [clique for clique in nx.find_cliques(G) if len(clique) > 2]"
reloading dependent modules in python,"import imp
time.sleep(5)
imp.reload(othermodule)"
repeatedly create files with counter in python,"for i in itertools.count():
    filename = ''.join(['FILE', str(i), '.txt'])
with open(os.path.join(dir, filename), 'w'):
    pass"
multiple columns index when using the declarative orm extension of sqlalchemy,"a = Column(String(32), index=True)"
how can i pretty-print ascii tables with python?,row = rows[0]
how to execute a function asynchronously every 60 seconds in python?,"def f():
    threading.Timer(60, f).start()
f()"
how to calculate mean in python?,"goodPix = ['96.7958', '97.4333', '96.7938', '96.2792', '97.2292']
gp2 = []
for i in goodPix:
    gp2.append(float(i))
numpy.mean(gp2)"
how to stream xml output quickly from python,from lxml import etree
html truncating in python,re_words = re.compile('&.*?;|<.*?>|([A-Za-z0-9][\\w-]*)')
force content-type or expose request.data in flask for known content-type,"request.add_header('Content-Type', 'application/gooblygop')"
how is order of items in matplotlib legend determined?,"if ax is None:
    ax = plt.gca()
handles, labels = ax.get_legend_handles_labels()"
redirecting to url in flask,app = Flask(__name__)
what are the correct usage/parameter values for houghcircles in opencv for iris detection?,"cv.Circle(output, (x, y), 1, cv.CV_RGB(0, 255, 0), -1, 8, 0)"
in python can one implement mixin behavior without using inheritance?,"class Mixin(object):
    pass"
"initializing object variables - a java approach, a python approach?",raise ValueError('spam must end with !')
how to override equals() in google app engine data model type?,result = self.__eq__(other)
how to emit socketio event on the serverside,"if is_message_to_subscribe(message):
    self.spawn(self.listener, get_your_channel_label(message))"
row and column headers in matplotlib's subplots,ax.set_title(col)
grouping pandas dataframe by n days starting in the begining of the day,df['dateonly'] = df['time'].apply(lambda x: x.date())
filtering signal with python lfilter,result >>= outshift
"finding last occurence of substring in string, replacing that","new_list = [re.sub('\\.(?=[^.]*$)', '. - ', s) for s in old_list]"
sqlalchemy default datetime,"class Test(Base):
    __tablename__ = 'test'
id = Column(Integer, primary_key=True)
created_date = Column(DateTime, default=datetime.datetime.utcnow)"
"python pandas: how to turn a dataframe with ""factors"" into a design matrix for linear regression?","num_rows = 7
df2 = pandas.DataFrame({'a': ['one', 'one', 'two', 'three', 'two', 'one',
    'six'], 'b': ['x', 'y', 'y', 'x', 'y', 'x', 'x'], 'c': np.random.randn(
    num_rows)})"
can't modify list elements in a loop python,"for idx in range(len(li)):
    li[idx] = 'foo'"
how can i convert unicode to uppercase to print it?,"s = 'ex\xc3\xa1mple'
s
s.decode('utf-8').upper()"
implementing topic model with python (numpy),n_k_d[k][d] -= 1
communication between two python scripts,"import http.client
c = http.client.HTTPConnection('localhost', 8080)
c.request('POST', '/process', '{}')
doc = c.getresponse().read()
print(doc)"
regex python match large list of strings,"'Tijuana', 'Toronto', 'Tortola', 'Yakutat', 'McMurdo', 'Rothera'"
mongoengine - query how to filter by listfield size,posts = Post.objects.filter(likes__21__exists=True)
python & pygame: ball collision with interior of circle,angle = 0.5 * math.pi + tangent
split string of digits into lists of even and odd integers,nums['evens'].append(number)
finding the lowest collatz sequence that gives more that 65 primes,"find_seed(numprimes, start)"
upgrade python packages from requirements.txt using pip command,"data2 = open('requirements-prod-no-version.pip', 'w')
for line in data.readlines():
    new_line = line[:line.index('==')]"
how do i pass arguments to a python script with ironpython,engine.Sys.argv = argv
python format tabular output,"table = [(str(x), str(f(x))) for x in mylist]
print_table(table)"
sendmessage from outside in autobahn running in separate thread,"connection.start()
connection.send('test')"
fizzbuzz (turning my output to a string?),"return ', '.join(fb)
fizzbuzz1(20)"
how can i get the name of a drive in python,win32api.GetVolumeInformation('C:\\')
how to count items in json data,item_dict = json.loads(json_data)
groupped sampling in scikit-learn,raise StopIteration()
"python bug with __le__, __ge__?","class XY(X, Y):
    pass"
how to read the csv file properly if each row contains different number of fields (number quite big)?,cols = [col[::-1] for col in row[::-1][2:].split(' ') if len(col)]
python - rounding by quarter-intervals,9.8
how are a name and its reference value related?,id(globals()['a'])
multiple levels of keys and values in python,creatures['birds']['eagle']['female'] = 0
easy way to test if each element in an numpy array lies between two values?,"a = numpy.array([1, 2, 3, 4, 5])
(a > 1).all() and (a < 5).all()"
how to catch multiple exception of same type in decorator,self.register_errors(result)
how to return more than one value from a function in python?,"return x, y
x, y = foo(50)"
how to perform iterative 2d operation on 4d numpy array,"image = np.array([[1, 1, 1, 0, 0], [0, 1, 1, 1, 0], [0, 0, 1, 1, 1], [0, 0,
    1, 1, 0], [0, 1, 1, 0, 0]])"
faster way of polygon intersection with shapely,"from rtree import index
idx = index.Index()
for pos, cell in enumerate(grid_cells):
    idx.insert(pos, cell.bounds)
for poly in polygons:
    merged_cells = cascaded_union([grid_cells[pos] for pos in idx.
        intersection(poly.bounds)])
print(poly.intersection(merged_cells).area)"
find current directory,cwd = os.getcwd()
selecting fields from json output,f.close()
creating a dict of blank lists that are not the same list,"d[3].append(100)
d"
python: listen on two ports,server_A_thread.start()
how to create a draggable legend in matplotlib?,"leg = plt.legend()
if leg:
    leg.draggable()"
finding occurrences of a word in a string in python 3,"str1 = 'the dogs barked'
sum(i == word for word in str1.split())
word = 'dog'
str1 = 'the dog barked'
sum(i == word for word in str1.split())"
"in flask, set a cookie and then re-direct user","from flask import make_response
if s.setSession():
    response = make_response(redirect('/home'))"
efficiently checking euclidean distance for a large number of objects in python,"indices = tree2.query_ball_tree(tree1, r=4.2)"
efficiently sorting a numpy array in descending order?,"temp
id(temp)"
python lxml append element after another element,"contentnav = tree.find("".//div[@id='content_nav']"")
contentdiv = contentnav.getparent()
contentdiv.insert(contentdiv.index(contentnav) + 1, ET.XML(
    ""<div style='clear: both'></div>""))
print(ET.tostring(tree))"
how to elegantly interleave two lists of uneven length in python?,"return [item[1] for item in sorted(IT.chain.from_iterable(zip(IT.count(
    start=1.0 / (len(seq) + 1), step=1.0 / (len(seq) + 1)), seq) for seq in
    iterables))]
iterables = [['X'] * 2, list(range(1, 11)), ['a'] * 3]
print(evenly_spaced(*iterables))"
function parameters - python,"parrot(5, state='dead')
parrot(5, 'dead')"
pretty-printing physical quantities with automatic scaling of si prefixes,l = math.floor(math.log10(abs(x)))
how to do a 'groupby' by multilevel index in pandas,RPT_tmp['year'] = RPT_tmp['RPT_Date'].apply(year)
aliases for commands with python cmd module,"cmd, arg, line = self.parseline(line)"
imoverlay in python,"y = np.zeros((10, 10))"
insert or update keys in a python dictionary,"for k in dict1:
    my_dict[k].append(dict1[k])"
mplot3d animation with transparent background,fig.patch.set_visible(False)
can super deal with multiple inheritance?,"class Bar(object):
    pass"
how do i generate a spectrogram of a 1d signal in python?,"plot(t * 1000.0, y, 'r')"
how to model a foreign key in a reusable django app?,objects = TaggedItemManager()
python convert mp3 to wav with pydub,"subprocess.call(['sox', '/input/file.mp3', '-e', 'mu-law', '-r', '16k',
    '/output/file.wav', 'remix', '1,2'])"
'is' operator behaves unexpectedly with non-cached integers,a is b
examples of entry_point usage,"try:
    from pkg_resources import working_set
except ImportError:
    pass
else:
    for entry_point in working_set.iter_entry_points(GROUP_NAME, method):
        func = entry_point.load(require=True)"
pylint false positive for unused argument,"def addSeven(foo):
    pass"
python gps module: reading latest gps data,return self.current_value
python: urllib2 how to send cookie with urlopen request,"r = requests.get('http://httpbin.org/cookies', cookies=cookies)
r.text"
how to manage logging in curses,logging.Handler.__init__(self)
how to create a range of random decimal numbers between 0 and 1,"for i in range(100):
    i /= 100.0
print(i)"
"python optparse, how to include additional info in usage output?",parser.add_option_group(group)
how to implement a watchdog timer in python?,watchdog.stop()
selenium: iterating through groups of elements,"persons.append({'title': title, 'company': company})"
how to save frequently used physical constants in python,return self
python - using beautifulsoup to scrape an espn table,r = requests.get(url)
how can i schedule a task to execute at a specific time using celery?,"from celery.task.schedules import crontab
from celery.decorators import periodic_task"
python: unable to inherit from a c extension,"class ll_mat(object):
    pass"
"resize gif animation, pil/imagemagick, python","frames = images2gif.readGif('rose.gif', False)"
python: how to replace a property with a regular attribute?,"class MyOtherClass(MyClass):
    pass"
python password protection,password = '2034f6e32958647fdff75d265b455ebf'
python map string split list,"map(lambda s: s.split(), a)"
tuple unpacking order changes values assigned,"nums[0], nums[nums[0]] = nums[nums[0]], nums[0]"
group data by date based on values using pandas,"res = df.groupby(df.date.dt.month).agg(['min', 'max'])"
creating a temporary table from a query using sqlalchemy orm,e.execute(ins)
using struct pack in python,"hex(ord('""'))"
python facebook api - cursor pagination,graph = facebook.GraphAPI(ACCESS_TOKEN)
run ssh-add with fabric in a machine,"cwd = env.get('cwd', '')"
calculate difference between 'times' rows in dataframe pandas,"df['TimeWeekDiff'] = df['TimeWeek_date'] - df['TimeWeek_date'].shift().fillna(
    pd.to_datetime('00:00:00', format='%H:%M:%S'))"
python how to append to file in zip archive,"z.close()
z = zipfile.ZipFile('myzip.zip', 'r', zipfile.ZIP_DEFLATED)"
python fraction of seconds,t = datetime.now()
plot x-y data if x entry meets condition python,"axes[1].plot(x, np.polyval(model, x), 'r-')
plt.show()"
how to calculate all 24 rotations of 3d array?,polycube = numpy.rot90(polycube)
how to import .py file from another directory?,"import sys
sys.path.insert(0, 'path/to/your/py_file')"
numpy divide row by row sum,diagonal_entries = [sum(e[row]) for row in range(e.shape[0])]
how to tell python scrapy to move to the next start url,from scrapy.contrib.linkextractors.sgml import SgmlLinkExtractor
converting png32 to png8 with pil while preserving transparency,"im = im.convert('RGB').convert('P', palette=Image.ADAPTIVE, colors=255)"
runtimewarning: invalid value encountered in greater,out_vec = out_vec[~numpy.isnan(out_vec)]
getting only positive number from a list that containing heterogeneous data type item in python 3,"lst = ['1', 'err', '-1', ' ', '155']
newlst = []"
python request post with param data,"import requests
import json
headers = {'content-type': 'application/json'}
url = 'http://192.168.3.45:8080/api/v2/event/log'
data = {'eventType': 'AAS_PORTAL_START', 'data': {'uid': 'hfe3hf45huf33545',
    'aid': '1', 'vid': '1'}}
params = {'sessionKey': '9ebbd0b25760557393a43064a92bae539d962103',
    'format': 'xml', 'platformId': 1}
requests.post(url, params=params, data=json.dumps(data), headers=headers)"
format of complex number in python,imag_part
getting the first item item in a many-to-many relation in django,"GroupMembers.objects.create(person=prs, group=grp, order=3)"
using swig for functions with functions as input parameter,"return PyCBack()
print(callF(cback(lambda x, y: x * y), 3, 7))"
how can i unit test responses from the webapp wsgi application in google app engine?,"self.assertTrue('Hello, World!' in response)

def test_page_with_param(self):
    app = TestApp(self.application)
response = app.get('/?name=Bob')
self.assertEqual('200 OK', response.status)
self.assertTrue('Hello, Bob!' in response)"
convert numpy array to tuple,"arr = numpy.array(((2, 2), (2, -2)))
tuple(map(tuple, arr))"
the default sorting criteria of sqlalchemy?,__tablename__ = 'users'
multiplying values from two different dictionaries together in python,"for key, value in dict1.items():
    if key in dict2:
        pass"
"how can i select the second dataframe only from a webpage with two dataframes, using pandas in python?","data = web.DataReader('A', 'google', start, end)
data.head()"
how to implement a watchdog timer in python?,"self.handler = userHandler if userHandler is not None else self.defaultHandler
self.timer = Timer(self.timeout, self.handler)

def reset(self):
    self.timer.cancel()
self.timer = Timer(self.timeout, self.handler)

def stop(self):
    self.timer.cancel()

def defaultHandler(self):
    raise self"
how do i ensure data integrity for objects in google app engine without using key names?,existing_alias.put()
pyyaml: dumping without tags,"def unicode_representer(dumper, uni):
    node = yaml.ScalarNode(tag='tag:yaml.org,2002:str', value=uni)
return node
yaml.add_representer(str, unicode_representer)"
how to increment datetime by custom months in python without using library,year = int(sourcedate.year + month / 12)
building self-referencing tuples,"for i in range(refcnt + 1):
    ctypes.pythonapi.Py_IncRef(arrayobj)"
convert pandas dataframe to a list,"fruit = [df.columns[row.astype(bool)].tolist() for row in df.values]
pprint.pprint(fruit)"
proper way to consume data from restful api in django,"params = {'year': year, 'author': author}"
filtering of tweets received from statuses/filter (streaming api),"def on_data(self, data):
    print(self.keyword, data)"
how to combine dictionary + list to form one sorted list,"l = [('J', 20), ('Q', 10), ('F', 2)]
print([(a, b, z[a]) for a, b in l])"
insert image in openpyxl,"wb = openpyxl.Workbook()
ws = wb.worksheets[0]
img = openpyxl.drawing.Image('test.jpg')
img.anchor(ws.cell('A1'))
ws.add_image(img)
wb.save('out.xlsx')"
using python weakset to enable a callback functionality,"def __call__(self, obj):
    pass"
sort list in python by two other lists,"rev_sorted = sorted(paired, reverse=True, key=lambda x: x[1])
paired_sorted = sorted(rev_sorted, key=lambda x: x[0])"
networkx - path around a node,"if neighb in [x for x in G.neighbors(other) if x != root]:
    pass"
insert data into mysql table from python script,results = cursor.fetchone()
how to cleanly loop over two files in parallel in python,"for line, word in zip(lines, words):
    pass"
python string manipulation,"count = 1
while count:
    pass"
how to portably parse the (unicode) degree symbol with regular expressions?,'(temp1:)\\s+(\\+|-)(\\d+\\.\\d+)\xb0C\\s+\\(crit\\s+=\\s+(\\+|-)(\\d+\\.\\d+)\xb0C\\).*'
deque in python pandas,import numpy as np
python-daemon context fails to start when a stale pid file is present,from lockfile import AlreadyLocked
closures in python,return vset(args)
run python script as cgi apache server,"print('Content-Type: text/html')
print() 
print(""""""
    <TITLE>CGI script ! Python</TITLE>
    <H1>This is my first CGI script</H1>
    Hello, world!
"""""")"
is it possible to debug cherrypy applications?,"try:
    engine.start()
except:
    pass"
multiple 'in' operators in python?,"all(word in d for word in ['somekey', 'someotherkey', 'somekeyggg'])"
how to get multiline input from user,"while True:
    pass"
how can a #defined c value be exposed to python in a cython module?,"bullet.ACTIVE_TAG
bullet.DISABLE_SIMULATION"
using python to program ms office macros?,xl = comDispatch('Excel.Application')
making django admin display the primary key rather than each object's object type,"class HostAdmin(admin.ModelAdmin):
    pass"
how to identify the elements which are removed from set() in python?,"a = [1, 2, 3, 1, 4]"
iterating through a range of dates in python,print(single_date.strftime('%Y-%m-%d'))
match rows in one pandas dataframe to another based on three columns,"dfA = pd.DataFrame({'X': [1, 1, 2, 2, 2, 3], 'Y': [1, 1, 2, 2, 2, 3],
    'ONSET_TIME': [5, 7, 9, 16, 22, 28], 'COLOR': ['Red', 'Blue', 'Blue',
    'red', 'Green', 'Orange']})
mergeDf = pd.merge(dfA, dfB, left_on=['X', 'Y'], right_on=['X', 'Y'])"
combinatorial product of regex substitutions,"target = 'abc123def'
pattern = re.compile('\\B(\\d+)\\B')"
can i insert matplotlib graphs into excel programmatically?,"plt.savefig('myplot.png', dpi=150)"
how to put text in input line: how to ask for user input on the command line while providing a 'default' answer that the user can edit or delete?,messageVar.set('Enter a command:')
applying style sheets in pyqt,"""""""QGroupBox { background-color: rgb(255, 255,255); border:1px solid rgb(255, 170, 255); }"""""""
non-lazy evaluation version of map in python3?,"collections.deque(map(writer.writerow, data), 0)"
python use split with arrays,[[int(y) for y in x.split()] for x in s.split(' 3 4 ')]
how to remove a column from a structured numpy array *without copying it*?,offsets = [dt.fields[name][1] for name in names]
how to display an image with pylab from a script in a non blocking way,"thread.start()
thread.join()"
subset of dictionary keys,{key: data[key] for key in one_by_ip}
how to use django's assertjsonequal to verify response of view returning jsonresponse,"def test_success_when_not_added_before(self):
    response = self.client.post('/add-item-to-collection')"
"in python, how to access a uint16[3] array wrapped by swig (i.e. unwrap a pyswigobject)?",pC[1] = 100
changing the rotation of tick labels in seaborn heatmap,keptticks = xticks[::int(len(xticks) / 10)]
make python enter password when running a csh script,"child.sendline('password')
print('Stopping the servers...')"
plot x-y data if x entry meets condition python,"import numpy as np
import matplotlib.pyplot as plt
x = np.linspace(-10, 50, 100)
y = x ** 2 + 3 * x + 8
y[x < 10] += np.random.random(sum(x < 10)) * 300
x_filt = x[x > 10]
y_filt = y[x > 10]
model = np.polyfit(x_filt, y_filt, 2)
fig, axes = plt.subplots(nrows=2, sharex=True)
axes[0].plot(x, y, 'bo')
axes[1].plot(x_filt, y_filt, 'bo')
axes[1].plot(x, np.polyval(model, x), 'r-')
plt.show()"
fast cross correlation method in python,b = numpy.zeros(data_length * 2)
how can i get pycharm to recognize the static files?,"STATICFILES_DIRS = 'static',"
detecting a us holiday,"Holiday('Christmas Day', type='fixed', day=25, month=DEC, sat_adj=2, sun_adj=1)
Holiday('Boxing Day', type='fixed', day=26, month=DEC, sat_adj=2, sun_adj=2)"
different logging levels for filehandler and display in python,logger2 = logging.getLogger('myapp.area2')
numpy matrix multiplication shapes,a
how to portably parse the (unicode) degree symbol with regular expressions?,"[('temp1:', '+', '31.0', '+', '107.0')]"
type and default input value of a click.option in --help option,click.echo('Hello %s!' % name)
update tkinter label from variable,"var.set('hello')
l = Label(root, textvariable=var)
l.pack()
t = Entry(root, textvariable=var)
t.pack()
root.mainloop()"
how to select an item for dropdown menu with mechanize in python?,"br.form['message'] = 'Hello, World!'"
is it possible to use two python packages with the same name?,"for k in sys.modules:
    if re.match('foo(\\.|$)', k):
        newk = k.replace('foo', 'foo2', 1)
sys.modules[newk] = sys.modules[k]"
how to elegantly replace certain characters in one string with characters in another at the same index?,"s2 = 'orange is not delicious'
from itertools import zip_longest"
python list: double each element in a list while maintaining the structure,"def double(li):
    pass"
python: best way to test a single method of a class,"def square(num):
    pass"
python urllib2 with keep alive,fo = urllib.request.urlopen('http://www.python.org')
how do i suppress scientific notation in python?,'%f' % (1 / 10 ** 8)
how to pass args to a signal,"def create_user_profile(sender, instance, created, **kwargs):
    pass"
setting focus to specific tkinter entry widget,frame.pack()
shuffling a list of objects in python,"print(a, b, 'two list same:', a == b)"
how to define length of lines to read in from a file,"with open('words', 'rb') as f:
    pass"
correlation matrix in python,"import numpy as np
np.corrcoef([[0.1, 0.32, 0.2, 0.4, 0.8], [0.23, 0.18, 0.56, 0.61, 0.12], [
    0.9, 0.3, 0.6, 0.5, 0.3], [0.34, 0.75, 0.91, 0.19, 0.21]])"
change reference to function in run-time in python,self.func()
how to put a tkinter window on top of the others,self.root.lift()
dynamic method in python,"def get_pid(*params):
    pass"
check and wait until a file exists to read it,time.sleep(1)
"redis in python, how do you close the connection?",connection.send_command(*args)
urllib2 - post request,url = 'http://www.mitfahrgelegenheit.de/mitfahrzentrale/Dresden/Potsdam.html/'
reshaping dataframes in pandas based on column labels,"df = df.set_index('names')
df.columns = pandas.MultiIndex.from_tuples([tuple(c.split('_')) for c in df
    .columns])
df.stack(0).reset_index(1)"
how to set pdb break condition from within source code?,"def set_breakpoint(tag, condition=True):
    if tag not in _breakpoints:
        _breakpoints[tag] = True
if condition:
    pdb.set_trace()
elif _breakpoints[tag] and condition:
    pdb.set_trace()

def mycode():
    some_command()
set_breakpoint('mycode0')
another_command()
set_breakpoint('mycode1', x == 4)"
formation of dictionary from list element,"d[k] = list(map(str.strip, v.split())) if ',' in v else v.strip"
how do i get python xml to stop having wasted child nodes,text = '5'
numpy - add row to array,"newrow = [1, 2, 3]
A = numpy.concatenate((A, newrow))"
insert element in python list after every nth element,i += n + 1
nested ssh session with paramiko,"ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh.connect('first.com', username='luser', password='secret')
chan = ssh.invoke_shell()
chan.send('ssh second.com\n')
buff = ''
while not buff.endswith(""'s password: ""):
    resp = chan.recv(9999)
buff += resp
chan.send('secret\n')
buff = ''
while not buff.endswith('some-prompt$ '):
    resp = chan.recv(9999)
buff += resp
chan.send('ls\n')
buff = ''
while not buff.endswith('some-prompt$ '):
    resp = chan.recv(9999)
buff += resp
print('buff', buff)
ssh.close()"
i want to create headings relative to a single point from a list of points with angles between the points. is there a function for this?,"import queue

def calculate_distances(graph, start):
    q = queue.Queue()
distances = {start: 0}
for adj in graph[start]:
    distances[adj[0]] = adj[1]
q.put(adj[0])
while not q.empty():
    next_node = q.get()
for adj in graph[next_node]:
    if adj[0] not in distances:
        distances[adj[0]] = adj[1] + distances[next_node]
q.put(adj[0])
return sorted([[x, y] for x, y in list(distances.items())], key=lambda x: x[0])"
eliminating warnings from scikit-learn,"def warn(*args, **kwargs):
    pass"
os.walk without digging into directories below,del dirs[:]
python elegant assignment based on true/false values,nth[(a and 4 or 0) | (b and 2 or 0) | (c and 1 or 0)]
check and wait until a file exists to read it,"if os.path.lexists(file_path):
    time.sleep(1)
if os.path.isfile(file_path):
    pass"
how do i build a python string from a ctype struct?,buffer = buffer()
sort list of list in python according to a specific column,"transposed_l.sort(key=lambda x: x[1], reverse=True)
l = zip(*transposed_l)"
how can i retrieve the current seed of numpy's random number generator?,"import numpy as np
np.random.seed(None)
st0 = np.random.get_state()
print(np.random.randint(0, 100, 10))
np.random.set_state(st0)"
google app engine - using search api python with list fields,"results = index.search('tags:((""tag1"" AND ""tag2"") OR (""tag3"" AND ""tag4""))')"
python: extract variables out of namespace,"def foo(args):
    pass"
adding objects dynamically in bokeh server application,"def add_button():
    print('adding button')
layout.children.append(Button(label='Hi I am another button', button_type=
    'success'))
button = Button(label='Click to add a button', button_type='success')
button.on_click(add_button)
layout = layout([[button]])
curdoc().add_root(layout)"
how would one add a colorbar to this example?,plt.xlabel('A rose diagram colored by a second variable')
how to put a variable into python docstring,"def baz():
    """"""Oh Bring Back My {0} To {1}"""""""
flask test_client removes query string parameters,"def index():
    return request.url"
how do i add or remove security groups from enis using boto?,my_eni_sg_ids = [x.id for x in my_eni_groups]
flask: how to read a file in application root?,"import os
APP_ROOT = os.path.dirname(os.path.abspath(__file__))
APP_STATIC = os.path.join(APP_ROOT, 'static')"
how to use sqlite 3's vacuum command in python,"conn.execute('VACUUM')
conn.close()"
tell if a given login exists in linux using python,"try:
    pwd.getpwnam('someusr')
except KeyError:
    print('User someusr does not exist.')"
how to use python kazoo library?,"zk = KazooClient(hosts='127.0.0.1:2181')
zk.start()
zk.ensure_path('/app/someservice')
zk.stop()"
return string that is not a substring of other strings - is it possible in time less than o(n^2)?,trie.delete('bag')
making the labels of the scatterplot vertical and horizontal in pandas,"ax = axs[x, y]"
how can i get the concatenation of two lists in python without modifying either one?,print(i)
how to beautify json in python or through command line,"{'one': 1, 'two': 2}"
how to get transparent background in window with pygtk and pycairo?,"def main(argc):
    win = gtk.Window()
win.set_decorated(False)
win.set_app_paintable(True)
win.set_size_request(100, 100)
screen = win.get_screen()
rgba = screen.get_rgba_colormap()
win.set_colormap(rgba)
win.connect('expose-event', expose)
win.show()"
how do i treat an integer as an array of bytes in python?,a.fromstring(s)
python: how to import all methods and attributes from a module dynamically,"def init():
    pass"
extract historic leap seconds from tzdata,print_leaps(leap_lst)
find physical coordinates of a pixel in a fits file with python,"lon, lat = w.wcs_pix2world(100.0, 100.0, 1)"
python 3.4.4 how to verify if a string is only made of 0 and 1,"while bit > 0:
    pass"
right way to clean up a temporary folder in python class,"d = tempfile.mkdtemp(*args, **kwargs)"
to prevent a function from printing in the batch console in python,sys.stdout = sys.__stdout__
passing sqlite variables in python,import sqlite3
how to plot blurred points in matplotlib,import matplotlib.pyplot as plt
how to fit result of matplotlib.pyplot.contourf into circle?,"ax.set_ylim(-0.5, 4.5)"
how to iterate over a range of keys in a dictionary?,"d = {'Domain Source': 'Analyst', 'Recommend Suppress': 'N',
    'Standard Error': '0.25', 'Element ID': '1.A.1.d.1', 'N': '8',
    'Scale ID': 'IM', 'Not Relevant': 'n/a', 'Element Name': 'Memorization',
    'Lower CI Bound': '2.26', 'Date': '06/2006', 'Data Value': '2.75',
    'Upper CI Bound': '3.24', 'O*NET-SOC Code': '11-1011.00'}"
unable to access id property from a datastore entity,"query = Question.all()
questions = query.fetch(10)"
compute the shortest path with exactly `n` nodes between two points on a meshgrid,"plot(path[:, (1)], path[:, (0)], 'r.-')"
keras custom objective requires tensor evaluation,"nb_val_samples = X_val.shape[0], samples_per_epoch = X_train.shape[0],"
python dateutil date conversion,print(date.isoformat())
deepcopy fails on a subclass of deque,"class Foo(deque):

    def __init__(self, *args, **kwargs):
        pass"
serializing sqlite3 in python,import sqlite3
how do i reverse a part (slice) of a list in python?,b = a[:]
most efficient way to reverse a numpy array,do_something_else(arr)
how to continue insertion after duplicate key error using pymongo,"c.insert_many([{'_id': 2}, {'_id': 3}])
list(c.find())"
how to remove specific elements in a numpy array,"numpy.delete(a, index)"
how to use twisted to check gmail with oauth2.0 authentication,"def __init__(self, reactr):
    self.token = None"
split strings with multiple delimiters?,"re.split('\\W+', 'Words, words, words.')
re.split('(\\W+)', 'Words, words, words.')
re.split('\\W+', 'Words, words, words.', 1)"
how to delete rows from the datastore that our app uses in google appengine?,q = db.GqlQuery('SELECT * FROM Foo')
namedtuples in jinja2 template macros,return body
intersection between bezier curve and a line segment,"self.emit('buttonUp', e.pos[0], e.pos[1])"
how to expand matrix expression in sympy,"A = MatrixSymbol('A', 3, 3)"
creating a faceted matplotlib/seaborn plot using indicator variables rather than a single column,"j = sns.FacetGrid(bdata, col='Species', row='Virus')"
computing diffs within groups of a dataframe,df['diffs'] = df.groupby['ticker']['value'].transform(np.diff)
how do i multiply each element in a list by a number?,product.append(i * 5)
can i get a return value from multiprocessing.process?,jobs = [multiprocessing.Process(mc) for mc in montecarlos]
pyparsing: space as a valid token,"s = s[::2]
s"
define an order for manytomanyfield with django,"abstract = forms.CharField(widget=TinyMCE(attrs={'cols': 80, 'rows': 30}))"
python pil: how to draw an ellipse in the middle of an image?,"draw = ImageDraw.Draw(im)
draw.ellipse(bbox, fill=128)"
find the date for the first monday after a given a date,return d + datetime.timedelta(days_ahead)
download image file from the html page source using python?,"if image['src'].lower().startswith('http'):
    urlretrieve(image['src'], outpath)"
preferred file line by line read idiom in python,"def do_with_line(line):
    pass"
how to get the first column of a pandas dataframe as a series?,type(s)
"add, modify, remove celery.schedules at run time","every_hours_crontab = CrontabSchedule(minute=0)
every_hours_crontab.save()
periodic_task = PeriodicTask(name='Call my task every hour', task=
    'myproject.tasks.mytask', crontab=every_hours_crontab, args=json.dump([
    arg1, arg2]), kwargs=json.dump({'foo': 'bar'}))"
sqlalchemy - copy schema and data of subquery to another database,from sqlalchemy.ext.declarative import declarative_base
access to variables from outside function,"def foo():
    y = x
print('globals=', globals())
print('locals=', locals())"
make list of unique objects in python,a
python logic - simplify/more efficient multiple if elif statements,"if x == 1:
    pass"
how to structure a program to work with minesweeper configurations,21
an elegant way to make a 2d array with all possible columns,"np.unpackbits(np.arange(2 ** r, dtype='uint8')[:, (None)], axis=1)[:, 8 - r:]"
python selenium accessing html source,"s = Selenium2Library.Selenium2Library()
s.open_browser('localhost:7080', 'firefox')
source = s.get_source()"
updating marker style in scatter plot with matplotlib,event.canvas.draw()
python pil: best scaling method that preserves lines,"im = Image.open(fn)
im = im.convert('RGB')
im.thumbnail(size, Image.ANTIALIAS)"
how to optimize image size using wand in python,"with Image(filename=filename) as img:
    pass"
abort execution of a module in python,"def main():
    print(' module1')"
change the file extension for files in a folder in python,"for filename in os.listdir(folder):
    infilename = os.path.join(folder, filename)"
possible to make a roc plot from svm with precomputed kernel in scikit-learn?,"X = np.array([[0, 0], [1, 1]])
y = [0, 1]
clf = svm.SVC(kernel='precomputed')
K = numpy.zeros(shape=(n, n))"
starting a stopped ec2 instance with boto,"conn.start_instances(instance_ids=['instance_id_1', 'instance_id_1'])"
matplotlib - contour plot with single value,"zi = np.ones((3, 3))
try:
    CS = plt.contour(xi, yi, zi, 15, linewidths=0.5, colors='k')
except ValueError:
    pass
CS = plt.contourf(xi, yi, zi, 15, cmap=plt.cm.jet)
plt.colorbar()
plt.show()"
how to change a widget's font style without knowing the widget's font family/size?,self.customFont.configure(size=size - 2)
symmetric streamplot with matplotlib,BZ_OUT[mask] = None
define a python dictionary with immutable keys but mutable values,"def __getitem__(self, key):
    pass"
how can i draw half circle in opencv?,angle = 0
change first line of a file in python,"source_fp = open('source-filename', 'r')
target_fp = open('target-filename', 'w')"
unit testing a flask application class,"class MyApplication(object):

    def __init__(self, param1, param2):
        self.app = Flask(__name__)"
python - how to call bash commands with pipe?,"from subprocess import Popen, PIPE"
need to create a list from a text file,"for word in line.split():
    pass"
fabric and svn password,"import getpass
password = getpass.getpass('Enter SVN Password: ')
run(""svn update --password '%s'"" % password)"
local variable 'count' referenced before assignment,"def three_upper(s):
    global count"
printing to screen and writing to a file at the same time,console.setFormatter(formatter)
"recursively unzip archives, store (filename, extracted-contents) in dictionary","innerzippath = os.path.join(tmpdir, name)"
get subsection of df based on multiple conditions,"pd.Series(conditions)
df == pd.Series(conditions)"
python 2.7: round a float up to next even number,b = 2
insert column using openpyxl,"ws._cells = new_cells
wb.save(filename=dest_filename)"
how to force errorbars to render last with matplotlib,"fig = plt.figure()
ax = plt.gca()
[ax.plot(rand(50), color='0.75', zorder=-32) for j in range(122)]
ax.errorbar(list(range(50)), rand(50), yerr=0.3 * rand(50))
plt.draw()"
django + mod_wsgi. set os environment variable from apache's setenv,"class WSGIEnvironment(WSGIHandler):

    def __call__(self, environ, start_response):
        os.environ['USKOVTASK_PROD'] = environ['USKOVTASK_PROD']"
get function from string containing the full name,lib = importlib.import_module(lis[0])
"how can i simplify ""for x in a for y in b for z in c ..."" with the unordered?","a = ['1', '2', '3']
b = ['bc', 'b']
c = ['#']
print([''.join(res) for res in itertools.product(a, b, c)])"
how to run custom python script on jupyter notebook launch (to boot spark)?,"filename = os.path.join(spark_home, 'python/pyspark/shell.py')"
how to signal from a running qthread back to the pyqt gui that started it?,"self.simulThread = QThread()
self.simulRunner.moveToThread(self.simulThread)
self.simulRunner.stepIncreased.connect(self.currentStep.setValue)
self.stopButton.clicked.connect(self.simulRunner.stop)
self.goButton.clicked.connect(self.simulThread.start)"
tkinter: how to use after method,"tile_frame.pack()
root.after(500, add_letter)"
what is the easiest way to see if a process with a given pid exists in python?,"import psutil, os"
how to make a chain of function decorators?,func()
using url_for across blueprints,app.url_map
clear all widgets in a layout in pyqt,"def clearLayout(layout):
    while layout.count():
        child = layout.takeAt(0)
if child.widget():
    child.widget().deleteLater()"
"python newbie - rock, paper, scissors",print('Type in your choice below:')
how to convert numeric string ranges to a list in python,"a, b = part.split('-')"
profanities in django comments,"bad_words = ['spam', 'eggs']
pattern = re.compile('\\b(%s)\\b' % '|'.join(bad_words), re.IGNORECASE)
some_text = (
    """"""This text contains some profane words like spam and eggs. But it wont match spammy stuff.""""""
    )"
python base 36 encoding,"if number < 0:
    raise ValueError('number must be positive')
alphabet, base36 = ['0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ', '']
while number:
    number, i = divmod(number, 36)
base36 = alphabet[i] + base36
return base36 or alphabet[0]

def base36decode(number):
    return int(number, 36)
print(base36encode(1412823931503067241))
print(base36decode('AQF8AA0006EH'))"
is there a performance cost putting python imports inside functions?,print(t2 - t1)
preventing multiple calls in list comprehension,print([y for y in (x.giveMyNum() for x in q) if y > 1])
find minimum-length subarray that has all numbers,"if len(trees) == K:
    if first_index == -1 or alley[first_index] == alley[i]:
        first_index = min(trees.values())
idx = first_index + 1, i + 1
length = idx[1] - idx[0] + 1
if length < min_length:
    min_idx = idx
min_length = length
if min_length == K:
    break"
how can i count the occurrences of an item in a list of dictionaries?,id_counter = Counter(dct.get(k) for dct in my_list)
how to limit a number to be within a specified range? (python),"def clamp(n, minn, maxn):
    return max(min(maxn, n), minn)"
generating a csv file online on google app engine,self.response.headers['Content-Type'] = 'text/csv'
python newbie: trying to create a script that opens a file and replaces words,f.close()
creating a list from a scipy matrix,scipy.array(x).ravel().tolist()
python check if word is in certain elements of a list,word in wordList[:4]
how to send an email with gmail as provider using python?,server_ssl.close()
add one year in current date python,"your_date_string = 'April 1, 2012'"
python selenium get current window handle,"driver = webdriver.Chrome()
driver.get('https://stackoverflow.com')"
create a multichannel zeros mat in python with cv2,"img = cv2.imread('/tmp/1.jpg')
print(img.shape, img.dtype)"
get a list of all installed applications in django and their attributes,"print(model.__name__, [x.name for x in model._meta.fields])"
pythonic way to verify parameter is a sequence but not string,file = kwargs['file']
python windows path slash,print(x)
python try-except with of if else,"if pk:
    process_pk()
else:
    method_to_be_executed_in_case_of_exception_or_pk_is_false()"
coloring a vtkunstructuredgrid by vector magnitude,colormap.Build()
python: how to check if a network port is open on linux?,"def check_socket(host, port):
    with closing(socket.socket(socket.AF_INET, socket.SOCK_STREAM)) as sock:
        pass"
simple way to group items into buckets,"d.setdefault(x in 'aeiou', []).append(x)"
pandas concat arrays on groupby,"from functools import reduce
def cheaper_set_union(s):
    return reduce(set.union, s, set())"
managing parameters of url (python flask),"sql = '.... LIMIT %s, %s'
g.db.execute(sql, (limit_offset, limit_count))"
python lambda function printing <function <lambda> at 0x7fcbbc740668> instead of value,return x + 1
how to implement multivariate linear stochastic gradient descent algorithm in tensorflow?,"y_data = x_data.dot(w).reshape((-1, 1))
X = tf.placeholder(tf.float32, shape=[None, d], name='X')"
how do you parse and inject additional nodes in a jinja extension?,template = 'example.html.j2'
"python map a filesystem to a directory structure: works, ...but how?","dict.get(dict.get(dict.get(d, 'a'), 'b'), 'c')"
programmatically saving image to django imagefield,"url = models.CharField(max_length=255, unique=True)"
how to write pandas dataframe to sqlite with index,from pandas.io import sql
count the frequency of a recurring list -- inside a list of lists,c = Counter(tuple(x) for x in iter(list1))
check if 2 arrays have at least one element in common?,import numpy as np
rounding dates in python,"print('Today is ', d[t], ' Wait ', 6 - t + 1, ' days for Monday')"
stack bar plot in matplotlib and add label to each section (and suggestions),"ax.set_yticks(y_pos)
ax.set_yticklabels(people)"
get a function argument's default value?,"def get_default_args(func):
    pass"
pandas split column of lists into multiple columns,"df2[['team1', 'team2']] = pd.DataFrame([x for x in df2.teams])
df2 = df2.drop('teams', axis=1)"
how do i dynamically create properties in python?,"msg = ""'{0}' object has no attribute '{1}'"""
perl's begin{} block in python,"import sys
if sys.version < '2.6':
    raise Exception('python 2.6 required')
import myscript"
calculate the difference between two datetime.date() dates in years and months,"d2.year - d1.year + (d2.month - d1.month) / 12, (d2.month - d1.month) % 12"
what's a good strategy to find mixed types in pandas columns?,"df = pd.DataFrame({'A': np.arange(500), 'B': np.arange(500.0)})"
python: getting a windowserror instead of an ioerror,os.mkdir(dir)
python atom api: how to set atom var when using a dictionary,"def setAllBoolsTrue(self):
    self.myBool = True
for key, value in self.getDict().items():
    pass"
dividing binary image into 'blocks' of pixel data,"blocks = np.lib.stride_tricks.as_strided(img, shape=shape, strides=strides)"
django forms: making a disabled field persist between validations,"class SomeForm(forms.Form):
    field = forms.ChoiceField(choices=[(item, item) for item in _choices],
        widget=forms.HiddenInput())
mock_field = forms.ChoiceField(required=False, choices=[(item, item) for
    item in _choices], label='The question', widget=forms.Select(attrs={
    'disabled': 'disabled'}))

def __init__(self, *args, **kwargs):
    super(SomeForm, self).__init__(*args, **kwargs)
mock_initial = kwargs['initial']['field']
self.fields['mock_field'].choices = [(mock_initial, mock_initial)]"
estimating aspect ratio of a convex hull,"ax2.plot(x, y, 'b-', lw=3)
plt.show()"
executing a function (with a parameter) every x seconds in python,thread.start()
"os reboot, shutdown, hibernate, sleep, wakeup (windows python)",import os
replace non-ascii chars from a unicode string in python,"unicodedata.normalize('NFKD', 'm\xfasica').encode('ascii', 'ignore')"
python: padding string according to *actual* length,"tkinter.Label(root, text=displaytext1, font='Courier').pack()"
scrapy crawl urls in order,"class MLBoddsSpider(BaseSpider):
    name = 'sbrforum.com'"
conventions on creating constants in python,OPTION_C = 4
using tempfile to create a sub-directory for all of my tempfiles,"import os
import tempfile
sysTemp = tempfile.gettempdir()
myTemp = os.path.join(sysTemp, 'mytemp')
if not os.path.exists(myTemp):
    os.makedirs(myTemp)
tempdir = tempfile.mkdtemp(suffix='foo', prefix='bar', dir=myTemp)
print(tempdir)"
generate random points on a surface of the cylinder,max_mask = True
how to make scrapy show user agent per download request in log?,"class RotateUserAgentMiddleware(UserAgentMiddleware):

    def __init__(self, user_agent=''):
        self.user_agent = user_agent

def process_request(self, request, spider):
    ua = random.choice(self.user_agent_list)
if ua:
    request.headers.setdefault('User-Agent', ua)
spider.log('User-Agent: {} {}'.format(request.headers.get('User-Agent'),
    request), level=log.DEBUG)"
python asyncore using 100% cpu after client connects,"if is_w:
    pass"
python c extension link with a custom shared library,import ctypes
python pyaudio using multiprocessing,stream.close()
how do i create an alias for a variable in python?,"class A:

    def __init__():
        self.a.b.c = 10

@property
def aliased(self):
    return self.a.b.c

@aliased.setter
def aliased(self, value):
    self.a.b.c = value

def anotherMethod():
    self.aliased *= 10"
how to plot a multivariate function in python?,"fig, ax = plt.subplots()
scat = ax.scatter(x, y, c=z, s=200, marker='o')
fig.colorbar(scat)
plt.show()"
how can i use django oauth toolkit with python social auth?,return 'ERROR'
how to pass parameters of a function when using timeit.timer(),"A = 1
B = 2

def foo(n, m):
    pass
for i in range(20):
    pass
import timeit
t = timeit.Timer(stmt='test.foo(test.A, test.B)', setup='import test')
print(t.timeit(5))"
how to split a mixed string with numbers,"sorted(re.findall('g\\d+$', s))"
django: how to filter model field values with out space?,"return ""REPLACE(%s, ' ', '')"" % lhs, params"
force use of scientific style for basemap colorbar labels,"z = np.random.random((10, 10))
fig, ax = plt.subplots()"
python compare every line in file with all others,"with open(filename, 'r') as fi:
    pass"
inheriting from classes unpacked from a list,"@modify_bases(classes)
class D:
    x = 1"
"in python, how do i exclude files from a loop if they begin with a specific set of letters?","if not name.startswith(('prefix', 'another', 'yetanother')):
    pass"
how to do calculations in lists with *args in python 3.5.1,"lth = len(spitches)
intervals = [((spitches[0 if i + 1 >= lth else i + 1] - x) %
    tones_in_octave) for i, x in enumerate(spitches)]
sintervals = sorted(intervals)
p_form = [sum(sintervals[:i]) for i in range(len(intervals))]
print(""""""({})
this is the prime form!"""""".format(' '.join(map(str, p_form))))"
get plain text from a qlabel with rich text,text = doc.toPlainText()
how to multiply all the numbers in a sequence (python),import math
"binary to string, better than a dictionary?","def decrypt(binary):
    """"""Function to convert binary into string""""""
return ''.join(chr(int(p, 2)) for p in grouper(8, binary, ''))"
simple prime generator in python,"def gen_primes():
    pass"
python: how to generate a vector with nonzero entries at random positions?,"positions = np.random.choice(np.arange(10), 3, replace=False)"
how do i access my webcam in python?,"import cv2
cv2.namedWindow('preview')
vc = cv2.VideoCapture(0)
if vc.isOpened():
    rval, frame = vc.read()
else:
    rval = False
while rval:
    cv2.imshow('preview', frame)
rval, frame = vc.read()
key = cv2.waitKey(20)
if key == 27:
    break
cv2.destroyWindow('preview')"
upload images to amazon s3 using django,"k.key = 'file_path_on_s3'
k.set_contents_from_file(resized_photo)"
python - return values from a function,"def test():
    pass"
can sqlalchemy's session.merge() update its result with newer data from the database?,metadata = MetaData()
"how are deques in python implemented, and when are they worse than lists?",elapsed = time.time() - start
python pandas series of datetimes to seconds since the epoch,"df = DataFrame(dict(date=date_range('20130101', periods=10)))"
how do i use logging in the django debug toolbar?,"logger = logging.getLogger(__name__)
del logging"
"how to deal with ""none"" db values in django queries","for search in (prefs.address1, prefs.address2):
    if search:
        query |= Q(title__icontains=search)
results = Stores.objects.filter(query)"
get a unique id for worker in python multiprocessing pool,"def f(x):
    print(multiprocessing.current_process())"
how to send raw string to a dotmatrix printer using python in ubuntu?,s = socket.socket()
first items in inner list efficiently as possible,count = bc[bc == 1].size
check if dictionary key is filled with list of 2 numbers,"len(d[obj]) == 2 and isinstance(d[obj][0], int) and isinstance(d[obj][1], int)"
group by multiple time units in pandas data frame,"years = list(range(2012, 2015))"
basics of python encryption w/ hashlib sha1,print(m.hexdigest())
context switching with 'yield',"def foo():
    pass"
how can i rotate this list of lists with python,"['.', '.', '0', '0', '0', '0', '0', '.', '.'],
['.', '.', '.', '0', '0', '0', '.', '.', '.'],"
gtk: create a colored regular button,"win.connect('destroy', gtk.main_quit)"
python/numpy - save array with column and row titles,"str_data = np.char.mod('%10.6f', data)
with open('test.csv', 'w') as f:
    pass"
subclass variables with the same name of superclass ones,"def print_super_name(self):
    print(self._A__name)"
summing over months with pandas,"import pandas as pd
df = Series(randn(500), index=pd.date_range('2012-01-01', periods=500))
s2 = df.groupby([lambda x: x.year, lambda x: x.month]).sum()"
python pylab pcolor options for publication quality plots,"plt.xticks(np.arange(0.5, 10.5), list(range(0, 10)))
plt.colorbar()"
return value from thread,thread_.join()
deleting mulitple columns in pandas,"for col in df.columns:
    pass"
how to run a script on all *.txt files in current directory?,"for file in glob.glob('*.txt'):
    with open(file) as fp:
        for result in pattern.findall(fp.read()):
            pass"
a pythonic way to read csv with row and column headers,"reader = csv.reader(open(parameters_file), dialect)"
how to update a histogram when a slider is used?,"b = plt.bar(bins[:-1], hist, width=0.3)"
how to install a package using the python-apt api,pkg.mark_install()
"how to use regular expression to separate numbers and characters in strings like ""30m1000n20m""","num_alpha = re.compile('(([0-9]+)([A-Z]))')
l = num_alpha.split(str1)"
broadcasting in python with permutations,"import numpy as np
(np.random.rand(40, 40, 9, 1, 9, 1, 8) + np.random.rand(1, 9, 1, 9, 8)).shape"
read flat list into multidimensional array/matrix in python,"data = np.array([0, 2, 7, 6, 3, 1, 4, 5])"
removing multiple keys from a dictionary safely,print({key: a[key] for key in a if key not in keys})
how to get something random in datastore (appengine)?,entity = MyModel.all().order('rand_num').get()
generic python metaclass to keep track of subclasses,"class Root(object, metaclass=SubclassTracker):
    pass"
how to plot a roc curve with tensorflow and scikit-learn?,fp = []
write a data string to a numpy character array?,d
pass another object to the main flask application,"app = create_app(logger)
app.run()"
how can i get a human-readable timezone name in python?,abbrev = now.strftime('%Z')
plotting a cumulative graph of python datetimes,"pyplot.gcf().autofmt_xdate()
pyplot.show()"
remove anything following first character that is not a letter in a string in python,"re.split('[^A-Za-z ]|  ', 'Are you 9 years old?')[0].strip()"
how do i force matplotlib to draw while in the ipdb debugger in spyder (or any other debugger)?,"tst_ydata = [1, 1, 1, 1, 1, 1]"
if all in list == something,"lst = list(range(10))
all(type(i) is int for i in lst)
lst.append('steve')
all(type(i) is int for i in lst)"
find all text files not containing some text string,"if sstring in line:
    break"
update for big count of ndb entities fails,"for user in users:
    user.field1 = 'bla bla'
ndb.put_multi(users)
if more:
    deferred.defer(_migrate_users, next_curs, _queue='default')"
return index of last non-zero element in list,"for idx, item in enumerate(originalList):
    if item != 0:
        last_nonzero_index = idx"
2d slice series of 3d array in numpy,"self.i = min(self.im.shape[2] - 1, self.i + 1)"
how to merge two pandas dataframe in parallel (multithreading or multiprocessing),"right1.set_index('key').compute(),"
"running a python debug session from a program, not from the console","p = subprocess.Popen(args=[sys.executable, '-m', 'pdb', 'scriptname.py',
    'arg1'], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=
    subprocess.PIPE)"
how to set default value to all keys of a dict object in python?,"d = defaultdict(lambda : -1, d)
d['baz']"
remapping key names in a list of dictionaries,"print([{'type': x['type_id'], 'name': x['type_name']} for x in d])"
matplotlib.pyplot : save the plots into a pdf,"f.savefig('foo.pdf', bbox_inches='tight')"
pandas: use multiple columns of a dataframe as index of another,"df2.index = pd.MultiIndex.from_arrays(df1.values.T)
print(df2)"
is there a numpy builtin to reject outliers from a list,pcnt = (1 - iq_range) / 2
previous weekday in python,"_offsets = 3, 1, 1, 1, 1, 1, 2"
gae ndb datastore new feature: access datastore entities from other gae app,os.environ['APPLICATION_ID'] = app_id
what is the proper way to insert an object with a foreign key in sqlalchemy?,"return session.query(SomeClass).all()

def insert_objects():
    session = DBSession()
for obj in retrieve_objects():
    another_obj = AnotherClass(somefield=0)
session.add(another_obj)
session.flush()
obj.someforeignkey = another_obj.id
session.add(obj)
transaction.commit()"
how can python observe changes to mongodb's oplog,"query = {'ts': {'$gt': Timestamp(some_timestamp, 0)}}"
getting an element from tuple of tuples in python,"d = dict(COUNTRIES)
print(d['AD'])"
how to set and get a parent class attribute from an inherited class in python?,"class Person(Family):
    pass"
passing data from a java program to a python program and getting results back,System.err.println('SocketIPC creation error: ' + e.getMessage())
is there a way to secure strings for python's eval?,"""""""from binascii import *""""""
""""""eval(unhexlify('6576696c2e5f5f6d6574686f645f5f2829'))"""""""
how can i turn django model objects into a dictionary and still have their foreign keys?,"def obj_to_dict(model_instance):
    serial_obj = serializers.serialize('json', [model_instance])
obj_as_dict = json.loads(serial_obj)[0]['fields']
obj_as_dict['pk'] = model_instance.pk
return obj_as_dict"
generate random utf-8 string in python,"include_ranges = [(33, 33), (35, 38), (40, 126), (161, 172), (174, 255), (
    256, 383), (384, 591), (11360, 11391), (5792, 5872), (880, 887), (890, 
    894), (900, 906), (908, 908)]
alphabet = [get_char(code_point) for current_range in include_ranges for
    code_point in range(current_range[0], current_range[1] + 1)]
return ''.join(random.choice(alphabet) for i in range(length))
if __name__ == '__main__':
    pass"
python3 recursion animation in quickdraw,"def recursive_print(dic):
    if len(dic) > 0:
        pass"
how to write if statements for all 2^n boolean conditions (python),func()
python not able to open file with non-english characters in path,"""""""クレイジー・ヒッツ！"""""""
django - template context processors - breaking my app,"'django.core.context_processors.debug',
'django.core.context_processors.i18n',
'django.core.context_processors.media',
'django.core.context_processors.static',
'django.contrib.messages.context_processors.messages',"
how do i autosize text in matplotlib python?,"plt.xticks(list(range(10)), labels, rotation=30)
plt.tight_layout()"
matplotlib: align origin of right axis with specific left axis value,"ax2.set_ylim((0, 2.7))"
extracting links to pages in another pdf from pdf using python or other method,"pgs = pdf.getNumPages()
key = '/Annots'"
how to to get the pid of a daemon created by a double fork?,print('grand child pid: {}'.format(grandchild_pid))
pandas or statement ending in series contains,"counts = pd.crosstab(df.type, df.subtype)
print(counts.loc[0, [2, 3, 5, 6]].sum() + counts.loc[5, [3, 4, 7, 8]].sum())"
how can i use colon (:) in variable,print(somelist[index])
labeling duplicates in a list,"for i in range(1, counts):
    result.append('%s_%d' % (name, i))
print(result)"
modifying locals in python,"def test():
    exec('a = 5')"
add tensorflow pre-processing to existing keras model (for use in tensorflow serving),"with sess.as_default():
    pass"
python xlwt set custom background colour of a cell,"style = xlwt.easyxf('pattern: pattern solid, fore_colour custom_colour')"
python - compare list of lists and pick biggest value,"import itertools
l = [['a1', 2], ['a1', 3], ['a1', 1], ['b1', 4], ['b1', 2], ['b1', 6], [
    'c1', 2]]"
remove or adapt border of frame of legend using matplotlib,plt.legend(frameon=False)
"matplotlib: how to colorize a large number of line segments as independent gradients, efficiently","if __name__ == '__main__':
    main()"
find python lxml version,match = require('lxml')
parsing a pdf with no /root object using pdfminer,trailer = xref.get_trailer()
recursion to find depth of expression,"print(depth(('+', ('expt', 'x', 2), ('expt', 'y', 2))))"
django - how to simply get domain name?,platform.node()
how to use the cross-spectral density to calculate the phase shift of two related signals,plt.title('cross spectral density between signal 1 and 2')
how can i use a class instance variable as an argument for a method decorator in python?,"def my_decorator(function):
    pass"
keeping the terminal in focus,self._handle = None
how to define free-variable in python?,"print(locals())
baz()
foo()"
continue until all iterators are done python,"for s in iteration(['a', 'b', 'c', 'd', 'e'], [1, 2, 5]):
    pass"
using request.user with django modelform,"form = AnimalForm(request.POST, instance=animal)"
store each class in a separate file python,from filters import air
how to make python regex which matches multiple patterns to same index,"result = [(g.start(), g.group()) for g in re.compile('A').finditer(string)]
result += [(g.start(), g.group()) for g in re.compile('AB').finditer(string)]"
where do things go when i ‘print’ them from my django app?,"hdlr = logging.handlers.SysLogHandler(facility=logging.handlers.
    SysLogHandler.LOG_DAEMON)
formatter = logging.Formatter('%(filename)s: %(levelname)s: %(message)s')
hdlr.setFormatter(formatter)
logger.addHandler(hdlr)"
sqlalchemy - self referential many-to-many relationship with extra column,"class Friendship(db.Model):
    __tablename__ = 'friend'
fk_user_from = db.Column(db.Integer, db.ForeignKey('user.id'), primary_key=True
    )
fk_user_to = db.Column(db.Integer, db.ForeignKey('user.id'), primary_key=True)
extra_field = db.Column(db.Integer)


class User(db.Model):
    __tablename__ = 'user'"
python: programatically create subclasses based on __init__ values,m = Melon()
convert a 1d array to a 2d array in numpy,a = np.arange(9)
how can i know python's path under windows?,os.path.dirname(sys.executable)
how to escape string for generated c++?,"if not 32 <= ord(c) < 127 or c in ('\\', '""'):
    pass"
pandas.read_csv: how to skip comment lines,"pd.read_csv(StringIO(s), sep=',', comment='#')"
putting text in top left corner of matplotlib plot,"line1 = Line2D(list(range(10)), list(range(10)), marker='o', color='goldenrod')"
how can i consume tweets from twitter's streaming api and store them in mongodb,sapi.filter(track=['Gandolfini'])
pyramid: how to set cookie without renderer?,"def lang(request):
    code = request.matchdict['code']"
non distinct prime factors of larger numbers,"factors = [2, 5, 71, 839, 1471, 6857]
[(f, multiplicity(n, f)) for f in factors]"
efficient serialization of numpy boolean arrays,"array([[False, False, False, False, False], [False, False, False, False,
    False], [False, True, True, True, True], [True, True, True, True, True],
    [True, True, True, True, True]], dtype=bool)"
how do i slice a numpy array to get both the first and last two rows,"mask = np.ones(len(x), dtype=np.bool)
mask[2:3] = False
y = x[mask]"
how to display point cloud in vtk in different colors?,self.vtkCells.InsertCellPoint(pointId)
retrieving the 'many' end of a generic foreign key relationship in django,"uuid = UUIDField(editable=False, blank=True, version=4, unique=True)"
how to get random.sample() from deque in python 3?,"idx_batch = set(sample(list(range(len(my_deque))), batch_size))"
what is the result of a yield expression in python?,"for i in range(10):
    x = yield i"
convert a list into a nested dictionary,"print(d)
print(d['a']['b']['c'])"
"in python, given a url to a text file, what is the simplest way to read the contents of the text file?",data = data.split('\n')
"given a byte buffer, dtype, shape and strides, how to create numpy ndarray","xx = np.frombuffer(buffer, dtype)
xx = np.lib.stride_tricks.as_strided(xx, shape, strides)"
how to avoid computation every time a python module is reloaded,"import shelve
d = shelve.open('path/to/my_persistant_dict')
d.update(('key%d' % x, x) for x in range(1000000))"
how to create a datetime equal to 15 minutes ago?,datetime.datetime.now() - datetime.timedelta(minutes=15)
doing something before program exit,"def exit_handler():
    print('My application is ending!')"
cumulative addition/multiplication in numpy,"vectorized_approach(a, b)"
how to add more headers in websocket python client,"class WebSocketApp(object):
    pass"
generating xml in python and lxml,page = etree.Element('results')
how to build a python decorator with optional parameters?,"def trace(*args):
    pass"
how work pre-defined descriptors in functions?,"class C(object):
    pass"
how to calculate the angle between a line and the horizontal axis?,angleInDegrees = arctan(deltaY / deltaX) * 180 / PI
how to remove all the escape sequences from a list of strings?,[word for word in l if word.isalnum()]
using swig for functions with functions as input parameter,"class Add(CBack):

    def __call__(self, x, y):
        return x + y


class Mul(CBack):

    def __call__(self, x, y):
        return x * y
print(callF(Add(), 3, 7))"
how do you convert a pil `image` to a django `file`?,thumb = models.ImageField(upload_to='thumbs')
converting int to bytes in python 3,"def int_to_bytes(x):
    return x.to_bytes((x.bit_length() + 7) // 8, 'big')"
how to run code on all possible combination of 3 strings,"for perm in itertools.permutations(seq):
    f(*perm)"
django admin foreign key dropdown with custom value,"class Meta:
    model = Page"
how can i make a discrete state markov model with pymc?,"for i in range(1, N):
    p_i = p_trans[1] * timesteps[i - 1] + p_trans[0] * (1 - timesteps[i - 1])
timesteps[i] = Bernoulli('T%d' % i, p_i)
return timesteps
timesteps = generate_timesteps(10, 0.8, [0.001, 0.5])
model = MCMC(timesteps)
model.sample(10000)
[np.mean(model.trace(t).gettrace()) for t in timesteps]"
speedup writing c programs using a subset of the python syntax,"i = left
j = right
p = lst[(i + j) / 2]
while i <= j:
    pass"
python - tf-idf predict a new document similarity,"sims = index[vec_tfidf]
print(list(enumerate(sims)))"
is it possible for a unit test to assert that a method calls sys.exit(),"with self.assertRaises(SystemExit) as cm:
    pass"
lazy-loading variables using overloaded decorators,"def __init__(self, func):
    pass"
plotting grouped data in same plot using pandas,"for label, df in p_df.groupby('class'):
    df.vals.plot(kind='kde', ax=ax, label=label)
plt.legend()"
how to use sklearn fit_transform with pandas and return dataframe instead of numpy array?,"scaled_features_df = pd.DataFrame(scaled_features, index=df.index, columns=
    df.columns)"
how to write to a file using non blocking io?,"print('Running test_callback, just for kicks')"
metaclass to parametrize inheritance,"class Base2:

    def bar(self):
        print('Base2.bar()')"
draw a transparent rectangle in pygame,"s = pygame.Surface((1000, 750))
s.set_alpha(128)
s.fill((255, 255, 255))
windowSurface.blit(s, (0, 0))"
best way to reinitialize a dict in python 3,"_replace_csv_headers(output_files[row[0]], [r[0] for r in cur.description])"
classifying a series to a new column in pandas,"df['D'][(df['A'] > 0) & (df['B'] == 0) & (df['C'] == 0)] = 'c1'
df['D'][(df['A'] == 0) & ((df['B'] > 0) | (df['C'] > 0))] = 'c2'
df"
creating a masked array in python with multiple given values,"a[2, 2] = -999"
how to calculate cointegrations of two lists?,"r('library(urca)')
print(r('ca.po(cbind(a,b))'))"
how do i compare rpm versions in python,import rpm
monitoring user activity in django,"completed_chapter = models.ForeignKey(Chapter)
completed_subchapter = models.ForeignKey(SubChapter)
completed_subsection = models.ForeignKey(SubSection)"
convert date format python,import date_converter
how to remove multiple columns that end with same text in pandas?,"df
df.loc[:, (~df.columns.str.contains('prefix$'))]"
is it possible to prevent percent string substitution in python,"def mod2(n):
    pass"
inverse of hasattr in python,referrer.append(x)
how do i delete a row in a numpy array which contains a zero?,"a = np.delete(a, b, 0)"
python check that key is defined in dictionary,a['b'] = 1
how to strip all whitespace from string,"s = ' \t foo \n bar '
"""""""""""".join(s.split())"
swap slices of numpy arrays,"t2 = a[:, (0), (0)]"
how to extend model on serializer level with django-rest-framework,"def get_queryset(self):
    """"""
        Override .get_queryset() to filter the items returned by the list.
        """""""
how to set the class of value returned by __new__ without using super?,"def __new__(cls):
    pass"
redirect user in python + google app engine,"def get(self):
    ip = self.request.remote_addr"
python - plotting velocity and acceleration vectors at certain points,axes = fig.gca(projection='3d')
"how to get value on a certain index, in a python list?",iter(List)
django create csv file that contains unicode and can be opened directly with excel,"response.write('\ufeff'.encode('utf8'))
writer = csv.writer(response, delimiter=';', dialect='excel')
writer.writerow(['Second row', 'A', 'B', 'C', '""Testing""',
    '\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac'.encode('utf8')])"
"partial map with a dictionary in pandas (python), return attributes error","df.loc[df.Map == df.WD, 'Map'] = ''
df['Exact'] = df.WD.isin(equiv).astype(int)"
the same list of python libraries for ubuntu and windows,"def install(package):
    pip.main(['install', package])
if __name__ == '__main__':
    with open(sys.argv[1]) as f:
        for line in f:
            pass"
how to remove \n from a list element?,[i.strip() for i in l]
convert xml/html entities into unicode string in python,"def unescape(text):
    pass"
generating pdf-latex with python script,sys.stdout.write('Enter value for ' + token + ': ')
python pandas: keep selected column as dataframe instead of series,"df[[0]]
df.loc[:, (['A'])]"
how to write a tuple of tuples to a csv file using python,"import csv
A = ('Max', 3, 'M'), ('bob', 5, 'M'), ('jane', 6, 'F')
with open('newfile.csv', 'wb') as result:
    writer = csv.writer(result, dialect='excel')
writer.writerows(A)"
list indexes of duplicate values in a list with python,"a = [1, 2, 3, 2, 1, 5, 6, 5, 5, 5]"
how do i enumerate() over a list of tuples in python?,print('Letter #%d is %s/%s' % i)
how to write python sort key functions for descending values,"for x in ['__lt__', '__le__', '__eq__', '__ne__', '__ge__', '__gt__']:
    pass"
is it possible to use functions defined in the shell from python?,"fun_body = """"""() {  echo 'Hollow world'
}
""""""
os.environ['BASH_FUNC_gash%%'] = fun_body
p1 = subprocess.Popen('./myscript.sh')"
sqlalchemy - how can i make eager loading count property,"class Bar(Base):
    __tablename__ = 'bar'
id = Column(Integer, primary_key=True)

@hybrid_property
def foo_count(self):
    return object_session(self).query(Foo).filter(Foo.bar == self).count()

@foo_count.expression
def foo_count(cls):
    return select([func.count(Foo.id)]).where(Foo.bar_id == cls.id).label(
        'foo_count')"
python function for capping a string to a maximum length,"print(mywrap(s, 10))"
how can you make a vote-up-down button like in stackoverflow?,"def vote(request):
    if request.method == 'POST':
        pass"
send asyncio tasks to loop running in other thread,t.start()
creating a new column consisting of lists in a dataframe using pandas,"df['newCol'] = np.split(id_arr.cumsum(), idx[:-1])"
how to use jinja2 as a templating engine in django 1.8,"def index(request, **kwargs):
    pass"
pass file * into function from python / ctypes,open('test.txt')
django - generate excel reports based on model fields,result.update({['datarow{}'.format(index)]['Club']: out_put})
python: defining a union of regular expressions,"pattern = '|'.join(re.escape(p) for p in list_patterns)
print(re.findall(pattern, string))"
python basics printing 1 to 100,"for number in range(100):
    pass"
using pass on a non necessary else statement,"if fields:
    for i in foo:
        if i == 'something':
            pass"
retrieve module object from stack frame,"def callers_module():
    module_name = inspect.currentframe().f_back.f_globals['__name__']
return sys.modules[module_name]"
expire a view-cache in django?,from django.core.cache import cache
how to clamp an integer to some range? (in python),"index = numpy.clip(index, 0, len(my_list) - 1)"
invisible watermarks in images,width = int(math.ceil(img.size[0] * factor ** 0.5))
square root scale using matplotlib/python,"ax.set_yticks(np.arange(0, 8.5, 0.5) ** 2, minor=True)"
how do i regex match with grouping with unknown number of groups,"if a[0] == 'VALUE':
    pass"
apply row and column sum to cell in pandas data frame,rowsums.columns = colsums.columns
variable explorer in jupyter notebook,"def _ipython_display_(self):
    pass"
how to subclass list and trigger an event whenever the data change?,"self._list.insert(index, item)"
square of each element of a column in pandas,"import pandas as pd
df = pd.DataFrame([[1, 2], [3, 4]], columns=list('ab'))"
convert python dictionary to json array,"json1 = json.dumps(dict2, ensure_ascii=False)"
change string list to list,"ast.literal_eval('[1,2,3]')"
multiindex from array in pandas with non unique data,"group_position(df['Z'], df['A'])"
xml parsing with python and minidom,dom = xml.dom.minidom.parse('docmap.xml')
best practices with reading and operating on fortran ordered arrays with numpy,"wrong_order = np.fromfile('f_order.dat', dtype=np.uint8).reshape(shape)
plot(wrong_order)"
python - read 1000 lines from a file at a time,"def get_line():
    with open('your file') as file:
        for i in file:
            yield i
lines_required = 1000
gen = get_line()
chunk = [next(gen) for i in range(lines_required)]"
how do i efficiently do a bulk insert-or-update with sqlalchemy?,"def chunked(seq, chunksize):
    """"""Yields items from an iterator in chunks.""""""
it = iter(seq)
while True:
    yield chain([next(it)], islice(it, chunksize - 1))
conn = engine.commit()
for chunk in chunked(records, 1000):
    with conn.begin():
        pass"
django rest framework imagefield,"return Response(serializer.data, status=status.HTTP_201_CREATED)"
grab a line's whitespace/indention with python,"def indention(astr):
    pass"
rename a dictionary key,mydict[new_key] = mydict.pop(old_key)
parsing through edges in networkx graph,"G.add_edge(2, 3, weight=10)"
how do i subclass qapplication properly?,"class MyApp(QApplication):

    def __init__(self, args):
        super(MyApp, self).__init__(args)"
how to get data from r to pandas,"l = ListVector({'a': 1, 'b': 2})"
add multiple rows into google spreadsheet using api,query = gdata.spreadsheet.service.CellQuery()
logging from static methods,"class MyClass(object):
    pass"
how to create a comprehensible bar chart with matplotlib for more than 100 values?,plt.title('Utilisateur')
parsing xml in python using a custom element class,print('Done!')
get raw decimal value from mysqldb query,"output = []
for row in c:
    output.append(float(row[4]))"
is there a library for splitting sentence into a list of words in it?,word = ''
how can i send a message to a group conversation with skype4py in python,"if not messageSent:
    pass"
python string format character for __unicode__?,"def __str__(self):
    return 'str'"
python and tkinter: using scrollbars on a canvas,root.mainloop()
how can i make a custom conversion from an object to a dict?,"_dictkeys = 'y', 'z'"
python - matplotlib: find intersection of lineplots,"def pdiff(x):
    return p1(x) - p2(x)"
django - testing pages for 500 status,"for url in urlpatterns:
    pass"
find string within json with python,"if [x for x in data['device'] if x.get('serial') == '00000000762c1d3c']:
    print('IN')
else:
    pass"
pyobjc tutorial without xcode,"if __name__ == '__main__':
    app = MyApp.sharedApplication()"
want to find a way of doing an average of multiple lists,zip(*l)
how can i run an external command asynchronously from python?,"""""""Error handling."""""""
python: logging module for print statements: duplicate log entries,"if data:
    self.logger.info(data)"
insert item into case-insensitive sorted list in python,"['aa', 'bb', 'CC', 'Dd', 'ee']"
how much memory is used by a numpy ndarray?,a.itemsize
get array values in python,"a = [1, 3, 4]
b = [3, 4]
print(map(None, a, b))
[(1, 3), (3, 4), (4, None)]"
how to write python code to access input and output from a program written in c?,"input.write('hello world !')
print(output.read().decode('latin1'))"
nltk: can i add terminal to grammar that is already generated,"new_grammar._productions.append(nltk.grammar.Production(lhs2, [lhs]))"
what is the most efficient way in python to convert a string to all lowercase stripping out all non-ascii alpha characters?,"list(filter(str.isalpha, 'A235th@#$&( er Ra{}|?>ndom')).lower()"
concatenating two one-dimensional numpy arrays,"b = r_[a, c]"
using python and urllib to get data from yahoo finance,"data = soup.find('span', attrs={'id': 'yfs_l84_'.format(name)})"
splitting on last delimiter in python string?,"s.rsplit(',', 1)"
can matplotlib errorbars have a linestyle set?,"eb1[-1][0].set_linestyle('--')
eb2 = plt.errorbar(x, y2, yerr=yerr2, lw=2, errorevery=3)"
hadoop streaming: mapper 'wrapping' a binary executable,"cli = './binary %s' % argument
cli_parts = shlex.split(cli)
mp = Popen(cli_parts, stdin=PIPE, stderr=PIPE, stdout=PIPE)
mp.communicate()[0]"
get raw decimal value from mysqldb query,c = db.cursor()
python - efficiently find where something would land in a sorted list?,from bisect import insort
nonalphanumeric list order from os.listdir() in python,lst.sort()
disable 'pause' in windows bat script,BINARY = 'C:/Program Files/foo/bar.exe'
python regular expression with utf8 issue,match = pattern.match(line)
is it possible to stream output from a python subprocess to a webpage in real time?,sys.stdout.flush()
"return max value from panda dataframe as a whole, not based on column or rows",print(df[val_cols].max())
python - testing an abstract base class,"def concreter(abclass):
    pass"
find out largest string value size for keys in redis database,"if val_len > max_len:
    max_len = val_len"
python: logging all of a class' methods without decorating each one,"class Class1:

    def method1(self):
        pass"
"in python, how can i get the next and previous key:value of a particular key in a dictionary?","d = OrderedDict([('aaaa', 'a'), ('bbbb', 'b'), ('cccc', 'c'), ('dddd', 'd'),
    ('eeee', 'e'), ('ffff', 'f')])
i = 'eeee'"
multiple ping script in python,"output = p.communicate()
result = p.wait()"
how do i find largest valid sequence of parentheses and brackets in a string?,"def longest_valid(s):
    match = [0] * (len(s) + 1)
for i in range(1, len(s)):
    if s[i] in '({[':
        continue
open = '({['[')}]'.index(s[i])]
start = i - 1 - match[i - 1]
if start < 0:
    continue
if s[start] != open:
    continue
match[i] = i - start + 1 + match[start - 1]
best = max(match)
end = match.index(best)
return s[end + 1 - best:end + 1]
print(longest_valid('()(({}[](][{[()]}]{})))('))
print(longest_valid('()(({}[]([{[()]}]{})))('))
print(longest_valid('{}[()()()()()()()]'))"
most efficient way to index words in a document?,main()
web-scraping javascript page with python,"response = requests.get(my_url)
soup = BeautifulSoup(response.text)"
multi-processing in python: numpy + vector summation -> huge slowdown,cursor = db.cursor()
read lines containing integers from a file in python?,line.strip().split(' ')
how to stop all tests from inside a test or setup using unittest?,"counter += 1
if counter >= 3:
    pytest.exit('decided to stop the test run')

def test_one():
    pass

def test_two():
    pass

def test_three():
    pass"
common pitfalls in python,a[0][0] = 2
stopping a thread after a certain amount of time,"def main():
    t1_stop = threading.Event()
t1 = threading.Thread(target=thread1, args=(1, t1_stop))
t2_stop = threading.Event()
t2 = threading.Thread(target=thread2, args=(2, t2_stop))
time.sleep(duration)
t2_stop.set()

def thread1(arg1, stop_event):
    while not stop_event.is_set():
        stop_event.wait(time)
pass

def thread2(arg1, stop_event):
    while not stop_event.is_set():
        stop_event.wait(time)
pass"
python - scikit find variable importance for categorical variables,import numpy as np
how can i stop a while loop?,"if numpy.array_equal(tmp, universe_array):
    break"
how to delete files from amazon s3 bucket?,k.key = 'images/my-images/' + filename
how to calculate p-value for two lists of floats?,"from itertools import combinations
from scipy.stats import ttest_ind"
error opening megawarc archive from python,ordereddict.py
can you upload to s3 using a stream rather than a local file?,"writer.writeheader()
fout.write(f.getvalue())"
python: read lines from compressed text files,"import gzip
with gzip.open('input.gz', 'r') as fin:
    for line in fin:
        pass"
find the most frequent number in a numpy vector,from collections import Counter
topic distribution: how do we see which document belong to which topic after doing lda in python,scores.append(score)
how to detect mouse click in python 3 on linux?,C.run()
creating separate database connection for every celery worker,"if self._close_old_connections:
    return self._close_old_connections()
if not self.db_reuse_max:
    return self._close_database()
if self._db_recycles >= self.db_reuse_max * 2:
    self._db_recycles = 0
self._close_database()"
"server-sent events with python,twisted and flask: is this a correct approach for sleeping?","root.putChild('my_event_source', SSEResource())"
how to time execution time of a batch of code in python?,print('-' * len(string))
how to build a mini-network of small programs feeding each other data?,self.now += delay
python argparse: insert blank line between help entries,"parser.add_argument('-s', '--silent', action='store_true', help=
    'If specified, network_monitor.py will not play any sounds.')"
how to better rasterize a plot without blurring the labels in matplotlib?,"ax.set_xlim(0, 10)"
geodjango layermapping & foreign key,fkey = some_method_that_gets_the_foreign_key()
calculate difference between adjacent items in a python list,"x = [5, 10, 15, 20, 25]
all(x[i] - x[i - 1] == x[i + 1] - x[i] for i in range(1, len(x) - 1))"
python subprocess: how to use pipes thrice?,"p2 = subprocess.Popen(['mkbitmap', '-f', '2', '-s', '2', '-t', '0.48'],
    stdin=p1.stdout, stdout=subprocess.PIPE)
p1.stdout.close()"
django: how to manage development and production settings?,from settings_dev import *
passing variable from javascript to server (django),map.setCenter(pos)
adjusting gridlines on a 3d matplotlib figure,mpl.rcParams['lines.linewidth'] = 2
is it possible to stream output from a python subprocess to a webpage in real time?,"proc = subprocess.Popen(['python', 'slowprint.py'], stdout=subprocess.PIPE)
line = proc.stdout.readline()
while line:
    yield line
line = proc.stdout.readline()
server = wsgiserver.CherryPyWSGIServer(('0.0.0.0', 8000), application)
server.start()"
how can i convert windows timezones to timezones pytz understands?,import pprint
efficiently find the range of an array in python?,"if arr is empty:
    return None, None"
scrapy from list to extract key or value,"for image_url in item.get('image_urls'):
    pass"
python: appending a dictionary to a list - i see a pointer like behavior,"b = {(1): 'one'}
a.append(dict(b))
print(a)
b[1] = 'iuqsdgf'"
how to use beautiful soup to find a tag with changing id?,"doc = etree.parse(openfile)
for elem in doc.xpath('//div[starts-with(@id, ""value_xxx_c_1_f_8_a_"")]'):
    pass"
python readline() from a string?,"sendMessage(*msg.split('\n', 2))"
using the ajax function to store data in database (web2py framework),db.comment_post.post.default = request.vars.post_id
splitting a list into uneven groups?,"[[1, 2], [3, 4, 5, 6], [7, 8, 9, 10, 11, 12]]"
how can i iterate over files in a given directory?,"if filename.endswith('.asm') or filename.endswith('.py'):
    continue"
raw_id_fields: how to show a name instead of id?,first_name = models.CharField(max_length=50)
how to set dtypes by column in pandas dataframe,"for k, v in dtype:
    pass"
python dictionary to variable assignments based on key value to variable name,"if hasattr(self, k):
    setattr(self, k, d[k])"
django: render staticfiles through template engine at deploy-time,self.delete(original_name)
sqlalchemy - how to map against a read-only (or calculated) property,"class Users(Base):
    __tablename__ = 'users'
id = Column(Integer, primary_key=True)
name = Column(String)"
iterate over a dict or list in python,"def seq_iter(obj):
    return obj if isinstance(obj, dict) else range(len(obj))
x = [1, 2, 3]
for i in seq_iter(x):
    x[i] = 99
x
x = {(1): 2, (2): 3, (3): 4}
for i in seq_iter(x):
    x[i] = 99
x"
pylint: using possibly undefined loop variable 'n',"iterator = (i * i for i in range(100) if i % 3 == 0)
n = None
for n, i in enumerate(iterator):
    do_something(i)
print(n)"
is there a way to suppress printing that is done within a unit test?,"def bar(self):
    pass"
object-based default value in sqlalchemy declarative,Base.metadata.create_all(e)
"how can ""nameerror: free variable 'var' referenced before assignment in enclosing scope"" occur in real code?","if False:
    pass"
python copy files by wildcards,"import glob
import shutil
dest_dir = 'C:/test'
for file in glob.glob('C:/*.txt'):
    print(file)
shutil.copy(file, dest_dir)"
most recent max/min value,"ilocs_window = pd.rolling_apply(df, window=5, func=lambda x: x.argmin(),
    min_periods=1)
ilocs = ilocs_window['value'] + ([0, 0, 0, 0] + list(range(len(ilocs_window) - 4)))
ilocs
df.index.take(ilocs)
df['rolling_min_date'] = df.index.take(ilocs)
df"
unable to reliabily match base 64 encrypted string from strings stored in a website: python program,loggedin = True
python bottle multiple file upload,"def do_upload():
    uploads = request.files.getall('upload')
for upload in uploads:
    print(upload.filename)
return 'Found {0} files, did nothing.'.format(len(uploads))"
efficiently find differences in elements of a list,print(d)
displaying multiple masks in different colours in pylab,import matplotlib.pyplot as plt
change specific value in csv file via python,r = csv.reader(open('/tmp/test.csv'))
no column names in pandas python,"df.ix[0, 0]
df[0][0]"
how to convert int to enum in python?,"Fruit = {(4): 'Apple', (5): 'Orange', (6): 'Pear'}
Fruit[4]
Fruit[6]"
python logging set level in basicconfig,"def show(level):
    logger = logging.getLogger()
logger.setLevel(level)
logging.info('info')"
how to access a specific start_url in a scrapy crawlspider?,"item['name'] = hxs.select('//td[@id=""item_name""]/text()').extract()
item['description'] = hxs.select('//td[@id=""item_description""]/text()'
    ).extract()
item['start_url'] = response.meta['start_url']
return item"
numpy digitize with datetime64,"np.digitize(date_bins_i8, date_bins_i8)"
group by multiple keys and summarize/average values of a list of dictionaries,pprint(result)
relative and absolute paths of all files,import os
indexable weak ordered set in python,"def add(self, value):
    self._od[value] = None

def discard(self, value):
    self._od.pop(value, None)


class OrderedWeakrefSet(weakref.WeakSet):

    def __init__(self, values=()):
        super(OrderedWeakrefSet, self).__init__()
self.data = OrderedSet()
for elem in values:
    self.add(elem)"
unexpected result from sys.getrefcount,sys.getrefcount(i)
google app engine (python) - uploading a file (image),imagedata.image = blob_info.key()
set partition with constraints in python,return [x for x in a if x not in b]
what's the most pythonic way to ensure that all elements of a list are different?,import itertools
how to get a value from a cell of a data frame?,sub_df.iloc[0]
how to remove a object in a python list,return self.x == p.x and self.y == p.y
how to read a file (or stdin) line by line in python not waiting for reading entire file,"with open('myfile.txt', 'r') as myfile:
    pass"
iterating over every two elements in a list,"for x, y in grouped(l, 2):
    pass"
how do you create line segments between two points?,"plot.plot(x, y)
pyplot.show()"
python pyramid - add multiple chameleon base templates,"base2 = get_renderer('templates/base2.pt').implementation()
event.update({'base': base, 'base2': base2})"
how to get error log of a disutils setup in python?,distutils.log.set_verbosity(distutils.log.DEBUG)
namespace packages with a core part?,import mylibrary.core
how to find the first index of any of a set of characters in a string,"a = [' ', '!', '$']"
rearranging list items based on a score to fit a function curve,"s = sorted(zip(map(int, points), words))
new_words = [word for p, word in list(reversed(s[::2])) + s[1::2]]
new_words"
how to render arabic strings in bottle framework?,"def hello():
    pass"
python equivalent for sprintf,string.Template('I like $food').substitute(food='spinach')
how to make scipy.interpolate give an extrapolated result beyond the input range?,"f = interpolate.interp1d(x, y, fill_value='extrapolate')"
pythonic way to populate numpy array,"for row in reader:
    for i, val in enumerate(row):
        res_list[i].append(float(val))"
deprecationwarning in sklearn minibatchkmeans,min_kmeans.fit(vectors)
add days to dates in dataframe,"from datetime import timedelta
df.head()
df['X_DATE'] = df['DATE'] + timedelta(days=180)"
how can i get those two processes (programs) talk to each other directly using pipes?,"import subprocess
import sys
progA = subprocess.Popen('a', stdin=subprocess.PIPE, stdout=subprocess.PIPE)"
get smallest n values from numpy array ignoring inf and nan,b = np.sort(a)
how can i make start_url in scrapy to consume from a message queue?,"while True:
    yield self.queue.read()"
numpy convert row vector to column vector,"vector1 = matrix1[:, 0:1]"
how to inherit from monkeydevice?,"class TestDevice(MonkeyDevice):
    pass"
django model polymorphism with proxy inheritance,"self.__class__ = getattr(sys.modules[__name__], self.type + 'Discount')"
combining 2 dictionaries with common key,"dict2 = {'key1': ['value14', 'value15'], 'key2': ['value24', 'value25']}"
changing a function implementation in python,"print(function([2, 3]))"
string formatting options: pros and cons,"some_date = {'month': 'January', 'day': '1st'}"
getting a json request in a view (using django),"print(label, url)"
for loop item unpacking,"for item in SEQUENCE:
    s.append(item[0] + item[1])
return s

def unpacking():
    s = []
for a, b in SEQUENCE:
    s.append(a + b)
return s"
numpy: multidimensional index. row by row with no loop,"out = A.reshape(shp[0], shp[1], -1)[(np.arange(shp[0])), :, (B[:, (0)] *
    shp[3] + B[:, (1)])]"
programmatically detect system-proxy settings on windows xp with python,"js.AddCode('function add(a, b) {return a+b;}')"
importing modules in python - best practice,from pandas import DataFrame as PDataFrame
selection based on percentage weighting,"ProportionValue.Create(0.7, 'a'),"
readably print out a python dict() sorted by key,"mydict = {'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5}"
"python for autohotkey style key-combination sniffing, automation?","def OnKeyboardEvent(event):
    print(event.Ascii)
hm = pyHook.HookManager()
hm.KeyDown = OnKeyboardEvent"
how to subtract dates with python,"today = datetime.datetime.now()
DD = datetime.timedelta(days=90)"
passing a numpy array to c++,"import numpy as np
result = np.arange(20, dtype=np.float).reshape((2, 10))"
placing custom images in a plot window--as custom data markers or to annotate  those markers,"PLT.draw()
PLT.show()"
writing multi-line strings to cells using xlwt module,"sheet.write(0, 0, 'Hello\nWorld')
style = xlwt.XFStyle()
style.alignment.wrap = 1
sheet.write(0, 1, 'Hello\nWorld', style)
book.save('test.xls')"
getting only particular columns in every row in a numpy array,"[4, 5, 6],
[7, 8, 9],"
numpy equivalent of matlab dummyvar,"def sparse_dummyvar(partitions):
    num_rows = np.sum(np.max(partitions, axis=1))"
formatting text output with scrapy in python,"content = content.select('string()').extract()[0]
cleaned_content = re.sub('(\\s)\\s+', '\\1', content, flags=re.MULTILINE +
    re.UNICODE)
texts = '%s\n\n%s' % (title, cleaned_content)
with codecs.open(filename, 'w', encoding='utf-8') as output:
    output.write(texts)"
most pythonic way to read csv values into dict of lists,"data['a']
data[0]
data['c'][2]
data[['a', 'c']]"
python file interface for strings,"import io
import sys
sys.stdout = io.StringIO()
print('foo', 'bar', 'baz')
s = sys.stdout.getvalue()"
detecting consecutive integers in a list,"print(map(itemgetter(1), g))"
is there an easy way to capture all frame/window keystrokes in python or wxpython,keycode = event.GetKeyCode()
storing the columns of a spreadsheet in a python dictionary,"for header, col in zip(headers, worksheet.row(index)):
    pass"
multiprocessing with qt works in windows but not linux,"super(MainWindow, self).__init__(parent)"
how to document a module constant in python?,MY_CONSTANT = 'foo'
how to get the name of a function (plus its module) in python?,"def get_fun(fn):
    return '.'.join([fn.__module__, fn.__name__])"
how to do boolean algebra on missing values?,"def __or__(self, other):
    pass"
how do i read a random line from one file in python?,line = next(afile)
argparse choices structure of allowed values,"group_simulate.add_argument('-P', type=SpecialString, help=
    'simulate FC port down', nargs=1, metavar='fc_port_name', dest='simulate')"
using numpy.take for faster fancy indexing,"lut = np.random.randint(-2 ** 31, 2 ** 31 - 1, size=(planes * 256 * n // 4,)
    ).view('uint8')
lut = lut.reshape(planes, 256, n)"
how to feed string to pyparsing line by line?,PyparsingGrammar.parseString(line)
is there pythonic oneliner to iterate over lines of a file?,"with open(filename) as f:
    pass"
multiple models in a single django modelform?,"super(CombinedFormBase, self).__init__(*args, **kwargs)"
python- find unmatched values from multiple lists,"c(A, B)"
how to dynamically select a method call in python?,method()
python - write data into csv format as string (not file),"writer = csv.writer(output, quoting=csv.QUOTE_NONNUMERIC)
writer.writerow(csvdata)"
intersection of two columns of pandas dataframe,"intersections += [(list(intersect(i1, i2)) + i2.data) for i2 in tree[i1]]"
how to account for accent characters for regex in python?,import unicodedata
python replace single backslash with double backslash,s
matplotlib: aligning y-axis labels in stacked scatter plots,ax.plot(data2)
how to use django to get the name for the host server?,"import socket
try:
    HOSTNAME = socket.gethostname()
except:
    pass"
performance in numpy,"b1 = np.all(frame < NSigma2, axis=-1)
b2 = np.all(frame > PSigma2, axis=-1)"
how can info and debug logging message be sent to stdout and higher level message to stderr,logger.warning('WARNING')
how to divide a set of overlapping ranges into non-overlapping ranges?,"if last_start is not None:
    ranges.append((last_start, offset - 1, current_set))"
test a boolean expression in a python string,"operator = '<'
lhs, rhs = map(ast.literal_eval, map(str.strip, expr.split(operator)))
eval('%s %s %s' % (lhs, operator, rhs))"
how to check if os is vista in python?,VER_NT_WORKSTATION = 1
extract video frames in python,"cv2.imwrite(str(c) + '.jpg', frame)"
how to find the last occurrence of an item in a python list,return len(lst) - 1 - r_idx
change one character in a string in python?,""""""""""""".join(s)"
extracting just month and year from pandas datetime column (python),"df.date_time
df.date_time.map(lambda x: x.strftime('%Y-%m-%d'))"
how do you use factory_boy to model a mongoengine embeddeddocument?,name = 'John Doe'
sorting algorithm to keep equal values separated,"n = len(colors)
total = n * maxrun
current_run = 0
for _ in range(numselections):
    i = randrange(total - current_run) // maxrun
yield colors[i]
colors[i], colors[-1] = colors[-1], colors[i]
current_run = current_run + 1 if i == n - 1 else 1
if __name__ == '__main__':
    colors = ['red', 'blue', 'green', 'yellow']
for color in choose(colors, 100, maxrun=4):
    pass"
building scapy packets with packetfields shorter than 8 bits,"class StatusField(FlagsField):
    name = '4 bit status'

def __init__(self, name):
    FlagsField.__init__(self, name, 0, 4, ['a', 'b', 'c', 'd'])


class TotalStatus(Packet):
    pass"
fastest way to delete a line from large file in python,fro.readline()
how to export figures to files from ipython notebook,"legend(['myline'])
axis([0, 80, 0, 120])"
how to animate a time-ordered sequence of matplotlib plots,import matplotlib.pyplot as plt
python: determining whether any item in sequence is equal to any other,"def all_different(objs):
    return len(frozenset(objs)) == len(objs)"
create contour plot from pandas groupby dataframe,"plt.contourf(x, y, Z)"
'isomorphic' comparison of networkx graph objects instead of the default 'address' comparison,"(3713081631935493181)[2, 3]"
replacing an element in a list with multiple elements,l1[0:1] = l2
matplotlib custom marker/symbol,"plt.xlabel('x-axis')
plt.ylabel('y-axis')"
how to get multiple matches with difflib.sequencematcher?,"text = 'ACTGACT'
matches = [m.span() for m in re.finditer(pattern, text)]"
networkx: how to draw coloured edges?,"edges, colors = zip(*list(nx.get_edge_attributes(G, 'color').items()))
nx.draw(G, edgelist=edges, edge_color=colors, width=10)
plt.show()"
flask confusion with app,app = Flask(__name__)
"ibpy getting portfolio information: interactive broker, python",portfolio.append(entry)
"django rest framework , order_by a json from serializers.py file",queryset = Establecimiento.objects
python remove duplicate dictionaries from a list,"import pprint
l = [{'firstname': 'joe', 'surname': 'bloggs'}, {'firstname': 'john',
    'surname': 'smith'}, {'firstname': 'joe', 'surname': 'bloggs'}, {
    'firstname': 'jane', 'surname': 'bloggs'}]
getvals = operator.itemgetter('firstname', 'surname')
l.sort(key=getvals)
result = []
for k, g in itertools.groupby(l, getvals):
    result.append(next(g))
l[:] = result
pprint.pprint(l)"
using python and lxml to strip only the tags that have certain attributes/values,"parent.remove(node)
doc = etree.parse(open('doc.xml'))"
how to read a file byte by byte in python and how to print a bytelist as a binary?,"if not byte_s:
    break"
how to drop extra copy of duplicate index of pandas series?,"s = Series(list(range(10)), index=[1, 2, 2, 2, 5, 6, 7, 7, 7, 8])"
decimal precision in python without decimal module,"divide(2, 7, 1000)"
how to make a simple table in reportlab,"elements.append(table)
doc.build(elements)"
how do you add additional files to a wheel?,"setup(name='extra', version='0.0.1', py_modules=['extra'], data_files=[(
    'images', glob('assets/*.png'))])"
japanese numerals to arabic numerals converter in python,import kanjinums
how to write python code to access input and output from a program written in c?,input.close()
pyqt4: how to pause a thread until a signal is emitted?,main()
python xml to dictionary to iterate over items,"with open(xml_file_path) as xml_file:
    tree = etree.iterparse(xml_file)"
django - how to save modified form without overriding original entry,"approved = models.Charfield(max_length=1000, default=None, Blank=True)"
convert categorical data in pandas dataframe,"df[cat_columns] = df[cat_columns].apply(lambda x: x.cat.codes)
df"
elegant way to store dictionary permanently with python?,"json.dump(my_dict, f)"
filter foreignkey within inlineform,"class BookPrioInline(admin.TabularInline):
    model = BookPrio


class AuthorAdmin(admin.ModelAdmin):
    inlines = BookPrioInline,

def change_view(self, request, object_id, extra_context=None):

    def formfield_for_foreignkey(self, db_field, request, **kwargs):
        if db_field.name == 'book':
            kwargs['queryset'] = Book.objects.filter(author__id=object_id)
return super(ItemInline, self).formfield_for_foreignkey(db_field, request,
    **kwargs)
ItemInline.formfield_for_foreignkey = formfield_for_foreignkey
self.inline_instances = [ItemInline(self.model, self.admin_site)]
return super(AuthorAdmin, self).change_view(request, object_id,
    extra_context=extra_context)
admin.site.register(Author, AuthorAdmin)"
how to properly use python's isinstance() to check if a variable is a number?,"NumberTypes = int, int, float, complex
isinstance(var, NumberTypes)"
binding local variables in python,output = (lambda x: x + x)(data[2])
scrapy: call a function when a spider quits,from scrapy.xlib.pydispatch import dispatcher
how to generate 2d gaussian with python?,"def makeGaussian(size, fwhm=3, center=None):
    """""" Make a square gaussian kernel.
    size is the length of a side of the square
    fwhm is full-width-half-maximum, which
    can be thought of as an effective radius.
    """"""
x = np.arange(0, size, 1, float)
y = x[:, (np.newaxis)]
if center is None:
    x0 = y0 = size // 2
else:
    x0 = center[0]"
"how to have the docstring respect the pep257, while usable with docopt to comply with i18n using gettext?","if __name__ == '__main__':
    if hasattr(vars()['__builtins__'], '_') and not 'NullTranslations' in str(_
        ):
        pass"
numpy's ones and zeros array creation--how to do the same for an arbitrary value?,"-1 * np.ones((2, 5))"
is there a faster way to convert an arbitrary large integer to a big endian sequence of bytes?,"def packl_ctypes_numpy(lnum):
    pass"
how to customize sklearn cross validation iterator by indices?,"labels = np.arange(0, 10) % 2
from sklearn.cross_validation import LeaveOneLabelOut"
get all combination of n binary value,"lst = list(itertools.product([0, 1], repeat=n))"
"example use of ""continue"" statement in python?","if x ** 2 - y ** 2 > 0:
    pass"
python indexing with list of indices to exclude,"to_exclude = {1, 2}
vector = ['a', 'b', 'c', 'd']"
python human readable object serialization,"d = {'age': 27, 'name': 'Joe', 'numbers': [1, 2, 3, 4, 5], 'subdict': {
    'first': 1, 'second': 2, 'third': 3}}
from pprint import pprint"
how to obscure a line behind a surface plot in matplotlib?,x_coord = radius * np.sin(theta) * np.cos(phi)
sending float type data from arduino to python,"print('Str:', vSf, ' Fl: ', vF, ' Dif:', diff)"
setting transparency based on pixel values in matplotlib,"fig, ax = plt.subplots()
ax.imshow(gray_data, cmap=cm.gray)
ax.imshow(masked_data, cmap=cm.jet, interpolation='none')
plt.show()"
"python, forcing a list to a fixed size","list.__setslice__(self, *args)"
read file up to a character,"for file_buffer in iter(lambda : f.read(1024), ''):
    if old_fb:
        file_buffer = old_fb + file_buffer
pos = file_buffer.find(char)
while pos != -1 and file_buffer:
    yield file_buffer[:pos]
file_buffer = file_buffer[pos + 1:]
pos = file_buffer.find(char)
old_fb = file_buffer
yield old_fb
for line in my_open('weirdfile', '~'):
    pass"
slicing multiple ranges of columns in panda,"df = pd.DataFrame({'2000-1': [1, 3, 5], '2000-2': [5, 3, 6], '2000-3': [7, 
    8, 9], '2000-4': [1, 3, 5], '2000-5': [5, 3, 6], '2000-6': [7, 8, 9],
    '2000-7': [1, 3, 5], '2000-8': [5, 3, 6], '2000-9': [7, 4, 3], 'A': [1,
    2, 3], 'B': [4, 5, 6], 'C': [7, 8, 9]})
print(df)"
"how can i remove ""&amp;nbsp"" from html contents?",s = 'your HTML'
is there a cake equivalent for python?,print('Executing task {0}.'.format(sys.argv[1]))
how to distinguish different types of nan float in python,"struct.pack('>d', float('nan')).encode('hex_codec')"
"when using pydev, can i annotate parameters with a typename to give me contextual information?","def bar(x, y):
    assert isinstance(x, list)"
multiple subprocesses with timeouts,"def example():
    proc = subprocess.Popen(['sleep', '5'], stdin=subprocess.PIPE, stdout=
        subprocess.PIPE)
with processTimeout(1, proc.pid):
    print(proc.communicate())
resultcode = proc.wait()
if resultcode < 0:
    print('error: %i' % resultcode)
if __name__ == '__main__':
    example()"
python: sum the values of three layer dictionaries,c = Counter()
pandas - groupby and filtering for consecutive values,"g = df.groupby([df['U'], df.year])"
"in python, how can i ensure that one of my class's methods is always called even if a subclass overrides it?","class MetaHandler(type):

    def __new__(cls, name, bases, attrs):
        instance = type.__new__(cls, name, bases, attrs)
super_instance = super(instance, instance)
if hasattr(super_instance, 'prepare') and hasattr(instance, 'prepare'):
    super_prepare = getattr(super_instance, 'prepare')
sub_prepare = getattr(instance, 'prepare')

def new_prepare(self):
    super_prepare(self)
sub_prepare(self)
setattr(instance, 'prepare', new_prepare)
return instance


class BaseHandler(object, metaclass=MetaHandler):
    pass

def prepare(self):
    print('BaseHandler.prepare')


class SubHandler(BaseHandler):

    def prepare(self):
        print('SubHandler.prepare')"
unicodeencodeerror when writing to a file,Logfile.write(msg + '\n')
python: escaping non-ascii characters in xml,return ''
counting runs in a string,"['T', 'H', 'T', 'H', 'T', 'H', 'T', 'H', 'T']
[(letter, matches.count(letter)) for letter in letters]
[('H', 4), ('T', 5)]"
filter an array based on density,"X_min = np.min(X[idx])
X_max = np.max(X[idx])"
"python optparse, default values for optional options",print(vars(options))
grouping in a list with sequence re-read,"[(L[i] + L[i + sep]) for i in range(len(L) - sep)]
sep = 4"
how to rotate a binary vector to minimum in python,"return [(i >> p & 1) for p in range(length - 1, -1, -1)]"
how does one monkey patch a function in python?,"import bar
bar.do_something_expensive = lambda : 'Something really cheap.'"
how to use map to lowercase strings in a dictionary?,"if 'content' in copy:
    copy['content'] = copy['content'].lower()
return copy"
elegant way to convert list to hex string,"hex(sum(b << i for i, b in enumerate(reversed(walls))))"
how to use linear regression model with my own data on tensorflow,"def model(X, w):
    return tf.mul(X, w)"
networks with random power-law distributed weights,"for i in range(100):
    pass"
get raw post body in python flask regardless of content-type header,"def __init__(self, application):
    self.application = application"
disabling javascript after page has been rendered in selenium webdriver,"profile.add_extension('addon-8753-latest.xpi')
browser = selenium.webdriver.Firefox(profile)"
printing variable names and contents as debugging tool; looking for emacs/python shortcut,"def pv(name):
    record = inspect.getouterframes(inspect.currentframe())[1]
frame = record[0]"
how to use regexp function in sqlite with sqlalchemy?,"engine = sa.create_engine(DSN, convert_unicode=True)"
how to increment the iterator from inside for loop in python 3?,"i = 0
while i < 10:
    pass"
django: how to use settings in templates?,"class YourView(DetailView):

    def get_context_data(self, **kwargs):
        context = super(YourView, self).get_context_data(**kwargs)
context['YOUR_CUSTOM_SETTING'] = settings.YOUR_CUSTOM_SETTING
return context
{{YOUR_CUSTOM_SETTING}}"
sentiment analysis of non-english tweets in python,"sentiment = line_data[-1]
fileout.write(user_id + ',' + ' '.join(tweets) + ',' + sentiment + '\n')"
2-d arrays with numpy arange,"a % a[:, (None)] == 0"
upload picture through external website to gravatar profile,""""""" Call a method from the API, gets 'grav.' prepended to it. """""""
how to perform oauth when doing twitter scrapping with python requests,"for tweet in r.json():
    pass"
dealing with accuracy in python math operations,"import numpy as np
x = np.array([0, 1, 2, 2 ** 4, 536870912])"
python mail inserts space every 171 characters,"yag = yagmail.SMTP('me@gmail.com', 'mypassword')"
pyqt - implement a qabstracttablemodel for display in qtableview,return len(self.datatable.columns.values)
processing single file from multiple processes in python,sys.exit()
python datetime strptime wildcard,"from dateutil import parser
parser.parse('December 12th, 2008')"
how do i pass tuples elements to a function as arguments in python?,"numbers = [(1, 2), (3, 4), (5, 6)]
for args in numbers:
    pass"
hacking javascript array into json with python,"def parse(js):
    return JS_GRAMMAR.parseString(js[len('var txns = '):])[0]

def to_dict(object_):
    return dict((p.key, p.value) for p in object_)
result = [{'transaction': to_dict(object_)} for object_ in parse(data)]
print(json.dumps(result))"
django admin: how to format readonly fields?,"date_ceased_to_act = models.DateField(blank=True, null=True)"
c++ vector to python 3.3,libxxx.foo.restype = None
make websocket callback asynchronous with asyncio,print('Listening for a message...')
how to split a string into integers in python?,"map(int, '42 0'.split())"
how to display text on the screen without a window using python,"label.master.wm_attributes('-topmost', True)"
how do you check if a widget has focus in tkinter?,e1 = Entry(root)
python strptime format with optional bits,"if match:
    return datetime.strptime(date_string, '%Y-%m-%dT%H:%M:%S.%fZ')"
how to match two values in dict and merge results,"print([dict(zip(keys, items)) for items in res])"
getting output of pybrain prediction as array,d = XORDataSet()
accesstokenrefresherror: invalid_grant from oauth2client,SCOPES = 'https://www.googleapis.com/auth/drive.readonly.metadata'
how to do exponential and logarithmic curve fitting in python? i found only polynomial fitting,from scipy.optimize import curve_fit
how do i get the most recent cloudwatch metric data for an instance using boto?,"'CPUUtilization',
'AWS/EC2',
'Average',"
django model fields. custom field value setter,"def x(self, value):
    self._x = value"
efficient kernel implementation in theano,"out_s = 2
missing_param = None
rng = numpy.random.RandomState(1234)
input = T.matrix('input')
X = numpy.asarray(rng.uniform(low=-2.1, high=5.0, size=(batch_s, dims)))
W = theano.shared(value=numpy.asarray(rng.uniform(low=0.001, high=1.0, size
    =(dims, hidd_s)), dtype=theano.config.floatX), name='W', borrow=True)
S = theano.shared(value=numpy.asarray(rng.uniform(low=10.0, high=100.0,
    size=(hidd_s,)), dtype=theano.config.floatX), name='S', borrow=True)
f_func, f_updates = theano.map(lambda i: T.exp(-(W.T - i).norm(2, axis=1) **
    2) / 2 * S ** 2, input, [])
layer_out = theano.function([input], f_func, updates=f_updates,
    on_unused_input=missing_param, allow_input_downcast=True)
print(layer_out(X.astype('float32')))
stop = timeit.default_timer()
print('running time: ' + str(stop - start))"
how to connect pyqtsignal between classes in pyqt,"class Thermometer:

    def __init__(self, pot):
        self.pot = pot
self.pot.temperatureRaisedSignal.connect(self.temperatureWarning)

def StartMeasure(self):
    self.pot.Boil()

def temperatureWarning(self):
    print('Too high temperature!')
if __name__ == '__main__':
    pot = Pot()
th = Thermometer(pot)
th.StartMeasure()"
matrix multiplication with numpy,"from numpy import dot, diag
D = diag([1.0, 2.0, 3.0])"
how to get the index of the largest n values in a multi-dimensional numpy array,"N = 4
a = np.random.random(20).reshape(4, 5)
print(a)"
importing classes from different files in a subdirectory,"modulename, ext = os.path.splitext(filename)"
reading huge file in python,"for line in fin:
    pass"
python recursively replace character in keys of nested dictionary?,return new
finding a function's parameters in python,"def rickroll(old_function):
    return lambda junk, junk1, junk2: 'Never Going To Give You Up'


class Foo(object):
    pass"
how to limit number of followed pages per site in python scrapy,body = response.body
how to show the last message of each user to user conversations to keep a chat history?,print(user.username)
zoom into square of labels python tkinter,"root.bind('<Button-1>', buttonCallback)"
is it possible to make post request in flask?,"@app.route('/test', methods=['POST'])
def test():
    return _test(request.form['test'])

@app.route('/index')
def index():
    return _test('My Test Data')

def _test(argument):
    return 'TEST: %s' % argument"
how to rip the audio from a video?,"from converter import Converter
c = Converter()
conv = c.convert('g.mp4', 'clip5.mp3', {'format': 'mp3', 'audio': {'codec':
    'mp3', 'bitrate': '22050', 'channels': 1}})
for timecode in conv:
    pass"
stop pygtk gui from locking up during long-running process,thread.start()
adding the number 1 to a set has no effect,5 + True
python request module - google app engine,"class MainHandler(webapp2.RequestHandler):

    def get(self):
        g = requests.get('http://www.google.com')
self.response.write(g.text)"
get status of matplotlib radio button,"axRadio = plt.axes([0.1, 0.2, 0.3, 0.4])"
pythonic way to import data from multiple files into an array,file_list = glob.glob(source_dir + '/*.TXT')
remove multiple elements from a list of index with python,"for i in range(len(values)):
    if i not in indices:
        list.append(values[i])
return list
print(remove_abnormalities(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'], [1, 3, 5]))"
sorting a list pairs by frequency of the pair elements,"from collections import Counter
from itertools import chain

def sortPairList2(data):
    tally = Counter(chain(*map(set, data)))
data.sort(key=lambda x: sorted(tally[i] for i in x))"
python round up integer to next hundred,"int(round(130, -2))
int(round(170, -2))"
how can i convert an rgb image into grayscale in python?,"def rgb2gray(rgb):
    return np.dot(rgb[..., :3], [0.299, 0.587, 0.114])"
python: how to know the index when you randomly select an element from a sequence with random.choice(seq),"index = random.choice(list(range(len(MY_LIST))))
value = MY_LIST[index]"
python pandas: drop a df column if condition,(dummy_df == '0%').all()
pass a 2d numpy array to c using ctypes,m = ctypes.c_int(x.shape[0])
appending column to frame of hdf file in pandas,"for chunk in read_csv('file.csv', chunksize=50000):
    pass"
local variables in python nested functions,return pet_function
python - can i wrap attribute assignment without writing a getter/setter,return self._score
using inlinecallbacks,"def _renderContacts(self, request):
    contacts = yield Contact.find()
for c in contacts:
    request.write(c.name)
if not request.finished:
    request.finish()

def render_GET(self, request):
    pass"
indexes of elements in numpy array that satisfy conditions on the value and the index,print(A[ind] == value)
data structure of memoization in db,"def cache_result(cache):
    pass"
maybe monad in python with method chaining,"return 'Maybe(' + repr(self.val) + ', ' + repr(self.err) + ')'"
how to wrap a python iterator to make it thread safe?,value = next(it)
posting to flask with postman versus requests populates different request attributes,"def form_or_json():
    data = request.get_json(silent=True)
return data if data is not None else request.form"
mongodb atomicity concerns -- modifying a document in memory,"{'_id': 1, 'arr': [1, 2]}"
how to extract and divide values from dictionary with another in python?,denom_ACGT = list(d1[0].values()) + list(d1[1].values())
remove nan value from a set,"a = {float('nan'), float('nan'), 'a'}"
splitting a string by using two substrings in python,"m = re.search('Test(.*)print', testStr, re.DOTALL)
print(m)
m.group(1)"
python mysql csv export to json strange encoding,"for i, c in enumerate(u):
    pass"
how to get feature names selected by feature elimination in sklearn pipeline?,"feature_names = pipeline.named_steps['features'].get_feature_names()
np.array(feature_names)[support]"
generating very large xml files in python?,"tpl_xml = """"""
<doc>
% for i in data:
<p>${i}</p>
% endfor
</doc>
""""""
tpl = Template(tpl_xml)
with open('output.xml', 'w') as f:
    pass"
how does a super method work in python in case of multiple inheritance?,"return 'B->' + super(C, self).test()"
how to extract a substring from inside a string in python?,"end = s.find('ZZZ', start)"
efficient way to find several rows above and below a subset of data,idx = (data2['buy'] == True).fillna(False)
how to parse string dates with 2-digit year?,"if dd.year > 2005:
    dd = dd.replace(year=dd.year - 100)"
python convert string literals to strings,ast.literal_eval(raw)
serializing a python namedtuple to json,"FB = namedtuple('FB', ('foo', 'bar'))"
easiest way to remove unicode representations from a string in python 3?,print(t.decode('unicode_escape'))
fitting a 3d array of data to a 1d function with numpy or scipy,"tmp = np.empty((4, sy, sz))
tmp[(0), :, :] = (1.2 - 0.8) * np.random.random_sample((sy, sz)) + 0.8
tmp[(1), :, :] = (1.2 - 0.8) * np.random.random_sample((sy, sz)) + 0.8
tmp[(2), :, :] = np.ones((sy, sz))
tmp[(3), :, :] = np.ones((sy, sz)) * np.pi / 4
param_ref = np.empty((4, sy, sz, sx))
for i in range(sx):
    param_ref[:, :, :, (i)] = tmp
x = np.linspace(0, 2 * np.pi)
factor = (1.1 - 0.9) * np.random.random_sample((sy, sz, sx)) + 0.9
data = f(x, *param_ref) * factor
func1d = lambda y, *args: optimize.curve_fit(f, xdata=x, ydata=y, *args)[0]
param = np.apply_along_axis(func1d, axis=2, arr=data)"
filename tab-completion in cmd.cmd of python,fixed = line[index + 1:begidx]
two processes reading/writing to the same file python,"import os
f = open('txt.txt', 'r', os.O_NONBLOCK)
while 1:
    pass"
how to answer to prompts automatically with python fabric?,"from ilogue.fexpect import expect, expecting, run
prompts = []
prompts += expect('What is your name?', 'John')
prompts += expect('Are you at stackoverflow?', 'Yes')
with expecting(prompts):
    run('my_command')"
"getting a ""too many values to unpack"" value error","info = [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]"
showing pandas data frame as a table,"df.head(5)[df.columns[0:4]]
df.iloc[:5, :4]"
working with .bmp files in python 3,"data[pos:pos + 3] = 255, 255, 255"
numerical ode solving in python,"return np.array([u[1], -u[0] + np.sqrt(u[0])])"
why setting a dict shallow copy to itself?,"class BaseEngine(object):

    def __init__(self, params):
        """"""
        Initializes the template engine.
        Receives the configuration settings as a dict.
        """"""
params = params.copy()
self.name = params.pop('NAME')"
"python, draw a circle with pil","image = Image.open('x.png')
draw = ImageDraw.Draw(image)
draw.ellipse((x - r, y - r, x + r, y + r), fill=(255, 0, 0, 0))"
google search from a python app,search_results = search_response.read().decode('utf8')
data structures in python,"def __init__(self, payload=None, left=None, right=None):
    self.payload = payload
self.left = left"
renaming columns in pandas,"df.columns
df.rename(columns=lambda x: x[1:], inplace=True)
df.columns"
how to align positive and negative values along the decimal point in python,"x1, y1, z1 = ['{:2.6f}'.format(e) for e in (x, y, z)]"
how to import large number of global variables without listing each one? (python),g = globals()
displaying 3 histograms on 1 axis in a legible way - matplotlib,plt.subplot(312)
sort list in python by two other lists,"rev_sorted = sorted(paired, reverse=True, key=lambda x: x[1])
paired_sorted = sorted(rev_sorted, key=lambda x: x[0])
l2, l3, l1 = zip(*paired_sorted)"
slice that represents concatenated slices,"a_start, a_stop, a_step = a.indices(length)"
further confusion with imports in python,dir()
find the index of a string ignoring cases,"old_list = ['ADMISSION', 'Colace', '100', 'mg', 'b.i.d.', 'insulin',
    'Lente', '12']
new_list = [item.lower() for item in old_list]
new_list.index(to_find.lower())"
in what case would i use a tuple as a dictionary key?,"def func(a1, b1):
    pass"
python: how do i get time from a datetime.timedelta object?,(datetime.datetime.min + value).time()
"how can i make a numpy function that accepts a numpy array, an iterable, or a scalar?","x = min(x, 1)"
python property change listener pattern,"def wrapper(self, *args, **kwargs):
    result = method(self, *args, **kwargs)"
how can you change the value of the iterating variable in a loop in python?,"del a[1]
a[1]"
how do i exclude an inherited field in a form in django?,self.fields.pop('is_staff')
horizontal text alignment in openpyxl,"workbook = xlsxwriter.Workbook('example.xlsx')
worksheet = workbook.add_worksheet()
cell_format = workbook.add_format({'align': 'center'})
worksheet.merge_range('A1:B1', '')
worksheet.write_rich_string('A1', 'Example', cell_format)
workbook.close()"
keep the order of list in sql pagination,"order_expressions = [(Company.id == i).desc() for i in company_ids]
query = Company.query.filter(Company.id.in_(company_ids)).order_by(*
    order_expressions)"
"insert a list into another list, without brackets and by replacing the current item in that index","C = [6, 8, 7, 9, 6]
B[1:2] = C
print(B)"
python embedded in cpp: how to get data back to cpp,"fprintf(stderr, 'Failed to load module')"
pandas sum across columns and divide each cell from that value,"df = pd.read_csv('test.csv')
df
df.loc[:, 'value1':'value3'] = df.loc[:, 'value1':'value3'].div(df.sum(axis
    =1), axis=0)
df"
sqlalchemy on duplicate key update,"def get_or_create(session, model, defaults=None, **kwargs):
    instance = session.query(model).filter_by(**kwargs).first()
if instance:
    return instance"
"how can i read an image from an internet url in python cv2 , scikit image and mahotas?","img = cv2.imdecode(arr, -1)
cv2.imshow('lalala', img)
if cv2.waitKey() & 255 == 27:
    quit()"
implementation of a c pre-processor in python or javascript?,"pypreprocessor.defines.append('debug')
pypreprocessor.input = 'input_file.c'
pypreprocessor.output = 'output_file.c'"
moving to an arbitrary position in a file in python,"findex[0] = -1
with open(fn, 'rb') as f:
    for n in sys.argv[2:]:
        print((n, repr(readline(int(n), f, findex))))
main()"
matplotlib: how to change data points color based on some variable,"y = np.cos(t)
plt.scatter(t, x, c=y)"
curl alternative in python,"u = 'username'
p = 'userpass'
url = 'https://api.github.com/users/username'

def encodeUserData(user, password):
    return 'Basic ' + (user + ':' + password).encode('base64').rstrip()
req = urllib.request.Request(url)
req.add_header('Accept', 'application/json')
req.add_header('Content-type', 'application/x-www-form-urlencoded')
req.add_header('Authorization', encodeUserData(u, p))
res = urllib.request.urlopen(req)
print(res.read())"
flexible numeric string parsing in python,"print(locale.atof('1,234,456.23'))"
how to stream xml output quickly from python,"for i in range(10):
    rec = etree.Element('record', id=str(i))"
check nested dictionary values in python,"for Dict1 in DictionariesList:
    pass"
generic function in python - calling a method with unknown number of arguments,push(*args)
how to find cube root using python?,a ** (1.0 / 3.0)
creating 4d numpy array by repeating values from 2d numpy array,"array2 = np.empty((20, 20) + array1.shape, dtype=array1.dtype)
array2[:] = array1"
how do i automatically download files from a pop up dialog using selenium-python,"profile = FirefoxProfile()
profile.set_preference('browser.helperApps.neverAsk.saveToDisk',
    'application/pdf')
driver = webdriver.Firefox(firefox_profile=profile)
driver.get(target_url)
driver.find_element_by_css_selector('a[title=""Click to Download""]').click()"
how to detect motion between two pil images? (wxpython webcam integration example included),img2 = Image.open('SnowCam_main2.jpg')
how to create equal number of primary and secondary y-axes ticks with matplotlib?,"ax2.set_ylim(0, 1500)"
removing the tk icon on a tkinter window,"tk = Tk()
tk.iconbitmap(default='transparent.ico')
lab = Label(tk, text='Window with transparent icon.')
lab.pack()
tk.mainloop()"
fft in python not showing peaks in right place,fouriery = fftpack.rfft(datay)
generating non-repeating random numbers in python,"modulo = 87178291199
incrementor = 17180131327
current = 433494437
for i in range(1, 100):
    pass"
controlling the mouse from python in os x,"def mousemove(posx, posy):
    pass"
django: saving multiple manytomany fields within a transaction,"john = Author.objects.create(name='John')
paul = Author.objects.create(name='Paul')"
how to read from a zip file within zip file in python?,"with zipfile.ZipFile(zfiledata) as zfile2:
    for name2 in zfile2.namelist():
        pass"
django logging set context globally per request?,"class RequestFilter(logging.Filter):

    def filter(self, record):
        pass"
python workflow design pattern,"def cancel():
    doTheSmartCancellationSoNobodyWouldCrash()"
classifiers in scikit-learn that handle nan/null,X_train_imp = imp.transform(X_train)
blocks - send input to python subprocess pipeline,"p1 = Popen(['grep', '-v', 'not'], stdin=PIPE, stdout=PIPE)"
can a bnf handle forward consumption?,from pprint import pprint
set literal gives different result from set function call,STACKADJ(-oparg)
number of values in a list greater than a certain number,len([1 for i in j if (i > 5)])
enumerator for an alphabet in python,from itertools import product
how to return smallest value in dictionary?,"Fruits = {'apple': 8, 'banana': 3, 'lemon': 5, 'pineapple': 2}"
how to get json from webpage into python script,"response = urllib.request.urlopen(url)
data = json.loads(response.read())
print(data)"
identifying that a variable is a new-style class in python?,"def is_new_style_class_instance(instance):
    return issubclass(instance.__class__, object)"
"how to use applymap, lambda and dataframe together to filter / modify dataframe in python?","df = pd.DataFrame(index=list(range(0, 3)), columns=list(range(0, 3)))"
"set_xlim,set_ylim,set_zlim commands in matplotlib fail to clip displayed data","for i in nm.arange(len(self.dummyz)):
    if self.dummyz[i] < self.z1:
        self.dummyz[i] = nm.NaN
else:
    pass
controlset.a.plot(self.dummyx, self.dummyy, self.dummyz)
self.a.set_xlim3d(self.x1, self.x2)
self.a.set_ylim3d(self.y1, self.y2)
self.a.set_zlim3d(self.z1, self.z2)"
"convert rgb color to english color name, like 'green'","actual_name, closest_name = get_colour_name(requested_colour)
print('Actual colour name:', actual_name, ', closest colour name:', closest_name)"
correlation of two variables in a time series in python?,ts2
parse time string in python,time_in_seconds = hours * 60 * 60 + minutes * 60 + seconds
verify is a string is encoded in base64 python,return enc == s
python: get datetime of last hour,"import datetime
lastHourDateTime = datetime.datetime.now() - datetime.timedelta(hours=1)
print(lastHourDateTime.strftime('%Y-%m-%d %H'))"
django: how can you stop long queries from killing your database?,"try:
    return TimeLimited(cursor.execute, timeout)(query_string, *query_args)
except TimeLimitExpired:
    pass"
adding syntax highlighting to a text editor with python,"texter.setPlainText(infile.read())
app.exec_()"
how to safely generate a sql like statement using python db-api,"t = symbol,
c.execute('select * from stocks where symbol=?', t)"
"how do i run ""dot"" as a command from python?","print(os.environ['PATH'])
print(os.getcwd())
from subprocess import check_call
print(check_call(['dot', '-o9.png', '-Tpng', './6.dot']))"
text alignment in a matplotlib legend,"renderer = figure.canvas.get_renderer()
shift = max([t.get_window_extent(renderer).width for t in legend.get_texts()])
for t in legend.get_texts():
    t.set_ha('right')
t.set_position((shift, 0))"
python multiprocessing using queue to write to same file,q.put('Hello')
how and when to appropriately use weakref in python,"def Run():
    root, c1, c2 = Node(), Node(), Node()
root.AddChild('first', c1)
root.AddChild('second', c2)"
how to implement autovivification for nested dictionary only when assigning values?,return list(self.data.keys())
problem installing openerp server with buildout !,[openerp - server]
is there easy way in python to extrapolate data points to the future?,"print('days:', days)"
django models recursive imports - how to resolve,import foo
barplot with log y-axis program syntax with matplotlib pyplot,"ax = fig.add_subplot(111)
ax.bar(x, y, log=1)
plt.show()"
how to get python to use assembly,"leave
ret"
how to merge 200 csv files in python,fout.close()
find day difference between two datetimes (excluding weekend days) in python?,dayDelta = timedelta(days=1)
finding the index of an item given a list containing it in python,"from itertools import count
[i for i, j in zip(count(), ['foo', 'bar', 'baz']) if j == 'foo']"
pandas: creating dataframe from series,"cols = ['a', 'b']
list_of_series = [pd.Series([1, 2], index=cols), pd.Series([3, 4], index=cols)]"
get last output of dynamic_rnn in tensorflow?,last_index = tf.shape(output)[1] - 1
how can i determine the number of objects that exist of a specific class?,"class MyClass(object):
    get_next_id = itertools.count().__next__

def __init__(self):
    self.id = self.get_next_id()"
"how can i securely pass an arbitrarily deep path to a webapp (flask, in this case)?","safe_join('/foo/bar', 'test/../other_test')
safe_join('/foo/bar', 'test/../../../etc/htpassw')"
long <-> str binary conversion,"from binascii import hexlify, unhexlify

def xstr(x):
    hex = '%x' % x"
how to print to stderr in python?,"import sys

def eprint(*args, **kwargs):
    pass"
find out the unicode script of a character,"import unicodedata2
print(unicodedata2.script_cat('\u0424'))"
is it bad form to call a classmethod as a method from an instance?,C.f(2)
flask securecookie replacing pickle with json results in encoding error,"@app.route('/')
def hello():
    k = 'lalala'"
python xlrd parse excel xlsx to csv with date conversion,"'04/03/2015', ' Sally   ', 'Mark    '"
how to get the system info with python?,"platform.version()
platform.platform()
platform.uname()
platform.system()
platform.processor()"
a simple hello world setuptools package and installing it with pip,print('Reading image.gif contents:')
python: threading + lock slows my app down considerably,"def load(lock):
    for x in data:
        pass"
reading collections of extended elements in an rss feed with universal feed parser,"connection.close()
soup = BeautifulSoup.BeautifulSoup(html_data)
themes = soup.findAll('kuler:themeitem')
themes[0].find('kuler:themeid').contents[0]
themeswatches = themes[0].find('kuler:themeswatches')
colors = [color.contents[0] for color in themeswatches.findAll(
    'kuler:swatchhexcolor')]
colors"
implementing log gabor filter bank,costheta = np.cos(theta)
use frozenset as a pair in python,"fs2 = frozenset([666, 42])"
how to open this xml file to create dataframe in python?,"with open(path, 'rb') as f:
    context = ET.iterparse(f, events=('end',), tag=
        '{http://www.federalreserve.gov/structure/compact/common}DataSet')"
matplotlib aspect ratio for narrow matrices,import matplotlib.pyplot as plt
sort on multiple parameters in list of dictionaries/lists,"def do_thing(dct):
    lst = dct['outer_list']
for obj in lst:
    obj['nested_list'].sort(key=lambda d: int(d['id']))
lst.sort(key=lambda d: d['name'])
return lst"
resize tkinter listbox widget when window resizes,"root = tk.Tk()
scrollbar = tk.Scrollbar(root, orient='vertical')
lb = tk.Listbox(root, width=50, height=20, yscrollcommand=scrollbar.set)
scrollbar.config(command=lb.yview)
scrollbar.pack(side='right', fill='y')
lb.pack(side='left', fill='both', expand=True)
for i in range(0, 100):
    lb.insert('end', 'item #%s' % i)
root.mainloop()"
lock mutable objects as immutable in python,self._locked = False
is there a python naming convention for avoiding conflicts with standard module names?,"for thing in iterable:
    dothing(thing)"
python - how to calculate equal parts of two dictionaries?,"for k, v in list(d2.items()):
    v3 = set(d1.get(k, [])).intersection(v)
if v3:
    pass"
making a python script object-oriented,"if line.startswith('LINE:'):
    pass"
how to define properties in __init__,"__props__ = ['Fish', 'Bread']"
how do i get the number of lists with a particular element?,"from itertools import chain
Counter(chain.from_iterable(map(set, listOfLists)))"
tkinter messagebox not behaving like a modal dialog,root.mainloop()
truly custom font in tkinter,pathbuf = create_unicode_buffer(fontpath)
how to render my textarea with wtforms?,"class ContactForm(Form):
    name = TextField('Name')
email = TextField('Email Address')
body = TextAreaField('Message Body')"
how can a list be extended uniformly to include extrapolated mean values?,"for index in range(1, len(nums)):
    new_nums.append(nums[index - 1])"
how to replace the first occurrence of a regular expression in python?,"re.sub('foo', 'bar', s, 1)
s = 'baz baz foo baz foo baz'
re.sub('foo', 'bar', s, 1)"
convert a space delimited file to comma separated values file in python,"outfile.write(' '.join(line.split()).replace(' ', ','))"
python & pygame: ball collision with interior of circle,"angle = 0.5 * math.pi + tangent
ball.x += math.sin(angle) * overlap"
how to determine fields in a table using sqlalchemy?,"meta = MetaData()
meta.reflect(bind=someengine)
users_table = meta.tables['users']
addresses_table = meta.tables['addresses']
fields = list(addresses_table.columns.keys())"
append two data frame with pandas,"data1 = data1.groupby(data1.index).sum()
data2 = data2.groupby(data2.index).sum()"
using numpy to filter out multiple comment symbols,"if line.startswith('#') or line.startswith('$'):
    continue"
load sparse array from npy file,"assert np.allclose(x.todense(), y.todense())"
how to convert dataframe to a json string and apply some transformations to this string?,"[{'GROUP': 'AAA', 'AVG_MINUTES': [[7, 67], [8, 58], [9, 55]], 'AVG_GRADE':
    [[7, 5.5], [8, 6.5], [9, 4.5]]}, {'GROUP': 'BBB', 'AVG_MINUTES': [[7, 
    15], [8, 18]], 'AVG_GRADE': [[7, 5.1], [8, 5.4]]}, {'GROUP': 'CCC',
    'AVG_MINUTES': [[9, 34]], 'AVG_GRADE': [[9, 5.5]]}]"
retrieving subfolders names in s3 bucket from boto3,import boto3
python - how to check if redis server is available,response = rs.client_list()
saltstack: properties (computed values) for data from sls files?,systems.append(system)
consistent way to redirect both stdin & stdout to files in python using optparse,args.output.write(text)
how to get the coordinates of a graph drawn by specific layout algorithm in graph-tool?,"array([-38.90262591, 24.30374])
array([-33.72945377, 24.31891936])
array([-32.68247364, 25.85861809])"
how to calculate relative path  between 2 directory path?,"subdir2 = 'live/streams/livepkgr/streams/_definst_/'
import os"
python: how to access variable declared in parent module,"if i == '__init__.py':
    pass"
bool value of a list in python,bool(my_list)
i want to plot perpendicular vectors in python,plt.show()
"in python for loop,, jump over values","time = 0
while time < 100:
    gold += level
if gold > 20 * level:
    level += 1"
cache a django view that has url parameters,"if user is None:
    user = User.objects.get(pk=user_id)
cache.set('user_id_%s' % user_id, user, 10 * 60)"
how to attach a scrollbar to a text widget?,"app = App()
app.root.mainloop()"
django: how to manage development and production settings?,from shared_settings import *
python/numpy/scipy: draw poisson random values with different lambda,poissonarray = numpy.random.poisson(lam=numpyarray)
pass another object to the main flask application,"def create_app(logger_instance):
    app = Flask(__name__)
app.config['LOGGER'] = logger_instance"
matplotlib - legend in separate subplot,"axe = fig.add_axes([0.4, 0.4, 0.2, 0.2])"
creating a singleton in python,"class Singleton(object):
    _instances = {}

def __new__(class_, *args, **kwargs):
    if class_ not in class_._instances:
        class_._instances[class_] = super(Singleton, class_).__new__(class_,
            *args, **kwargs)
return class_._instances[class_]


class MyClass(Singleton):
    pass
c = MyClass()"
"how to find next day's unix timestamp for same hour, including dst, in python?","from datetime import datetime, time, timedelta"
convert a 1d array to a 2d array in numpy,"np.resize(a, 10).reshape(5, 2)"
unbound method with instance as first argument got string but requires something else,mymap.add_animal('Fred')
how would i count the number of days based on months with zero data?,"(0)[FEB, MAR, APR, NOV]"
creating table and calculation of min from txt file,data2_list.append(csv_row['data2'])
django aggregation across multiple tables in modeladmin queryset,return qs
easy way to convert python source code to an ast with comments intact,"class MyClassNameTranslator:
    pass"
python pandas: remove entries based on the number of occurrences,"data = pandas.DataFrame({'pid': [1, 1, 1, 2, 2, 3, 3, 3], 'tag': [23, 45, 
    62, 24, 45, 34, 25, 62]})
bytag = data.groupby('tag').aggregate(np.count_nonzero)
tags = bytag[bytag.pid >= 2].index"
cant create tables in access with pyodbc,cur.execute(string)
how to remove specific element in an array using python,initial_list.remove(item1)
iterating a list along with file read,"with open('final.txt', 'w') as f:
    pass"
python: attributes on a generator object,"class Filter(object):

    def __init__(self, content):
        self.content = content

def __call__(self, someParam):
    pass"
argparse conflict resolver for options in subcommands turns keyword argument into positional argument,parent2 = argparse.ArgumentParser(add_help=False)
how to decode a google app engine entity key path str in python?,"k = k.parent()
path.reverse()
print('app=%r, path=%r' % (_app, path))"
how can i make the default value of an argument depend on another argument (in python)?,"def func(n=5.0, delta=None):
    pass"
how to pass a dictionary as value to a function in python,"{'auth3': {'practical': 1, 'volume': 1, 'physics': 1}, 'auth34': {
    'practical': 1, 'volume': 1, 'chemistry': 1}}"
django duration field with negative value,"if hasattr(self, 'from_db_value'):
    return [self.from_db_value]"
change default float print format,"""""""Just calls the write() method multiple times."""""""
restricting post requests to a maximum size on pyramid,config.scan()
how to remove 0's converting pandas dataframe to record,"from scipy import sparse
df
column_names = df.columns"
how to iterate through sentence of string in python?,"stems = (PorterStemmer().stem_word(word) for word in text.split(' '))
"""""" """""".join(stem for stem in stems if stem not in words)"
understanding global variable in python,"import mod2
var = mod2.var"
parallelize pandas apply,"'2016-07-04', '2016-09-05', '2016-10-10', '2016-11-11'
'2016-11-24', '2016-12-26'"
python multiprocessing pool.map for multiple arguments,"pool.map(func_star, zip(a_args, itertools.repeat(second_arg)))"
how to extract text from an existing docx file using python-docx,"def getText(filename):
    doc = docx.Document(filename)
fullText = []
for para in doc.paragraphs:
    fullText.append(para.text)"
how to refer to a parent method in python?,"class B(A):

    def __init__(self):
        pass"
how to append to the end of an empty list?,list1 = [i for i in range(n)]
using pandas in python to append csv files into one,dfs.append(df)
parse date strings?,"timestring = '2012-10-09T19:00:55Z'
m = moment.date(time_string, '%Y-%m-%dT%H:%M:%SZ')"
urllib2 read to unicode,req.headers['content-type']
display all jinja object attributes,"for k in dir(value):
    res.append('%r %r\n' % (k, getattr(value, k)))"
how do you change file association for .py python files in xp?,"assoc.py = Python.File
assoc.pyc = Python.CompiledFile
assoc.pyo = Python.CompiledFile
assoc.pyw = Python.NoConFile"
how to handle uploaded files in webapp2,"_attachments = [{'content': f.file.read(), 'filename': f.filename} for f in
    attachments]"
"python: elementtree, get the namespace string of an element","from lxml import etree
tree = etree.parse('example.xml')"
jmeter - run a python script before calling each http request sampler,"randImageString = randImageString + chr(random.randint(ord('A'), ord('Z')))"
declaring a python function with an array parameters and passing an array argument to the function call?,"def my_func(*args):
    for a in args:
        print(a)
my_func(*[1, 2, 3, 4])
my_list = ['a', 'b', 'c']
my_func(*my_list)"
"how do i check the difference, in seconds, between two dates?",import datetime as dt
uwsgi and gracefully killing a multithreaded flask app,"uwsgi.register_signal(17, 'worker', will_executed_after_reload)
uwsgi.add_file_monitor(17, './uwsgi.pid')"
how can i optimize this python code to generate all words with word-distance 1?,"for c1, c2 in zip(word1, word2):
    pass"
changing the options of a optionmenu when clicking a button,"var = tk.StringVar(root)

def refresh():
    var.set('')
network_select['menu'].delete(0, 'end')
new_choices = 'one', 'two', 'three'
for choice in new_choices:
    network_select['menu'].add_command(label=choice, command=tk._setit(var,
        choice))
network_select = tk.OptionMenu(root, var, *choices)
network_select.grid()
tk.Button(root, text='Refresh', command=refresh).grid()
root.mainloop()"
how do i create a new file on a remote host in fabric (python deployment tool)?,"sys.path.insert(0, '/ruby/$HOST$/www/$HOST$/django-projects')
sys.path.insert(0, '/ruby/$HOST$/www/$HOST$/django-projects/project')"
multiple values for key in dictionary in python,"for name, pos in list(names.items()):
    doSomethingWith(pos.x)"
keep firstly found duplicate items in a list,"print(od)
OrderedDict([(1, 0.3), (3, 0.2), (2, 0.01)])"
performance issues in burrows-wheeler in python,print(bwt('Text I want to apply BTW to :D'))
what is the easiest way to export data from a live google app engine application?,"class XmlExport(webapp.RequestHandler):

    def get(self):
        objects = MyModel.all().fetch(1000)
xml = """"""<?xml version=""1.0"" encoding=""UTF-8""?>
<site>
""""""
for o in objects:
    xml = xml + o.to_xml()
xml = xml + '</site>'
self.response.headers['Content-Type'] = 'text/xml; charset=utf-8'"
how do i write tests for cyclone in the style of tornado?,return None
"invalid syntax in ""for item in l"" loop",L = primes(int(math.sqrt(perimeter)))
custom django field to store a list of email addresses,cleaned_email_list = list()
check whether the process is being run as a pipe,pass
using initspider with splash: only parsing the login page?,driver.save_screenshot('test.png')
in flask: how to access app logger within blueprint,from flask import current_app
how to get image size (bytes) using pil,print(os.stat('somefile.ext').st_size)
python cv2 houghlines grid line detection,"lines = cv2.HoughLinesP(edges, 1, np.pi / 180, 275, minLineLength=600,
    maxLineGap=100)[0].tolist()"
get a filtered list of files in a directory,"file_names = [fn for fn in os.listdir(relevant_path) if any(fn.endswith(ext
    ) for ext in included_extensions)]"
how to optimize a python script which runs for 4**k times?,"import itertools

def HammingDistance(string_1, string_2):
    assert len(string_1) == len(string_2)
return sum(c1 != c2 for c1, c2 in zip(string_1, string_2))

def MotifCount(string1, substring, d):
    for i in range(len(string1) - len(substring) + 1):
        if HammingDistance(string1[i:i + len(substring)], substring) <= d:
            print(i)
MotifCount(
    'CGCCCGAATCCAGAACGCATTCCCATATTTCGGGACCACTGGCCTCCACGGTACGGACGTCAATCAAAT',
    'ATTCTGGA', 3)"
python: lambda function in list comprehensions,"a[1](1)
a[0](1)"
how to append selected columns to pandas dataframe from df with different columns,"df1 = pd.DataFrame.from_items([('A', [1, 2, 3]), ('B', [4, 5, 6])])
df2 = pd.DataFrame.from_items([('B', [5, 6, 7]), ('A', [8, 9, 10])])
df3 = pd.DataFrame.from_items([('C', [5, 6, 7]), ('D', [8, 9, 10]), ('A', [
    1, 2, 3]), ('B', [4, 5, 7])])"
in python find number of same elements in 2 lists,"l1 = ['a', 'b', 'c', 'd']
l2 = ['c', 'd', 'e']"
python matplotlib plot sparse matrix pattern,ax.figure.show()
how do i convert a list of dictionaries to a dictionary of lists in python?,print({k: [d[k] for d in dd if k in d] for k in all_keys})
creating only one random prime number in provided range,"def maybe_random_prime_from_range(self, a, b):
    pass"
plotting a 2d array with mplot3d,"data = numpy.random.random((nx, ny))
hf = plt.figure()"
"django templates - printing comma-separated manytomanyfield, sorting results list into dict?","{{(article.company.all | join): ', '}}"
python 2.7- storing each row of a csv as a separate list/dictionary,import csv
convert whole pandas dataframe containing nan values from string to float,"import pandas as pd
import numpy as np
my_data = np.array([[0.5, 0.2, 0.1], ['NA', 0.45, 0.2], [0.9, 0.02, 'N/A']])
df = pd.DataFrame(my_data, dtype=str)
print(df.replace({'N': np.nan}, regex=True).astype(float))"
find sequences of digits in long integers efficiently,"for i in range(len(self)):
    yield self[i]"
how to aggregate and sum items by month?,tmpdf = res.groupby(pd.TimeGrouper('M')).sum()[['sum2']]
retrieving comments using python libclang,"""""""int"""""""
how can i read a vtk file into a python datastructure?,"reader.SetFileName('my_input_data.vtk')
reader.Update()
my_vtk_array = reader.GetOutput().GetPointData().GetArray('my_scalar_name')
nodes_nummpy_array = vtk_to_numpy(nodes_vtk_array)"
efficient processing of pixel + neighborhood in numpy image,"if j > K:
    pass"
django-tastypie: any example on file upload in post?,queryset = Foo.objects.all()
parsing deepdiff result,"added = {'root[2]': {(3): {'age': 60, 'name': 'foobar'}}}"
how can i convert this string to list of lists?,import ast
remove the default delete action in django admin,return False
finding complex roots from set of non-linear equations in python,"from numpy import *

def f(x):
    return [x[0] - 3 * x[1] + 1j + 2, x[0] + x[1]]

def real_f(x1):
    pass"
"(python) can i store the functions themselves, but not their value, in a list","foo_list.append(lambda : bar.func2([7, 7, 7, 9]))
foo_list.append(lambda : bar.func3('C:\\Users\\user\\desktop\\output'))
for foo in foo_list:
    pass"
creating json array in django,"posts_serialized = serializers.serialize('json', posts)
return JsonResponse(posts_serialized, safe=False)"
update a mongoengine document using a python dict?,"update_document(person, data)"
element-wise maximum of two sparse matrices,"def maximum(A, B):
    BisBigger = A - B
BisBigger.data = np.where(BisBigger.data < 0, 1, 0)
return A - A.multiply(BisBigger) + B.multiply(BisBigger)"
stream results in celery,"def __init__(self, _key):
    self.connection = redis.Redis()"
connecting a haskell program to a python program via pipelines (in python),"prog = os.path.join(here, 'Hs')"
type hinting in eclipse with pydev,result = {}
checking if adjacent values are in a numpy matrix,out = groupCoords[(col0_mask & col1_mask).any(1)]
how to map a series of conditions as keys in a dictionary?,"x += mydict.get(count, 0)"
sqlalchemy - dictionary of tags,i.notes['size'] = 'big'
"finding minimum, maximum and average values for nested lists?","max_score, max_player = max((max(a, b), player) for player, a, b in players)
min_score, min_player = min((min(a, b), player) for player, a, b in players)"
how do i create a django form that displays a checkbox label to the right of the checkbox?,"return isinstance(value, CheckboxInput)"
opening a ssl socket connection in python,"HOST, PORT = 'XX.XX.XX.XX', 4434
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.settimeout(10)"
insert a newline character every 64 characters using python,"s = '0123456789' * 100
import re
print(re.sub('(.{64})', '\\1\n', s, 0, re.DOTALL))"
bulk renaming of files based on lookup,"for filename in os.listdir('.'):
    root, extension = os.path.splitext(filename)
if not root.endswith(suffix):
    continue
stripped_root = root[:-len(suffix)]
if stripped_root in mapping:
    os.rename(filename, ''.join(mapping[stripped_root] + suffix + extension))"
passing a set of numpy arrays into c function for input and output,array[ii][jj] *= 2
first 8 byes of my encrypted data corrupting using 3des and cbc,"des3enc = DES3.new(key, DES3.MODE_CBC, iv)
des3dec = DES3.new(key, DES3.MODE_CBC, iv)
des3dec.decrypt(des3enc.encrypt('12345678abcdefgh12345678'))"
monkey patching a class in another module in python,"def __init__(self):
    self.a = 43"
how do you set up pycharm to debug a fabric fabfile on windows?,"import sys
from fabric.main import main
if __name__ == '__main__':
    sys.argv[0] = re.sub('(-script\\.pyw|\\.exe)?$', '', sys.argv[0])"
extract id3 tags of a mp3 url using python,input.read(128)
dynamic arrays and structures in structures in python,"class Row(Structure):
    _fields_ = [('cols_count', c_int), ('cols', POINTER(c_char_p))]

def __init__(self, cols):
    self.cols_count = cols"
multi-mapping a value while saving intermediate values,"def multimap(value, f, count):
    result = [] if count < 1 else [f[value]] + [None] * (count - 1)
for i in range(1, count):
    result[i] = f[result[i - 1]]
return result"
implementing topic model with python (numpy),"n_k_d = numpy.zeros((S, D))"
numpy/python: efficient matrix as multiplication of cartesian product of input matrix,"r, c = A.shape"
simple cgi web server in python on vms,"output = Popen(['/bin/ls', '/'], stdout=PIPE).communicate()[0]
print(output)"
alias a function in python,"def debug(s):
    pass"
"django onetoonefield, manytomanyfield, foreign key",authors = models.ManyToManyField(Author)
java - how to do python's try except else,"somethingThatCouldError()
System.out.println('YAY!!')"
count all +1's in the file python,"Counter({(0): 2, (-1): 2, (1): 1})"
how do i get the ip address from a http request using the requests library?,"setattr(response, 'peer', None)"
how to change the window title in pyside?,self.setWindowTitle('')
how to split an iterable in constant-size chunks,"def grouper(n, iterable, fillvalue=None):
    pass"
save json outputed from a url to a file,"hi_web = urllib.request.urlopen('http://search.twitter.com/search.json?q=hi')
with open('hi.json', 'ab') as hi_file:
    hi_file.write(hi_web.read())"
python statsmodel arima start [stationarity],args < -commandArgs(trailingOnly=TRUE)
valueerror: cannot set toolkit to wx because it has already been set to qt4,"from matplotlib.backends.backend_wx import NavigationToolbar2Wx
from traits.api import Instance"
how to implement \p{l} in python regex,"if __name__ == '__main__':
    main(['^\\d+\\t(\\p{L}|\\p{M})+$'])"
how do i get the time a file was last modified in python?,filename = '/etc/fstab'
sending email from gmail using python,"headers = '\r\n'.join(headers)
session = smtplib.SMTP(server)
session.sendmail(sender, recipient, headers + '\r\n\r\n' + body)"
how to validate xml with multiple namespaces in python?,"response_doc = etree.fromstring(body, parser)"
non-blocking read on a subprocess.pipe in python,t.start()
valid use case for django admin?,"user = models.OneToOneField(User, related_name='person_fk')
url = models.URLField(max_length=255, blank=True)"
tastypie with application/x-www-form-urlencoded,"class urlencodeSerializer(Serializer):
    formats = ['json', 'jsonp', 'xml', 'yaml', 'html', 'plist', 'urlencode']
content_types = {'json': 'application/json', 'jsonp': 'text/javascript',
    'xml': 'application/xml', 'yaml': 'text/yaml', 'html': 'text/html',
    'plist': 'application/x-plist', 'urlencode':
    'application/x-www-form-urlencoded'}

def from_urlencode(self, data, options=None):
    pass"
parse human-format date ranges in python,import dateutil.parser
set nans across multiple pandas dataframes,df3
how to dynamically add attributes to an interface,"if isinstance(attr, schema.Field):
    pass"
customize x-axis in matplotlib,main()
generating non-repeating random numbers in python,"current = 433494437
for i in range(1, 100):
    pass"
how to check all the elements in a list that has a specific requirement?,"if i[1] != 'H':
    pass"
how to send message to multiple recipients?,msg['Subject'] = 'subject text'
setting up scons to autolint,"env.Lint(+'.lint', s)"
writing a class decorator that applies a decorator to all methods,return wrapper
phps call_user_func_array in python,"arg = {a: 1, b: 2}"
python - re-ordering columns in a csv,"fieldnames = ['A', 'C', 'D', 'E', 'B']"
"how can i, in python, iterate over multiple 2d lists at once, cleanly?","for a_item, b_item in zip(a_row, b_row):
    if a_item.isWhatever:
        b_item.doSomething()"
loading all rows from cassandra using multiple (python) clients in parallel,main()
how can i make sense of the `else` clause of python loops?,print('No eggs in basket')
how to call particular scrapy spiders from another python script,crawler.configure()
how to display picture and get mouse click coordinate on it,"frame.grid_rowconfigure(0, weight=1)"
can i use a dynamic mapping to unpack keyword arguments in python?,"Formatter().vformat('{Thing1} and {other_thing}', (), my_mapping)"
"how to check if a key modifier is pressed (shift, ctrl, alt)?",sys.exit(app.exec_())
adding data to qtablewidget using pyqt4 in python,"self.table.setColumnCount(5)
layout.addWidget(self.led, 0, 0)
layout.addWidget(self.table, 1, 0)"
multiple actions in list comprehension python,"def f(element):
    return intermediate

def g(intermediate):
    return final"
how can i capture mouseevents and keyevents using python in background on linux,"def on_press(key):
    print('{0} pressed'.format(key))"
how to use a variable number of arguments in pyinvoke,"from invoke import task

@task
def pdf_combine(out_file, in_files):
    pass"
how to use session/cookie in twisted.web?,"class CounterResource(Resource):
    pass"
how to assign to repeated field?,"person.id.extend([1, 32, 43432])"
idiomatic way to take groups of n items from a list in python?,"next(i)
0, 1, 2"
how can i: generate 40/64 bit wep key in python?,"from functools import reduce
val = reduce(operator.__or__, (b << 8 * i for i, b in enumerate(bits)))"
split list into smaller lists,"return a_list[:half], a_list[half:]
A = [1, 2, 3, 4, 5, 6]"
preventing window overlap in gtk,"self.window.set_default_size(100, gtk.gdk.screen_height())
self.window.move(gtk.gdk.screen_width() - 100, 0)
self.window.set_type_hint(gtk.gdk.WINDOW_TYPE_HINT_DOCK)"
getting time zone from lat long coordinates?,r = requests.get(url)
python summing elements of one dict if the have a similar key(tuple),from collections import defaultdict
django - serving user uploaded images,STATIC_ROOT = ''
how do i get python's elementtree to pretty print to an xml file?,"xmlstr = minidom.parseString(ET.tostring(root)).toprettyxml(indent='   ')
with open('New_Database.xml', 'w') as f:
    pass"
how can i send email using python?,"print(""Unable to send e-mail: '%s'."" % str(error))"
use java library from python (python wrapper for java library),gateway = JavaGateway()
unicodeencodeerror when writing to a file,write(s.encode('latin-1'))
importing modules from parent folder,import mymodule
parsing snort logs with pyparsing,yield ''.join(*chunk)
"how can i securely pass an arbitrarily deep path to a webapp (flask, in this case)?","if __name__ == '__main__':
    app.run()"
parse query string with urllib in python 2.4,print(urlparse.parse_qs(qs))
python: convert list of key-value tuples into dictionary?,d = dict(l)
summing across rows of pandas dataframe,"df.groupby(['stock', 'same1', 'same2'])['positions'].sum().reset_index()"
generate random utf-8 string in python,"def random_utf8_seq():
    first = random.choice(first_values)"
how to create dynamical scoped variables in python?,return self.variables[attr][-1]['value']
python pandas extract year from datetime --- df['year'] = df['date'].year is not working,"t = """"""date   Count
6/30/2010   525
7/30/2010   136
8/31/2010   125
9/30/2010   84
10/29/2010  4469""""""
df = pd.read_csv(io.StringIO(t), sep='\\s+', parse_dates=[0])"
how to build sphinx documentation for django project,"sys.path.append(os.path.join(os.path.dirname(__file__), '..'))"
deleting all columns except a few python-pandas,"col_list = [3, 5]
df = df[col_list]
df"
using the lambda function for a function that depends on the input,n = len(self.coef) - 1
how to concatenate string cell contents,"worksheet.write_column('A2', data[0])"
how do i use django rest framework to send a file in response?,"response = HttpResponse(FileWrapper(short_report), content_type=
    'application/pdf')"
python split path recursively,"def rec_split(s):
    rest, tail = os.path.split(s)
if rest == '':
    return tail,
return rec_split(rest) + (tail,)
rec_split(s)"
animating pngs in matplotlib using artistanimation,ax = plt.gca()
how to parse a directory tree in python?,subcats.extend(dirnames)
how to speed up numpy code,"S = np.repeat(list(itertools.product([-1, 1], repeat=n + 1)), iters, axis=0
    ).reshape((-1, n + 1))"
fastest way to search 1gb+ a string of data for the first occurence of a pattern in python,"if needle == haystack[b:b + 1024]:
    return 'found at', b
ib += 1
b = B[ib]"
how to describe url in django - still need an answer,"if 'q_word' in request:
    searchTerm = request.GET['q_word']"
how to extract 128x128 icon bitmap data from exe in python,hlib = win32api.LoadLibrary(PATH)
composition of a hierarchy of functions,"def begets(self, other):
    return self._compare(other, segment=-1)"
global dictionaries don't need keyword global to modify them?,"def listfoo():
    listvar[0] = 'goodbye'"
how can i decorate a python unittest method to skip if a property i've previously evaluated isn't true?,"if getattr(self, flag):
    pass"
designing a recursive function that uses digit_sum to calculate sum of digits,"if n < 10:
    pass"
paginator for inline models in django admin,"class PaginationInline(admin.TabularInline):
    template = 'admin/edit_inline/tabular_paginated.html'
per_page = 20

def get_formset(self, request, obj=None, **kwargs):
    formset_class = super(PaginationInline, self).get_formset(request, obj,
        **kwargs)


class PaginationFormSet(formset_class):

    def __init__(self, *args, **kwargs):
        super(PaginationFormSet, self).__init__(*args, **kwargs)
qs = self.queryset
paginator = Paginator(qs, self.per_page)"
python: remove exif info from images,"image_without_exif = Image.new(image.mode, image.size)
image_without_exif.putdata(data)
image_without_exif.save('image_file_without_exif.jpeg')"
expand alphabetical range to list of characters in python,"s = 'A-F'
[chr(item) for item in range(ord(s[0]), ord(s[-1]) + 1)]"
python test framework with support of non-fatal failures,"class DeferredAsserter(object):
    pass"
python list of tuples merge 2nd element with unique first element,"[tuple(list(el) + [q[1] for q in a if q[0] == el]) for el in set([q[0] for
    q in a])]"
add an item between each item already in the list,"list = ['a', 'b', 'c', 'd', 'e']
result = []
for e in list:
    result.append(e)
result.append('-')
result.pop()"
remove adjacent duplicate elements from a list,"data = [1, 2, 2, 3, 2, 2, 4]"
assign output of help to a variable instead of stdout in python,myhelp = buffer.getvalue()
python backreference regex,"print(match.group(0))
print(match.group(1))
print(match.group(2))"
how do i upload pickled data to django filefield?,"data_entry.file.save(filename, fid)"
how to write list of lists in csv file in python,writer.writerows(data)
fastest way to download 3 million objects from a s3 bucket,"logging.basicConfig(filename='s3_download.log', level=logging.INFO)"
how to gather dataframe column into key value pairs as row in python,df = df.stack()
django relations with scrapy how are items saved?,return item
sum the digits of a number - python,"def sum_digits2(n):
    s = 0"
valid use case for django admin?,"class Person(models.Model):
    """"""The person class FKs to the User class and contains additional user information
    including userImage, country, etc"""""""
python: how can i increment a char?,"import string
for c in string.lowercase:
    pass"
connect to user model in django,from django.db import models
fill countries in python basemap,from mpl_toolkits.basemap import Basemap
fastest algorithm for finding overlap between two very large lists?,"if item in small_list_set:
    pass"
do a pairwise comparison of each element in two sets and return a top 3 ranklist,"for item in set1:
    map(q.put, (-1 * magicComp(item, stuff) for stuff in set2))
max = []
while not q.empty():
    max.append(-1 * q.get())"
how to add with tuples,"def myadd(xs, ys):
    pass"
skip every nth index of numpy array,a[mask] = 10
is there a sessioninfo() equivalent in python?,"for module in pip_modules:
    name, version = module.split('==')
if name in imported_modules:
    pass"
weighted random selection with and without replacement,"return [cuml[bisect.bisect(cuml, random.random() * total_weight)] for x in
    range(n)]"
matplotlib linked x axes with autoscaled y axes on zoom,"a.set_xlim(xlim, emit=False)"
how to write code in a vectorized way instead of using loops?,x = df.OldCol
fastest way to convert file from latin1 to utf-8 in python,outfile.write(block.decode('latin1').encode('utf8'))
convert datetime fields in chrome history file (sqlite) to readable format,"if __name__ == '__main__':
    pass"
popping a query from django q query?,"from functools import reduce
filters_for_query = reduce(lambda a, x: a & x, filters, filters.pop())"
randomizing integer behavior,"print(x + 3, x - 3, x * 3, repr(x))"
how to run a python script at a specific time(s),print('ERROR! Enter a valid minute in the future.')
flexible numeric string parsing in python,print(float(x))
to find first n prime numbers in python,"def naive(n):
    pass"
fastest way to find which two elements of a list another item is closest to in python,item = 4.4
flood fill with graphicsmagick or pgmagick,im = Image.open('lena.pgm')
iterate over 2d array in an expanding circular spiral,T = array([arctan2(*x) for x in R])
python generated signature for s3 post,print('Your policy base-64 encoded is %s.' % policy_encoded)
request for example: recurrent neural network for predicting next value in a sequence,"""""""1 2 4 6 2 3 4 5 1 3 5 6 7 1 4 7 1 2 3 5 6 1 2 5 6 2 4 4 5 1 2 5 6 7 1 4 6 1 2 3 3 6 1 3 5 7 2 4 6 7 1 3 5 6 7 1 4 6 1 2 2 3 7"""""""
python finding index of maximum in list,"max_val = a[0]
for i in range(1, len(a)):
    if a[i] > max_val:
        pass"
python leave loop early,break
how to retrieve filename and lineno attribute of syntaxerror,char * text
add second axis to polar plot,"ax2.set_ylim([0, 1])"
how to share single sqlite connection in multi-threaded python application,self.lock.acquire()
what is the fastest way to compare a text with a large number of regexp with python?,i += 1
how to open a new default browser window in python when the default is chrome,"import subprocess
command = 'cmd /c start chrome http://www.ebay.com --new-window'"
handling failures with fabric,"def failwrapper():
    pass"
stopping processes in threadpool in python,pass
"flask/werkzeug, how to return previous page after login","if session.get('logged_in') is not None:
    pass"
python string slice indices - slice to end of string,word[1:]
python: how to dynamically set function closure environment,"f = gd['foo']
f
f()
gd['x'] = 1
f()
del gd['x']
f()"
how to create new pyqt4 windows from an existing window?,from PyQt4 import QtGui
how to initialize a string array for multiprocessing,print(type(a))
how do i use selenium to login to sites that require username and password?,rcc.setFirefoxProfileTemplate(newFirefoxProfileTemplate)
python and lmfit: how to fit multiple datasets with shared parameters?,"dat = gauss(x, amp, cen, sig) + np.random.normal(size=len(x), scale=0.1)"
using a file to store optparse arguments,"open('args.txt', 'w').write('-f\nbar')"
python introspection: how to get an 'unsorted' list of object attributes?,next_id = itertools.count().__next__
how to create recalculating variables in python,"def __str__(self):
    return str(eval(self.expression))"
is there a working oauth library for python 3?,"def query(queryurl):
    headeroauth = OAuth1(client_key, client_secret, resource_owner_key,
        resource_owner_secret, signature_type='auth_header')
return requests.get(queryurl, auth=headeroauth)
query('http://website.com')"
print a list of space-separated elements in python 3,"L = [1, 2, 3, 4, 5]"
dividing connected nodes into groups of three,"self.groupable_nodes = list(set(sum(self.groups, ())))"
covert binary 64-bit timestamp offset from the gps epoch to python datetime object,"GPS_EPOCH = datetime.datetime(1980, 1, 6)
t1_unpacked = struct.unpack('<q', t1)[0]
t1_seconds = t1_unpacked / 52428800
t1_us = int(round(t1_unpacked % 52428800 / 52.4288, 0))
GPS_EPOCH + datetime.timedelta(seconds=t1_seconds, microseconds=t1_us)"
python global variables don't seem to work across modules,"import a
a.changeX()"
select data at a particular level from a multiindex,"import pandas
print(pandas.__version__)"
how can i change keys in a dictionary to upper case and add values of the same key in the resulting dictionary?,"for key, val in d.items():
    pass"
convert integers to rgb values and back with python,colr1 = getRGBfromI(i1)
pylint disable all warnings for a file,"class C456(object):
    pass"
using boto for aws s3 buckets for signature v4,"s3 = boto.s3.connect_to_region('eu-central-1', aws_access_key_id=accesskey,
    aws_secret_access_key=secretkey, host='s3.eu-central-1.amazonaws.com')"
clone element with beautifulsoup,"for child in el.contents:
    copy.append(clone(child))
return copy"
data corruption piping between c++ and python,print('')
how do i replace floats with rationals in a sympy expression?,"import sympy

def rationalize_coeffs(expr):
    for i in expr.atoms(sympy.Float):
        r = sympy.Rational(str(i)).limit_denominator(1000)
expr = expr.subs(i, str(r.p) + '/' + str(r.q))
return expr
if __name__ == '__main__':
    x, y, z = sympy.symbols('x y z')
expr = 0.0350877192982456 * x + 0.75 * y + 0.75 * z
print(rationalize_coeffs(expr))"
how to fold/accumulate a numpy matrix product (dot)?,"for i in range(x.shape[0]):
    w[i] = w[i] + x[i] * y[i] * z[i]"
"k-means clustering implementation in python, running out of memory",centroids = defaultdict(float)
python: need to close file from mkstemp if i use fdopen?,"f_handle, f_path = tempfile.mkstemp()"
importing big tecplot block files in python as fast as possible,str_vector = ' '.join(filelist[count:count + lin])
linked worker pools in python,"beanstalk.put('hey!')
job = beanstalk.reserve()
job.body"
making 4 lists into a 2 element nested list,"[[1, 4], [2, 5], [3, 6], [7, 11], [8, None], [9, None], [10, None]]"
how to draw a line with animation in pyqt4,"def paintEvent(self, event):
    painter = Qt.QPainter()"
mutable dictionary with fixed and ordered keys,self._d = OrderedDict(*args)
convert an image to 2d array in python,"from skimage.io import imread
im = imread('farm.jpg')"
having trouble getting simplehttprequesthandler to respond to ajax,SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self)
how can i convert 24 hour time to 12 hour time?,"import time
t = time.strptime(timevalue_24hour, '%H:%M')
timevalue_12hour = time.strftime('%I:%M %p', t)"
how to create/customize your own scorer function in scikit-learn?,"score = make_scorer(my_custom_loss_func, greater_is_better=True)"
python tkinter with a simple web wrapper,win = gtk.Window()
how to unit-test code that uses python-multiprocessing,"class TestSample(unittest.TestCase):

    def test(self):
        old_main = sys.modules['__main__']
old_main_file = sys.modules['__main__'].__file__
sys.modules['__main__'] = sys.modules['app']
sys.modules['__main__'].__file__ = sys.modules['app'].__file__
sys.modules['__main__'] = old_main"
python - list transformation,"x = [1, 2, 3, 4, 5, 11]
y = [('%02d' % v) for v in x]
y"
python https against azure service management api fails on windows,bC5taWNyb3NvZnQuY29tL3BraS9tc2NvcnAvY3JsL01pY3Jvc29mdCUyMFNlY3Vy
load graph data from files on button click with bokeh,"from bokeh.plotting import figure, output_file, show
output_file('load_data_buttons.html')"
how to resolve dns in python?,"data = socket.gethostbyname_ex(x)
print(""""""
The IP Address of the Domain Name is: """""" + repr(data))
x = input(""""""
Select enter to proceed back to Main Menu
"""""")
if x == '1':
    exec(compile(open('C:\\python\\main_menu.py').read(), 'C:\\python\\main_menu.py', 'exec'))"
neural networks regression using pybrain,"trainer = BackpropTrainer(net, ds, verbose=True)
trainer.trainUntilConvergence(maxEpochs=100)"
how to parse parenthetical trees in python?,children = []
how to remove index list from another list in python?,"list_1 = [i for n, i in enumerate(list_1) if n not in index_list]"
crop a png image to its minimum size,imageComponents = image.split()
use stringio as stdin with popen,"output = check_output(cmd, input='somefile not found')"
how to output most common vowel,"return len(vow_found), c.most_common()"
how to support two types of function arguments in python,"def f(x):
    return x + 1
lst = map(f, [1, 2, 3])"
how do i pass template context information when using httpresponseredirect in django?,"messages.success(request, 'Your data has been saved!')"
upload media from heroku to amazon s3,from django.conf import settings
create a python type from c that implements a __dict__?,BarObject_Type.tp_doc = 'Doc string for class Bar in module Foo.'
how to calculate factoranalysis scores using python (scikit-learn)?,-10.047780535
cross product of two vectors in python,"def cross(a, b):
    c = [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] -
        a[1] * b[0]]"
text processing with two files,"file1 = {}
for line in open('file1', 'r'):
    k, v = line.strip().split(':')
file1[k] = v"
selecting numpy array axis by int,"s[axis] = slice(start, stop)"
how might i remove duplicate lines from a file?,lines_seen = set()
flask hangs when sending a post request to itself,"app.run(threaded=True)
app.run(processes=2)"
pythonic difference between two dates in years?,"start_date = datetime(2010, 4, 28, 12, 33)
end_date = datetime(2010, 5, 5, 23, 14)
difference_in_years = date_as_float(end_time) - date_as_float(start_time)"
how can i get a list of the symbols in a sympy expression?,"import sympy
x, y, z = sympy.symbols('x:z')
f = sympy.exp(x + y) - sympy.sqrt(z)
f.free_symbols"
how can you determine a point is between two other points on a line segment?,"dotproduct = (c.x - a.x) * (b.x - a.x) + (c.y - a.y) * (b.y - a.y)
if dotproduct < 0:
    return False
squaredlengthba = (b.x - a.x) * (b.x - a.x) + (b.y - a.y) * (b.y - a.y)
if dotproduct > squaredlengthba:
    return False
return True"
reading struct in python from created struct in c,x = Struct('dicxxx')
open file from windows file dialog with python automatically,length = GetWindowTextLength(hwnd)
location of python27.dll from python itself,"for process in win32process.EnumProcessModules(-1):
    pass"
python window resize,"w.connect('check-resize', changed)
w.show()
gtk.main()"
implementaion hmac-sha1 in python,url = 'https://api.twitter.com/1.1/account/verify_credentials.json'
how to mock a function defined in a module of a package?,"def printFoo():
    print(bar.returnBar())"
how to extract dependencies information from a setup.py,thedir = os.path.dirname(thedir)
how to retrieve function call argument values using libclang,import sys
asyncio: is it possible to cancel a future been run by an executor?,event.set()
how to convert unicode numbers to ints?,"return r
print(to_float('\xdb\xb5\xdb\xb5'))
print(to_float('\xe4\xba\x94'))"
how to make django slugify work properly with unicode strings?,"def u_slugify(txt):
    """"""A custom version of slugify that retains non-ascii characters. The purpose of this
        function in the application is to make URLs more readable in a browser, so there are 
        some added heuristics to retain as much of the title meaning as possible while 
        excluding characters that are troublesome to read in URLs. For example, question marks 
        will be seen in the browser URL as %3F and are thereful unreadable. Although non-ascii
        characters will also be hex-encoded in the raw URL, most browsers will display them
        as human-readable glyphs in the address bar -- those should be kept in the slug.""""""
txt = txt.strip()
txt = re.sub('\\s*-\\s*', '-', txt, re.UNICODE)
txt = re.sub('[\\s/]', '_', txt, re.UNICODE)
txt = re.sub('(\\d):(\\d)', '\\1-\\2', txt, re.UNICODE)
txt = re.sub('""', ""'"", txt, re.UNICODE)
txt = re.sub('[?,:!@#~`+=$%^&\\\\*()\\[\\]{}<>]', '', txt, re.UNICODE)
return txt"
remove python list element,"if x in l2:
    pass"
an alternative to global in python,"class Cache:
    myvar = 1

def foo():
    Cache.myvar = 2"
how to speed up the code - searching through a dataframe takes hours,"0.0, 52.1212839519, 6.40719759732, 43.0378290605, 86.769620064, 96.7032941473
53.7416111725, 0.0, 27.5552964592, 85.3286070586, 59.5613449796, 8.89540736892
96.1429198049, 62.5329836475, 0.0, 6.32027280686, 37.8091052942, 69.8963084944"
get rid of get_profile() in a migration to django 1.6,nickname = request.user.profile.nickname
python pandas qcut behavior with # of observations not divisible by # of bins,"a = np.random.rand(26 * 10 + 3)
r = pd.qcut(a, 10)
np.bincount(r.labels)"
numpy matrix trickery - sum of inverse times matrices,"r, n, p = 200, 400, 400
X = np.random.rand(r, n, p)"
python: convert multiple instances of the same key into multiple rows,"from collections import OrderedDict
a = OrderedDict({'id': ['1221AB12'], 's': ['Party!'], 'flag': ['urgent',
    'english'], 't': ['0523456789', '0301234567'], 'f': ['0412345678']})"
creating a python dictionary from a line of text,"fields = tuple(field.strip() for field in line.split(','))"
how to retrieve an element from a set without removing it?,"stats = ['for i in xrange(1000): iter(s).next()   ',
    """"""for i in xrange(1000): 
	for x in s: 
		break"""""",
    'for i in xrange(1000): s.add(s.pop())   ',
    'for i in xrange(1000): s.get()          ']"
fastest object to iterate a chars in a list of strings,"def pir2(li):
    return Counter(chain.from_iterable([list(set(i)) for i in li])
        ).most_common(10)"
elementwise multiplication of arrays of different shapes in python,import numpy as np
django get url regex by name,"for pattern in urlpatterns:
    pass"
how to know when to manage resources in python,the_file = open('thefile.txt')
abstract methods in python,"class Shape(object):
    pass"
what's the difference between a python module and a python package?,"xml.etree.ElementTree
import xml.etree"
how python deals with module and package having the same name?,"import_module('.', 'foo')"
how to store and retrieve a dictionary with redis,"conn.hmset('pythonDict', user)"
python: counting the items in a generator consumed by other code,"def __iter__(self):
    pass"
python last iteration in for loop,"print(', followed by')"
how to find the count of a word in a string?,input_string.count('Hello')
how to install pil in ubuntu 11.04?,image.save('output.png')
extracting pitch features from audio file,"audio_file = 'mono_file.wav'
F = Chromagram(audio_file, nfft=16384, wfft=8192, nhop=2205)"
"python: for loop with files, how to grab the next line within forloop?",line = next(file)
lexical cast from string to type,"return getattr(__builtins__, name)"
writing a function that alternates plus and minus signs between list indices,"sum(item if i % 2 else -1 * item for i, item in enumerate(mylist, 1))"
apply a function to the 0-dimension of an ndarray,"res = np.zeros_like(arr, int)"
numpy array from csv file for lasagne,"y_train = Xy_train[:, (0)]
X_valid = Xy_valid[:, 1:]"
how to find and leave only doubles in list python?,"a = [1, 2, 3, 4, 5, 2, 4, 5]
b = [x for x in a if a.count(x) > 1]
print(b)"
remove final character from string (python),list2 = list(list1)
find first time a value occurs in the dataframe,"first_q = alldata[['Customer_ID', 'Year_Quarter']].groupby(by='Customer_ID'
    ).Year_Quarter.first()"
sorting an array in tensorflow,"reordered = tf.gather(a, tf.nn.top_k(a[:, (2)], k=4).indices)"
dealing with n by 1 matrices in numpy,"a
a[:]"
regex for matching a floating point number which is not an integer,"pattern = '[+-]?(?:\\d+\\.\\d*|\\.\\d+|\\d+(?=[eE]))(?:[eE][+-]?\\d+)?'
re.match(pattern, '4.')
re.match(pattern, '4.4')"
how to docstring in python for multiple languages,"class MyAwesomeClass:

    def incredible_method(with_fantastic_args):
        pass"
plot the whole pandas dataframe with bokeh,"from bokeh.plotting import output_notebook
output_notebook()"
removing list from list of lists with condition,region_el = [x[0] for x in remaining]
efficiently take moving average of sparse data and filter above threshold in python,"return unique_idx, mov_avg"
how to receive mail using python,pop_conn.quit()
how to uniq list of objects?,"lst = [Test(1, 2), Test(2, 3), Test(1, 2)]"
from list of indices to one-hot matrix,"v_val = np.asarray([1, 0, 3])"
explode a dict - get all combinations of the values in a dictionary,"for item in map(dict, product(*flat)):
    pass"
create a diverging stacked bar chart in matplotlib,"plt.xticks(xvalues, xlabels)"
how to test (using unittest) the html output of a django view?,"def should_find_something(self):
    response = self.client.get('/path/to/resource/pk/')
self.assertContains(response, '<td id=""pk"">the pk string</td>', status_code=200
    )
self.assertTemplateUsed(response, 'appropriate_page.html')"
ensuring the cartesian product of keys appears in a pandas table,"p = pd.MultiIndex.from_product(df1.index.levels, names=df1.index.names)"
how to speed up levenshtein distance calculation,threads.append(t)
"check if string has date, any format","parsed.append((e, fmt, t))"
copy using the windows copy dialog,"pfo.CopyItem(src, dst)"
multiplicative combination algorithm,"heapq.heappush(heap, (-p1, x - 1, y))"
how to connect to local mqseries queue using python?,"conn_info = '%s(%s)' % (host, port)"
django - inlineformset_factory with more than one foreignkey,"class userInfo(models.Model):

    def __unicode__(self):
        pass"
django adding two objects to view,"return render_to_response('gallery/list_galleries.html', {'galleries': zip(
    list_galleries, g)})"
how do you select a sprite image from a sprite sheet in python?,"SPRT_RECT_X = 0
SPRT_RECT_Y = 0
LEN_SPRT_X = 100
LEN_SPRT_Y = 100
screen = pygame.display.set_mode((SCREEN_X, SCREEN_Y))
sheet = pygame.image.load('C:\\YOURFILE')
sheet.set_clip(pygame.Rect(SPRT_RECT_X, SPRT_RECT_Y, LEN_SPRT_X, LEN_SPRT_Y))
draw_me = sheet.subsurface(sheet.get_clip())
backdrop = pygame.Rect(0, 0, SCREEN_X, SCREEN_Y)
screen.blit(draw_me, backdrop)
pygame.display.flip()"
find maximum with limited length in a list,"array = [1, 2, 4, 5, 4, 5, 6, 7, 2, 6, -9, 6, 4, 2, 7, 8]
array = [abs(item) for item in array]"
"django, how to see session data in the admin interface","class SessionAdmin(ModelAdmin):
    pass"
compare object instances for equality by their attributes in python,"class Test(object):

    def __init__(self, attr1, attr2):
        self.attr1 = attr1
self.attr2 = attr2

def __str__(self):
    return str(self.__dict__)

def __eq__(self, other):
    return self.__dict__ == other.__dict__
t1 = Test('foo', 42)
t2 = Test('foo', 42)
t3 = Test('bar', 42)
print(t1, t2, t3)
print(t1 == t2)
print(t2 == t3)"
flask jsonify a list of objects,"class EqltByGene(object):
    pass"
plot on top of seaborn clustermap,"import numpy as np
import seaborn as sns
import pandas as pd
import matplotlib.pyplot as plt
import random
data = np.random.random((50, 50))
df = pd.DataFrame(data)
row_colors = [('b' if random.random() > 0.2 else 'r') for i in range(0, 50)]
cmap = sns.diverging_palette(133, 10, n=7, as_cmap=True)
result = sns.clustermap(df, row_colors=row_colors, col_cluster=False, cmap=
    cmap, linewidths=0)
print(dir(result))
ax = result.ax_heatmap
ax.plot([5, 30], [5, 5], 'k-', lw=10)
plt.show()"
non ascii filename in blobstore (google app engine),resource = str(urllib.parse.unquote(resource))
reverse engineer sqlalchemy declarative class definition from existing mysql database?,"meta = MetaData()
meta.reflect(bind=engine)
for table in list(meta.tables.values()):
    pass"
how to get selected option using selenium webdriver with python?,"select = Select(driver.find_element_by_id('FCenter'))
selected_option = select.first_selected_option"
how use __setattr__ & __getattr__ for map ini values?,"def __init__(self, name, parser):
    self.__dict__['name'] = name"
how to work within individual files rather than projects in pycharm,pycharm[path_to_your_file]
extract all bounding boxes using opencv python,im = cv2.imread('c:/data/ph.jpg')
how would i run a script file as part of the python setup.py install?,"class MyInstall(install):

    def run(self):
        install.run(self)"
replace with newline python,"a.replace('>', '> \n')"
nltk viterbiparser fails in parsing words that are not in the pcfg rule,from nltk import PCFG
python gzip: is there a way to decompress from a string?,"try:
    content = gzip.GzipFile(fileobj=some_file).read()
except IOError:
    pass"
how can i make a sprite move when key is held down,"while running:
    keys = pygame.key.get_pressed()
if keys[pygame.K_UP]:
    pass"
how do you 'remove' a numpy array from a list of numpy arrays?,list.pop(list.index(element))
splicing through a line of a textfile using python,"index = 0
DnaID = 1"
how to compare list in python?,"a = [1.0, 2.0, 2.1, 3.0, 3.1, 4.2, 5.1, 7.2, 9.2]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9]
a1 = [2.1, 3.1, 4.2, 7.2]
mapping = dict(zip(a, b))
[mapping[value] for value in a1 if value in mapping]"
stop python from generating pyc files in shebang,print(1)
python string interning and substrings,h = 'foobarbaz'
a simple smtp server,"print('%s saved.' % filename)
self.no += 1

def run():
    foo = EmlServer(('localhost', 25), None)
try:
    asyncore.loop()
except KeyboardInterrupt:
    pass
if __name__ == '__main__':
    run()"
how to click on a button (angular) via python script selenium,print('ValidateFileButton is found')
iterating over an unknown number of nested loops in python,from itertools import product
how to make a 3d scatter plot in python?,"ax = Axes3D(fig)
sequence_containing_x_vals = list(range(0, 100))
sequence_containing_y_vals = list(range(0, 100))
sequence_containing_z_vals = list(range(0, 100))
random.shuffle(sequence_containing_x_vals)
random.shuffle(sequence_containing_y_vals)
random.shuffle(sequence_containing_z_vals)
ax.scatter(sequence_containing_x_vals, sequence_containing_y_vals,
    sequence_containing_z_vals)
pyplot.show()"
finding streaks in pandas dataframe,df['streak'] = df['streak2'] - df['cumsum']
creating a socket restricted to localhost connections only,"sd = socket.socket(socket.AF_UNIX)
sd.connect('/path/to/my/socket')
sd.send('hello')"
serializing sqlalchemy models for a rest api while respecting access control?,"def my_controller(self):
    return to_response(request, response, myobject)

def to_response(req, resp, obj):
    pass"
pandas: how to groupby and get a count of uniques in a given column?,df2['total'] = df2.sum(axis=1)
parsing html with lxml,yield node.text
current value of generator,"def __call__(self):
    return self"
python pil bytes to image,"from PIL import Image
import io as StringIO
stream = StringIO.StringIO(b_data)"
python - intersectiing strings,b = 'qazwsxedc'
combine two columns of text in dataframe in pandas/python,"print(df)
df['Period'] = df.Year.str.cat(df.Quarter)
print(df)"
google app engine - getting sessions working with python 2.7,"def session(self):
    return self.session_store.get_session()
self.session['foo'] = 'bar'
foo = self.session.get('foo')"
pass session cookies in http header with python urllib2?,"s.post(url, data=user_data)"
how do i do conditional array arithmetic on a numpy array?,"a = np.array([1, 2, 3, -1, -2, -3])"
python pandas identify duplicated rows with additional column,"dfnondup = df.drop_duplicates(['PplNum', 'RoomNum'])

def rename_dup(df):

    def rename_dup(df, c, dfnew):
        dfnondup = df.drop_duplicates(['PplNum', 'RoomNum'])
dfnondup['C'] = pd.Series([c] * len(dfnondup), index=dfnondup.index)
dfnew = pd.concat([dfnew, dfnondup], axis=0)
c += 1
dfdup = df[df.duplicated(['PplNum', 'RoomNum'])]
if dfdup.empty:
    return dfnew, c
else:
    return rename_dup(dfdup, c, dfnew)
return rename_dup(df, 1, pd.DataFrame())
dfnew, c = rename_dup(df)"
python late binding - dynamically put locals in scope,"print(domonad(maybe_m, lambda x: None, lambda x: 2 * x)(2))"
reading xlsx files using python,"for e, el in iterparse(z.open('xl/worksheets/sheet1.xml')):
    if el.tag.endswith('}v'):
        pass"
how to speed up a recursive algorithm,"moves = [2, 3, 5]"
using scikit-learn vectorizers and vocabularies with gensim,"corpus_vect_gensim = gensim.matutils.Sparse2Corpus(corpus_vect,
    documents_columns=False)
vocabulary_gensim = {}
for key, val in list(vect.vocabulary_.items()):
    pass"
how to sort file contents into list,"with open('whatever.txt', 'w') as out:
    pass"
python: i have a string and a list of lists of varying lengths and i want to return the letters in groups as they correspond to the list,['ABCDE']
expose a vector as a memoryview using swig,print(len(test.vec()))
create a list of tuples with adjacent list elements if a condition is true,"sets = [(myList[i - 1], j) for i, j in enumerate(myList) if j == 9]"
how do i draw text at an angle using python's pil?,"draw.text((50, 50), 'hey')
im.rotate(45).show()"
compare two floats for equality in python,"assert_almost_equal(a, b)
assert_almost_equal(a, b)"
list comprehension with an accumulator,"it = iter(iterable)
total = next(it)"
group vertices in clusters using networkx,"py.show()
fixedpos = {(1): (0, 0), (6): (1, 1), (11): (1, 0), (16): (0, 1)}
pos = nx.spring_layout(G, fixed=list(fixedpos.keys()), pos=fixedpos)
nx.draw_networkx(G, pos=pos)
py.show()"
get selected subcommand with argparse,"args = parser.parse_args(['-g', 'xyz', 'foo', '--count', '42'])"
how to get back name of the enum element in python?,"from enum import Enum


class Status(Enum):
    STATUS_OK = 0"
how to ignore deprecation warnings in python,import warnings
how to put result of javascript function into python variable. pyqt,"def showMessage(self, message):
    print('Message from website:', message)"
how to convert pointer to c array to python array,return True
how to use django model inheritance with signals?,"post_save.connect(update_attachment_count_on_save, subclass)"
python - how to edit hexadecimal file byte by byte,f.close()
find (and keep) duplicates of sublist in python,"from functools import reduce
reduce(set.intersection, x[1:], set(x[0]))"
sum elements of a list between zeros in python,"result = [i for k, g in groupby(lst, bool) for i in ((sum(g),) if k else g)]"
avoiding mysql deadlock in django orm,"samples = self.model.objects.select_for_update().filter(user=self.user,
    timestamp__gte=start_time, timestamp__lte=end_time)"
add column sum as new column in pyspark dataframe,"pyspark
df = sc.parallelize([{'a': 1, 'b': 2, 'c': 3}, {'a': 8, 'b': 5, 'c': 6}, {
    'a': 3, 'b': 1, 'c': 0}]).toDF().cache()
df
df.columns"
python for ios interpreter,pDict = PyModule_GetDict(pModule)
how to make ttk.treeview's rows editable?,self.parent.title('Tree')
django urls straight to html template,"response = super(StaticView, self).get(request, *args, **kwargs)"
django m2m queryset filtering on multiple foreign keys,"class ConversationManager(models.Manager):

    def has_all(self, participants):
        pass"
some doubts modelling some features for the libsvm/scikit-learn library in python,"Features(W - 2), Features(W - 1), Features(W0), Features(W1), Features(W2)"
scraping with beautifulsoup and multiple paragraphs,"span = soup.find('span', {'class': 'displaytext'})
paras = [x.contents[0] for x in span.findAllNext('p')]
print('%s\n\n%s' % (span.string, '\n\n'.join(paras)))"
python ucs2 decoding from hex string,"line = (
    """"""000A0033002004200430043404300440000A003400200417043D0430043A043E043C0441044204320430000A00350020041C04430437044B043A0430000A00380020041504490435""""""
    )"
python variable scope in nested functions,"def inner():
    z = 3
print(x)
return inner"
python: count occurrences in a list using dict comprehension/generator,d = {}
are there any uses of the empty tuple in python?,return ()
returning matpotlib image as string,output = cStringIO.StringIO()
grouping dataframes in pandas?,df
variable scopes in python classes,"def __init__(self, a):
    print(self.a)"
having child-processes allow rpc-server to restart while children survive,"def _job2():
    for _ in range(3):
        pass"
pandas csv-import: keep leading zeros in a column,"project_name, project_id"
catching a python app before it exits,"sys.stdout = open('stdout.log', 'w')"
"nltk sentence tokenizer, consider new lines as sentence boundary","if self._paragraphs is not None:
    pass"
how do i fit a sine curve to my data with pylab and numpy?,plt.show()
how do i parse a string representing a nested list into an actual list?,"mylist = ast.literal_eval(
    ""['foo', ['cat', ['ant', 'bee'], 'dog'], 'bar', 'baz']"")
mylist"
remove final characters from string recursively - what's the best way to do this?,""""""""""""".join(dropwhile(lambda x: x in bad_chars, example_line[::-1]))[::-1]"
exchange vowels from user input in python,data = eval(input())
how can i use a socks 4/5 proxy with urllib2?,"opener = urllib.request.build_opener(SocksiPyHandler(socks.PROXY_TYPE_SOCKS4,
    'localhost', 9999))"
"chr() equivalent returning a bytes object, in py3k","import struct
struct.pack('B', 10)
import functools
bchr = functools.partial(struct.pack, 'B')
bchr(10)"
using !s vs. :s to format a string in python,"def __repr__(self):
    return '<Foo as repr, with \xc3\xa5\xc3\xa9\xc3\xa6 some non-ASCII>'

def __format__(self, spec):
    pass"
python loop dictionary items through a tkinter gui using a button,var[thing] = IntVar()
read all the contents in ini file into dictionary with python,"class MyParser(ConfigParser.ConfigParser):

    def as_dict(self):
        d = dict(self._sections)
for k in d:
    d[k] = dict(self._defaults, **d[k])
d[k].pop('__name__', None)
return d"
"combining flask-restless, flask-security and regular python requests",print(request.headers)
django - get contenttype model by model name (generic relations),user_type = ContentType.objects.get(model='user')
using pysmbc to read files over samba,"dfile = open(dpath, 'wb')"
networkx (python): how to change edges' weight by designated rule,"G = nx.DiGraph()
G.add_edge(1, 2, weight=10)
G.add_edge(2, 3, weight=20)
G[2][3]['weight']"
"implementing a ""kurtosis filter"" using scipys generic_filter",s = Xp.sum(axis=2)
need to constantly monitor serial data in python,"tkMessageBox.showwarning('BLAH', 'BLAH\n')"
json datetime between python and javascript,"raise TypeError('Object of type %s with value of %s is not JSON serializable' % (
    type(obj), repr(obj)))"
python - convert string to list,import random
cannot import sqlite with python 2.6,print(sys.path)
set an object's superclass at __init__?,print('#00F')
2d array of lists in python,"matrix[0][1]
matrix[0][1] += 'someText'"
what's the best way to get the size of a folder and all the files inside from python?,"for path, dirs, files in os.walk(root):
    for f in files:
        pass"
how to print symbols like ● to files in python,outFile.close()
python xml to dictionary to iterate over items,import xml.etree.cElementTree as etree
django migrations and customizable reusable apps,"def upload_to(instance, filename):
    pass"
find time difference in seconds as an integer with python,"import time
now = time.time()"
routes with trailing slashes in pyramid,"if not pattern.endswith('/'):
    pass"
iterate over both text and elements in lxml etree,from xml.etree import cElementTree as etree
python hdf5 h5py issues opening multiple files,"for filename in files:
    data = extract_data_from_filename(filename)"
pandas conditional creation of a series/dataframe column,"df = pd.DataFrame({'Type': list('ABBC'), 'Set': list('ZZXY')})
df['color'] = np.where(df['Set'] == 'Z', 'green', 'red')
print(df)"
generating all combinations of a list in python,"stuff = [1, 2, 3]"
tkinter full screen,"self.overrideredirect(True)
self.attributes('-topmost', True)"
extend python namedtuple with many @properties?,"def person(self):
    pass"
increment counter for every access to a flask view,"@app.route('/')
def index():
    pass"
"savetxt two columns in python,numpy","R = np.array([[0.62367947], [0.95427859], [0.97984112], [0.7025228], [
    0.86436385], [0.71010739], [0.98748138], [0.75198057]])
phase = np.array([[-1.0, 1.0, -1.0], [-1.0, 1.0, 1.0], [1.0, 1.0, 1.0], [
    1.0, -1.0, 1.0], [-1.0, -1.0, -1.0], [1.0, 1.0, -1.0], [1.0, -1.0, -1.0
    ], [-1.0, -1.0, 1.0]])
np.savetxt('R2.txt', np.hstack([R, phase]), fmt=['%0.8f', '%g', '%g', '%g'])"
group values based on range of number in python,"(220922563, 2991),"
return a users tweets with tweepy,"print(status.author, status.user)"
python lxml wrapping elements,print(ET.tostring(root))
"equivalent of python's ""with"" in ruby",ensure
how to accept both filenames and file-like objects in python functions?,pass
python django: how to upload a file with a filename based on instance pk,admin.site.register(CMSMediaDocument)
allowing resizing window pygame,"while True:
    surface.fill((255, 255, 255))"
how to make numpy.argmax return all occurences of the maximum?,"winner = np.argwhere(list == np.amax(list))
print(winner)
print(winner.flatten().tolist())"
add a field in pandas dataframe with multiindex columns,df = dftst.stack(0)
lazily sample random results in python,"selected = []
for i in range(n):
    perm = nextPermutation()
if random.random() < float(k - len(selected)) / (n - i):
    pass"
reformat a column to only first 5 characters,"my_file_name = 'NVG.txt'
cleaned_file = 'cleanNVG.csv'
remove_words = ['INAC-EIM', '-INAC', 'TO-INAC', 'TO_INAC', 'SHIP_TO-inac',
    'SHIP_TOINAC']
with open(my_file_name, 'r', newline='') as infile:
    with open(cleaned_file, 'w', newline='') as outfile:
        writer = csv.writer(outfile)
cr = csv.reader(infile, delimiter='|')
writer.writerow(next(cr))
for line in cr:
    if not any(remove_word in element for element in line for remove_word in
        remove_words):
        line[1] = line[1][:5]
writer.writerow(line)"
hide auth section in django admin,"admin.site.unregister(User)
admin.site.unregister(Group)
admin.site.unregister(Site)"
python tweet multiple images twitter api,"auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)"
python - is there a list of decorators somewhere?,f = staticmethod(f)
need help writing recursive function that find cheapest route through a list of numbers,a = b = l[0]
how do i create a new file on a remote host in fabric (python deployment tool)?,"import sys, os
sys.path.insert(0, '/ruby/$HOST$/www/$HOST$/django-projects')"
"sending ""set-cookie"" in a python http server","req_handler.send_response(200, 'OK')
req_handler.wfile.write(C.output())
req_handler.end_headers()"
how to access dictionary element in django template?,"class Choice(models.Model):
    text = models.CharField(max_length=200)

def calculateVotes(self):
    pass"
telegram bot api keyboard,"json_keyboard = json.dumps({'keyboard': [['A button'], ['B button']],
    'one_time_keyboard': False, 'resize_keyboard': True})"
"mixins, multi-inheritance, constructors, and data","def __init__(self, *args, **kwargs):
    print('A_1 constructor')"
regex for links in html text,all_links = soup.findAll('a')
understanding global variable in python,del mod2
how to determine from which class a method was inherited from?,"class B(A):
    pass"
plotting multiple lines with bokeh and pandas,show(p)
how to select values in between strings and place in column of dataframe using regex in python,df1
how to use regex with optional characters in python?,"print(re.match('(\\d+(\\.\\d+)?)', '3434.35353').group(1))"
python xticks in subplots,"import matplotlib.pyplot as plt
fig, axes = plt.subplots(nrows=3, ncols=4)"
all possible paths from one node to another in a directed tree (igraph),paths.append(child_path)
how to access scrapy settings from item pipeline,"@classmethod
def from_crawler(cls, crawler):
    settings = crawler.settings
my_setting = settings.get('MY_SETTING')
return cls(my_setting)"
scraping with scrapy and selenium,"for month in months:
    link = self.br.find_element_by_link_text(month)
link.click()"
matplotlib (mplot3d) - how to increase the size of an axis (stretch) in a 3d plot?,"ax.plot(z, y, x, label='parametric curve')"
"python, beautifulsoup - <div> text and <img> attributes in correct order",result.append(child.strip())
python logging module is printing lines multiple times,f = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
caching data within a python class (to avoid expensive filesystem reads on app engine),return self.__theme_variables
constructing a 2d grid from potentially incomplete list of candidates,"YY = Y.reshape((1, Y.size))
dY = np.abs(YY - YY.T).reshape((1, Y.size ** 2))"
patch over missing rows in csv file in python,data = []
django: how to call management custom command execution from admin interface?,image.show()
how can i force python(using win32com) to create a new instance of excel?,olApp = gencache.EnsureDispatch(clsid)
how to make a call to an executable from python script?,popen.wait()
best method of saving data,"import json
string_from_file"
beautifulsoup: get contents[] as a single string,"url = 'https://vk.com/postnauka'
print(parse_contents_href(url))"
getting next element while cycling through a list,"li = [0, 1, 2, 3]
running = True
idx = 0
while running:
    thiselem = li[idx]
idx = (idx + 1) % len(li)
nextelem = li[idx]"
"django onetoonefield, manytomanyfield, foreign key",publisher = models.ForeignKey(Publisher)
get day name from weekday int,"import calendar
calendar.day_name[0]"
how to read python bytecode?,func.__code__.co_consts
how to use django model inheritance with signals?,from django.dispatch import receiver
"subset of a matrix multiplication, fast, and sparse","r = coo_matrix((data, (row, col)), shape=(M, N))"
how to connect to remote server with paramiko without a password?,"IP = input('Enter host_server IP: ').split()
username = input('Enter username: ').split()"
how to call tcl procedure using python,"r = Tkinter.Tk()
r.tk.eval('proc sum {a b} {set c [expr {$a + $b}]; puts ""Sum $c""; return $c}')
r.tk.eval('sum 2 5')"
how do i extend the django group model?,ordering = ['name']
how to handle a tokenize error with unterminated multiline comments (python 2.6),s = ')'
python: find first non-matching character,"match = re.search('[^f]', line)"
splitting strings in python,"import re
re.findall('\\[[^\\]]*\\]|""[^""]*""|\\S+', s)"
python: printing a file to stdout,"import shutil
import sys
with open('test.txt', 'r') as f:
    shutil.copyfileobj(f, sys.stdout)"
easy way to implement a root raised cosine (rrc) filter using python & numpy,print('i = %d' % i)
how can i read successive arrays from a binary file using `np.fromfile`?,"y = np.random.randn(300, 400)
with open('/tmp/testbin', 'wb') as f:
    np.array(x.shape).tofile(f)"
python: unpack format characters,"fmt = ''.join((fmt[:idx - 1], str(n), before_char, fmt[idx + 1:]))"
distorting an image using a height map?,"print('Remapping original image using map...')
remapped = cv.CreateImage(cv.GetSize(image), 8, 3)
cv.Remap(image, remapped, mapX, mapY, cv.CV_INTER_LINEAR)"
how to convert special characters into html entities?,"text = text.replace(key, value)"
analyzing string input until it reaches a certain letter on python,s = 'wolfdo65gtornado!salmontiger223'
"draw points using matplotlib.pyplot [[x1,y1],[x2,y2]]","x_list = [x for [x, y] in list_of_lists]
y_list = [y for [x, y] in list_of_lists]"
string coverage optimization in python,i = m.start()
"is there a way to ""nice"" a method of a python script","def reniced(*args, **kwargs):
    pass"
timeout on subprocess readline in python,"if poll_result:
    line = scan_process.stdout.readline()"
how can i create a list from two dictionaries?,"fus_s = {'2013-01-01': 0, '2013-04-01': 0, '2013-02-01': 1, '2013-03-01': 1}"
"solving a system of equation with sympy, python2.7","x, y, z, w = sp.symbols('x, y, z, w')
rho, sigma, beta = sp.symbols('rho, sigma, beta')
z = w"
how to check if a string is at the beginning of line in spite of tabs or whitespaces?,"args = ['awk', '/^\\s*word/ { print $1}', 'anyfile.py']
p = sp.Popen(args, stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.PIPE)
print(p.stdout.read())"
disable abbreviation in argparse,"if option_string.startswith(option_prefix):
    pass"
add line based on slope and intercept in matplotlib?,from matplotlib import pyplot as plt
autobahn sending user specific and broadcast messages from external application,"reactor.listenTCP(8080, web)"
extracting table contents from html with python and beautifulsoup,"soup = BeautifulSoup(unicodestring_containing_the_entire_htlm_doc)
table = soup.find('table', {'class': 'details'})
th = table.find('th', text='Issued on:')
th
td = th.findNext('td')"
taking control of a for loop (python),"if flag:
    pass"
how to pop out a separate window from a tabwidget in pyside qt,layout = QtGui.QVBoxLayout(self)
add a new column and insert specific values according to an defined intervall in python,"df['d1'] = pd.cut(df['column1'], bins=bins, labels=labels)
print(df)"
how to return a pointer to a structure in ctypes?,foovar = myclib.bar(temp_foo.i)
indexing a list with an unique index,[d[k] for k in lst]
how can i selectively escape percent (%) in python strings?,"selectiveEscape = 'Print percent %% in sentence and not %s' % test
print(selectiveEscape)"
cannot train a neural network in keras,"score = model.evaluate(X, y)"
spline with constraints at border,"return splrep(x, y, w, k=k, s=s)"
removing html tags from a text using regular expression in python,doc = fromstring(html)
turning string with embedded brackets into a dictionary,"pairs = re.split('(?<=})\\s*(?={)', str)"
"convert python sequence to numpy array, filling missing values","out = np.zeros(mask.shape, dtype=int)
out[mask] = np.concatenate(v)
return out"
link to python with mingw,"if os.path.exists(pylib):
    pass"
python permutations including substrings,"def permutate_all_substrings(text):
    permutations = []
for length in range(1, len(text) + 1):
    for permutation in itertools.permutations(text, length):
        permutations.append(''.join(permutation))
return permutations"
a pythonic way to write a constrain() function,"np.minimum(b, np.maximum(a, 3))"
skip a behave step in the step implementation,"if not connection_available():
    context.scenario.skip(reason='internet connection is unavailable')"
how can i convert the time in a datetime string from 24:00 to 00:00 in python?,"def standardize_date(date_str):
    pass"
how do i check out a file from perforce in python?,"p4in, p4out = os.popen2('p4 changelist -i')"
hicon/hbitmap to qicon/qpixmap/qimage/anything with a q in it,"lbl.show()
app.exec_()"
how to display only a left and bottom box border in matplotlib?,"import matplotlib.pyplot as plt
fig, ax = plt.subplots()
ax.spines['right'].set_visible(False)"
how to get messages receive count in amazon sqs using boto library in python?,"c = boto.sqs.connect_to_region()
q = c.lookup('myqueue')
messages = c.receive_message(q, num_messages=1, attributes='All')
messages[0].attributes"
how to find out which chars are defined as alphanumeric for a given locale,"import string
locale.setlocale(locale.LC_ALL, 'en_US.UTF-8')
string.letters
locale.setlocale(locale.LC_ALL, 'de_DE')"
how to cope with the performance of generating signed urls for accessing private content via cloudfront?,"signer = cryptography_private_key.signer(padding.PKCS1v15(), hashes.SHA1())"
convert pandas dataframe to a nested dict,d = {}
get data out of a file without iterating through it multiple times,"def yield_specific_lines_from_file(filename, start, stop):
    with open(filename, 'rb') as ifile:
        for line in islice(ifile, start, stop):
            yield line
lines = list(yield_specific_lines_from_file('test.txt', 10, 20))"
python tornado websockets how to send message every x seconds?,"interval_ms = 15
main_loop = tornado.ioloop.IOLoop.instance()
sched = tornado.ioloop.PeriodicCallback(schedule_func, interval_ms, io_loop
    =main_loop)
sched.start()
main_loop.start()"
python: is there an xml parser implemented as a generator?,lSongs.append(info)
"tkinter: how to use threads to preventing main event loop from ""freezing""",time.sleep(5)
call python function from matlab,"py_export('X', 'Y', 'Z')"
how can i use python to execute adb commands?,"print('Child was terminated by signal', -retcode, file=sys.stderr)"
how can i pack several decorators into one?,"def all_funs(f):
    pass"
creating dynamically named variables in a function in python 3 / understanding exec / eval / locals in python 3,foo()
"how can i write text over an image, and overlay another image on it, in python?","font = ImageFont.truetype('/usr/share/fonts/dejavu/DejaVuSans.ttf', 25)
img = Image.new('RGBA', (200, 200), (120, 20, 20))"
child subprocess kill in python daemon,"import sys

def signal_handler(signal, frame):
    sys.exit(0)"
python mail puts unaccounted space in outlook subject line,"def my_as_string(msg):
    fp = StringIO()
g = Generator(fp, mangle_from_=False, maxheaderlen=0)
g.flatten(msg)"
python split function -avoids last empy space,(s[:-1] if s.endswith(';') else s).split(';')
tcp port using python - how to forward command output to tcp port?,"self.socket.sendto(data, self.address)"
how to write two numpy arrays in text file in a proper format?,"sample_array = np.random.rand(3, 2)"
how do i efficiently do a bulk insert-or-update with sqlalchemy?,"with conn.begin_nested():
    pass"
how to make urllib2 requests through tor in python?,"opener = urllib.request.build_opener(proxy_support)
opener.addheaders = [('User-agent', 'Mozilla/5.0')]
print(opener.open('http://www.google.com').read())"
how to convert an h:mm:ss time string to seconds in python?,print(get_sec('0:00:25'))
python - get column iterator from a file (without reading the whole file),"def columns(file_name):
    with open(file_name) as file:
        data = csv.reader(file)"
how to define a new function in pdb,import pdb
"arrow direction set by data, but length set by figure size","ax.plot(x, y)
x0, y0 = 1.0, 1.0
dx, dy = 1, 2
length = 1.25
dx, dy = length * np.array([dx, dy]) / np.hypot(dx, dy)
ax.quiver(x0, y0, dx, dy, units='inches', angles='xy', scale=1, scale_units
    ='inches', color='red')
ax.axis((0, 2, 0, 2))
plt.show()"
python: what is the recommended way to set configuration settings for a module when you import it?,"foo.configure(42, 'bar')"
querying patentsview for patents of multiple assignee organization,"results = requests.get(url + query)
results = results.json()"
how to apply parallel or asynchronous i/o file writing on a python piece of code,"seen_emails = set()

def unique(e):
    if e in seen_emails:
        return False
seen_emails.add(e)"
storing and loading numpy arrays as files,loaded = np.load('file.npz')
how to portably parse the (unicode) degree symbol with regular expressions?,print(temp_re.findall(data))
scatterplot with xerr and yerr with matplotlib,"yerr = [22.55, 0.37, 3.77, 0.14]
descrip = ['Atom 1', 'Atom 2', 'Atom 3', 'Atom 4']"
how to use python pandas to get intersection of sets from a csv file,"df = pd.DataFrame(np.random.randint(2, size=(10, 4)), columns=list('ABCD'))
print(df)"
string manipulation appears to be inefficient,"genomeLength = len(genome)
minlen, maxlen = 2, 22

def fragments():
    for start in range(0, genomeLength - minlen):
        for finish in range(start + minlen, start + maxlen):
            if finish <= genomeLength:
                yield genome[start:finish]
count = Counter(fragments())
for mv, n in count.most_common(3):
    pass"
getting first row from sqlalchemy,"from sqlalchemy.orm.exc import NoResultFound
from sqlalchemy.orm.exc import MultipleResultsFound
try:
    user = session.query(User).one()
except MultipleResultsFound as e:
    print(e)
except NoResultFound as e:
    print(e)"
composable regexp in python,day = digit * 2
pickle dump with progress bar,"def __getstate__(self):
    pass"
python tkinter: make any output appear in a text box on gui not in the shell,top = tk.Tk()
changing marker's size in matplotlib,"scatter(x, y, s=[5, 50, 500, 1000, 1500, 2000], color='green', marker='h')"
google app engine - auto increment,user_name = db.StringProperty()
how to get alpha value of a png image with pil?,alpha = img.convert('RGBA').split()[-1]
embedding matplotlib in c++,"pthread_join(JoinThread, NULL)"
python beautifulsoup - getting input value,"soup = BeautifulSoup(html)
try:
    value = soup.find('input', {'id': 'xyz'}).get('value')
except:
    pass"
generate character images with a font whose name cannot be correctly decoded,"glyphs = {(1): '\xe6\x88\x91', (2): '\xe6\x9b\x8e'}"
google api: getting credentials from refresh token with oauth2client.client,"cred.refresh(http)
self.gmail_service = discovery.build('gmail', 'v1', credentials=cred)"
how to make my models follow dry principles,abstract = True
matplotlib - legend in separate subplot,pl.show()
django multidb: write to multiple databases,"class MyUser(models.Model):
    pass"
how to send email to multiple recipients using python smtplib?,msg = MIMEText('body')
using regex to remove comments from source files,"def removeComments(string):
    string = re.sub(re.compile('/\\*.*?\\*/', re.DOTALL), '', string)"
create zip archive for instant download,"for fn in os.listdir('/tmp'):
    path = os.path.join('/tmp', fn)"
convert string date to timestamp in python,timestamp1 = calendar.timegm(utc_date.timetuple())
improving wave detection algorithm,"scatter([(t[i] - delay) for i in peakind], [filtered_x[i] for i in peakind],
    color='red')"
spawning process from python,"os.dup2(0, 1)"
building a small numpy array from individual values: fast and readable method?,"""""""np.fromiter (Bi Roco)"""""""
how to square or raise to a power (elementwise) a 2d numpy array?,import numpy
pyramid authorization for stored items,config = Configurator()
split a string by backslash in python,a.encode('string-escape').split('\\x')
very poor weakref performance in python/sql alchemy,"connection.session.execute(Fact.__table__.insert(), params=buf)"
python ctypes memoryerror in fcgi process from pil library,CFUNCTYPE(c_int)(lambda : None)
